Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.334
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20338703033760755;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2076128445059608;  // std dev = 5.240, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | | | else return 0.14772093902582004;  // std dev = 5.423, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.2263075783103684;  // std dev = 4.498, 83.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=35 */
%   | | | else return 0.15654504737294359;  // std dev = 5.811, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1391801108908471;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.11157394747529448;  // std dev = 6.683, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11294794722518209;  // std dev = 7.463, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05025672584583733;  // std dev = 7.694, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.710417271493259;  // std dev = 0.053, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.29071685270846426;  // std dev = 0.062, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.026453820410451287;  // std dev = 4.088, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | | | else return 0.14029577689908926;  // std dev = 4.079, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.017413410773040473;  // std dev = 3.801, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.057792664297165335;  // std dev = 5.831, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01961887934298431;  // std dev = 7.037, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035340595147344826;  // std dev = 6.912, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.627', 'seconds']
Parameter learned model CLL:-0.342952 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.24, 73, 44], 'false,false,false,false': [5.423, 93, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.498, 48, 35], 'false,false,false,false': [5.811, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.529, 33, 20], 'false,false,false,false': [6.683, 134, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.463, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.694, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.053, 0, 35], 'true,false': [0.062, 52, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.088, 55, 24], 'false,false,false,false': [4.079, 41, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.801, 74, 35], 'false,false,false,false': [5.831, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.037, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.912, 167, 87]}]
{'': [nan, 0.22604875283446801], 'false': [nan, 0.22604875283446793], 'false,false': [nan, 0.22604875283446801], 'false,false,false': [nan, 0.22604875283446793]}
{'': [nan, 0.2256245215516582], 'false': [nan, 0.22562452155165685], 'false,false': [nan, 0.2256245215516582], 'false,false,false': [0.2346409525896698, 0.2162089100346011]}
{'': [nan, 0.23486681096576054], 'false': [nan, 0.23486681096576054], 'false,false': [nan, 0.2348668109657614], 'false,false,false': [0.24375246178733748, 0.22813496101487524]}
{'': [nan, 0.2249884589517954], 'false': [nan, 0.2249884589517954], 'false,false': [nan, 0.2249884589517947], 'false,false,false': [0.23495906016375917, 0.2222003740305447]}
{'': [nan, 0.2301290809156893], 'false': [nan, 0.2301290809156893], 'false,false': [nan, 0.2301290809156898], 'false,false,false': [nan, 0.2301290809156898]}
{'': [nan, 0.21605482050525893], 'false': [nan, 0.21605482050525893], 'false,false': [nan, 0.21605482050525934], 'false,false,false': [nan, 0.2160548205052592]}
{'': [0.24107659400491857, 0.22853967838074563], 'true': [7.88957297727068e-05, 7.470147638705554e-05], 'false': [nan, 0.22853967838074563], 'false,false': [nan, 0.22853967838074563], 'false,false,false': [0.21150456657586944, 0.24112581390464172], 'true,true': [nan, 7.88957297727068e-05], 'true,true,false': [nan, 7.88957297727068e-05]}
{'': [nan, 0.18747509410713098], 'false': [nan, 0.18747509410713098], 'false,false': [nan, 0.18747509410713015], 'false,false,false': [0.13257314022382422, 0.22668432563342758]}
{'': [nan, 0.1833840439800426], 'false': [nan, 0.18338404398004113], 'false,false': [nan, 0.18338404398004113], 'false,false,false': [nan, 0.18338404398004113]}
{'': [nan, 0.18810611221331436], 'false': [nan, 0.18810611221331436], 'false,false': [nan, 0.18810611221331422], 'false,false,false': [nan, 0.18810611221331422]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.688
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, E), enzyme(A, F) )
%   | | | then return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.17522210583121917;  // std dev = 5.161, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   else if ( interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.041822404487267484;  // std dev = 0.387, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.10814893509951236;  // std dev = 0.433, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.24276431971489695;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.730017011664981;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.1398273662023593;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, D), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6295831775794161;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1837003737426803;  // std dev = 2.651, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.09873854320576314;  // std dev = 3.179, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.1676861847246213;  // std dev = 5.604, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5724001501391115;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.34203893920919837;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, E), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1228559537897514;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.04648026153422454;  // std dev = 1.927, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( recursion_proteinclass(F, B), interaction(A, E) )
%   | | | then return 0.7846719923654286;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0961433971830017;  // std dev = 6.251, 192.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=55 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then return 0.07842093524688609;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.14191672153584842;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.31446234699553216;  // std dev = 1.832, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.43613158772090976;  // std dev = 0.254, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), phenotype(A, E) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8145059745332824;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0934604545027921;  // std dev = 1.832, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5044289962456084;  // std dev = 0.772, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.057812992920237116;  // std dev = 2.939, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7345623666358748;  // std dev = 0.403, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.22876626892402324;  // std dev = 0.534, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.006217678238768845;  // std dev = 1.197, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1805094473083918;  // std dev = 4.946, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.26377501624395117;  // std dev = 0.231, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.6098552745781913;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2913078565014862;  // std dev = 0.830, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16661612098149559;  // std dev = 0.214, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.05135438969137081;  // std dev = 3.457, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4117387320051846;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.051970184146073045;  // std dev = 3.302, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1452018538745278;  // std dev = 4.111, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | | else return 0.3783342397122967;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(E, A) )
%   | then return 0.14601208226022228;  // std dev = 0.494, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3691017016618321;  // std dev = 0.152, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.46463483009106327;  // std dev = 0.327, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6793790230537248;  // std dev = 0.445, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.19463309923681774;  // std dev = 0.059, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then if ( enzyme(J, K) )
%   | | | then return -0.07435237831843278;  // std dev = 0.825, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.07535648603199872;  // std dev = 1.373, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2505801828282118;  // std dev = 2.144, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.11248948449939988;  // std dev = 4.920, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.18470020537999837;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4891676426544494;  // std dev = 0.428, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.6376986484279578;  // std dev = 0.130, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.18887245335730565;  // std dev = 0.065, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24798788084048615;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5154819196894848;  // std dev = 1.680, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.2578145349374953;  // std dev = 0.352, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03863224763741997;  // std dev = 4.165, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0.2970617128262938;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(C, E), interaction(F, A) )
%   | then return -0.012529143233112468;  // std dev = 0.245, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(C, G), complex(G, H) )
%   | | then if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | | then return 0.003568956793679301;  // std dev = 0.899, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2326495664276534;  // std dev = 0.225, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.035561050068448126;  // std dev = 0.247, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.2517609924873405;  // std dev = 0.281, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3295242330558255;  // std dev = 3.679, 90.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=62 */
%   | | | else return -0.22729408218098124;  // std dev = 0.711, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return -0.05633594765254638;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.17369231361830045;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.34232829558622824;  // std dev = 0.144, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.17689602024377116;  // std dev = 0.085, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1935744892737668;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.11111514768813197;  // std dev = 0.057, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.004808676495380637;  // std dev = 2.400, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.559217969487817;  // std dev = 0.413, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.24197650110212007;  // std dev = 0.185, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.25302594552416346;  // std dev = 0.786, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.021434913764898134;  // std dev = 3.317, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16432992873904784;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.23460919619825507;  // std dev = 0.296, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5334184395824967;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1515681644234476;  // std dev = 0.601, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.005994133734152755;  // std dev = 4.412, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.35567636744104014;  // std dev = 0.244, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15291702205397092;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.06265034264222798;  // std dev = 1.120, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.20322819754493476;  // std dev = 1.110, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.148', 'seconds']
Refined model CLL: -0.222625


******************************************
Best model found
******************************************
Results 

CLL : -0.225791 

AUC ROC : 0.981335 

AUC PR : 0.323686 

Precision : 0.234067 

Recall : 0.716312 

F1 : 0.352838 

Total Learning Time : 25.688 

Total Inference Time : 15.51823115348816 

Total revision time: 48.95550601196289
Best scored revision CLL: -0.222625


Results 

CLL : -0.225791 

AUC ROC : 0.981335 

AUC PR : 0.323686 

Precision : 0.234067 

Recall : 0.716312 

F1 : 0.352838 

Total Learning Time : 48.99255196762085 

Total Inference Time : 15.51823115348816 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.568
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21676962475468534;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17403239240300922;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
%   | | | else return 0.15064918579684455;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13537779447834328;  // std dev = 5.239, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.1307423535770496;  // std dev = 6.522, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16297494713097552;  // std dev = 4.235, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | | else return 0.1136981706078951;  // std dev = 7.095, 228.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08450004274022592;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053208287170763396;  // std dev = 8.489, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7299070393849671;  // std dev = 0.041, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2710318875764663;  // std dev = 0.052, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09571840807521287;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return 0.060857910794120014;  // std dev = 5.215, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03587102062182294;  // std dev = 4.145, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.07900654947260118;  // std dev = 6.377, 178.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02621149626361478;  // std dev = 7.752, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036435485106434774;  // std dev = 7.647, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.230', 'seconds']
Parameter learned model CLL:-0.33164 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.839, 99, 52], 'false,false,false,false': [5.942, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.239, 83, 41], 'false,false,false,false': [6.522, 131, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.235, 47, 29], 'false,false,false,false': [7.095, 153, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.489, 234, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.041, 0, 41], 'true,false': [0.052, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.839, 41, 23], 'false,false,false,false': [5.215, 85, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.145, 84, 41], 'false,false,false,false': [6.377, 115, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.752, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.647, 205, 104]}]
{'': [nan, 0.2300118906064233], 'false': [nan, 0.23001189060642144], 'false,false': [nan, 0.2300118906064233], 'false,false,false': [nan, 0.23001189060642144]}
{'': [nan, 0.22186610050117922], 'false': [nan, 0.22186610050118025], 'false,false': [nan, 0.22186610050117922], 'false,false,false': [0.22577957107144553, 0.21795458009449914]}
{'': [nan, 0.22006697759262303], 'false': [nan, 0.22006697759262303], 'false,false': [nan, 0.2200669775926203], 'false,false,false': [0.2213079286488127, 0.21926541368103283]}
{'': [nan, 0.22503462267132643], 'false': [nan, 0.22503462267132643], 'false,false': [nan, 0.2250346226713243], 'false,false,false': [0.23597645429362868, 0.220780295287763]}
{'': [nan, 0.21864984017979505], 'false': [nan, 0.21864984017979505], 'false,false': [nan, 0.21864984017979391], 'false,false,false': [nan, 0.21864984017979391]}
{'': [nan, 0.21320644636037195], 'false': [nan, 0.21320644636037195], 'false,false': [nan, 0.2132064463603703], 'false,false,false': [nan, 0.21320644636037156]}
{'': [0.22898965247031705, 0.22214716578946367], 'true': [4.187678333973215e-05, 3.545815814851731e-05], 'false': [nan, 0.22214716578946367], 'false,false': [nan, 0.22214716578946367], 'false,false,false': [0.2302246093749998, 0.21760000000000093], 'true,true': [nan, 4.187678333973215e-05], 'true,true,false': [nan, 4.187678333973215e-05]}
{'': [nan, 0.1913685441641734], 'false': [nan, 0.1913685441641734], 'false,false': [nan, 0.19136854416417276], 'false,false,false': [0.1374521156429934, 0.22846359991924675]}
{'': [nan, 0.18492049345263684], 'false': [nan, 0.1849204934526372], 'false,false': [nan, 0.1849204934526372], 'false,false,false': [nan, 0.1849204934526372]}
{'': [nan, 0.18923736454750473], 'false': [nan, 0.18923736454750473], 'false,false': [nan, 0.18923736454750412], 'false,false,false': [nan, 0.18923736454750412]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.821
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8025933795439567;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.13087620782678563;  // std dev = 6.267, 198.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=54 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7541546076067815;  // std dev = 0.186, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.7305483838299364;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.397215050496603;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1254446385283914;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(A, F), complex(A, G) )
%   | | | then return 0.06812137681284118;  // std dev = 3.897, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | | | else return 0.14379615307879443;  // std dev = 6.132, 185.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.3938482337451368;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5776157113303139;  // std dev = 0.106, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.758185793710004;  // std dev = 1.038, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return 0.14159792949102706;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return -0.16031426998600842;  // std dev = 0.270, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6600682504865187;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.045817209107539336;  // std dev = 4.425, 118.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=27 */
%   | | | else return -0.2944788245742064;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.45839078191289445;  // std dev = 0.061, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.42292985866099136;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.023527530843923797;  // std dev = 0.326, 131.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
%   else if ( location(A, E), phenotype(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(I, G) )
%   | | | then return 0.20401428478278327;  // std dev = 1.812, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.5708918405348143;  // std dev = 1.573, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | else return -0.15341755256058706;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.45601540517919287;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.14158156547613684;  // std dev = 1.961, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.06620786628424469;  // std dev = 3.092, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(D, E) )
%   | then return 0.21235657481857975;  // std dev = 0.320, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.377620526882116;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( location(A, F), complex(A, G) )
%   | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.41749196909539343;  // std dev = 1.779, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return -0.15858871821424994;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14533108415397664;  // std dev = 0.300, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.2835137028321066;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0063710512220189345;  // std dev = 3.171, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.049225062584463256;  // std dev = 2.341, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.165921544944327;  // std dev = 3.439, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3054968716230878;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.08705365750349786;  // std dev = 0.347, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(E, A), location(G, F) )
%   | | | then return 0.48267043658240294;  // std dev = 0.370, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.020705083724550852;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.059180659030638336;  // std dev = 0.240, 115.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=14 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.14145261987654936;  // std dev = 2.591, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.04847619177885909;  // std dev = 0.498, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.03566661051934017;  // std dev = 3.575, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.11443647982324996;  // std dev = 2.043, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3418472502418942;  // std dev = 0.226, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.16201536584951048;  // std dev = 0.074, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G), complex(F, H) )
%   | | | then return -0.38797357722534836;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.37517949705012804;  // std dev = 0.410, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14093602263277102;  // std dev = 0.253, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.08402464408950847;  // std dev = 4.366, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.009326769282698377;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20598891375856607;  // std dev = 1.106, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.39583978540841674;  // std dev = 1.077, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.17453036198178112;  // std dev = 0.251, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12701008285319426;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(F, C), interaction(C, F) )
%   | | | then return 0.04502393859883857;  // std dev = 2.203, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.03544051021669617;  // std dev = 2.344, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then return -0.0031087867063977954;  // std dev = 0.205, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.06769819674487128;  // std dev = 3.703, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.24009222365004768;  // std dev = 1.239, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08195429127151581;  // std dev = 0.868, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.12882662570553025;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, C), interaction(C, A) )
%   | then return 0.021941257866188984;  // std dev = 0.163, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(C, C), complex(C, E) )
%   | | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.18333474784942103;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18865780457918607;  // std dev = 0.688, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0054196245967209926;  // std dev = 0.244, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21195197960384693;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.28710970884511733;  // std dev = 3.569, 87.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=61 */
%   | | | else return -0.18504353991835853;  // std dev = 0.671, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.05647073719695691;  // std dev = 1.440, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.09940656143234614;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, A) )
%   | then return -0.15504931905249694;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18560052208550154;  // std dev = 0.146, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(H, A), enzyme(A, I) )
%   | | | then return -0.12338337432780695;  // std dev = 1.244, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return -0.03646822854913104;  // std dev = 1.478, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.22846657078532165;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B), interaction(A, L) )
%   | | | then return 0.29694470390862676;  // std dev = 0.288, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.009101837913236037;  // std dev = 4.235, 179.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=53 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.04144107438459097;  // std dev = 0.756, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.11390991747217816;  // std dev = 1.661, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '32.528', 'seconds']
Refined model CLL: -0.214135


******************************************
Best model found
******************************************
Results 

CLL : -0.220424 

AUC ROC : 0.965914 

AUC PR : 0.330803 

Precision : 0.307522 

Recall : 0.524528 

F1 : 0.387727 

Total Learning Time : 32.821 

Total Inference Time : 29.21673583984375 

Total revision time: 71.17762595558166
Best scored revision CLL: -0.214135


Results 

CLL : -0.220424 

AUC ROC : 0.965914 

AUC PR : 0.330803 

Precision : 0.307522 

Recall : 0.524528 

F1 : 0.387727 

Total Learning Time : 71.21467191123962 

Total Inference Time : 29.21673583984375 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.318
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16791324486382206;  // std dev = 7.969, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1572100197915037;  // std dev = 5.886, 159.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=51 */
%   | | | else return 0.18990357867244068;  // std dev = 5.149, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13280994256569384;  // std dev = 5.466, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.15195125633317974;  // std dev = 5.626, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10990279002680538;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return 0.10615880747554605;  // std dev = 6.703, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11127832736814132;  // std dev = 7.786, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09351926325544682;  // std dev = 7.771, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7340904445824137;  // std dev = 0.018, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2656948027212411;  // std dev = 0.027, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05391814519991015;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.08633944042660621;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.057775938204104864;  // std dev = 4.211, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.02591905935404619;  // std dev = 5.758, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057508858784495374;  // std dev = 6.971, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028889855874050206;  // std dev = 7.054, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.348', 'seconds']
Parameter learned model CLL:-0.329576 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.969, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.886, 108, 51], 'false,false,false,false': [5.149, 75, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.466, 93, 44], 'false,false,false,false': [5.626, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.214, 56, 26], 'false,false,false,false': [6.703, 141, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.786, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.771, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.018, 0, 44], 'true,false': [0.027, 97, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [3.839, 41, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.211, 82, 44], 'false,false,false,false': [5.758, 107, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.971, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.054, 182, 92]}]
{'': [nan, 0.21381038216055165], 'false': [nan, 0.21381038216055145], 'false,false': [nan, 0.21381038216055165], 'false,false,false': [nan, 0.21381038216055145]}
{'': [nan, 0.22262479338842753], 'false': [nan, 0.22262479338842892], 'false,false': [nan, 0.22262479338842753], 'false,false,false': [0.2178711285154844, 0.22852259215220072]}
{'': [nan, 0.2214126696152435], 'false': [nan, 0.2214126696152435], 'false,false': [nan, 0.22141266961524458], 'false,false,false': [0.2180945483583761, 0.22445610072476374]}
{'': [nan, 0.21692455869941052], 'false': [nan, 0.21692455869941052], 'false,false': [nan, 0.216924558699409], 'false,false,false': [0.21653777513384775, 0.21707380005304203]}
{'': [nan, 0.22450823916647783], 'false': [nan, 0.22450823916647783], 'false,false': [nan, 0.2245082391664783], 'false,false,false': [nan, 0.2245082391664783]}
{'': [nan, 0.2253300844634282], 'false': [nan, 0.2253300844634282], 'false,false': [nan, 0.22533008446342795], 'false,false,false': [nan, 0.22533008446342792]}
{'': [0.2145926893795335, 0.22365145953071355], 'false': [nan, 0.22365145953071355], 'false,false': [nan, 0.22365145953071355], 'false,false,false': [0.21778435239973712, 0.23022460937500003], 'true': [7.738139295150729e-06, 7.471106209125703e-06], 'true,true': [nan, 7.738139295150729e-06], 'true,true,false': [nan, 7.738139295150729e-06]}
{'': [nan, 0.18135100919931896], 'false': [nan, 0.18135100919931896], 'false,false': [nan, 0.18135100919932043], 'false,false,false': [0.14073535128485534, 0.2139125464295199]}
{'': [nan, 0.18761837625046773], 'false': [nan, 0.18761837625046696], 'false,false': [nan, 0.18761837625046696], 'false,false,false': [nan, 0.18761837625046696]}
{'': [nan, 0.18160873272069164], 'false': [nan, 0.18160873272069164], 'false,false': [nan, 0.1816087327206903], 'false,false,false': [nan, 0.1816087327206903]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 40.207
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6498156017661784;  // std dev = 0.406, 48.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=38 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( recursion_proteinclass(F, B), complex(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.0052077586289240585;  // std dev = 2.065, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(I, J), location(I, K) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.3581489350995123;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( location(A, L) )
%   | | | then return 0.14386322081379807;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.768164067407283;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(E, E), complex(E, F) )
%   | | | then return -0.18203848635661476;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0029430814403832023;  // std dev = 1.265, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.2010389472506693;  // std dev = 2.953, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.07394471305919685;  // std dev = 3.367, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7595445964278267;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1484467915371478;  // std dev = 0.178, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.19041153600969404;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.26032708902157636;  // std dev = 3.799, 62.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(E, F), interaction(A, E) )
%   | | | then return 0.37394134111546345;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7458682595667928;  // std dev = 0.645, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.21646908345252094;  // std dev = 0.235, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.5617628809903459;  // std dev = 1.928, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else return -0.16953606183301992;  // std dev = 0.374, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( interaction(A, A) )
%   | then return -0.003007946321658239;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.015221708034068873;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4721254703992686;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(D, F), complex(E, G) )
%   | | then if ( enzyme(D, H), phenotype(E, F) )
%   | | | then return 0.16960354919615347;  // std dev = 0.912, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02038030620780623;  // std dev = 1.833, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.27455403645907955;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.05412022879710695;  // std dev = 1.794, 50.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2960522267779132;  // std dev = 1.331, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.08674111597134894;  // std dev = 1.198, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.5505860693738551;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.082287660458473;  // std dev = 4.593, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.08897679911325183;  // std dev = 0.290, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.06916089004974828;  // std dev = 0.364, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return -0.03735100275838642;  // std dev = 0.346, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.38508028956251417;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return -0.04870040119619518;  // std dev = 1.347, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.08425651795268059;  // std dev = 4.215, 138.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=46 */
%   | else if ( complex(A, K) )
%   | | then return 0.43034573092536965;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.21623482133766314;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06304310832589079;  // std dev = 1.707, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, A) )
%   | | then return 0.5026533179080859;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return 0.1643115698648098;  // std dev = 0.484, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4375011446728605;  // std dev = 0.244, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.19087802484354716;  // std dev = 0.108, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.32852030782105435;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(K, M), phenotype(K, N) )
%   | | | then return 0.08859869331654055;  // std dev = 1.654, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.013076475680068077;  // std dev = 2.690, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(P, A) )
%   | | | then return 0.07832522565750394;  // std dev = 3.760, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
%   | | | else return 0.16723001750261174;  // std dev = 1.463, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4503862166882481;  // std dev = 0.164, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.17113774205849117;  // std dev = 0.065, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.2515548771696872;  // std dev = 0.785, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.26434696987617695;  // std dev = 1.307, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return -0.13318844344785438;  // std dev = 0.149, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.590233686070596;  // std dev = 0.161, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2113029342852427;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.16521482009156113;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.03464284820145409;  // std dev = 3.097, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return 0.15396113958918653;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24756571395454058;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(C, G), enzyme(A, G) )
%   | | then return -0.11238869479463737;  // std dev = 0.131, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.08055026601149663;  // std dev = 2.852, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.019369150945921135;  // std dev = 2.684, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, L) )
%   | | | then return 0.16790331452472979;  // std dev = 2.304, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return -0.382752688693767;  // std dev = 0.688, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.1528287751209807;  // std dev = 0.233, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.19918714705411672;  // std dev = 1.008, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1839446729929268;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(G, F) )
%   | | then if ( interaction(G, E), phenotype(E, H) )
%   | | | then return -0.11500724733246627;  // std dev = 0.793, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.005836378617549969;  // std dev = 1.398, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2777057988914079;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.12610409566150946;  // std dev = 0.145, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.0068626600473105275;  // std dev = 2.001, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.16534482494897387;  // std dev = 1.412, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.023496687547111154;  // std dev = 2.862, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | | else return -0.015730310334954114;  // std dev = 2.330, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, C) )
%   | then return 0.11769794150252076;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2134637989497115;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.3881772467879226;  // std dev = 1.008, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return 0.1253243464517633;  // std dev = 3.101, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.10997165753292557;  // std dev = 0.181, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.17665585809784315;  // std dev = 0.498, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15464182946643118;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09348279322660365;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '25.640', 'seconds']
Refined model CLL: -0.195803


******************************************
Best model found
******************************************
Results 

CLL : -0.19545 

AUC ROC : 0.986266 

AUC PR : 0.330935 

Precision : 0.211281 

Recall : 0.797834 

F1 : 0.334089 

Total Learning Time : 40.207 

Total Inference Time : 33.78858709335327 

Total revision time: 81.94008507728577
Best scored revision CLL: -0.195803


Results 

CLL : -0.19545 

AUC ROC : 0.986266 

AUC PR : 0.330935 

Precision : 0.211281 

Recall : 0.797834 

F1 : 0.334089 

Total Learning Time : 81.97713103294373 

Total Inference Time : 33.78858709335327 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.26
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20632707275133463;  // std dev = 7.487, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16661610183005635;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.1711322308623126;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12809478077324868;  // std dev = 4.357, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.1514114970692374;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.04954913391866986;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.08498208380195914;  // std dev = 6.833, 221.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12142213551618966;  // std dev = 7.466, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08019935552322985;  // std dev = 7.574, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.737858566576046;  // std dev = 0.019, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26239524814602977;  // std dev = 0.026, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04021936389801727;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.06584311346193131;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025788002206848383;  // std dev = 3.476, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.07828292890625921;  // std dev = 6.094, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01986591002321303;  // std dev = 7.186, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05129928732996904;  // std dev = 6.992, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.526', 'seconds']
Parameter learned model CLL:-0.344711 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.487, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [4.737, 66, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.357, 59, 28], 'false,false,false,false': [6.162, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.74, 53, 19], 'false,false,false,false': [6.833, 154, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.466, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.574, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 28], 'true,false': [0.026, 48, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.767, 73, 33], 'false,false,false,false': [4.069, 49, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.476, 64, 28], 'false,false,false,false': [6.094, 103, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.186, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.992, 157, 86]}]
{'': [nan, 0.22695012211313167], 'false': [nan, 0.22695012211313143], 'false,false': [nan, 0.22695012211313167], 'false,false,false': [nan, 0.22695012211313143]}
{'': [nan, 0.2235140330642045], 'false': [nan, 0.22351403306420453], 'false,false': [nan, 0.2235140330642045], 'false,false,false': [0.22293444328823991, 0.2243999999999991]}
{'': [nan, 0.22348835118223637], 'false': [nan, 0.22348835118223637], 'false,false': [nan, 0.22348835118223634], 'false,false,false': [0.21823285637291961, 0.22602445954959557]}
{'': [nan, 0.2073273406513075], 'false': [nan, 0.2073273406513075], 'false,false': [nan, 0.2073273406513073], 'false,false,false': [0.19425154320987603, 0.21127881167646526]}
{'': [nan, 0.2284570114574108], 'false': [nan, 0.2284570114574108], 'false,false': [nan, 0.22845701145741082], 'false,false,false': [nan, 0.22845701145741082]}
{'': [nan, 0.222338168992325], 'false': [nan, 0.222338168992325], 'false,false': [nan, 0.22233816899232506], 'false,false,false': [nan, 0.22233816899232534]}
{'': [0.23281862766409278, 0.2183837849723481], 'true': [1.311012553089392e-05, 1.3748488124622668e-05], 'false': [nan, 0.2183837849723481], 'false,false': [nan, 0.2183837849723481], 'false,false,false': [0.21440014239943028, 0.22370343316289257], 'true,true': [nan, 1.311012553089392e-05], 'true,true,false': [nan, 1.311012553089392e-05]}
{'': [nan, 0.19517240729000288], 'false': [nan, 0.19517240729000288], 'false,false': [nan, 0.1951724072900031], 'false,false,false': [0.13136472730912604, 0.23063185967885566]}
{'': [nan, 0.18780186465383705], 'false': [nan, 0.18780186465383633], 'false,false': [nan, 0.18780186465383633], 'false,false,false': [nan, 0.18780186465383633]}
{'': [nan, 0.20116796019975502], 'false': [nan, 0.20116796019975502], 'false,false': [nan, 0.2011679601997554], 'false,false,false': [nan, 0.2011679601997554]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.839
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), complex(A, F) )
%   | | then if ( complex(E, G), enzyme(A, H) )
%   | | | then return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.0010060779566551223;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.18298969943072319;  // std dev = 5.868, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(D, A), complex(D, E) )
%   | | then if ( enzyme(A, F), complex(C, E) )
%   | | | then return 0.08438240091248428;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.13474216711662462;  // std dev = 0.033, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(C, G), phenotype(C, H) )
%   | | | then return -0.1656175990875157;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13547814542909847;  // std dev = 2.804, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return 0.1018961661833255;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.2070775761030049;  // std dev = 5.071, 110.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5845340453959201;  // std dev = 0.181, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), complex(E, F) )
%   | | then return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5893588418946882;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.2337453135520883;  // std dev = 1.717, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.048241854203900716;  // std dev = 4.602, 121.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=28 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.1905028056798801;  // std dev = 4.101, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | | else return 0.07318199714075727;  // std dev = 1.707, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4408150888031053;  // std dev = 0.192, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.12803476001958258;  // std dev = 0.048, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( enzyme(A, D), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.12223957641898758;  // std dev = 3.022, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.317140820529181;  // std dev = 1.931, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.021328619317817817;  // std dev = 2.696, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return 0.12629444891968777;  // std dev = 4.876, 107.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.35431649444316704;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.30939024924521197;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.021418050574379104;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.43755067382290336;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1187705652058628;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.005503527458192219;  // std dev = 2.791, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.06495605655781601;  // std dev = 6.163, 182.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=54 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.2515046692268951;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.10694832044822562;  // std dev = 0.047, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, E) )
%   | | | then return 0.5799628279177879;  // std dev = 0.373, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7537674393716017;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.23929558166757986;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return -0.04066039531825888;  // std dev = 1.191, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.0407368382168845;  // std dev = 2.941, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.32538424081961803;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07100515253911824;  // std dev = 5.508, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.1242874020968194;  // std dev = 0.284, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.6213935767320458;  // std dev = 0.230, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return -0.19179969796076382;  // std dev = 0.310, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( enzyme(F, H), enzyme(A, H) )
%   | | then return -0.238333307853058;  // std dev = 0.728, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.5741473086951183;  // std dev = 0.778, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.015107918837056498;  // std dev = 4.285, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | else if ( interaction(A, J) )
%   | | then if ( enzyme(J, K), interaction(L, A) )
%   | | | then return -0.042673306228838984;  // std dev = 0.952, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.11509671422098143;  // std dev = 2.587, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else return 0.3174284289939609;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(C, E) )
%   | then return -0.013980314562366815;  // std dev = 0.207, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(F, C) )
%   | | then if ( complex(C, G) )
%   | | | then return 0.16552248365683025;  // std dev = 1.443, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.3965520420252117;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7197893913172594;  // std dev = 0.000668, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2803468744276773;  // std dev = 0.000746, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then return -0.01193588127500702;  // std dev = 0.332, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | else if ( interaction(K, A) )
%   | | then return 0.011050600985789107;  // std dev = 0.419, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.37183177416495594;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10645454365887477;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.22725042138792728;  // std dev = 0.245, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( recursion_proteinclass(D, B), interaction(A, F) )
%   | | then return 0.6212201379059544;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, D), interaction(A, G) )
%   | | | then return -0.1597395357584982;  // std dev = 1.294, 46.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | | else return 0.010042842656807412;  // std dev = 4.043, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( enzyme(H, J), interaction(H, K) )
%   | | then return 0.16033851030473767;  // std dev = 0.364, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.516711762640278;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, L), complex(A, M) )
%   | | then return -0.06317568342717332;  // std dev = 0.232, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, N), phenotype(A, P) )
%   | | | then return 0.15482743073278019;  // std dev = 1.785, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.04068318038717288;  // std dev = 3.080, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13944925108145115;  // std dev = 0.234, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( phenotype(E, F), interaction(G, D) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.43002784724127235;  // std dev = 0.277, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.03469898536034462;  // std dev = 2.317, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( interaction(E, H), phenotype(D, I) )
%   | | | then return -0.11289712436075623;  // std dev = 1.637, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.03511280515857784;  // std dev = 1.159, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return 0.06500978228607453;  // std dev = 2.297, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.22417219674084374;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.047311443748375155;  // std dev = 2.302, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.05732219915117473;  // std dev = 3.483, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.577', 'seconds']
Refined model CLL: -0.29123


******************************************
Best model found
******************************************
Results 

CLL : -0.280684 

AUC ROC : 0.86693 

AUC PR : 0.149912 

Precision : 0.192453 

Recall : 0.360424 

F1 : 0.250923 

Total Learning Time : 14.839 

Total Inference Time : 6.668637037277222 

Total revision time: 29.07811834716797
Best scored revision CLL: -0.29123


Results 

CLL : -0.280684 

AUC ROC : 0.86693 

AUC PR : 0.149912 

Precision : 0.192453 

Recall : 0.360424 

F1 : 0.250923 

Total Learning Time : 29.115164302825928 

Total Inference Time : 6.668637037277222 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.174
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1756671832746947;  // std dev = 7.706, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.21316958948140466;  // std dev = 4.600, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
%   | | | else return 0.1840760222299446;  // std dev = 5.875, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16735119075310215;  // std dev = 4.731, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.14901488545505037;  // std dev = 5.848, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.14464790993461754;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.11528429888072166;  // std dev = 6.978, 219.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0845657583845642;  // std dev = 7.666, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08019134600768588;  // std dev = 7.600, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7249793780461468;  // std dev = 0.034, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2754504064296097;  // std dev = 0.054, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07235366510010068;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.026833006069105943;  // std dev = 4.755, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030425293051831233;  // std dev = 3.817, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.07619633277385467;  // std dev = 5.795, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004058445608909763;  // std dev = 7.196, 290.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03628539403046737;  // std dev = 6.998, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.880', 'seconds']
Parameter learned model CLL:-0.328552 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.706, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.6, 56, 34], 'false,false,false,false': [5.875, 99, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.731, 62, 35], 'false,false,false,false': [5.848, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.974, 24, 14], 'false,false,false,false': [6.978, 146, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.666, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.6, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 35], 'true,false': [0.054, 87, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [4.755, 77, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.817, 73, 35], 'false,false,false,false': [5.795, 95, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.196, 203, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.998, 173, 87]}]
{'': [nan, 0.21670041025094652], 'false': [nan, 0.21670041025094663], 'false,false': [nan, 0.21670041025094652], 'false,false,false': [nan, 0.21670041025094663]}
{'': [nan, 0.23026091113994981], 'false': [nan, 0.23026091113995048], 'false,false': [nan, 0.23026091113994981], 'false,false,false': [0.23506172839506187, 0.22710353185595733]}
{'': [nan, 0.22729431952758852], 'false': [nan, 0.22729431952758852], 'false,false': [nan, 0.2272943195275889], 'false,false,false': [0.23074352358741027, 0.22496220542134635]}
{'': [nan, 0.2239672969148929], 'false': [nan, 0.2239672969148929], 'false,false': [nan, 0.22396729691489345], 'false,false,false': [0.2326869806094183, 0.22232680441153715]}
{'': [nan, 0.21926262232582297], 'false': [nan, 0.21926262232582297], 'false,false': [nan, 0.2192626223258223], 'false,false,false': [nan, 0.2192626223258223]}
{'': [nan, 0.2230196768569383], 'false': [nan, 0.2230196768569383], 'false,false': [nan, 0.22301967685693833], 'false,false,false': [nan, 0.2230196768569382]}
{'': [0.20479134441566954, 0.21429578459263768], 'false': [nan, 0.21429578459263768], 'false,false': [nan, 0.21429578459263768], 'false,false,false': [0.2259215219976219, 0.20738995034088092], 'true': [3.276809838256765e-05, 3.3587769844788485e-05], 'true,true': [nan, 3.276809838256765e-05], 'true,true,false': [nan, 3.276809838256765e-05]}
{'': [nan, 0.18935917241574837], 'false': [nan, 0.18935917241574837], 'false,false': [nan, 0.18935917241574912], 'false,false,false': [0.13490727820365975, 0.2284773566464216]}
{'': [nan, 0.1785629665018987], 'false': [nan, 0.17856296650189962], 'false,false': [nan, 0.17856296650189962], 'false,false,false': [nan, 0.17856296650189962]}
{'': [nan, 0.18834692438103134], 'false': [nan, 0.18834692438103134], 'false,false': [nan, 0.1883469243810309], 'false,false,false': [nan, 0.1883469243810309]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.462
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( interaction(A, A), location(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.09070707463439608;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.2074640035926621;  // std dev = 5.761, 146.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7397459919718138;  // std dev = 0.143, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.04514176126734446;  // std dev = 1.171, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.13694227169921652;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.16393835733426987;  // std dev = 1.815, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.04902534909796182;  // std dev = 2.798, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.16906574093143775;  // std dev = 1.737, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.36629085646979737;  // std dev = 1.624, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.06612758619464704;  // std dev = 2.514, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.1403751113804529;  // std dev = 4.999, 120.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5503549829031275;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.28454205621942186;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( location(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.6871558155520836;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.7900930859561195;  // std dev = 0.128, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.16229095904737958;  // std dev = 0.247, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.07084033568644703;  // std dev = 1.741, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.030191714215360505;  // std dev = 1.293, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07901804883499021;  // std dev = 5.260, 145.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=38 */
%   | | | else return 0.21851700379091868;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.39842669434490663;  // std dev = 0.222, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, G) )
%   | | then if ( interaction(H, D) )
%   | | | then return -0.090587691343405;  // std dev = 0.942, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.05271816928376894;  // std dev = 1.145, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.7636072109630762;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.013306581347900522;  // std dev = 2.633, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6409492262873346;  // std dev = 1.338, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.16251005832687507;  // std dev = 0.225, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.16340955211021385;  // std dev = 3.959, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | | else return -2.331550422601168E-4;  // std dev = 1.386, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( complex(D, E) )
%   | then if ( complex(A, E) )
%   | | then return -0.026082865044631233;  // std dev = 0.257, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.028892037201884636;  // std dev = 1.337, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.173828462082725;  // std dev = 1.596, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else return 0.002249258957089089;  // std dev = 0.303, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.02309532224721415;  // std dev = 0.190, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, J) )
%   | | | then return 0.6028790116119135;  // std dev = 0.364, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17090591912300518;  // std dev = 2.157, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.46875101111637507;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1215989160286306;  // std dev = 4.650, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2929758297943853;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4132876518671858;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, F), complex(C, F) )
%   | | then if ( phenotype(C, G), interaction(H, C) )
%   | | | then return -0.1529313199937963;  // std dev = 0.126, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0020313071445167883;  // std dev = 0.917, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | | then return 0.45517468140772266;  // std dev = 1.629, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.038086768164849114;  // std dev = 5.268, 187.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=54 */
%   else if ( enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.3690588010762032;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15477160173601862;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.501923920650817;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5177856601388774;  // std dev = 0.183, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.18404945614122786;  // std dev = 0.054, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.29956091049816347;  // std dev = 0.255, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.03049674020607948;  // std dev = 2.351, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.09248703035428835;  // std dev = 1.904, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3971980613899143;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13257098785537216;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.007329695160345548;  // std dev = 3.411, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | | else return -0.07209072821019981;  // std dev = 1.408, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.1636312065318862;  // std dev = 0.222, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( complex(A, F), phenotype(C, G) )
%   | | then return 0.02468213372561487;  // std dev = 0.285, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return -0.14664008437887818;  // std dev = 1.002, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.007459565318912488;  // std dev = 3.065, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   else if ( interaction(A, J), enzyme(A, K) )
%   | then return -0.0189431784665691;  // std dev = 0.260, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( interaction(L, A), location(L, M) )
%   | | then if ( interaction(N, L), interaction(P, N) )
%   | | | then return 0.09427198320852442;  // std dev = 2.783, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.19148390639020807;  // std dev = 1.608, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( phenotype(A, Q) )
%   | | | then return -0.11349368160265545;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.055351183404771936;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(C, A), recursion_proteinclass(C, B) )
%   | then return 0.18033178342997427;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(D, A), phenotype(D, E) )
%   | | then if ( enzyme(C, F), complex(A, G) )
%   | | | then return 0.2256571704436092;  // std dev = 0.453, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011102093747855835;  // std dev = 1.620, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else return -0.16064921141974828;  // std dev = 0.196, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2761350561437772;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.03825781134482365;  // std dev = 0.881, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.023520778619715896;  // std dev = 2.615, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.006533342178370549;  // std dev = 1.484, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.08623124986298007;  // std dev = 4.109, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1555126992965436;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, D) )
%   | | then return 0.0022657342073685127;  // std dev = 0.254, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return -0.8405931958275795;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05418929660740731;  // std dev = 1.136, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   else if ( phenotype(A, F) )
%   | then return 0.02459685306105208;  // std dev = 0.287, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5431543633988992;  // std dev = 0.500, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.24224690852999634;  // std dev = 0.290, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.03337049491340905;  // std dev = 1.732, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.18741922222423135;  // std dev = 2.908, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.962', 'seconds']
Refined model CLL: -0.24612


******************************************
Best model found
******************************************
Results 

CLL : -0.242645 

AUC ROC : 0.965816 

AUC PR : 0.323394 

Precision : 0.3125 

Recall : 0.478723 

F1 : 0.378151 

Total Learning Time : 19.462 

Total Inference Time : 9.718991756439209 

Total revision time: 36.7476931438446
Best scored revision CLL: -0.24612


Results 

CLL : -0.242645 

AUC ROC : 0.965816 

AUC PR : 0.323394 

Precision : 0.3125 

Recall : 0.478723 

F1 : 0.378151 

Total Learning Time : 36.81183298683166 

Total Inference Time : 9.718991756439209 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.527
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1872628591501459;  // std dev = 8.353, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14511181042708943;  // std dev = 4.767, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.18013251912474243;  // std dev = 6.812, 205.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13166915931867793;  // std dev = 5.270, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.1374528308658778;  // std dev = 6.504, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.08450707550851276;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.11049623669069279;  // std dev = 7.888, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1122162771275691;  // std dev = 8.261, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09966666298053713;  // std dev = 8.211, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7303176468816144;  // std dev = 0.035, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2691520626612607;  // std dev = 0.053, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07129775437275972;  // std dev = 3.727, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.0786129699746147;  // std dev = 5.213, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02967379192167989;  // std dev = 4.159, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.06267698444428069;  // std dev = 6.399, 180.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009033063453819426;  // std dev = 7.845, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03368568169224329;  // std dev = 7.651, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.339', 'seconds']
Parameter learned model CLL:-0.333546 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.353, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.767, 73, 33], 'false,false,false,false': [6.812, 134, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27, 86, 41], 'false,false,false,false': [6.504, 129, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.913, 29, 12], 'false,false,false,false': [7.888, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.261, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.211, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.035, 0, 41], 'true,false': [0.053, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.727, 41, 21], 'false,false,false,false': [5.213, 77, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.159, 88, 41], 'false,false,false,false': [6.399, 117, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.845, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 208, 104]}]
{'': [nan, 0.22079794904662914], 'false': [nan, 0.2207979490466277], 'false,false': [nan, 0.22079794904662914], 'false,false,false': [nan, 0.2207979490466277]}
{'': [nan, 0.2225783438963596], 'false': [nan, 0.22257834389636333], 'false,false': [nan, 0.2225783438963596], 'false,false,false': [0.21440014239943037, 0.22638905413444643]}
{'': [nan, 0.21966237445386472], 'false': [nan, 0.21966237445386472], 'false,false': [nan, 0.21966237445386216], 'false,false,false': [0.2186504141839953, 0.22031842658171316]}
{'': [nan, 0.21763228162265644], 'false': [nan, 0.21763228162265644], 'false,false': [nan, 0.21763228162265416], 'false,false,false': [0.20701963117192126, 0.2190791806980855]}
{'': [nan, 0.22523804172595147], 'false': [nan, 0.22523804172595147], 'false,false': [nan, 0.22523804172595152], 'false,false,false': [nan, 0.22523804172595152]}
{'': [nan, 0.22779684320474744], 'false': [nan, 0.22779684320474744], 'false,false': [nan, 0.22779684320474836], 'false,false,false': [nan, 0.22779684320474763]}
{'': [0.2157193647299161, 0.22688258926571547], 'false': [nan, 0.22688258926571547], 'false,false': [nan, 0.22688258926571547], 'false,false,false': [0.2239854318418312, 0.2283737024221447], 'true': [2.953635177583007e-05, 3.1881487367675075e-05], 'true,true': [nan, 2.953635177583007e-05], 'true,true,false': [nan, 2.953635177583007e-05]}
{'': [nan, 0.1887656126257039], 'false': [nan, 0.1887656126257039], 'false,false': [nan, 0.18876561262570338], 'false,false,false': [0.13410668552248786, 0.22748312467927895]}
{'': [nan, 0.18318493148312023], 'false': [nan, 0.18318493148311993], 'false,false': [nan, 0.18318493148311993], 'false,false,false': [nan, 0.18318493148311993]}
{'': [nan, 0.18762443756829433], 'false': [nan, 0.18762443756829433], 'false,false': [nan, 0.18762443756829383], 'false,false,false': [nan, 0.18762443756829383]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 42.054
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.5581489350995124;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(E, H), location(G, F) )
%   | | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.4581489350995122;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.04185106490048767;  // std dev = 0.300, 130.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=13 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5096640866146642;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=43 */
%   | | | else return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.5758860545469175;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7775191065334758;  // std dev = 0.164, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(E, G), complex(A, H) )
%   | | then if ( interaction(A, F), complex(F, I) )
%   | | | then return 0.15192945078795853;  // std dev = 1.415, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.08833535752870664;  // std dev = 1.250, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.03164759526302567;  // std dev = 2.462, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.15304196383550214;  // std dev = 3.165, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.5298341492265917;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.15742987998894084;  // std dev = 5.510, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
%   | | | else return 0.023969707644685312;  // std dev = 1.247, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.7009489939108712;  // std dev = 0.210, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.07482427985325239;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( complex(D, C), recursion_proteinclass(D, B) )
%   | | then return 0.6387139711258342;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.051023320507313105;  // std dev = 0.295, 105.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=13 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.6260631962178107;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), location(A, J) )
%   | | | then return 0.15310128559068642;  // std dev = 4.850, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.009407200746225888;  // std dev = 2.679, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.09072929881268219;  // std dev = 1.837, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.5858267726682607;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(D, E) )
%   | | then return 0.4841734673389584;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.7062130356833656;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.27230831099179303;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.5863209295738002;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5312251678105075;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, J), interaction(K, A) )
%   | | | then return -0.010707340111044036;  // std dev = 2.312, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return 0.22314163357142242;  // std dev = 1.213, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.1643574976161596;  // std dev = 3.440, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | | else return 0.08220650473211599;  // std dev = 5.164, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), complex(A, G) )
%   | | | then return 0.37398809956871676;  // std dev = 1.550, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.566693997003901;  // std dev = 2.845, 73.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.4673376422848995;  // std dev = 1.103, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.22785080201650262;  // std dev = 0.387, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.17194835816740853;  // std dev = 0.030, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( interaction(A, K) )
%   | | then return 0.11644626052458999;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11011693730820389;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.015853324859759016;  // std dev = 1.027, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else return -0.12968483609264247;  // std dev = 0.442, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.41156463860492265;  // std dev = 0.127, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.17613567437418617;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.004653119890452491;  // std dev = 0.321, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( recursion_proteinclass(G, B), complex(G, H) )
%   | | then return 0.2458515804985933;  // std dev = 0.224, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( location(G, F), enzyme(G, I) )
%   | | | then return -0.001380903146795177;  // std dev = 2.271, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.08948752559046165;  // std dev = 4.238, 141.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=49 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.5150071420816532;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.21828092683100467;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06686835379676703;  // std dev = 1.215, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2681304976408773;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.4446237493286616;  // std dev = 0.503, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.6177390533506049;  // std dev = 0.184, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1580786445018614;  // std dev = 0.082, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.22954778707118528;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.2934165138007707;  // std dev = 0.587, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.005638139513543437;  // std dev = 2.907, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07164155991129553;  // std dev = 3.612, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | | | else return -0.04819881195534557;  // std dev = 1.485, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( complex(C, D), complex(A, E) )
%   | then return 0.05015388389282945;  // std dev = 0.212, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else return -0.0366987563905572;  // std dev = 0.269, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   else if ( location(A, F), interaction(G, A) )
%   | then if ( complex(A, H) )
%   | | then return 0.036710867983087744;  // std dev = 0.237, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( interaction(G, G), phenotype(G, I) )
%   | | | then return -0.08815611650023944;  // std dev = 1.091, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.125002222162522;  // std dev = 3.738, 97.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=42 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, L), phenotype(K, M) )
%   | | | then return 0.05784137055846339;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.02867271064883894;  // std dev = 1.488, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.03892284910402517;  // std dev = 0.649, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.05264648641132507;  // std dev = 1.637, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.2051204871842102;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(C, F), phenotype(A, G) )
%   | | then return 0.1902810940735016;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.27912242045066604;  // std dev = 0.160, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21538316846854022;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.15272064488781692;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.31559808178160786;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.012940995514213632;  // std dev = 3.133, 113.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.013131483307266576;  // std dev = 2.587, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.052602576246250504;  // std dev = 3.443, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), interaction(A, C) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.073708525610934;  // std dev = 0.210, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2836913489650149;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1422937633047126;  // std dev = 0.148, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(C, C), complex(C, G) )
%   | | then if ( phenotype(C, H) )
%   | | | then return 0.053970083207172004;  // std dev = 0.971, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.1768309617340945;  // std dev = 1.289, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.0621870063642701;  // std dev = 2.606, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.004820693219785512;  // std dev = 4.082, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.3008394838854872;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1276911424547081;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '24.142', 'seconds']
Refined model CLL: -0.23087


******************************************
Best model found
******************************************
Results 

CLL : -0.230069 

AUC ROC : 0.979775 

AUC PR : 0.376869 

Precision : 0.413889 

Recall : 0.562264 

F1 : 0.4768 

Total Learning Time : 42.054 

Total Inference Time : 32.171533823013306 

Total revision time: 83.07878294563294
Best scored revision CLL: -0.23087


Results 

CLL : -0.230069 

AUC ROC : 0.979775 

AUC PR : 0.376869 

Precision : 0.413889 

Recall : 0.562264 

F1 : 0.4768 

Total Learning Time : 83.14292278862 

Total Inference Time : 32.171533823013306 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.301
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20401359675364783;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18994724790513354;  // std dev = 4.937, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   | | | else return 0.14180150945360634;  // std dev = 6.103, 174.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12090887471818793;  // std dev = 5.492, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.1749924744189575;  // std dev = 5.514, 131.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10332179817366326;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.10563735020346883;  // std dev = 6.788, 211.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09264171300934926;  // std dev = 7.863, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07077079800097105;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7386769929825707;  // std dev = 0.029, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2605275700721318;  // std dev = 0.044, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.12352142352082543;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.026151495449370024;  // std dev = 4.902, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04339317791061876;  // std dev = 4.304, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.05379389742688276;  // std dev = 5.648, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054001515654992525;  // std dev = 6.985, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04403123622222127;  // std dev = 6.994, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.813', 'seconds']
Parameter learned model CLL:-0.331293 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.937, 68, 38], 'false,false,false,false': [6.103, 120, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.492, 96, 44], 'false,false,false,false': [5.514, 83, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 51, 24], 'false,false,false,false': [6.788, 143, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.863, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.893, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 44], 'true,false': [0.044, 101, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.898, 21, 14], 'false,false,false,false': [4.902, 82, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.304, 90, 44], 'false,false,false,false': [5.648, 96, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.985, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.994, 170, 92]}]
{'': [nan, 0.22624229747300717], 'false': [nan, 0.2262422974730067], 'false,false': [nan, 0.22624229747300717], 'false,false,false': [nan, 0.2262422974730067]}
{'': [nan, 0.22061224489796197], 'false': [nan, 0.22061224489795797], 'false,false': [nan, 0.22061224489796197], 'false,false,false': [0.22997508009968046, 0.21403091557669227]}
{'': [nan, 0.2242304586381197], 'false': [nan, 0.2242304586381197], 'false,false': [nan, 0.22423045863811777], 'false,false,false': [0.2154782736090331, 0.23207285023913055]}
{'': [nan, 0.21818381598783473], 'false': [nan, 0.21818381598783473], 'false,false': [nan, 0.21818381598783462], 'false,false,false': [0.2175999999999999, 0.21838992745755112]}
{'': [nan, 0.2200352950798441], 'false': [nan, 0.2200352950798441], 'false,false': [nan, 0.2200352950798445], 'false,false,false': [nan, 0.2200352950798445]}
{'': [nan, 0.21856872213126588], 'false': [nan, 0.21856872213126588], 'false,false': [nan, 0.2185687221312647], 'false,false,false': [nan, 0.2185687221312653]}
{'': [0.2110506621007627, 0.2164860910616131], 'false': [nan, 0.2164860910616131], 'false,false': [nan, 0.2164860910616131], 'false,false,false': [0.23999999999999996, 0.20719381688466104], 'true': [1.9363128138539697e-05, 1.9369455338111654e-05], 'true,true': [nan, 1.9363128138539697e-05], 'true,true,false': [nan, 1.9363128138539697e-05]}
{'': [nan, 0.18144058787836637], 'false': [nan, 0.18144058787836637], 'false,false': [nan, 0.181440587878366], 'false,false,false': [0.13826933743827027, 0.22156169292537117]}
{'': [nan, 0.18273341134244006], 'false': [nan, 0.182733411342441], 'false,false': [nan, 0.182733411342441], 'false,false,false': [nan, 0.182733411342441]}
{'': [nan, 0.18672289166484213], 'false': [nan, 0.18672289166484213], 'false,false': [nan, 0.18672289166484107], 'false,false,false': [nan, 0.18672289166484107]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.506
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.11224729575524883;  // std dev = 4.809, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.20360348055405647;  // std dev = 4.987, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( enzyme(E, G), enzyme(A, G) )
%   | | | then return -0.10164370525050177;  // std dev = 0.969, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.08793783393428366;  // std dev = 3.371, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.013332328109004234;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.16122764253041777;  // std dev = 6.034, 166.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then return 0.1047149230283326;  // std dev = 0.428, 186.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=57 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( complex(A, G) )
%   | | then if ( phenotype(A, H), enzyme(F, E) )
%   | | | then return 0.0912138045931488;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16366963817258554;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10721160596063041;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.06580110924271443;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7778104464783013;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18309998340042677;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.29306577202068157;  // std dev = 1.996, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.14995862309369173;  // std dev = 2.824, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5238300657233824;  // std dev = 0.130, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7197532217062664;  // std dev = 0.319, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7913385382169568;  // std dev = 0.210, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.1865500552650066;  // std dev = 0.196, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I) )
%   | | | then return -0.09395256489905328;  // std dev = 1.220, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.1864312232031123;  // std dev = 1.550, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1717477297860957;  // std dev = 2.599, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.0834155792942997;  // std dev = 4.517, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 0.14347533451042205;  // std dev = 0.399, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), enzyme(G, H) )
%   | | then if ( phenotype(G, F) )
%   | | | then return 0.4966397161767919;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.39506005138638245;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, E), complex(E, J) )
%   | | | then return 0.21602983706857287;  // std dev = 1.430, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.05696394100001609;  // std dev = 2.844, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6864380842751125;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2087765269236644;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, N) )
%   | | | then return -0.011735099976239241;  // std dev = 1.687, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.046556863313308286;  // std dev = 3.590, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3904466980371762;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16361793838045263;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03912060388846073;  // std dev = 3.096, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | else if ( location(A, G), location(E, G) )
%   | | | then return 0.11828884880405385;  // std dev = 2.787, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.5100329773250218;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6169280898301621;  // std dev = 0.380, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1905543224993776;  // std dev = 0.211, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.04793529570119214;  // std dev = 1.251, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.012877571749649501;  // std dev = 4.036, 101.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.288843717129238;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5546608082138769;  // std dev = 0.143, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.19074999103410878;  // std dev = 0.052, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.5655640579612099;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.18577230936504965;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), interaction(I, L) )
%   | | | then return 0.12211951230266987;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.08521298625354295;  // std dev = 1.224, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.14718589552011938;  // std dev = 1.839, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.03778750878749147;  // std dev = 4.030, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.01151880675312834;  // std dev = 0.245, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( location(A, F) )
%   | | then return 0.13695828475579758;  // std dev = 0.391, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.001694087365442798;  // std dev = 0.363, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.020268835309755245;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.28740498999715575;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.006531595671627974;  // std dev = 0.741, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.10836447752514906;  // std dev = 1.806, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.005370453878992485;  // std dev = 3.596, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return 0.08159287936886882;  // std dev = 2.393, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), location(A, E) )
%   | then return 0.21971333589366257;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.29770137980077854;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.13923097039511517;  // std dev = 1.936, 45.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | | | else return 0.36374331944289895;  // std dev = 3.424, 72.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=51 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.17071361767308618;  // std dev = 0.312, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.24026930345420822;  // std dev = 0.538, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return -0.14863210684095948;  // std dev = 0.365, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2659006069111585;  // std dev = 0.141, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return -0.172411205195916;  // std dev = 0.102, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, A), complex(F, I) )
%   | | then if ( enzyme(H, G) )
%   | | | then return -3.449274857654042E-5;  // std dev = 0.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1462806660588065;  // std dev = 1.119, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.0589087351773926;  // std dev = 0.349, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.14142983438779838;  // std dev = 1.293, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.26930125270875777;  // std dev = 3.370, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.1961227488610254;  // std dev = 0.386, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return 0.19512947274762454;  // std dev = 1.001, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.970', 'seconds']
Refined model CLL: -0.215999


******************************************
Best model found
******************************************
Results 

CLL : -0.242791 

AUC ROC : 0.967012 

AUC PR : 0.235087 

Precision : 0.259427 

Recall : 0.620939 

F1 : 0.365957 

Total Learning Time : 19.506 

Total Inference Time : 14.356532096862793 

Total revision time: 41.808246213912966
Best scored revision CLL: -0.215999


Results 

CLL : -0.242791 

AUC ROC : 0.967012 

AUC PR : 0.235087 

Precision : 0.259427 

Recall : 0.620939 

F1 : 0.365957 

Total Learning Time : 41.87238605690003 

Total Inference Time : 14.356532096862793 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.172
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2225557147605297;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1544236572063506;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.18250079844288164;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12454363177950192;  // std dev = 4.358, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.1399292522645554;  // std dev = 6.201, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.21414998099563923;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.13470612213447491;  // std dev = 7.050, 217.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07376815578902103;  // std dev = 7.654, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07885527002734889;  // std dev = 7.545, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7244075054105688;  // std dev = 0.025, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27500846482823005;  // std dev = 0.037, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06951020214128222;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.05516624083149898;  // std dev = 5.110, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.013630927142049647;  // std dev = 3.565, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   | | | else return 0.026321328045751533;  // std dev = 6.317, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04280030954252455;  // std dev = 7.083, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03581423618488804;  // std dev = 7.079, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.402', 'seconds']
Parameter learned model CLL:-0.341236 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.393, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.346, 58, 28], 'false,false,false,false': [6.123, 106, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.358, 59, 28], 'false,false,false,false': [6.201, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.268, 12, 9], 'false,false,false,false': [7.05, 140, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.654, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.545, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.025, 0, 28], 'true,false': [0.037, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [5.11, 79, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.565, 75, 28], 'false,false,false,false': [6.317, 128, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.083, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.079, 167, 86]}]
{'': [nan, 0.23161447859810488], 'false': [nan, 0.23161447859810452], 'false,false': [nan, 0.23161447859810488], 'false,false,false': [nan, 0.23161447859810452]}
{'': [nan, 0.2256639999999996], 'false': [nan, 0.22566400000000014], 'false,false': [nan, 0.2256639999999996], 'false,false,false': [0.21957815035154205, 0.22858417608566306]}
{'': [nan, 0.22186756934568952], 'false': [nan, 0.22186756934568952], 'false,false': [nan, 0.22186756934569046], 'false,false,false': [0.21832720042432302, 0.22357882226305958]}
{'': [nan, 0.2309383258366288], 'false': [nan, 0.2309383258366288], 'false,false': [nan, 0.23093832583662882], 'false,false,false': [0.2448979591836736, 0.22903051180864156]}
{'': [nan, 0.2169880372753081], 'false': [nan, 0.2169880372753081], 'false,false': [nan, 0.21698803727530777], 'false,false,false': [nan, 0.21698803727530777]}
{'': [nan, 0.22326561139637635], 'false': [nan, 0.22326561139637635], 'false,false': [nan, 0.22326561139637585], 'false,false,false': [nan, 0.2232656113963759]}
{'': [0.20637733459412702, 0.22225031414264385], 'false': [nan, 0.22225031414264385], 'false,false': [nan, 0.22225031414264385], 'false,false,false': [0.22417091836734676, 0.2212726228095374], 'true': [2.3122584864080204e-05, 2.0633885600362945e-05], 'true,true': [nan, 2.3122584864080204e-05], 'true,true,false': [nan, 2.3122584864080204e-05]}
{'': [nan, 0.1824317713459273], 'false': [nan, 0.1824317713459273], 'false,false': [nan, 0.18243177134592795], 'false,false,false': [0.12339575636325067, 0.2145548764158088]}
{'': [nan, 0.19598310829000715], 'false': [nan, 0.19598310829000698], 'false,false': [nan, 0.19598310829000698], 'false,false,false': [nan, 0.19598310829000698]}
{'': [nan, 0.19806286317258423], 'false': [nan, 0.19806286317258423], 'false,false': [nan, 0.19806286317258417], 'false,false,false': [nan, 0.19806286317258417]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.012
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E), location(A, H) )
%   | | | then return 0.18209259707134262;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.11424649607512179;  // std dev = 3.952, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.18672036367094091;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(D, F), interaction(G, E) )
%   | | | then return 0.6541771264433934;  // std dev = 1.552, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.8152648041466681;  // std dev = 0.328, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.16653281559421457;  // std dev = 0.179, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.7671995563694177;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return -0.16100711470054863;  // std dev = 0.163, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(I, I) )
%   | | then return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.04366488765969394;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.08386622303608449;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(A, F), complex(E, G) )
%   | | then return 0.6428921453987341;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4621176889029949;  // std dev = 0.230, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6987259324035788;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( complex(H, I) )
%   | | then return 0.224819177574744;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5822552890481415;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.706069602629711;  // std dev = 0.187, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.16519588495983467;  // std dev = 0.477, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.05658404133350173;  // std dev = 1.758, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.14009786003409622;  // std dev = 4.348, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3616069827571638;  // std dev = 0.275, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(E, D), phenotype(E, F) )
%   | | then return 0.02122055161487311;  // std dev = 0.322, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else return -0.11001805209673567;  // std dev = 0.247, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5048125540366405;  // std dev = 0.276, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | else return -0.15516477752925564;  // std dev = 0.199, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5967871640806349;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16887317881094263;  // std dev = 0.155, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.16245206539013318;  // std dev = 1.855, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.37106593316166614;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(A, G) )
%   | | then return 0.4545220052850705;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3436992418034294;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.009141737615047451;  // std dev = 0.959, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.5994045139784374;  // std dev = 0.136, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.14275288332031102;  // std dev = 0.053, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, K), complex(A, L) )
%   | | | then return -0.004666865313971937;  // std dev = 0.842, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.10364906143054409;  // std dev = 3.282, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.415608209879181;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.029856249606207995;  // std dev = 3.076, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.06709450974857115;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4083106081427961;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.12802935543799585;  // std dev = 0.035, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.27173546470252297;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.45252826035342253;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1344658376241998;  // std dev = 0.035, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3273315954118375;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J) )
%   | | | then return 0.08582134025272416;  // std dev = 4.032, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
%   | | | else return -0.04177737682513719;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3764050282996984;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.48403799946179976;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2931747918369597;  // std dev = 0.069, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.13067489217800782;  // std dev = 0.047, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2722608656684746;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5716692475879582;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.03672165440669831;  // std dev = 2.542, 78.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07329028945872856;  // std dev = 2.725, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return 0.25288858108894663;  // std dev = 0.989, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2166757859543538;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return 0.27718874030352425;  // std dev = 0.586, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06278409543340176;  // std dev = 1.079, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3882266894380228;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0750032828869945;  // std dev = 1.552, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.04771367834644578;  // std dev = 1.129, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.0570986785512372;  // std dev = 2.993, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.053443627914530896;  // std dev = 1.672, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.20483038337322182;  // std dev = 0.754, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.1608368394564325;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23017308744260032;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.3721453487603708;  // std dev = 1.766, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | | else return -0.011444186272421912;  // std dev = 1.822, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.09863594519135455;  // std dev = 0.183, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.17921075058179378;  // std dev = 0.336, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.09513985525673088;  // std dev = 0.368, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03029237875002892;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.21543716022300044;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), phenotype(D, E) )
%   | | then return -0.104069459395536;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21834194291225664;  // std dev = 0.095, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(C, F), complex(F, G) )
%   | | then return -0.05369055405699648;  // std dev = 0.196, 85.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=13 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return -0.025141572961322304;  // std dev = 0.600, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.08947041473833674;  // std dev = 1.996, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(K, L), phenotype(A, L) )
%   | | | then return 0.2798386258362909;  // std dev = 0.680, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.03726281588065364;  // std dev = 1.290, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return -0.155505868839771;  // std dev = 0.046, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1428101610130381;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '53.615', 'seconds']
Refined model CLL: -0.170955


******************************************
Best model found
******************************************
Results 

CLL : -0.192252 

AUC ROC : 0.990015 

AUC PR : 0.425591 

Precision : 0.257114 

Recall : 0.893993 

F1 : 0.399369 

Total Learning Time : 32.012 

Total Inference Time : 22.7971031665802 

Total revision time: 62.313079103469846
Best scored revision CLL: -0.170955


Results 

CLL : -0.192252 

AUC ROC : 0.990015 

AUC PR : 0.425591 

Precision : 0.257114 

Recall : 0.893993 

F1 : 0.399369 

Total Learning Time : 62.37721894645691 

Total Inference Time : 22.7971031665802 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.314
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18645082189196507;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17498883151797298;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.17517340146998492;  // std dev = 5.322, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1322935027313615;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.10879344243803685;  // std dev = 6.031, 173.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12587084412238264;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.11505457170562586;  // std dev = 6.725, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08511861756244436;  // std dev = 7.715, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0676656171975196;  // std dev = 7.724, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7095324782359963;  // std dev = 0.987, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2627534537368068;  // std dev = 0.008, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.028773120541664282;  // std dev = 4.140, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.07243535941371589;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06593580924336713;  // std dev = 3.782, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.06819742841631041;  // std dev = 5.880, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057288431181957575;  // std dev = 6.956, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02182825807535102;  // std dev = 7.085, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.374', 'seconds']
Parameter learned model CLL:-0.326752 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.384, 85, 44], 'false,false,false,false': [5.322, 83, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.864, 73, 35], 'false,false,false,false': [6.031, 121, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.636, 39, 20], 'false,false,false,false': [6.725, 139, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.715, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.724, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.987, 1, 35], 'true,false': [0.008, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.14, 60, 24], 'false,false,false,false': [4.333, 57, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.782, 64, 35], 'false,false,false,false': [5.88, 103, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.956, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.085, 185, 87]}]
{'': [nan, 0.22051975792096917], 'false': [nan, 0.2205197579209692], 'false,false': [nan, 0.22051975792096917], 'false,false,false': [nan, 0.2205197579209692]}
{'': [nan, 0.22477508650518974], 'false': [nan, 0.22477508650519076], 'false,false': [nan, 0.22477508650518974], 'false,false,false': [0.2247461090078726, 0.22480473670949905]}
{'': [nan, 0.21375141497593458], 'false': [nan, 0.21375141497593458], 'false,false': [nan, 0.21375141497593436], 'false,false,false': [0.2190500197324823, 0.21023136171655418]}
{'': [nan, 0.22055719689854825], 'false': [nan, 0.22055719689854825], 'false,false': [nan, 0.22055719689854808], 'false,false,false': [0.2240735420856079, 0.21952404110596854]}
{'': [nan, 0.21643400133752258], 'false': [nan, 0.21643400133752258], 'false,false': [nan, 0.2164340013375222], 'false,false,false': [nan, 0.2164340013375222]}
{'': [nan, 0.215403325070083], 'false': [nan, 0.215403325070083], 'false,false': [nan, 0.21540332507008295], 'false,false,false': [nan, 0.215403325070083]}
{'': [0.22120909431724012, 0.2130169818645124], 'true': [0.02705484876441903, 1.0038292025933109e-06], 'false': [nan, 0.2130169818645124], 'false,false': [nan, 0.2130169818645124], 'false,false,false': [0.20408163265306184, 0.22089965397923797], 'true,true': [nan, 0.02705484876441903], 'true,true,false': [nan, 0.02705484876441903]}
{'': [nan, 0.19245603222362812], 'false': [nan, 0.19245603222362812], 'false,false': [nan, 0.19245603222362842], 'false,false,false': [0.1445001686525261, 0.22308391276444234]}
{'': [nan, 0.19198730577123843], 'false': [nan, 0.19198730577123907], 'false,false': [nan, 0.19198730577123907], 'false,false,false': [nan, 0.19198730577123907]}
{'': [nan, 0.18452768517652862], 'false': [nan, 0.18452768517652862], 'false,false': [nan, 0.18452768517652868], 'false,false,false': [nan, 0.18452768517652868]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.474
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.06684458727342496;  // std dev = 0.406, 115.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=24 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0010060779566550774;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.2230137999643765;  // std dev = 4.141, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7644759464870493;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( enzyme(E, G), phenotype(A, F) )
%   | | | then return -0.15018441271543956;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10479938942090576;  // std dev = 2.372, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.14197357824080592;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.033409202658751296;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( location(A, J), interaction(I, I) )
%   | | | then return 0.34104962042994735;  // std dev = 1.738, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.15566626862366215;  // std dev = 5.987, 169.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=55 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.3341005461599307;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.011986265408800179;  // std dev = 1.585, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.561351391260603;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22506413766154132;  // std dev = 1.195, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.47601143263986506;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1378893339184078;  // std dev = 0.063, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.10693008531504351;  // std dev = 6.594, 219.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=65 */
%   | | | else return 0.010652269020586557;  // std dev = 2.538, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(C, A) )
%   | | then return 0.4322038376751356;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5711591883740536;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16192713004783177;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7887815658753389;  // std dev = 0.176, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1986588145401613;  // std dev = 0.205, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.11993224136346041;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.010496293285374346;  // std dev = 2.577, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.030862497759892783;  // std dev = 3.093, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return 0.12545439088893787;  // std dev = 4.721, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.39950649122584;  // std dev = 0.289, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.15584188450180209;  // std dev = 0.422, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G), phenotype(A, H) )
%   | | then return -0.05383772836265238;  // std dev = 0.302, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.0032400131521994973;  // std dev = 2.166, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.09914225673296005;  // std dev = 2.084, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6785887715692186;  // std dev = 0.979, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.18986829074441114;  // std dev = 0.176, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.3088392693188936;  // std dev = 1.238, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.130163227464502;  // std dev = 4.169, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2535243525442829;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5023446896937265;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14094483375362882;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.11884682132887357;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6471320440776073;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07757027275858171;  // std dev = 2.931, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.002203980409274293;  // std dev = 2.891, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.07332392128475372;  // std dev = 4.788, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.43816508851281233;  // std dev = 0.429, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5152303850963337;  // std dev = 0.657, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.6699339520507626;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.19654827404200478;  // std dev = 0.065, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3048276839835628;  // std dev = 0.205, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.024692198791445106;  // std dev = 0.839, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.08848608752416508;  // std dev = 0.797, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.20958898067707743;  // std dev = 1.699, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.05174660582424782;  // std dev = 4.611, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42870196593196275;  // std dev = 0.157, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.19018611721822937;  // std dev = 0.070, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3395965751069153;  // std dev = 0.328, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06172658590309794;  // std dev = 1.135, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.22133265124177767;  // std dev = 1.751, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.0836087150922073;  // std dev = 2.511, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.24094275808527243;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return -0.06408522745368601;  // std dev = 0.903, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.0637226947252356;  // std dev = 3.518, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1715115226114747;  // std dev = 0.088, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(G, D) )
%   | | then if ( interaction(F, F), interaction(A, G) )
%   | | | then return -0.08787163546777445;  // std dev = 0.575, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return 0.004016413083360993;  // std dev = 1.400, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.08127258201623791;  // std dev = 0.431, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.07902867048742565;  // std dev = 2.064, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), interaction(L, L) )
%   | | | then return 0.06536562846966096;  // std dev = 1.810, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return -0.008712566230713667;  // std dev = 2.433, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.01502610223033274;  // std dev = 1.163, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.12040958079837732;  // std dev = 3.472, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3295475469035672;  // std dev = 0.138, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1542509853145115;  // std dev = 0.051, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.0865131208495538;  // std dev = 0.544, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0865864561881935;  // std dev = 1.116, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06905580979218184;  // std dev = 1.265, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0013773853232290356;  // std dev = 0.892, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4324711809641095;  // std dev = 2.415, 48.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=39 */
%   | | | else return -0.2759286547261871;  // std dev = 0.563, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0.4345535808756446;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.920', 'seconds']
Refined model CLL: -0.233693


******************************************
Best model found
******************************************
Results 

CLL : -0.227927 

AUC ROC : 0.972372 

AUC PR : 0.336873 

Precision : 0.287781 

Recall : 0.634752 

F1 : 0.396018 

Total Learning Time : 23.474 

Total Inference Time : 20.348055124282837 

Total revision time: 51.616664064407345
Best scored revision CLL: -0.233693


Results 

CLL : -0.227927 

AUC ROC : 0.972372 

AUC PR : 0.336873 

Precision : 0.287781 

Recall : 0.634752 

F1 : 0.396018 

Total Learning Time : 51.73183573532104 

Total Inference Time : 20.348055124282837 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.535
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1771673400074883;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16639560892841762;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
%   | | | else return 0.1913498014072589;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12771092336041132;  // std dev = 5.288, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.15084343510649514;  // std dev = 6.437, 184.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17729650997100138;  // std dev = 4.217, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.16147328342985304;  // std dev = 6.835, 199.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08080189944486928;  // std dev = 8.387, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06375410009585283;  // std dev = 8.398, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.73188298572242;  // std dev = 0.005, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26804539603485805;  // std dev = 0.007, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10802209300202878;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.053906294742677524;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03716007466538259;  // std dev = 4.136, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.02332201346982279;  // std dev = 6.592, 203.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030410963589014156;  // std dev = 7.737, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022218854184208017;  // std dev = 7.735, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.606', 'seconds']
Parameter learned model CLL:-0.328799 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.897, 105, 52], 'false,false,false,false': [5.786, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.288, 88, 41], 'false,false,false,false': [6.437, 121, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.217, 46, 29], 'false,false,false,false': [6.835, 124, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.387, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.398, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 41], 'true,false': [0.007, 91, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.785, 38, 23], 'false,false,false,false': [5.185, 82, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.136, 85, 41], 'false,false,false,false': [6.592, 140, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.737, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.735, 219, 104]}]
{'': [nan, 0.21724566223794836], 'false': [nan, 0.2172456622379471], 'false,false': [nan, 0.21724566223794836], 'false,false,false': [nan, 0.2172456622379471]}
{'': [nan, 0.22542452265028173], 'false': [nan, 0.2254245226502841], 'false,false': [nan, 0.22542452265028173], 'false,false,false': [0.22151000040569443, 0.22931131544379654]}
{'': [nan, 0.221882091690695], 'false': [nan, 0.221882091690695], 'false,false': [nan, 0.2218820916906947], 'false,false,false': [0.21680257085611607, 0.22522273567256226]}
{'': [nan, 0.23546745304446098], 'false': [nan, 0.23546745304446098], 'false,false': [nan, 0.2354674530444598], 'false,false,false': [0.23715555555555667, 0.2347627003395434]}
{'': [nan, 0.219146431724277], 'false': [nan, 0.219146431724277], 'false,false': [nan, 0.21914643172427797], 'false,false,false': [nan, 0.21914643172427797]}
{'': [nan, 0.21835378352287924], 'false': [nan, 0.21835378352287924], 'false,false': [nan, 0.21835378352288065], 'false,false,false': [nan, 0.21835378352287907]}
{'': [0.21409989114010397, 0.22585905948285656], 'false': [nan, 0.22585905948285656], 'false,false': [nan, 0.22585905948285656], 'false,false,false': [0.23488309594195084, 0.2203708680462239], 'true': [6.657893018040973e-07, 6.074062367803221e-07], 'true,true': [nan, 6.657893018040973e-07], 'true,true,false': [nan, 6.657893018040973e-07]}
{'': [nan, 0.18411144184544434], 'false': [nan, 0.18411144184544434], 'false,false': [nan, 0.18411144184544387], 'false,false,false': [0.13575010914407784, 0.21405548342570893]}
{'': [nan, 0.18763580132930432], 'false': [nan, 0.1876358013293047], 'false,false': [nan, 0.1876358013293047], 'false,false,false': [nan, 0.1876358013293047]}
{'': [nan, 0.18524393310401277], 'false': [nan, 0.18524393310401277], 'false,false': [nan, 0.18524393310401308], 'false,false,false': [nan, 0.18524393310401308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 28.014
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(C, D) )
%   | | | then return 0.10814893509951237;  // std dev = 3.240, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7581489350995123;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), phenotype(H, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.03461952333480635;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.3381489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.19148226843284485;  // std dev = 5.598, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6493486539401723;  // std dev = 0.276, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F), interaction(E, G) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8385774319713308;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.06363007454745641;  // std dev = 2.279, 60.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.3332054912315485;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18721558039516759;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5668456953182636;  // std dev = 4.101, 87.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=64 */
%   | | | else return -0.1667084390658849;  // std dev = 0.113, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.02393736591130863;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.11098326900932615;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then return 0.13249685859998972;  // std dev = 1.076, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return 0.33474680613092567;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.6032139299595041;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.11862863762462154;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.43124785167302027;  // std dev = 1.329, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.007949834267704277;  // std dev = 2.656, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12634822257701966;  // std dev = 6.167, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
%   | | | else return 0.27701534104772213;  // std dev = 1.647, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4911528278585158;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7299600039881717;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.6578681803753358;  // std dev = 0.380, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.009458902034061863;  // std dev = 0.529, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(E, H), interaction(A, I) )
%   | | | then return -0.12607632478343914;  // std dev = 1.019, 52.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=2 */
%   | | | else return 0.08330150466657588;  // std dev = 2.391, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( complex(A, J) )
%   | | then return 0.476297738331533;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.0699606720114592;  // std dev = 3.141, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.1316935535850631;  // std dev = 4.613, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.5333066774811608;  // std dev = 0.176, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then return 0.20824481856562324;  // std dev = 0.593, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3789952072881405;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.4698967626709444;  // std dev = 3.758, 95.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=77 */
%   | | | else return -0.16307661565115428;  // std dev = 1.935, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else return -0.17308423235335085;  // std dev = 0.351, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( complex(A, I) )
%   | | then return 0.029331442124532914;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2604413217088253;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.40138281352265714;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return 0.003979671401554585;  // std dev = 0.306, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.49636119788894073;  // std dev = 0.379, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.04941176559389117;  // std dev = 0.955, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.1495228463138865;  // std dev = 0.272, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.1144254999719633;  // std dev = 3.867, 107.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=42 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5311022059177672;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.3095711148011417;  // std dev = 0.099, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, K) )
%   | | | then return 0.0362808074182626;  // std dev = 1.119, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.13526608333654574;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.31229643151496633;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( location(A, F), interaction(G, A) )
%   | | | then return 0.4770371432346104;  // std dev = 0.456, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.776479402053258;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.15839615526417278;  // std dev = 0.070, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.29517483949240675;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.26899992685301066;  // std dev = 3.545, 76.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=52 */
%   | | | else return -0.15565337523251316;  // std dev = 0.209, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.11436790706739887;  // std dev = 1.351, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -1.7383458686570652E-5;  // std dev = 0.934, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return 0.003202281674049133;  // std dev = 0.231, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.2876729934870046;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04243950181386365;  // std dev = 1.808, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.14764613286822836;  // std dev = 1.181, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.010341449893276226;  // std dev = 1.312, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.01843139715865678;  // std dev = 1.436, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.14268785609657905;  // std dev = 0.934, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.298041601945576;  // std dev = 0.481, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07798447735423053;  // std dev = 2.883, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.265415540255128;  // std dev = 0.092, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.13833436105866903;  // std dev = 1.231, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.14673027491757362;  // std dev = 0.841, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( complex(D, G), phenotype(D, H) )
%   | | | then return -0.034071392029309505;  // std dev = 0.718, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.03059714898895798;  // std dev = 1.035, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K), interaction(L, A) )
%   | | | then return 0.030289018208011782;  // std dev = 1.642, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.15577770379162176;  // std dev = 1.624, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.061107595593848395;  // std dev = 1.669, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.020109838750010007;  // std dev = 3.680, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then return -0.06501134856807012;  // std dev = 0.290, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | else return 0.010794399213265192;  // std dev = 0.268, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( complex(A, H), phenotype(A, I) )
%   | | then return 0.003204313315639472;  // std dev = 0.240, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( interaction(F, F) )
%   | | | then return -0.028062140464425456;  // std dev = 1.140, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.05665271477994033;  // std dev = 2.762, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.47799647740265616;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17458241920997142;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.32691859767630316;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04427882960468146;  // std dev = 1.703, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '35.444', 'seconds']
Refined model CLL: -0.218895


******************************************
Best model found
******************************************
Results 

CLL : -0.234406 

AUC ROC : 0.982671 

AUC PR : 0.348978 

Precision : 0.320574 

Recall : 0.758491 

F1 : 0.450673 

Total Learning Time : 28.014 

Total Inference Time : 23.943789958953857 

Total revision time: 61.104014848709106
Best scored revision CLL: -0.218895


Results 

CLL : -0.234406 

AUC ROC : 0.982671 

AUC PR : 0.348978 

Precision : 0.320574 

Recall : 0.758491 

F1 : 0.450673 

Total Learning Time : 61.2191865196228 

Total Inference Time : 23.943789958953857 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.328
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22762684674609895;  // std dev = 7.616, 249.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1448918432402022;  // std dev = 5.903, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
%   | | | else return 0.21129922699825646;  // std dev = 5.029, 107.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10367765010151418;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.13287573804286135;  // std dev = 5.664, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10688701106530066;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return 0.11788685971253902;  // std dev = 6.606, 195.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09669055832847238;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0631417145172655;  // std dev = 7.918, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7359602718202541;  // std dev = 0.049, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26403972817974597;  // std dev = 0.070, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.046865672069584835;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.098260690106762;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03404762539237378;  // std dev = 4.329, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.055590943362115966;  // std dev = 5.625, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04659851199984954;  // std dev = 7.022, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05324339379604375;  // std dev = 6.906, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.033', 'seconds']
Parameter learned model CLL:-0.336664 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.616, 157, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.903, 110, 51], 'false,false,false,false': [5.029, 66, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.544, 102, 44], 'false,false,false,false': [5.664, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.214, 56, 26], 'false,false,false,false': [6.606, 129, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.918, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.049, 0, 44], 'true,false': [0.07, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.146, 55, 25], 'false,false,false,false': [3.785, 38, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.329, 94, 44], 'false,false,false,false': [5.625, 92, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.022, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.906, 164, 92]}]
{'': [nan, 0.23296398445186517], 'false': [nan, 0.23296398445186448], 'false,false': [nan, 0.23296398445186517], 'false,false,false': [nan, 0.23296398445186448]}
{'': [nan, 0.22543996435731414], 'false': [nan, 0.22543996435731797], 'false,false': [nan, 0.22543996435731414], 'false,false,false': [0.21642683538443747, 0.23635251987073116]}
{'': [nan, 0.2160502742343887], 'false': [nan, 0.2160502742343887], 'false,false': [nan, 0.21605027423438836], 'false,false,false': [0.21049743903527648, 0.22121367585362572]}
{'': [nan, 0.22166560930670007], 'false': [nan, 0.22166560930670007], 'false,false': [nan, 0.22166560930669962], 'false,false,false': [0.21653777513384945, 0.2237861108089608]}
{'': [nan, 0.2225880643200806], 'false': [nan, 0.2225880643200806], 'false,false': [nan, 0.22258806432008021], 'false,false,false': [nan, 0.22258806432008021]}
{'': [nan, 0.21768062362306134], 'false': [nan, 0.21768062362306134], 'false,false': [nan, 0.2176806236230627], 'false,false,false': [nan, 0.21768062362306156]}
{'': [0.22227725876642465, 0.224161625363233], 'false': [nan, 0.224161625363233], 'false,false': [nan, 0.224161625363233], 'false,false,false': [0.21484374999999994, 0.23488309594195134], 'true': [5.503654420267103e-05, 5.5036544203014195e-05], 'true,true': [nan, 5.503654420267103e-05], 'true,true,false': [nan, 5.503654420267103e-05]}
{'': [nan, 0.1813529388231719], 'false': [nan, 0.1813529388231719], 'false,false': [nan, 0.18135293882317216], 'false,false,false': [0.13579337768219615, 0.22603126129292841]}
{'': [nan, 0.18331217241398015], 'false': [nan, 0.18331217241398157], 'false,false': [nan, 0.18331217241398157], 'false,false,false': [nan, 0.18331217241398157]}
{'': [nan, 0.18630774546320605], 'false': [nan, 0.18630774546320605], 'false,false': [nan, 0.18630774546320686], 'false,false,false': [nan, 0.18630774546320686]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 39.419
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(D, G) )
%   | | then if ( enzyme(A, E), complex(A, H) )
%   | | | then return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.24276431971489687;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), complex(J, K) )
%   | | | then return 0.16849376268571928;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18314893509951205;  // std dev = 5.131, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8123859201817814;  // std dev = 0.219, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.16236487338431194;  // std dev = 0.039, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.05886409979701121;  // std dev = 0.398, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7750371341835091;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15227629809419557;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.832902693541793;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16622901141345653;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.22472879369582888;  // std dev = 2.221, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.13036648386169775;  // std dev = 5.181, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return 0.40534640146693784;  // std dev = 0.658, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), enzyme(E, F) )
%   | | then return 0.737286346279246;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, G), phenotype(C, H) )
%   | | | then return 0.6998571586492519;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6132455811932933;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.6390575640471842;  // std dev = 0.185, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(J, L), phenotype(L, M) )
%   | | | then return -0.004445007715312948;  // std dev = 2.473, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | | else return 0.1939414218355673;  // std dev = 1.868, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, N), interaction(N, A) )
%   | | | then return -0.05976078248951802;  // std dev = 0.931, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.12103939723559055;  // std dev = 5.980, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4977870675130255;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, A), interaction(D, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.05835128619860318;  // std dev = 0.794, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.16348252439520106;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.015492657159880657;  // std dev = 2.100, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.12022847787870625;  // std dev = 2.339, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( enzyme(A, J), enzyme(H, K) )
%   | | | then return -0.05930622864727183;  // std dev = 0.927, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.11431047592670136;  // std dev = 5.265, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.12117579280367202;  // std dev = 1.792, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.2964421240075606;  // std dev = 1.958, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.2915895556327242;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4134356633176903;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13706875638799662;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6596876549187523;  // std dev = 0.377, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0016550823714031667;  // std dev = 3.067, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.633066828373247;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17021933888154706;  // std dev = 0.060, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.18783974277794963;  // std dev = 1.782, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.07483665836259307;  // std dev = 5.259, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, F) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.612099866046376;  // std dev = 1.306, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.20144078981964822;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return 0.5883286957658984;  // std dev = 1.868, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.20771037372335832;  // std dev = 0.197, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then return -0.16258578726198739;  // std dev = 0.248, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.22779475560200393;  // std dev = 0.255, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(A, A) )
%   | then return -0.03850221545499919;  // std dev = 0.429, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.02282097950139248;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.057748976740550524;  // std dev = 0.291, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.641397578389036;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17712106244700895;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(I, D), interaction(A, J) )
%   | | | then return -0.025995389299824312;  // std dev = 0.792, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.08990084963689107;  // std dev = 2.837, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | else if ( location(A, K), phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.5951062204907877;  // std dev = 0.184, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18567012280447742;  // std dev = 0.115, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.03378634670303795;  // std dev = 1.066, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.07112387261641549;  // std dev = 1.803, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.1808034875374766;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.32866595564539075;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( complex(F, H), phenotype(F, I) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.04807202802255087;  // std dev = 1.174, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.033393895947393955;  // std dev = 1.336, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return -0.14194488206916026;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3777955989969117;  // std dev = 1.009, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.15718746981587223;  // std dev = 0.222, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.15480655559754414;  // std dev = 1.474, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0468288857175197;  // std dev = 3.773, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.0912752997759333;  // std dev = 0.696, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2940506271422808;  // std dev = 0.822, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.12680022467589447;  // std dev = 0.054, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.13677571095355184;  // std dev = 0.034, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2218448907950043;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(J, J) )
%   | | | then return -0.1443161371665504;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.019867511985159066;  // std dev = 0.579, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.09585728669873869;  // std dev = 2.081, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.03257633550432691;  // std dev = 3.761, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17113596034007825;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(F, D) )
%   | | then if ( interaction(F, G), interaction(G, G) )
%   | | | then return -0.09564392097093008;  // std dev = 0.059, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.0017777690838120654;  // std dev = 0.548, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( phenotype(E, H) )
%   | | | then return -0.03417358628355143;  // std dev = 1.089, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.025997296732459388;  // std dev = 0.969, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5099243582440027;  // std dev = 0.467, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1953658272968847;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.03889846855045351;  // std dev = 2.434, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.05878120236162563;  // std dev = 2.828, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '55.964', 'seconds']
Refined model CLL: -0.187682


******************************************
Best model found
******************************************
Results 

CLL : -0.182737 

AUC ROC : 0.98949 

AUC PR : 0.337458 

Precision : 0.262673 

Recall : 0.823105 

F1 : 0.398253 

Total Learning Time : 39.419 

Total Inference Time : 31.856166124343872 

Total revision time: 79.28297044944763
Best scored revision CLL: -0.187682


Results 

CLL : -0.182737 

AUC ROC : 0.98949 

AUC PR : 0.337458 

Precision : 0.262673 

Recall : 0.823105 

F1 : 0.398253 

Total Learning Time : 79.39814212036133 

Total Inference Time : 31.856166124343872 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20214893509951282;  // std dev = 7.511, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1807111160784043;  // std dev = 5.818, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
%   | | | else return 0.18223329140532607;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12301984107064406;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.11495033157005491;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09129535660967167;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.12422069632724733;  // std dev = 6.658, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08862960367658217;  // std dev = 7.628, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09013697753872259;  // std dev = 7.528, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7335922620699614;  // std dev = 0.017, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26648811072881806;  // std dev = 0.022, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.045187434482256046;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.07782444907860958;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05779263824856871;  // std dev = 3.358, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.041265285845387835;  // std dev = 6.269, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0350254926221229;  // std dev = 7.122, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015805701578197377;  // std dev = 7.172, 274.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.866', 'seconds']
Parameter learned model CLL:-0.33467 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.511, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.818, 97, 52], 'false,false,false,false': [4.699, 63, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.369, 60, 28], 'false,false,false,false': [6.325, 129, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [6.658, 131, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.628, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.528, 166, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 28], 'true,false': [0.022, 48, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [4.04, 47, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.358, 52, 28], 'false,false,false,false': [6.269, 122, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.122, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.172, 188, 86]}]
{'': [nan, 0.2256640000000008], 'false': [nan, 0.22566400000000056], 'false,false': [nan, 0.2256640000000008], 'false,false,false': [nan, 0.22566400000000056]}
{'': [nan, 0.22737788353493518], 'false': [nan, 0.22737788353493352], 'false,false': [nan, 0.22737788353493518], 'false,false,false': [0.22719697310932072, 0.22765437347220635]}
{'': [nan, 0.21492256327047513], 'false': [nan, 0.21492256327047513], 'false,false': [nan, 0.2149225632704749], 'false,false,false': [0.21692609935694457, 0.21395888532444945]}
{'': [nan, 0.22140058234840676], 'false': [nan, 0.22140058234840676], 'false,false': [nan, 0.22140058234840754], 'false,false,false': [0.2125390218522368, 0.22391690351634352]}
{'': [nan, 0.21877276408415716], 'false': [nan, 0.21877276408415716], 'false,false': [nan, 0.21877276408415797], 'false,false,false': [nan, 0.21877276408415797]}
{'': [nan, 0.22490811643608347], 'false': [nan, 0.22490811643608347], 'false,false': [nan, 0.2249081164360833], 'false,false,false': [nan, 0.2249081164360828]}
{'': [0.2327344454482238, 0.22030232469661823], 'true': [9.941611859964894e-06, 1.01289456769423e-05], 'false': [nan, 0.22030232469661823], 'false,false': [nan, 0.22030232469661823], 'false,false,false': [0.2155102040816337, 0.22665895061728417], 'true,true': [nan, 9.941611859964894e-06], 'true,true,false': [nan, 9.941611859964894e-06]}
{'': [nan, 0.19458611161781886], 'false': [nan, 0.19458611161781886], 'false,false': [nan, 0.19458611161781916], 'false,false,false': [0.14094470295401945, 0.21834269049755478]}
{'': [nan, 0.19432229880505802], 'false': [nan, 0.19432229880505786], 'false,false': [nan, 0.19432229880505786], 'false,false,false': [nan, 0.19432229880505786]}
{'': [nan, 0.18773033351711652], 'false': [nan, 0.18773033351711652], 'false,false': [nan, 0.1877303335171166], 'false,false,false': [nan, 0.1877303335171166]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(A, D), phenotype(C, D) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08037115732173454;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.17460463130204304;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.12420398097107163;  // std dev = 4.614, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7355493635295349;  // std dev = 0.170, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.5599263474225858;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.12968047123810575;  // std dev = 2.531, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.04273374356291685;  // std dev = 2.088, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6334084410630157;  // std dev = 1.007, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18755966202794322;  // std dev = 4.735, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.5090137185873979;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0927717328514987;  // std dev = 2.841, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.5561648290453444;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6684678831445842;  // std dev = 0.217, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, F) )
%   | | | then return 0.730893254803501;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8187702568917999;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18451246136815114;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1250135314769941;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.45897146251599796;  // std dev = 1.001, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.10331321581099778;  // std dev = 6.260, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.4184653523915459;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7378467807739969;  // std dev = 0.085, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.18323922892871627;  // std dev = 0.207, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return 0.0800822793252;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, I) )
%   | | | then return 0.4163525000927816;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5646164388552233;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11718668495253709;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.1992859480265143;  // std dev = 2.151, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.10023685953383163;  // std dev = 5.591, 160.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3765944351945531;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, A), interaction(D, D) )
%   | | then return -0.08969738062131707;  // std dev = 0.165, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.6273219135620615;  // std dev = 0.381, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.022765989146240208;  // std dev = 3.343, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.3783933380706288;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(A, I), interaction(G, G) )
%   | | | then return 0.42347065604409845;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16722634987747978;  // std dev = 3.723, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.04264598379324717;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.11281544539003495;  // std dev = 3.020, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B), interaction(A, E) )
%   | then return 0.22820014449603418;  // std dev = 0.258, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(D, F), phenotype(D, G) )
%   | | then if ( complex(C, H), phenotype(C, I) )
%   | | | then return 0.2686631823445435;  // std dev = 1.556, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.08762480405135101;  // std dev = 2.296, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return 0.022894927891202958;  // std dev = 0.392, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   else if ( phenotype(A, J), interaction(K, A) )
%   | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then return 0.7063447591501354;  // std dev = 0.123, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.23125377797998137;  // std dev = 0.123, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.3433554388772223;  // std dev = 0.205, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return -0.05002998612889216;  // std dev = 1.156, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09817573901417043;  // std dev = 2.771, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.22093760859392297;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08566932927098485;  // std dev = 0.605, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5580957914793722;  // std dev = 0.134, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1824227928282909;  // std dev = 0.056, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.30941734577920127;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I), phenotype(A, J) )
%   | | | then return 0.05346509147579578;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05646640571553096;  // std dev = 1.955, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.09714078931198165;  // std dev = 2.156, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.014775342944992805;  // std dev = 4.532, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.20944892427169856;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.39734409705572443;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(F, D) )
%   | | | then return -0.04670086524459658;  // std dev = 4.249, 152.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=33 */
%   | | | else return 0.1671076268718724;  // std dev = 1.522, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return -0.009597103480686906;  // std dev = 0.417, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.02336320474389723;  // std dev = 0.380, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03551660829412781;  // std dev = 0.569, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.05513018739981478;  // std dev = 2.815, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.143253986080212;  // std dev = 1.889, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19810279120380414;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F), enzyme(A, G) )
%   | | | then return 0.5965569338303292;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7089012964614613;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.07984474774886179;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.26440440574151763;  // std dev = 0.219, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), complex(I, L) )
%   | | | then return -0.07105921772984795;  // std dev = 0.681, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.007202464242131326;  // std dev = 2.477, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return -0.030743165668007617;  // std dev = 1.247, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.053877446394031366;  // std dev = 4.515, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.14417052412654455;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(C, E), phenotype(A, E) )
%   | | then return -0.09053652721441373;  // std dev = 0.270, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else return -0.011690071134914328;  // std dev = 0.326, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.41634288920976265;  // std dev = 0.455, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, G), enzyme(I, J) )
%   | | | then return -0.0028414719853004753;  // std dev = 1.367, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.15487568226193052;  // std dev = 2.353, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.008995167621837299;  // std dev = 0.308, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.20475619423836494;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0341531541548858;  // std dev = 2.222, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.476', 'seconds']
Refined model CLL: -0.260987


******************************************
Best model found
******************************************
Results 

CLL : -0.25502 

AUC ROC : 0.897423 

AUC PR : 0.222592 

Precision : 0.235088 

Recall : 0.473498 

F1 : 0.314185 

Total Learning Time : 16.295 

Total Inference Time : 7.029819011688232 

Total revision time: 30.99093291282654
Best scored revision CLL: -0.260987


Results 

CLL : -0.25502 

AUC ROC : 0.897423 

AUC PR : 0.222592 

Precision : 0.235088 

Recall : 0.473498 

F1 : 0.314185 

Total Learning Time : 31.106104583740237 

Total Inference Time : 7.029819011688232 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.2
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2299438068943842;  // std dev = 7.393, 234.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15132103065475241;  // std dev = 5.456, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.14868714127810623;  // std dev = 5.404, 134.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14511825318255678;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.1615108855774924;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10923012685411013;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.1144468491845744;  // std dev = 6.675, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1224699757973854;  // std dev = 7.446, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05657760047545664;  // std dev = 7.693, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7279471113493947;  // std dev = 0.001, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.272055773316618;  // std dev = 0.002, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08750432532897368;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.07007313355536104;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030561561472318734;  // std dev = 3.828, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.04147295401979299;  // std dev = 5.889, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062275217246430835;  // std dev = 6.811, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054539616794427946;  // std dev = 6.786, 235.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.600', 'seconds']
Parameter learned model CLL:-0.354842 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.393, 147, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.456, 92, 44], 'false,false,false,false': [5.404, 91, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.807, 68, 35], 'false,false,false,false': [5.786, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [6.675, 133, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.446, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.693, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 35], 'true,false': [0.002, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.908, 42, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.828, 74, 35], 'false,false,false,false': [5.889, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.811, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.786, 148, 87]}]
{'': [nan, 0.23356344510190763], 'false': [nan, 0.2335634451019074], 'false,false': [nan, 0.23356344510190763], 'false,false,false': [nan, 0.2335634451019074]}
{'': [nan, 0.21839506172839548], 'false': [nan, 0.21839506172839504], 'false,false': [nan, 0.21839506172839548], 'false,false,false': [0.2188581314878892, 0.21792158609935386]}
{'': [nan, 0.2273271478575377], 'false': [nan, 0.2273271478575377], 'false,false': [nan, 0.2273271478575382], 'false,false,false': [0.2243409813988167, 0.22932267032866155]}
{'': [nan, 0.2222300879752026], 'false': [nan, 0.2222300879752026], 'false,false': [nan, 0.22223008797520247], 'false,false,false': [0.22037086804622455, 0.22279078964854374]}
{'': [nan, 0.23100878617571938], 'false': [nan, 0.23100878617571938], 'false,false': [nan, 0.23100878617571874], 'false,false,false': [nan, 0.23100878617571874]}
{'': [nan, 0.21759595465818507], 'false': [nan, 0.21759595465818507], 'false,false': [nan, 0.21759595465818485], 'false,false,false': [nan, 0.21759595465818513]}
{'': [0.21589287701857723, 0.22860384364754802], 'false': [nan, 0.22860384364754802], 'false,false': [nan, 0.22860384364754802], 'false,false,false': [0.23140495867768573, 0.2261850327693944], 'true': [6.408508984431397e-08, 6.428757453865554e-08], 'true,true': [nan, 6.408508984431397e-08], 'true,true,false': [nan, 6.408508984431397e-08]}
{'': [nan, 0.18620231394403677], 'false': [nan, 0.18620231394403677], 'false,false': [nan, 0.18620231394403758], 'false,false,false': [0.13444782051798826, 0.2223151362007613]}
{'': [nan, 0.19246619047619573], 'false': [nan, 0.1924661904761967], 'false,false': [nan, 0.1924661904761967], 'false,false,false': [nan, 0.1924661904761967]}
{'': [nan, 0.19594456556571974], 'false': [nan, 0.19594456556571974], 'false,false': [nan, 0.19594456556571993], 'false,false,false': [nan, 0.19594456556571993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 50.082
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, D), enzyme(C, E) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.20698614440183657;  // std dev = 4.420, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then return 0.13474467978036248;  // std dev = 0.447, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | else return 0.22656998773109124;  // std dev = 0.482, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7691989244563869;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return 0.04386197629391513;  // std dev = 0.402, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.3291945923492127;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.7935911715023606;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then return 0.09912997826165253;  // std dev = 0.442, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( recursion_proteinclass(L, B), phenotype(L, M) )
%   | | | then return 0.7810759576710149;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06474028170220968;  // std dev = 2.466, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.14324212452323604;  // std dev = 2.858, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.22186049624739004;  // std dev = 4.407, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.5363492593387662;  // std dev = 0.342, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(D, A) )
%   | | then return -0.19441995747725122;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return -0.05465199137222554;  // std dev = 0.934, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06867862717297288;  // std dev = 2.710, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6490525892910675;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4577702562250502;  // std dev = 2.011, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.10199299869843124;  // std dev = 5.565, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.47078190810469794;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.42066067304313465;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7049500789576911;  // std dev = 0.135, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.19881584362485621;  // std dev = 0.164, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.46990941910403244;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1242595953704457;  // std dev = 0.093, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.022528246180192023;  // std dev = 1.880, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7861126059560671;  // std dev = 0.113, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.19911389701894333;  // std dev = 0.087, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.22550660655400226;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03501847988228617;  // std dev = 4.708, 118.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.3016609270174799;  // std dev = 0.189, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5846413661531006;  // std dev = 0.254, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.12163038132395898;  // std dev = 1.057, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, D) )
%   | | then return -0.18590097548154047;  // std dev = 0.065, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( complex(A, F), interaction(G, D) )
%   | | | then return 0.021860918596758375;  // std dev = 3.227, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return 0.14912742989650135;  // std dev = 4.487, 100.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=38 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( complex(A, J) )
%   | | then return 0.33644144162246914;  // std dev = 0.989, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.06073120747114154;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.7164323392493037;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then return 0.07001677188022196;  // std dev = 0.285, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.47737464101125265;  // std dev = 0.525, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), location(F, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12440371436060582;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(F, H), phenotype(F, I) )
%   | | | then return 0.0966904284899178;  // std dev = 2.723, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return -0.018682071940673214;  // std dev = 2.315, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6234598804582262;  // std dev = 0.421, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.19153333608352152;  // std dev = 0.200, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 1.7151712014643976E-6;  // std dev = 2.639, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.12276724580001921;  // std dev = 3.264, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(A, F), phenotype(E, G) )
%   | | | then return 0.09630802818778744;  // std dev = 0.778, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5076552112113427;  // std dev = 0.588, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.5758353807924096;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.17696325847005306;  // std dev = 0.391, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.5164962268883038;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.18728348348492346;  // std dev = 0.189, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3349555243433514;  // std dev = 0.385, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1135436410585468;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11041084196610092;  // std dev = 4.425, 97.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2561369740376586;  // std dev = 0.179, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( interaction(E, D), location(C, F) )
%   | | then if ( interaction(A, G), interaction(G, E) )
%   | | | then return -0.13215033783188515;  // std dev = 0.822, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.02677319298305843;  // std dev = 4.630, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.5074526548547872;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3336589195425981;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, I) )
%   | then if ( phenotype(A, J) )
%   | | then return 0.08754556158917659;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5417200138383359;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.34106421151247257;  // std dev = 0.167, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.05380354146118018;  // std dev = 0.419, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2139252371656899;  // std dev = 0.138, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09525243695838129;  // std dev = 0.127, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.0462245805149849;  // std dev = 1.353, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( location(D, F) )
%   | | | then return -0.25203039020486157;  // std dev = 0.855, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.08571522751521134;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( location(A, H) )
%   | | | then return 0.026719381725969434;  // std dev = 4.320, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return -0.03408975086388247;  // std dev = 2.502, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.04089432543703857;  // std dev = 0.649, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.10016933941778047;  // std dev = 1.481, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C), interaction(A, D) )
%   | then return -0.03547320094956502;  // std dev = 0.200, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | else if ( phenotype(D, E) )
%   | | then if ( enzyme(A, F), interaction(G, D) )
%   | | | then return 0.002709388283000349;  // std dev = 2.275, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.08703347578499705;  // std dev = 3.870, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.08686427420159432;  // std dev = 0.949, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.04336849400798726;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K), interaction(L, J) )
%   | | | then return -0.02537250483187332;  // std dev = 0.924, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.5745293580457306;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.24673482463344906;  // std dev = 0.062, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1807069725751377;  // std dev = 0.678, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.531', 'seconds']
Refined model CLL: -0.256039


******************************************
Best model found
******************************************
Results 

CLL : -0.277072 

AUC ROC : 0.935873 

AUC PR : 0.312468 

Precision : 0.183607 

Recall : 0.595745 

F1 : 0.280702 

Total Learning Time : 50.082 

Total Inference Time : 28.954257011413574 

Total revision time: 86.79133122634889
Best scored revision CLL: -0.256039


Results 

CLL : -0.277072 

AUC ROC : 0.935873 

AUC PR : 0.312468 

Precision : 0.183607 

Recall : 0.595745 

F1 : 0.280702 

Total Learning Time : 91.90473335456849 

Total Inference Time : 28.954257011413574 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.525
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19691115008322627;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2065503713048204;  // std dev = 5.705, 139.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=52 */
%   | | | else return 0.17455491503825468;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1503299892828815;  // std dev = 5.174, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.13474819175230957;  // std dev = 6.497, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12604043289635508;  // std dev = 4.344, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.1333195800497226;  // std dev = 6.978, 214.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0756804178956605;  // std dev = 8.423, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07908576347167594;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7256388905990244;  // std dev = 0.014, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2743768642771388;  // std dev = 0.019, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05442870074256637;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.08305497897619751;  // std dev = 5.096, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030018337108135857;  // std dev = 4.135, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.06338923242142808;  // std dev = 6.409, 181.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041537558784210345;  // std dev = 7.617, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004308250394244825;  // std dev = 7.778, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.979', 'seconds']
Parameter learned model CLL:-0.333792 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.705, 87, 52], 'false,false,false,false': [5.849, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.174, 77, 41], 'false,false,false,false': [6.497, 128, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.344, 54, 29], 'false,false,false,false': [6.978, 139, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.423, 223, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 41], 'true,false': [0.019, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.93, 47, 23], 'false,false,false,false': [5.096, 74, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.135, 86, 41], 'false,false,false,false': [6.409, 118, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.617, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.778, 234, 104]}]
{'': [nan, 0.22400237668304385], 'false': [nan, 0.2240023766830423], 'false,false': [nan, 0.22400237668304385], 'false,false,false': [nan, 0.2240023766830423]}
{'': [nan, 0.22966190762980754], 'false': [nan, 0.22966190762981029], 'false,false': [nan, 0.22966190762980754], 'false,false,false': [0.2341493711505605, 0.22506925207756115]}
{'': [nan, 0.22331330924865886], 'false': [nan, 0.22331330924865886], 'false,false': [nan, 0.2233133092486584], 'false,false,false': [0.22689982235342646, 0.22100484085273195]}
{'': [nan, 0.22748396118646325], 'false': [nan, 0.22748396118646325], 'false,false': [nan, 0.2274839611864641], 'false,false,false': [0.2273189142110617, 0.22753316720231762]}
{'': [nan, 0.21696099869781524], 'false': [nan, 0.21696099869781524], 'false,false': [nan, 0.21696099869781665], 'false,false,false': [nan, 0.21696099869781665]}
{'': [nan, 0.22292346214104936], 'false': [nan, 0.22292346214104936], 'false,false': [nan, 0.22292346214105085], 'false,false,false': [nan, 0.22292346214104927]}
{'': [0.22764016332942555, 0.225235376154974], 'true': [4.989263214647869e-06, 4.956945475233597e-06], 'false': [nan, 0.225235376154974], 'false,false': [nan, 0.225235376154974], 'false,false,false': [0.22061224489795855, 0.22776238842720958], 'true,true': [nan, 4.989263214647869e-06], 'true,true,false': [nan, 4.989263214647869e-06]}
{'': [nan, 0.18913984018594815], 'false': [nan, 0.18913984018594815], 'false,false': [nan, 0.1891398401859478], 'false,false,false': [0.13463934981874878, 0.22692132965960807]}
{'': [nan, 0.19023904618395288], 'false': [nan, 0.19023904618395315], 'false,false': [nan, 0.19023904618395315], 'false,false,false': [nan, 0.19023904618395315]}
{'': [nan, 0.17898237212213244], 'false': [nan, 0.17898237212213244], 'false,false': [nan, 0.1789823721221319], 'false,false,false': [nan, 0.1789823721221319]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 31.919
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E) )
%   | then return 0.1134680840356819;  // std dev = 0.436, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else return 0.1850720120225893;  // std dev = 0.469, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.17219852187637086;  // std dev = 5.105, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.06403128804068885;  // std dev = 0.404, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.504576739386917;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8175751499147453;  // std dev = 0.134, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8385013365984003;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(F, H) )
%   | | | then return 0.1119659450696326;  // std dev = 4.482, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | | | else return -0.08581411415521897;  // std dev = 0.962, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), complex(J, L) )
%   | | | then return 0.2293061556660577;  // std dev = 2.074, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.14020356643523768;  // std dev = 2.738, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( location(A, M) )
%   | | | then return 0.25230531072311463;  // std dev = 4.289, 81.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=34 */
%   | | | else return 0.5840944490528004;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, C), interaction(C, D) )
%   | | then return 0.7381868944896212;  // std dev = 0.189, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( phenotype(A, E), phenotype(C, F) )
%   | | | then return -0.2086477757634591;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.6773824633387563;  // std dev = 0.920, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( complex(C, G), interaction(A, H) )
%   | | then return -0.05388643974205933;  // std dev = 0.324, 95.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=13 */
%   | | else if ( complex(A, I), complex(C, I) )
%   | | | then return -0.18739680925348268;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.11149691661665713;  // std dev = 5.693, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
%   else if ( enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.4604405056150544;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.22715500436968425;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.11168679788966211;  // std dev = 1.003, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(C, E) )
%   | then return 0.1307748834397568;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5750962145486965;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( location(A, F), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.20009596025086535;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, H), complex(G, H) )
%   | | | then return -0.007882126772245382;  // std dev = 1.973, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.07292038277645774;  // std dev = 3.894, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(I, K), phenotype(A, L) )
%   | | | then return 0.14669032185191594;  // std dev = 2.373, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.05534898354125389;  // std dev = 2.585, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( location(A, M) )
%   | | | then return 0.14959711128004824;  // std dev = 4.216, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | | else return 0.38118652409261394;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return 0.027717814239470565;  // std dev = 0.364, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.6552635065821589;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.004172382548157009;  // std dev = 3.013, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5141349930948894;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16799714429183527;  // std dev = 4.209, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.056771356523686485;  // std dev = 1.007, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3705695922051125;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.0642600569879827;  // std dev = 2.450, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -6.903041512062724E-4;  // std dev = 1.828, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3257796376758647;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(D, A), enzyme(D, E) )
%   | | then if ( phenotype(D, F), interaction(G, D) )
%   | | | then return 0.08127531745732643;  // std dev = 1.962, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.24767681835778022;  // std dev = 0.445, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06470467611531625;  // std dev = 0.324, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.46656870893633656;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.08584718058661679;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5457536854901273;  // std dev = 0.281, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.11017241603085998;  // std dev = 3.486, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.02548678525417722;  // std dev = 5.394, 159.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4933120550569755;  // std dev = 0.265, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.21175929996526363;  // std dev = 0.391, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return -0.010860654082265818;  // std dev = 0.362, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7220864994362801;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.24659477696886972;  // std dev = 0.141, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6372175406477391;  // std dev = 0.528, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.24071562790855197;  // std dev = 0.509, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08067909318333899;  // std dev = 4.546, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.4553602504266433;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(D, F), complex(E, G) )
%   | | | then return 0.33889945972043034;  // std dev = 1.592, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return 0.6096386304460413;  // std dev = 1.258, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else return -0.12804932222410173;  // std dev = 0.194, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else return -0.19891466914754863;  // std dev = 0.053, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( enzyme(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.013803424762914887;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07722753037237222;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(H, L) )
%   | | | then return 0.04722739574454449;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1492242059484139;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.17094859154557598;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.252347814950507;  // std dev = 0.253, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(C, F), complex(A, G) )
%   | | | then return 0.13921847500257373;  // std dev = 0.959, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.027342390590066;  // std dev = 2.483, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.26196680425579955;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.06936405790771763;  // std dev = 0.305, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( location(A, K) )
%   | | then if ( phenotype(A, L), complex(I, M) )
%   | | | then return 0.07484697478097962;  // std dev = 2.371, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | | else return 0.019707620697420863;  // std dev = 2.442, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else return 0.2886742990523219;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.018873568787402286;  // std dev = 0.272, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( location(A, E) )
%   | then if ( complex(D, F) )
%   | | then return -0.012077965131932147;  // std dev = 0.274, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | else if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4565723650427925;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16590246095049432;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( enzyme(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.27918239128141575;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.3996120117587625;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.16201451784652426;  // std dev = 0.137, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then return -0.0035417642869071996;  // std dev = 0.250, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.01823301965831359;  // std dev = 3.933, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | | else return 0.09068649249111492;  // std dev = 1.403, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '45.511', 'seconds']
Refined model CLL: -0.233047


******************************************
Best model found
******************************************
Results 

CLL : -0.238124 

AUC ROC : 0.983142 

AUC PR : 0.440615 

Precision : 0.490385 

Recall : 0.577358 

F1 : 0.530329 

Total Learning Time : 31.919 

Total Inference Time : 24.599934101104736 

Total revision time: 65.83768033409119
Best scored revision CLL: -0.233047


Results 

CLL : -0.238124 

AUC ROC : 0.983142 

AUC PR : 0.440615 

Precision : 0.490385 

Recall : 0.577358 

F1 : 0.530329 

Total Learning Time : 70.9510824623108 

Total Inference Time : 24.599934101104736 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.423
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18209259707134337;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16142940979934317;  // std dev = 5.859, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | | | else return 0.21768390296972417;  // std dev = 5.029, 107.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13858792493868968;  // std dev = 5.424, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | | else return 0.11045937736743495;  // std dev = 5.782, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12649279232773541;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.14501389467840217;  // std dev = 6.507, 184.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0937004325357167;  // std dev = 7.845, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09091351379850517;  // std dev = 7.761, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7262915505636776;  // std dev = 0.049, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27363992562252676;  // std dev = 0.069, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05478179069093217;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.07163393862208237;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.043701169321679674;  // std dev = 4.237, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.06971859816541688;  // std dev = 5.570, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032602283925648;  // std dev = 7.082, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03276961412844332;  // std dev = 7.014, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.182', 'seconds']
Parameter learned model CLL:-0.332846 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 105, 51], 'false,false,false,false': [5.029, 66, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.424, 89, 44], 'false,false,false,false': [5.782, 110, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 51, 26], 'false,false,false,false': [6.507, 118, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.845, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.761, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.049, 0, 44], 'true,false': [0.069, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [3.871, 43, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.237, 85, 44], 'false,false,false,false': [5.57, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.082, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.014, 179, 92]}]
{'': [nan, 0.21900416584011229], 'false': [nan, 0.219004165840112], 'false,false': [nan, 0.21900416584011229], 'false,false,false': [nan, 0.219004165840112]}
{'': [nan, 0.22744292963610613], 'false': [nan, 0.22744292963610968], 'false,false': [nan, 0.22744292963610613], 'false,false,false': [0.22004437869822588, 0.23635251987073203]}
{'': [nan, 0.21616736978929307], 'false': [nan, 0.21616736978929307], 'false,false': [nan, 0.21616736978929418], 'false,false,false': [0.2211623279041235, 0.21160113246081727]}
{'': [nan, 0.22825884945776426], 'false': [nan, 0.22825884945776426], 'false,false': [nan, 0.22825884945776495], 'false,false,false': [0.22364648338674378, 0.23008782360465682]}
{'': [nan, 0.22139664573868886], 'false': [nan, 0.22139664573868886], 'false,false': [nan, 0.22139664573868892], 'false,false,false': [nan, 0.22139664573868892]}
{'': [nan, 0.2264639940035478], 'false': [nan, 0.2264639940035478], 'false,false': [nan, 0.22646399400354783], 'false,false,false': [nan, 0.22646399400354758]}
{'': [0.22140377635291952, 0.22209847770376093], 'false': [nan, 0.22209847770376093], 'false,false': [nan, 0.22209847770376093], 'false,false,false': [0.21778435239973667, 0.2270431588613404], 'true': [5.372345178153185e-05, 5.353302264023125e-05], 'true,true': [nan, 5.372345178153185e-05], 'true,true,false': [nan, 5.372345178153185e-05]}
{'': [nan, 0.18498889747947558], 'false': [nan, 0.18498889747947558], 'false,false': [nan, 0.18498889747947536], 'false,false,false': [0.13918374873643694, 0.2281069152465821]}
{'': [nan, 0.18304174794437886], 'false': [nan, 0.1830417479443791], 'false,false': [nan, 0.1830417479443791], 'false,false,false': [nan, 0.1830417479443791]}
{'': [nan, 0.18154706407681276], 'false': [nan, 0.18154706407681276], 'false,false': [nan, 0.18154706407681276], 'false,false,false': [nan, 0.18154706407681276]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 28.712
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(C, D) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( complex(G, F), interaction(G, G) )
%   | | | then return -0.024204006076958388;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.1289822684328457;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.24797944357408774;  // std dev = 3.746, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 0.18804584231600718;  // std dev = 4.631, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8145729673270975;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.14734057015876145;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(E, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.12790471989216898;  // std dev = 1.616, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20577052727087225;  // std dev = 2.973, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.11121623404678088;  // std dev = 3.601, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.16820329254632355;  // std dev = 5.041, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6630622451632489;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( enzyme(E, G), enzyme(A, G) )
%   | | then return -0.1613936992209726;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(E, H), phenotype(E, I) )
%   | | | then return 0.1662190379999189;  // std dev = 3.200, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.07905043689369409;  // std dev = 5.157, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.47434254211061494;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1992237952653931;  // std dev = 2.912, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.025385526288777636;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.18392091046766884;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.41751358415830986;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5490764188034764;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, D) )
%   | | then return -0.10832213217077039;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.0867083005391317;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.32648470017901393;  // std dev = 1.624, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.192033307614824;  // std dev = 1.888, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.06694282266074489;  // std dev = 2.545, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.06369910573731205;  // std dev = 1.870, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.061856464485070504;  // std dev = 5.934, 181.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then return 0.04037530700349047;  // std dev = 0.385, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), interaction(A, H) )
%   | | then if ( phenotype(H, F) )
%   | | | then return 0.3462132064976539;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.019881544016997148;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6906101719670665;  // std dev = 0.797, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.21098186882487885;  // std dev = 0.348, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return 0.2615552042075593;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0299470863939336;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.41440214641718276;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1714810025185436;  // std dev = 3.543, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.23967404964002426;  // std dev = 0.721, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6440149945197634;  // std dev = 1.325, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else return -0.23953962551274038;  // std dev = 0.060, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.2274673691974775;  // std dev = 0.050, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, G) )
%   | | then return 0.23983413399724948;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3587528059686136;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4859251427625438;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.037196994126851256;  // std dev = 2.132, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.08132639455926408;  // std dev = 4.698, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5221161335218804;  // std dev = 0.190, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.20558573503551483;  // std dev = 0.066, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.666821464235254;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.33162605301688514;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3184546783378417;  // std dev = 0.396, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23157206403673097;  // std dev = 0.405, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3395352679624338;  // std dev = 3.238, 59.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=40 */
%   | | | else return -0.21945769791325648;  // std dev = 0.239, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0.4105613593760779;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1906581438370443;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(D, F), complex(A, G) )
%   | | then if ( complex(D, G) )
%   | | | then return -0.06779969705400216;  // std dev = 0.927, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.11452215699326618;  // std dev = 0.418, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( location(D, H) )
%   | | | then return 0.0010796153757678937;  // std dev = 3.872, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return -0.07828902299510619;  // std dev = 0.729, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.48877812938917964;  // std dev = 0.602, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1936578598506444;  // std dev = 0.111, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.03313703694886863;  // std dev = 1.904, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.036005726167605154;  // std dev = 2.807, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(D, D), complex(A, E) )
%   | | then return 0.16399535291767806;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11600644062651547;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.207424263618948;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.4922470722134435;  // std dev = 1.121, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0.033195391525213676;  // std dev = 2.767, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.16278064701372644;  // std dev = 0.334, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.1938699083149426;  // std dev = 0.390, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.09983974949026722;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.12214465906738603;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( enzyme(E, G) )
%   | | | then return -0.06526117763667356;  // std dev = 0.786, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.12386572134357185;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.0967317115490284;  // std dev = 0.110, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.15358829986799805;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.30984005378289015;  // std dev = 0.304, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18305692674873822;  // std dev = 0.334, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.04294971767964562;  // std dev = 2.741, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.007325208822375485;  // std dev = 3.395, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '49.301', 'seconds']
Refined model CLL: -0.199344


******************************************
Best model found
******************************************
Results 

CLL : -0.215249 

AUC ROC : 0.98564 

AUC PR : 0.281748 

Precision : 0.191021 

Recall : 0.783394 

F1 : 0.307148 

Total Learning Time : 28.712 

Total Inference Time : 25.792205810546875 

Total revision time: 62.82858086585998
Best scored revision CLL: -0.199344


Results 

CLL : -0.215249 

AUC ROC : 0.98564 

AUC PR : 0.281748 

Precision : 0.191021 

Recall : 0.783394 

F1 : 0.307148 

Total Learning Time : 67.94198299407958 

Total Inference Time : 25.792205810546875 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.308
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.186393209908673;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17157387745332148;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | else return 0.1739115397909857;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12684418274237783;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.15384583627119408;  // std dev = 6.163, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1468706888711718;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.10491973548897966;  // std dev = 6.746, 209.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08022635807070584;  // std dev = 7.676, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06784438438371616;  // std dev = 7.663, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7031735727635183;  // std dev = 0.978, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2624778427806887;  // std dev = 0.027, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.024878645480443093;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.09461264182768357;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.038718789745158945;  // std dev = 3.495, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.05877610492944407;  // std dev = 6.224, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033664002597500346;  // std dev = 7.183, 268.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012595147503964087;  // std dev = 7.242, 285.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.442', 'seconds']
Parameter learned model CLL:-0.326551 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.869, 102, 52], 'false,false,false,false': [4.737, 66, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.369, 60, 28], 'false,false,false,false': [6.163, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [6.746, 142, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.676, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.663, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.978, 1, 28], 'true,false': [0.027, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.851, 82, 33], 'false,false,false,false': [4.009, 45, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.495, 59, 28], 'false,false,false,false': [6.224, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.183, 182, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.242, 199, 86]}]
{'': [nan, 0.22049997086416953], 'false': [nan, 0.22049997086416942], 'false,false': [nan, 0.22049997086416953], 'false,false,false': [nan, 0.22049997086416942]}
{'': [nan, 0.22394444788889672], 'false': [nan, 0.2239444478888969], 'false,false': [nan, 0.22394444788889672], 'false,false,false': [0.22364648338674428, 0.2244000000000004]}
{'': [nan, 0.22308332861700064], 'false': [nan, 0.22308332861700064], 'false,false': [nan, 0.22308332861700103], 'false,false,false': [0.21693619572114933, 0.2260526309274025]}
{'': [nan, 0.22050494925635822], 'false': [nan, 0.22050494925635822], 'false,false': [nan, 0.22050494925635747], 'false,false,false': [0.22997508009968012, 0.21774742605922645]}
{'': [nan, 0.21582870128215834], 'false': [nan, 0.21582870128215834], 'false,false': [nan, 0.21582870128215875], 'false,false,false': [nan, 0.21582870128215875]}
{'': [nan, 0.21667879390822717], 'false': [nan, 0.21667879390822717], 'false,false': [nan, 0.2166787939082262], 'false,false,false': [nan, 0.2166787939082262]}
{'': [0.22217454408799828, 0.2152079036955946], 'true': [0.032961545994163836, 1.2861510129221059e-05], 'false': [nan, 0.2152079036955946], 'false,false': [nan, 0.2152079036955946], 'false,false,false': [0.2046124763705093, 0.22959183673469344], 'true,true': [nan, 0.032961545994163836], 'true,true,false': [nan, 0.032961545994163836]}
{'': [nan, 0.19455504894112874], 'false': [nan, 0.19455504894112874], 'false,false': [nan, 0.1945550489411287], 'false,false,false': [0.14041244370857847, 0.2213380715956311]}
{'': [nan, 0.19253126494954054], 'false': [nan, 0.19253126494954018], 'false,false': [nan, 0.19253126494954018], 'false,false,false': [nan, 0.19253126494954018]}
{'': [nan, 0.18399941726581331], 'false': [nan, 0.18399941726581331], 'false,false': [nan, 0.18399941726581245], 'false,false,false': [nan, 0.18399941726581245]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.592
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, E), complex(D, F) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return 0.0910256474282795;  // std dev = 0.423, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.1020513741239026;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.19478259846584897;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.8467032057251721;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.06677625712259322;  // std dev = 0.942, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.17061223761582753;  // std dev = 1.638, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return -0.14136015609778357;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8208459470017676;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1332590674391215;  // std dev = 5.229, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | | else return 0.22061681146440554;  // std dev = 3.579, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6536249257836851;  // std dev = 0.086, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(F, A), interaction(D, F) )
%   | | then if ( location(A, G), complex(D, E) )
%   | | | then return -0.11134663638734715;  // std dev = 0.694, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.03308879996674989;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(A, H), interaction(D, I) )
%   | | | then return 0.23355950616147;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.022526373578395653;  // std dev = 1.578, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7824776731891672;  // std dev = 0.241, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18445577601390606;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.11138256784716191;  // std dev = 4.464, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | | else return 0.06751900428219595;  // std dev = 3.846, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.13784791697278348;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, F), complex(C, F) )
%   | | then return 0.43496106946339885;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, G), phenotype(G, H) )
%   | | | then return 0.6118033121795939;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5476573233309374;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1373488377334147;  // std dev = 0.080, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, J) )
%   | | | then return -0.0294177817081366;  // std dev = 2.214, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return 0.20038567007641475;  // std dev = 2.085, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( location(A, L) )
%   | | | then return 0.14771008101976107;  // std dev = 5.560, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | | else return 0.5507656598805403;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.32220457993073137;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.40830188191812344;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5108236100268715;  // std dev = 0.267, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return 0.4719820327041204;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.40201154397220307;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11308140916689767;  // std dev = 0.069, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.04625475353668625;  // std dev = 4.738, 122.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   | | | else return 0.12504680192822776;  // std dev = 4.360, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2664011534158783;  // std dev = 0.982, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.7060890737639802;  // std dev = 0.898, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.20058308779853823;  // std dev = 0.356, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.4195045741069471;  // std dev = 1.861, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then return -0.17119544077078175;  // std dev = 0.043, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.2381502683783262;  // std dev = 0.072, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(I, J) )
%   | | then return -0.07152996770968194;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.09495970855656415;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.00783720925375068;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22096468278703885;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.6111223709004988;  // std dev = 0.315, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.40831015607358;  // std dev = 0.239, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.16918030152842975;  // std dev = 0.048, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.23259523743315563;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.07787732963211351;  // std dev = 1.420, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.0631268274449648;  // std dev = 1.293, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.10205092191525061;  // std dev = 2.481, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.02041335514529882;  // std dev = 3.597, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.18572606127311764;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(D, E), interaction(E, D) )
%   | | then return -0.06136897336193462;  // std dev = 0.227, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | | else if ( interaction(D, F) )
%   | | | then return 0.14602291302809609;  // std dev = 0.724, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -7.380027894987734E-4;  // std dev = 0.608, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2672497670292463;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), interaction(J, J) )
%   | | | then return -0.038378416842323834;  // std dev = 1.352, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.13442007272533427;  // std dev = 1.712, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.012404403134461253;  // std dev = 3.400, 109.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | | | else return 0.04749475053594333;  // std dev = 2.735, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then return 0.13203479183806266;  // std dev = 0.304, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( enzyme(A, G), phenotype(D, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.2958970363895322;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03307733938466659;  // std dev = 1.332, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.0338125572388025;  // std dev = 0.323, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then return -0.03175093882009771;  // std dev = 0.288, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( interaction(N, L), recursion_proteinclass(N, B) )
%   | | | then return 0.6013233856342517;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20438948321750927;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return 0.13567662332098426;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.007429234553616443;  // std dev = 1.670, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(C, E), interaction(A, D) )
%   | then return -0.10647500349754856;  // std dev = 0.289, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( enzyme(A, F), phenotype(C, G) )
%   | | then return 0.13926157093325622;  // std dev = 0.357, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return -0.037929529040750955;  // std dev = 0.288, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   else if ( phenotype(A, H), enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.5475422025259788;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.19425312103460085;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.28059442275027635;  // std dev = 2.433, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | | | else return -0.20278504952161763;  // std dev = 0.263, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.0918322393311219;  // std dev = 0.703, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.010681744125107362;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '30.764', 'seconds']
Refined model CLL: -0.223399


******************************************
Best model found
******************************************
Results 

CLL : -0.225169 

AUC ROC : 0.985588 

AUC PR : 0.306694 

Precision : 0.27357 

Recall : 0.625442 

F1 : 0.380645 

Total Learning Time : 25.592 

Total Inference Time : 17.187191247940063 

Total revision time: 50.28910222053528
Best scored revision CLL: -0.223399


Results 

CLL : -0.225169 

AUC ROC : 0.985588 

AUC PR : 0.306694 

Precision : 0.27357 

Recall : 0.625442 

F1 : 0.380645 

Total Learning Time : 55.40250434875488 

Total Inference Time : 17.187191247940063 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.345
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1768302537808309;  // std dev = 7.699, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1988681764066262;  // std dev = 5.292, 121.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=44 */
%   | | | else return 0.19963859243127968;  // std dev = 5.228, 118.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13928669178413663;  // std dev = 4.831, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.1458157994608397;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1679175950094929;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.13499950893623686;  // std dev = 6.586, 190.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07490405472749562;  // std dev = 7.705, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10580070985177856;  // std dev = 7.447, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7211381202400231;  // std dev = 0.019, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27902373548577275;  // std dev = 0.024, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08731472500267294;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.049105671625574936;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025314434139194597;  // std dev = 3.818, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 3.917321922608032E-4;  // std dev = 6.075, 179.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04718699590400806;  // std dev = 6.936, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022611296940827662;  // std dev = 7.030, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.282', 'seconds']
Parameter learned model CLL:-0.334663 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.699, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.292, 77, 44], 'false,false,false,false': [5.228, 75, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.831, 70, 35], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.508, 32, 20], 'false,false,false,false': [6.586, 123, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.705, 187, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.447, 153, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 35], 'true,false': [0.024, 57, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.908, 42, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.818, 74, 35], 'false,false,false,false': [6.075, 127, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.936, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.03, 177, 87]}]
{'': [nan, 0.2171235358048553], 'false': [nan, 0.2171235358048554], 'false,false': [nan, 0.2171235358048553], 'false,false,false': [nan, 0.2171235358048554]}
{'': [nan, 0.2315085520211498], 'false': [nan, 0.2315085520211492], 'false,false': [nan, 0.2315085520211498], 'false,false,false': [0.23140495867768646, 0.2316144785981037]}
{'': [nan, 0.22350123417809342], 'false': [nan, 0.22350123417809342], 'false,false': [nan, 0.22350123417809278], 'false,false,false': [0.22222681587257284, 0.22435848586382556]}
{'': [nan, 0.23026488174437384], 'false': [nan, 0.23026488174437384], 'false,false': [nan, 0.23026488174437326], 'false,false,false': [0.2366863905325447, 0.22827457642791588]}
{'': [nan, 0.21667320612019525], 'false': [nan, 0.21667320612019525], 'false,false': [nan, 0.2166732061201952], 'false,false,false': [nan, 0.2166732061201952]}
{'': [nan, 0.23110303667678875], 'false': [nan, 0.23110303667678875], 'false,false': [nan, 0.23110303667678836], 'false,false,false': [nan, 0.23110303667678922]}
{'': [0.2357905701471518, 0.22507213900274922], 'true': [1.0213793956990815e-05, 1.0038272207262317e-05], 'false': [nan, 0.22507213900274922], 'false,false': [nan, 0.22507213900274922], 'false,false,false': [0.2314049586776855, 0.21957815035154188], 'true,true': [nan, 1.0213793956990815e-05], 'true,true,false': [nan, 1.0213793956990815e-05]}
{'': [nan, 0.17892002770673385], 'false': [nan, 0.17892002770673385], 'false,false': [nan, 0.17892002770673335], 'false,false,false': [0.13371751489256256, 0.20621049556055296]}
{'': [nan, 0.18940626714465703], 'false': [nan, 0.18940626714465708], 'false,false': [nan, 0.18940626714465708], 'false,false,false': [nan, 0.18940626714465708]}
{'': [nan, 0.18718099662520818], 'false': [nan, 0.18718099662520818], 'false,false': [nan, 0.1871809966252077], 'false,false,false': [nan, 0.1871809966252077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.251
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 2.38e-07, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(H, E), location(H, G) )
%   | | | then return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.08037115732173453;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7595570468208012;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1345068049743168;  // std dev = 0.412, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1254446385283914;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.21252258176734692;  // std dev = 1.603, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.11328719430539513;  // std dev = 4.529, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then return 0.09562178089070522;  // std dev = 0.393, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11252258176734697;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3568521372482746;  // std dev = 2.707, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then return 0.4526259778440009;  // std dev = 0.753, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.689955919339388;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.17341068992606;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.21582746735283756;  // std dev = 1.090, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07212846334483212;  // std dev = 2.375, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5686586556465106;  // std dev = 1.169, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.10214519484207082;  // std dev = 5.424, 167.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=50 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.30085959255146444;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7271804326866148;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( complex(D, E), location(D, C) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then return 0.061371412483299324;  // std dev = 0.338, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08469328050732991;  // std dev = 1.806, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.21544779885557822;  // std dev = 2.365, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( location(D, C), interaction(A, I) )
%   | | then return 0.009750400575888113;  // std dev = 0.344, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else return 0.07134650729549165;  // std dev = 0.417, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then return 0.3625077516343977;  // std dev = 0.957, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.6770229815086246;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18967409210377398;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.25131376097513547;  // std dev = 1.082, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, C), location(E, D) )
%   | | then return 0.5808340425015243;  // std dev = 0.133, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, F), location(A, D) )
%   | | | then return -0.36197722247596853;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4277162230617986;  // std dev = 0.843, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G), interaction(C, G) )
%   | | then return -0.10169307804251596;  // std dev = 0.270, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( complex(C, H), phenotype(A, I) )
%   | | | then return 0.04815595141241369;  // std dev = 2.492, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.13701616339915362;  // std dev = 4.706, 105.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=39 */
%   else if ( interaction(A, J) )
%   | then return 0.002266146422455683;  // std dev = 0.345, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( phenotype(A, K) )
%   | | then return -0.08268653607034622;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.25236262255480024;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3628460960346004;  // std dev = 0.298, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return -0.12226839131835206;  // std dev = 0.150, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.014163880357845673;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22862905258070493;  // std dev = 1.804, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( location(A, I), complex(H, J) )
%   | | then if ( interaction(K, H), interaction(K, A) )
%   | | | then return 0.008191515902255824;  // std dev = 2.458, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.06546453988310028;  // std dev = 2.788, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( phenotype(H, L), complex(A, M) )
%   | | | then return 0.26853887415429417;  // std dev = 0.997, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08728166667421067;  // std dev = 4.072, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | else return -0.06639047396255021;  // std dev = 0.364, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, E) )
%   | | | then return 0.4040046081714307;  // std dev = 0.290, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5413438144481739;  // std dev = 0.275, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6699825460143121;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.2197882769545731;  // std dev = 0.083, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3495835691509235;  // std dev = 0.321, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6091643333480258;  // std dev = 0.882, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.19034039584210455;  // std dev = 0.148, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.21722054661877904;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04934665148203505;  // std dev = 3.959, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22682736648775106;  // std dev = 0.263, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), location(D, G) )
%   | | then if ( phenotype(F, H), phenotype(D, H) )
%   | | | then return -0.09740194586609935;  // std dev = 0.458, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.06506340308937585;  // std dev = 1.611, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5413317265321669;  // std dev = 0.454, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21197874768405525;  // std dev = 0.412, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(J, L), complex(A, M) )
%   | | | then return 0.03549948052985703;  // std dev = 0.838, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2463199358359562;  // std dev = 1.096, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.07950779846477637;  // std dev = 2.855, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.022218232671456298;  // std dev = 3.425, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.02798317152422748;  // std dev = 0.995, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.4527888387505889;  // std dev = 1.938, 75.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=70 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.21133802583268232;  // std dev = 0.293, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.39280368427530676;  // std dev = 0.319, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.2024834645234665;  // std dev = 0.062, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( interaction(A, A) )
%   | then return -0.00531153149636852;  // std dev = 0.343, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.12778406039494034;  // std dev = 0.658, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11585976692741977;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.09065418809461374;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.17710866460105593;  // std dev = 0.161, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(C, F), phenotype(A, G) )
%   | | then return -0.0713254045719788;  // std dev = 0.162, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | else return 0.031210999163188813;  // std dev = 0.297, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then if ( enzyme(A, J), interaction(I, I) )
%   | | then return -0.04223042798751051;  // std dev = 0.185, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.002210200832626123;  // std dev = 0.968, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.0636713465533745;  // std dev = 1.484, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.1875839643520057;  // std dev = 0.787, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, M) )
%   | | | then return -0.034978070935027285;  // std dev = 3.248, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | | else return -0.11901271253906957;  // std dev = 1.154, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '26.273', 'seconds']
Refined model CLL: -0.213479


******************************************
Best model found
******************************************
Results 

CLL : -0.224819 

AUC ROC : 0.989667 

AUC PR : 0.449478 

Precision : 0.309144 

Recall : 0.755319 

F1 : 0.438723 

Total Learning Time : 32.251 

Total Inference Time : 24.71735405921936 

Total revision time: 64.81450109100342
Best scored revision CLL: -0.213479


Results 

CLL : -0.224819 

AUC ROC : 0.989667 

AUC PR : 0.449478 

Precision : 0.309144 

Recall : 0.755319 

F1 : 0.438723 

Total Learning Time : 64.8856409034729 

Total Inference Time : 24.71735405921936 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.551
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18213647404032282;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1699841441037487;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.11257513944616686;  // std dev = 6.127, 187.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18852929845121147;  // std dev = 5.056, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
%   | | | else return 0.15547339303383145;  // std dev = 6.448, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07483257531575642;  // std dev = 4.519, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | | else return 0.14382671509317765;  // std dev = 6.965, 212.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08458445222361792;  // std dev = 8.416, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06699663696415503;  // std dev = 8.429, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6903455142311403;  // std dev = 1.380, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | else return -0.26313260224797014;  // std dev = 0.010, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06870327081186493;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.04696381346729102;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02563389413160236;  // std dev = 4.278, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
%   | | | else return 0.07803521028662626;  // std dev = 6.397, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04086750663635011;  // std dev = 7.735, 316.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05670408594712148;  // std dev = 7.557, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.051', 'seconds']
Parameter learned model CLL:-0.335765 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [6.127, 135, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.056, 68, 41], 'false,false,false,false': [6.448, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.519, 69, 29], 'false,false,false,false': [6.965, 137, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.416, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.429, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.38, 2, 41], 'true,false': [0.01, 102, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.901, 45, 23], 'false,false,false,false': [5.271, 91, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.278, 95, 41], 'false,false,false,false': [6.397, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.735, 212, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.557, 191, 104]}]
{'': [nan, 0.21901961355188906], 'false': [nan, 0.21901961355188773], 'false,false': [nan, 0.21901961355188906], 'false,false,false': [nan, 0.21901961355188773]}
{'': [nan, 0.211620669607745], 'false': [nan, 0.21162066960774326], 'false,false': [nan, 0.211620669607745], 'false,false,false': [0.22293444328824288, 0.2007492350367486]}
{'': [nan, 0.22864824027338065], 'false': [nan, 0.22864824027338065], 'false,false': [nan, 0.22864824027337896], 'false,false,false': [0.23455078534806792, 0.2247654104986332]}
{'': [nan, 0.2233717225765175], 'false': [nan, 0.2233717225765175], 'false,false': [nan, 0.223371722576517], 'false,false,false': [0.20835068721365996, 0.22881057405831648]}
{'': [nan, 0.21725328786197906], 'false': [nan, 0.21725328786197906], 'false,false': [nan, 0.21725328786198128], 'false,false,false': [nan, 0.21725328786198128]}
{'': [nan, 0.21662407161139055], 'false': [nan, 0.21662407161139055], 'false,false': [nan, 0.2166240716113883], 'false,false,false': [nan, 0.2166240716113897]}
{'': [0.2027857994501033, 0.2162211222989496], 'false': [nan, 0.2162211222989496], 'false,false': [nan, 0.2162211222989496], 'false,false,false': [0.22383217993079607, 0.21210885146553116], 'true': [0.04429092859708024, 1.0073722811912052e-06], 'true,true': [nan, 0.04429092859708024], 'true,true,false': [nan, 0.04429092859708024]}
{'': [nan, 0.18867972105100989], 'false': [nan, 0.18867972105100989], 'false,false': [nan, 0.18867972105100989], 'false,false,false': [0.13455345527780868, 0.22861805724680107]}
{'': [nan, 0.18931530583255765], 'false': [nan, 0.1893153058325572], 'false,false': [nan, 0.1893153058325572], 'false,false,false': [nan, 0.1893153058325572]}
{'': [nan, 0.19360437986154924], 'false': [nan, 0.19360437986154924], 'false,false': [nan, 0.1936043798615502], 'false,false,false': [nan, 0.1936043798615502]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 30.215
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(A, C) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.05814893509951233;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.24481560176617773;  // std dev = 4.217, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.19148226843284508;  // std dev = 3.830, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7459226492942073;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.45048980206308525;  // std dev = 0.413, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), location(G, F) )
%   | | | then return 0.7161148785918184;  // std dev = 1.053, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.01033737069384171;  // std dev = 0.902, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.03195083984328246;  // std dev = 0.305, 115.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=14 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.767550761517992;  // std dev = 0.989, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return -0.16364315598029094;  // std dev = 0.162, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18589557551013305;  // std dev = 3.535, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(C, E) )
%   | then return 0.1469744158947636;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, C) )
%   | | then return 0.5499160807629552;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, F), interaction(A, G) )
%   | | | then return 0.6995142514813849;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.597956350490486;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6220234083881778;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13545451184281732;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08769465709337865;  // std dev = 6.136, 248.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=71 */
%   | | | else return 0.20009546913410023;  // std dev = 2.168, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D), complex(C, E) )
%   | | then if ( interaction(C, C), phenotype(D, F) )
%   | | | then return 0.41140757550825796;  // std dev = 0.630, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6228654783651518;  // std dev = 0.322, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 8.521593380073608E-4;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.4547574915086512;  // std dev = 0.695, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14409778375495205;  // std dev = 0.036, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( complex(C, I), complex(A, I) )
%   | | | then return -0.0404805677349025;  // std dev = 1.175, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.0886837343543298;  // std dev = 5.667, 191.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=59 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then return 0.10276273231146722;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.45027314291056736;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.31688280366692073;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.43151284910351273;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.5149591841245265;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.027628964437714253;  // std dev = 3.507, 98.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=25 */
%   | | | else return -0.16394688865236817;  // std dev = 0.146, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(J, A), complex(J, H) )
%   | | | then return -0.04021092419143728;  // std dev = 0.699, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.09318635261012728;  // std dev = 1.766, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11654581288984325;  // std dev = 3.425, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.1864779945519657;  // std dev = 3.019, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then if ( complex(D, F), phenotype(C, G) )
%   | | then return 0.21082195577745638;  // std dev = 0.322, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else return 0.4211032323965481;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, C) )
%   | | then return -0.13958400499708165;  // std dev = 0.041, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( phenotype(C, H), location(A, I) )
%   | | | then return 0.09533284497608054;  // std dev = 4.647, 134.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=48 */
%   | | | else return -0.010598115049751292;  // std dev = 2.735, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   else if ( phenotype(A, J) )
%   | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.6244045396415944;  // std dev = 0.266, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.20247201826428005;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( location(A, L), interaction(M, A) )
%   | | then return 0.2205849411594872;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2686529969194685;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.01964031226243441;  // std dev = 0.254, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.21880783989829636;  // std dev = 0.404, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.0759909611648028;  // std dev = 1.800, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( complex(D, H), interaction(I, A) )
%   | | | then return 0.2000178887902536;  // std dev = 1.230, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.006928271135851243;  // std dev = 1.687, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6303894429645904;  // std dev = 0.415, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.262055872860783;  // std dev = 0.221, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.37101267752345146;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.104606036666971;  // std dev = 3.704, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return -0.001603136056957194;  // std dev = 0.304, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else return 0.37549367265079153;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), complex(F, I) )
%   | | | then return -0.19210934232264462;  // std dev = 0.512, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3333022144709861;  // std dev = 0.190, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14184575483425405;  // std dev = 0.147, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.015303087270212809;  // std dev = 2.849, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | else if ( complex(A, J) )
%   | | then return 0.0076237693910124645;  // std dev = 0.248, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.007905693500620259;  // std dev = 2.639, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.1135740073011433;  // std dev = 3.532, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.4359589547313605;  // std dev = 0.166, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.17121703040927064;  // std dev = 0.075, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), enzyme(G, I) )
%   | | | then return -0.37196427906858276;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22573648582090153;  // std dev = 1.235, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return -0.07869799847129033;  // std dev = 0.265, 113.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=15 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5480368452833229;  // std dev = 0.304, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.22206068569135154;  // std dev = 0.170, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.23689985463656776;  // std dev = 0.194, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.03748532397310917;  // std dev = 3.393, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.24612500149322147;  // std dev = 0.110, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.37845319875243316;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.19359242842140387;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return -0.10051251520078344;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.015577870311471988;  // std dev = 0.245, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( phenotype(A, I), complex(H, J) )
%   | | | then return -0.03214082135244978;  // std dev = 1.226, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.0837166959758775;  // std dev = 2.619, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.0803618162447656;  // std dev = 0.704, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.006928047068847123;  // std dev = 4.042, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.834', 'seconds']
Refined model CLL: -0.225135


******************************************
Best model found
******************************************
Results 

CLL : -0.240526 

AUC ROC : 0.939148 

AUC PR : 0.291891 

Precision : 0.195906 

Recall : 0.50566 

F1 : 0.282403 

Total Learning Time : 30.215 

Total Inference Time : 21.3699209690094 

Total revision time: 60.785243001937864
Best scored revision CLL: -0.225135


Results 

CLL : -0.240526 

AUC ROC : 0.939148 

AUC PR : 0.291891 

Precision : 0.195906 

Recall : 0.50566 

F1 : 0.282403 

Total Learning Time : 60.85638281440735 

Total Inference Time : 21.3699209690094 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.524
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20795882103107147;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14378652445490595;  // std dev = 5.920, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
%   | | | else return 0.15629991426890918;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11235041112411594;  // std dev = 5.536, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | | | else return 0.1540648424289818;  // std dev = 5.606, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10133939837819561;  // std dev = 4.237, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.1120354204397918;  // std dev = 6.668, 202.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09812843273637085;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11297715333015175;  // std dev = 7.657, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7337893472986011;  // std dev = 0.015, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26620774733998015;  // std dev = 0.019, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10411637641111171;  // std dev = 3.941, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | | else return 0.07131332364311622;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02978794658594545;  // std dev = 4.336, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.030337011218350852;  // std dev = 5.696, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0370352685564236;  // std dev = 7.064, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034414082978883716;  // std dev = 7.035, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.240', 'seconds']
Parameter learned model CLL:-0.331119 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.92, 112, 51], 'false,false,false,false': [5.259, 85, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.536, 101, 44], 'false,false,false,false': [5.606, 91, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.237, 58, 26], 'false,false,false,false': [6.668, 136, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.657, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 44], 'true,false': [0.019, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 41, 25], 'false,false,false,false': [3.871, 43, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.336, 95, 44], 'false,false,false,false': [5.696, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.064, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.035, 178, 92]}]
{'': [nan, 0.22744292963611001], 'false': [nan, 0.2274429296361095], 'false,false': [nan, 0.22744292963611001], 'false,false,false': [nan, 0.2274429296361095]}
{'': [nan, 0.21699931753691085], 'false': [nan, 0.21699931753690574], 'false,false': [nan, 0.21699931753691085], 'false,false,false': [0.21498739132071096, 0.21951373141849218]}
{'': [nan, 0.21903350920367703], 'false': [nan, 0.21903350920367703], 'false,false': [nan, 0.2190335092036775], 'false,false,false': [0.21139006067830335, 0.2261184625970654]}
{'': [nan, 0.21823700171590205], 'false': [nan, 0.21823700171590205], 'false,false': [nan, 0.21823700171590127], 'false,false,false': [0.21371882086167743, 0.22008224776421692]}
{'': [nan, 0.22105777045590985], 'false': [nan, 0.22105777045590985], 'false,false': [nan, 0.2210577704559097], 'false,false,false': [nan, 0.2210577704559097]}
{'': [nan, 0.23083642923106554], 'false': [nan, 0.23083642923106554], 'false,false': [nan, 0.2308364292310659], 'false,false,false': [nan, 0.23083642923106562]}
{'': [0.2362228861256492, 0.2314444003340246], 'true': [4.978550185199347e-06, 4.976144464060474e-06], 'false': [nan, 0.2314444003340246], 'false,false': [nan, 0.2314444003340246], 'false,false,false': [0.23530762167125815, 0.22704315886134127], 'true,true': [nan, 4.978550185199347e-06], 'true,true,false': [nan, 4.978550185199347e-06]}
{'': [nan, 0.17856133605459912], 'false': [nan, 0.17856133605459912], 'false,false': [nan, 0.17856133605459898], 'false,false,false': [0.13527557560959644, 0.21921470830130554]}
{'': [nan, 0.1807742968053534], 'false': [nan, 0.1807742968053523], 'false,false': [nan, 0.1807742968053523], 'false,false,false': [nan, 0.1807742968053523]}
{'': [nan, 0.18328430002246598], 'false': [nan, 0.18328430002246598], 'false,false': [nan, 0.18328430002246734], 'false,false,false': [nan, 0.18328430002246734]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 30.691
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), phenotype(E, F) )
%   | then return 0.08314893509951238;  // std dev = 0.418, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1438632208137979;  // std dev = 0.452, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.2823913593419354;  // std dev = 4.015, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.16003572755234255;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.22481560176617835;  // std dev = 3.733, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), interaction(F, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7608201844251348;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, G), complex(F, D) )
%   | | | then return -0.14090738709153322;  // std dev = 0.061, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.24646369198914517;  // std dev = 3.308, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( complex(C, D) )
%   | | then return 0.02018607081343543;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8323617015632869;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1693450859112723;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(I, A), enzyme(A, J) )
%   | then if ( interaction(K, I), interaction(L, K) )
%   | | then return 0.10225826840186526;  // std dev = 0.427, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.5819838329596023;  // std dev = 0.432, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.10206601168905871;  // std dev = 0.444, 165.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then return 0.7448034180065871;  // std dev = 0.074, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.826715674020275;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.17503687129157758;  // std dev = 0.178, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), interaction(I, A) )
%   | | then return 0.5878804772512815;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7832995559139573;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then if ( phenotype(A, K), interaction(A, L) )
%   | | | then return -0.1035917104376481;  // std dev = 1.321, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.06199989971173609;  // std dev = 5.573, 169.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=44 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.08288266712303208;  // std dev = 2.257, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.2213053567473177;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, E), complex(A, F) )
%   | | | then return 0.44826221040621017;  // std dev = 0.239, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7349095621732038;  // std dev = 0.694, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.7560470846217724;  // std dev = 0.217, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.20009331220909177;  // std dev = 0.225, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then return -0.13230427662017502;  // std dev = 0.102, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.19804140658140124;  // std dev = 0.351, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( interaction(A, A) )
%   | then return 0.034571390939634065;  // std dev = 0.554, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.010279737490672562;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then return 0.3660703889734024;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.569319092530666;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.22236536848894825;  // std dev = 1.205, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.5764999518869023;  // std dev = 0.305, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.1546821693142778;  // std dev = 0.040, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( location(K, L) )
%   | | | then return 0.039221585178383804;  // std dev = 1.608, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.15424008567091368;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.17320529094118742;  // std dev = 2.119, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.07582279537803346;  // std dev = 3.705, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.35966163696995906;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.0815383450952141;  // std dev = 0.550, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1529356061658742;  // std dev = 0.293, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.24829237461224432;  // std dev = 0.471, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.009391340337121606;  // std dev = 2.064, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.6260621778842366;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.005626621451771549;  // std dev = 0.697, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.01065185362427257;  // std dev = 2.710, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | else return 0.05131178318855133;  // std dev = 3.676, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40357440623485097;  // std dev = 0.143, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1547853201324396;  // std dev = 0.052, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(E, F), location(A, G) )
%   | | then return 0.13143261551493124;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.386418950039037;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09180981107642477;  // std dev = 1.414, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5609235829173532;  // std dev = 0.322, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17476438615023307;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return -0.06883401435618916;  // std dev = 0.991, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11184958774051611;  // std dev = 3.151, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21711890502386635;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then if ( interaction(F, F), complex(D, H) )
%   | | | then return 0.03652812631595143;  // std dev = 0.991, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.09672168441873379;  // std dev = 1.458, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( phenotype(E, I), phenotype(A, J) )
%   | | | then return -0.0344105305913074;  // std dev = 1.415, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.04881012248025848;  // std dev = 2.375, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( interaction(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.37581969461269527;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12313388527871633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.30908946454951447;  // std dev = 0.210, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.02415394338039571;  // std dev = 3.312, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), interaction(E, F) )
%   | then return 0.010727519655289461;  // std dev = 0.193, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else if ( complex(C, G), complex(D, G) )
%   | | then return 0.006938680165309505;  // std dev = 0.503, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.16437894507746628;  // std dev = 1.042, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06941716832548701;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.2494475192182007;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( location(J, K) )
%   | | | then return -0.023439145584891817;  // std dev = 1.205, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.1492685557622885;  // std dev = 0.000213, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.0186694671546399;  // std dev = 1.654, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.019974819820816083;  // std dev = 3.792, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.28273868041919376;  // std dev = 0.194, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.15005034963653993;  // std dev = 0.064, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( location(E, F), location(A, F) )
%   | | then return -0.0629436149760098;  // std dev = 0.187, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4957623931843193;  // std dev = 0.349, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19024349785700786;  // std dev = 0.174, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4615263001715471;  // std dev = 0.374, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20326434294813228;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.03364157484172389;  // std dev = 0.997, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08148176976489675;  // std dev = 3.105, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '31.626', 'seconds']
Refined model CLL: -0.189592


******************************************
Best model found
******************************************
Results 

CLL : -0.207135 

AUC ROC : 0.987207 

AUC PR : 0.387068 

Precision : 0.257177 

Recall : 0.776173 

F1 : 0.386343 

Total Learning Time : 30.691 

Total Inference Time : 22.86779499053955 

Total revision time: 62.039483871459964
Best scored revision CLL: -0.189592


Results 

CLL : -0.207135 

AUC ROC : 0.987207 

AUC PR : 0.387068 

Precision : 0.257177 

Recall : 0.776173 

F1 : 0.386343 

Total Learning Time : 62.11062368392945 

Total Inference Time : 22.86779499053955 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.116
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19408643509951284;  // std dev = 7.557, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19146395505953487;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | | else return 0.176277608838704;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17859273934398667;  // std dev = 4.189, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.18207835693257793;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14022663472892238;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.11058367495673206;  // std dev = 6.676, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08676472299511823;  // std dev = 7.576, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04299283716733034;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7271443890089576;  // std dev = 0.022, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2727501177158647;  // std dev = 0.029, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04987705186555211;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.057150358635786706;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.035954256066347855;  // std dev = 3.405, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.0655315368846003;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023129948535289397;  // std dev = 7.167, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06033191007108167;  // std dev = 6.917, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.616', 'seconds']
Parameter learned model CLL:-0.347663 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.557, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.775, 93, 52], 'false,false,false,false': [4.725, 65, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.189, 47, 28], 'false,false,false,false': [6.013, 96, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [6.676, 133, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.576, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 196, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 28], 'true,false': [0.029, 48, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.736, 70, 33], 'false,false,false,false': [4.109, 52, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.405, 57, 28], 'false,false,false,false': [6.162, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.167, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.917, 151, 86]}]
{'': [nan, 0.2230834960937508], 'false': [nan, 0.22308349609375056], 'false,false': [nan, 0.2230834960937508], 'false,false,false': [nan, 0.22308349609375056]}
{'': [nan, 0.22823165815640795], 'false': [nan, 0.22823165815640864], 'false,false': [nan, 0.22823165815640795], 'false,false,false': [0.23001189060642002, 0.2254871951841647]}
{'': [nan, 0.234524478519981], 'false': [nan, 0.234524478519981], 'false,false': [nan, 0.23452447851998112], 'false,false,false': [0.23393567620644934, 0.23480725378975112]}
{'': [nan, 0.22483742880905655], 'false': [nan, 0.22483742880905655], 'false,false': [nan, 0.22483742880905633], 'false,false,false': [0.23187869822485158, 0.22282537866836616]}
{'': [nan, 0.22160001927925566], 'false': [nan, 0.22160001927925566], 'false,false': [nan, 0.2216000192792559], 'false,false,false': [nan, 0.2216000192792559]}
{'': [nan, 0.21194797820298966], 'false': [nan, 0.21194797820298966], 'false,false': [nan, 0.21194797820298902], 'false,false,false': [nan, 0.21194797820298963]}
{'': [0.23265522048000378, 0.21840351236441663], 'true': [1.7127271074723893e-05, 1.7450007176918653e-05], 'false': [nan, 0.21840351236441663], 'false,false': [nan, 0.21840351236441663], 'false,false,false': [0.2177396550098979, 0.21926125822229706], 'true,true': [nan, 1.7127271074723893e-05], 'true,true,false': [nan, 1.7127271074723893e-05]}
{'': [nan, 0.19610479970415912], 'false': [nan, 0.19610479970415912], 'false,false': [nan, 0.1961047997041593], 'false,false,false': [0.13643753558363003, 0.22599968369136494]}
{'': [nan, 0.1902240585091874], 'false': [nan, 0.19022405850918728], 'false,false': [nan, 0.19022405850918728], 'false,false,false': [nan, 0.19022405850918728]}
{'': [nan, 0.20184974237171513], 'false': [nan, 0.20184974237171513], 'false,false': [nan, 0.20184974237171513], 'false,false,false': [nan, 0.20184974237171513]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.091
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, D), interaction(D, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.080371157321734;  // std dev = 4.320, 108.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=24 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1658412427918187;  // std dev = 4.992, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(D, A), complex(A, E) )
%   | | then if ( interaction(F, D), location(A, G) )
%   | | | then return 0.06143820051276537;  // std dev = 2.998, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.1738527080080863;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10860096186398925;  // std dev = 4.153, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | | | else return 0.17752251137641997;  // std dev = 4.412, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7409181952280023;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6687066538547833;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14720999895218595;  // std dev = 0.129, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1471407600952478;  // std dev = 3.948, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.0744887263149589;  // std dev = 5.214, 145.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4158086059344929;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( enzyme(F, G), complex(E, H) )
%   | | | then return 0.4177986937460103;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15143498629887195;  // std dev = 2.008, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.5621264799396356;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5856484279279103;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.051864912182981206;  // std dev = 1.865, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.3508249386048386;  // std dev = 1.340, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.14397972787654253;  // std dev = 5.294, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2427547149862771;  // std dev = 0.270, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5475925174504404;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5150226091304279;  // std dev = 0.154, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14103231002281394;  // std dev = 0.194, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.0018411595930044615;  // std dev = 3.500, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7806665275143847;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.22553436429308424;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.009646605116942786;  // std dev = 1.970, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.08812654841956442;  // std dev = 4.458, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2768432738978586;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.06898418700277764;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4021776025591159;  // std dev = 0.205, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6486763645252679;  // std dev = 1.372, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.23705510171142416;  // std dev = 0.234, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( location(A, H) )
%   | | | then return 0.01547205779425978;  // std dev = 4.942, 158.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
%   | | | else return 0.2665390463169953;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2282488301473536;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.5378754552483046;  // std dev = 0.508, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.7092031254358547;  // std dev = 0.223, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.18096451443908929;  // std dev = 0.100, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27816220377173956;  // std dev = 0.083, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), complex(J, K) )
%   | | | then return -0.12423146289804171;  // std dev = 0.855, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.002718510150598767;  // std dev = 1.940, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08605504498333984;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07639299937031546;  // std dev = 4.677, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(F, A) )
%   | then return 0.09179484487696785;  // std dev = 0.285, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.21309524845003863;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.0888121211450151;  // std dev = 1.627, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.008515374684093763;  // std dev = 1.897, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.18652303273963977;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5190528825784086;  // std dev = 1.631, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.2028569097524885;  // std dev = 0.528, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.004284396286513316;  // std dev = 1.798, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.11603373028541061;  // std dev = 2.666, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.15241555372457;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2815649313456305;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4410687530681685;  // std dev = 0.393, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, I), interaction(F, I) )
%   | | | then return -0.053854716647672614;  // std dev = 2.466, 105.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=17 */
%   | | | else return 0.07262728853519931;  // std dev = 2.062, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L), interaction(M, J) )
%   | | | then return 0.1195055097839267;  // std dev = 2.167, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.03561544896904843;  // std dev = 0.934, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.1270869484470621;  // std dev = 1.271, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.0028329614510102115;  // std dev = 2.865, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.13376595982825484;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22848361111313667;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( enzyme(G, H), interaction(I, A) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2515796337547573;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07981449402520051;  // std dev = 1.693, 63.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=9 */
%   | | else if ( interaction(G, J), enzyme(J, K) )
%   | | | then return 0.09373186993944509;  // std dev = 2.054, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.030165142926644826;  // std dev = 1.894, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.21113915316996107;  // std dev = 1.048, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.11306705680762241;  // std dev = 1.620, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.025549314538264204;  // std dev = 3.501, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.537', 'seconds']
Refined model CLL: -0.230807


******************************************
Best model found
******************************************
Results 

CLL : -0.243067 

AUC ROC : 0.94518 

AUC PR : 0.2404 

Precision : 0.202381 

Recall : 0.540636 

F1 : 0.294514 

Total Learning Time : 16.091 

Total Inference Time : 7.102157115936279 

Total revision time: 30.883839113235474
Best scored revision CLL: -0.230807


Results 

CLL : -0.243067 

AUC ROC : 0.94518 

AUC PR : 0.2404 

Precision : 0.202381 

Recall : 0.540636 

F1 : 0.294514 

Total Learning Time : 30.954978925704957 

Total Inference Time : 7.102157115936279 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.236
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21617362645753707;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1416723488632409;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | | else return 0.19526298473796613;  // std dev = 5.799, 145.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1503175796774254;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.12452290182189323;  // std dev = 5.943, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.1259212789770456;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.082816750274672;  // std dev = 7.138, 242.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14728466091260112;  // std dev = 7.336, 228.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05828891105609734;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6941265892698626;  // std dev = 0.987, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2780040139232228;  // std dev = 0.009, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.02248296843949112;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.0740703487788902;  // std dev = 4.568, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03268393130119088;  // std dev = 3.836, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.046151760318442675;  // std dev = 5.919, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059276513438271894;  // std dev = 6.905, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03815169673578036;  // std dev = 6.928, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.978', 'seconds']
Parameter learned model CLL:-0.342787 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.473, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.837, 75, 34], 'false,false,false,false': [5.799, 92, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.782, 66, 35], 'false,false,false,false': [5.943, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.036, 27, 14], 'false,false,false,false': [7.138, 169, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.336, 141, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.987, 1, 35], 'true,false': [0.009, 74, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.78, 50, 20], 'false,false,false,false': [4.568, 60, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.836, 72, 35], 'false,false,false,false': [5.919, 107, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.905, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.928, 165, 87]}]
{'': [nan, 0.2298430117360168], 'false': [nan, 0.22984301173601665], 'false,false': [nan, 0.2298430117360168], 'false,false,false': [nan, 0.22984301173601665]}
{'': [nan, 0.22519995039990057], 'false': [nan, 0.22519995039990187], 'false,false': [nan, 0.22519995039990057], 'false,false,false': [0.21462839828297425, 0.23191438763376995]}
{'': [nan, 0.22140426382542333], 'false': [nan, 0.22140426382542333], 'false,false': [nan, 0.22140426382542472], 'false,false,false': [0.22643081680523805, 0.21801490468421536]}
{'': [nan, 0.2128452383252509], 'false': [nan, 0.2128452383252509], 'false,false': [nan, 0.2128452383252512], 'false,false,false': [0.22486615110053526, 0.21053945713132274]}
{'': [nan, 0.23605939282946953], 'false': [nan, 0.23605939282946953], 'false,false': [nan, 0.2360593928294694], 'false,false,false': [nan, 0.2360593928294694]}
{'': [nan, 0.2175188008916404], 'false': [nan, 0.2175188008916404], 'false,false': [nan, 0.2175188008916412], 'false,false,false': [nan, 0.21751880089164055]}
{'': [0.2169188812018523, 0.21766094268409186], 'false': [nan, 0.21766094268409186], 'false,false': [nan, 0.21766094268409186], 'false,false,false': [0.20408163265306106, 0.2268431001890363], 'true': [0.02705268345366048, 1.0865748849264423e-06], 'true,true': [nan, 0.02705268345366048], 'true,true,false': [nan, 0.02705268345366048]}
{'': [nan, 0.18710217642362076], 'false': [nan, 0.18710217642362076], 'false,false': [nan, 0.18710217642362087], 'false,false,false': [0.137547551454894, 0.22037729527676833]}
{'': [nan, 0.19619707143274598], 'false': [nan, 0.19619707143274626], 'false,false': [nan, 0.19619707143274626], 'false,false,false': [nan, 0.19619707143274626]}
{'': [nan, 0.190467195718495], 'false': [nan, 0.190467195718495], 'false,false': [nan, 0.19046719571849516], 'false,false,false': [nan, 0.19046719571849516]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.245
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.0952623371613675;  // std dev = 4.189, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.058148935099512356;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.19443212094021953;  // std dev = 5.022, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6083623010998431;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.8327040784046744;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.17270685899828625;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.11708247651562496;  // std dev = 4.152, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, F), enzyme(A, I) )
%   | | | then return 0.08732685944439644;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.23649573118671163;  // std dev = 4.716, 92.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=37 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.3218412729461291;  // std dev = 1.253, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.04238633702720418;  // std dev = 0.402, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6208688987236101;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( complex(A, E) )
%   | | | then return -0.1549974537120888;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.039115266357869674;  // std dev = 2.046, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( enzyme(A, G), phenotype(D, H) )
%   | | | then return 0.19444866824548748;  // std dev = 3.101, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.08552570113394192;  // std dev = 3.544, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8001891108157373;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1941859108669135;  // std dev = 0.085, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.3492177030846525;  // std dev = 1.671, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.15352116157167564;  // std dev = 3.644, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4535910548948507;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.048724344130165895;  // std dev = 0.706, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.17453073011979395;  // std dev = 0.077, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.13821793036859334;  // std dev = 3.478, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.04381147910789586;  // std dev = 3.806, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7225102196582839;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 2.699005217558234E-4;  // std dev = 2.465, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return 0.123793168408973;  // std dev = 1.747, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.20100568874932837;  // std dev = 3.071, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return -0.020133417697525736;  // std dev = 0.284, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, C), complex(F, G) )
%   | | | then return 0.09276170855848526;  // std dev = 1.241, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.15908232521889248;  // std dev = 1.309, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.045292970419818245;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.66505227779089;  // std dev = 0.127, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.21055062076844416;  // std dev = 0.196, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(A, L), phenotype(J, M) )
%   | | | then return 0.07367711619586395;  // std dev = 2.236, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.1888262760122498;  // std dev = 4.305, 77.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=33 */
%   | | else return 0.5130976912113806;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.34790542659366286;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(G, A) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.0717788183606793;  // std dev = 0.923, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.31747509584735484;  // std dev = 1.380, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.476145768176573;  // std dev = 0.740, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.06889416610557349;  // std dev = 2.847, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L), location(A, M) )
%   | | | then return 0.12603195477605258;  // std dev = 3.223, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | | else return 0.31599065514341146;  // std dev = 1.318, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.08136825328455363;  // std dev = 2.455, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.006834549765080711;  // std dev = 2.921, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5001731468872542;  // std dev = 0.147, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.18988146518883411;  // std dev = 0.425, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.07781264288573084;  // std dev = 0.311, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( location(A, G) )
%   | | | then return 3.397382009531044E-4;  // std dev = 1.331, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.09500441411308524;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), enzyme(J, K) )
%   | | | then return 0.035176612026659365;  // std dev = 3.875, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | | else return 0.14383278559636248;  // std dev = 2.844, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.12442418921243059;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.020711174036423204;  // std dev = 1.190, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4109028885516712;  // std dev = 0.176, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, D) )
%   | | then return -0.1760428105413683;  // std dev = 0.060, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( enzyme(A, F), phenotype(D, G) )
%   | | | then return -0.009275062198186244;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.11204261654073065;  // std dev = 2.282, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then return 0.043001746839259114;  // std dev = 0.271, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( complex(J, L), interaction(M, J) )
%   | | | then return 0.02606394680791899;  // std dev = 1.836, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.10498361955635652;  // std dev = 2.157, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( interaction(N, A) )
%   | | | then return 9.764105359270175E-4;  // std dev = 3.641, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return -0.09162162438909664;  // std dev = 0.963, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.15609971392102182;  // std dev = 0.404, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.08838406511222559;  // std dev = 0.252, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( location(F, H), interaction(F, F) )
%   | | then return 0.33620015923928803;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1848954917535708;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.05207583553402476;  // std dev = 1.967, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( phenotype(A, L), location(J, M) )
%   | | | then return 0.05308971833264891;  // std dev = 2.267, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return -0.028088572841489832;  // std dev = 2.623, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.07821786871083747;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.07328210331876987;  // std dev = 3.488, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3168986789194465;  // std dev = 0.160, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(C, A) )
%   | | then return -0.16492782864449185;  // std dev = 0.075, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(D, E), complex(C, F) )
%   | | | then return 0.030743663072134508;  // std dev = 1.069, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.07273797898809357;  // std dev = 1.732, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   else if ( location(A, G), interaction(H, A) )
%   | then if ( complex(A, I), location(H, G) )
%   | | then return -0.013922330546430009;  // std dev = 0.256, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( phenotype(H, J), complex(H, K) )
%   | | | then return 0.14071769089481037;  // std dev = 2.518, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.022855155323805585;  // std dev = 3.834, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | else if ( location(A, L) )
%   | | then return 0.20763370374253648;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3506988515834415;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.971', 'seconds']
Refined model CLL: -0.290416


******************************************
Best model found
******************************************
Results 

CLL : -0.285712 

AUC ROC : 0.870482 

AUC PR : 0.220485 

Precision : 0.260618 

Recall : 0.478723 

F1 : 0.3375 

Total Learning Time : 22.245 

Total Inference Time : 13.9129319190979 

Total revision time: 44.0603890953064
Best scored revision CLL: -0.290416


Results 

CLL : -0.285712 

AUC ROC : 0.870482 

AUC PR : 0.220485 

Precision : 0.260618 

Recall : 0.478723 

F1 : 0.3375 

Total Learning Time : 44.1718450126648 

Total Inference Time : 13.9129319190979 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.487
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16313427234291458;  // std dev = 8.502, 341.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15749635466238535;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.16429694523998528;  // std dev = 6.912, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1243422296135638;  // std dev = 5.317, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.13198820048278231;  // std dev = 6.554, 198.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06767756216189834;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.11378983726892049;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10318407692886263;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08763642840189913;  // std dev = 8.342, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7424921409367934;  // std dev = 0.029, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2565621908348815;  // std dev = 0.042, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.15938428565014667;  // std dev = 3.490, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return 0.05386118666923589;  // std dev = 5.361, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030085142840158674;  // std dev = 4.215, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
%   | | | else return 0.06490251659033076;  // std dev = 6.431, 183.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06949989618267438;  // std dev = 7.526, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035331623287295486;  // std dev = 7.626, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.973', 'seconds']
Parameter learned model CLL:-0.339116 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.502, 237, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.736, 70, 33], 'false,false,false,false': [6.912, 146, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.317, 91, 41], 'false,false,false,false': [6.554, 135, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.954, 32, 12], 'false,false,false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.342, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 41], 'true,false': [0.042, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.49, 29, 21], 'false,false,false,false': [5.361, 91, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.215, 93, 41], 'false,false,false,false': [6.431, 120, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.526, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.626, 201, 104]}]
{'': [nan, 0.211969281309932], 'false': [nan, 0.21196928130993092], 'false,false': [nan, 0.211969281309932], 'false,false,false': [nan, 0.21196928130993092]}
{'': [nan, 0.21937500000000448], 'false': [nan, 0.2193750000000004], 'false,false': [nan, 0.21937500000000448], 'false,false,false': [0.21773965500989692, 0.2201363375735318]}
{'': [nan, 0.21582873457235563], 'false': [nan, 0.21582873457235563], 'false,false': [nan, 0.215828734572359], 'false,false,false': [0.21413806933569426, 0.21693246038192224]}
{'': [nan, 0.21546154842880136], 'false': [nan, 0.21546154842880136], 'false,false': [nan, 0.21546154842879991], 'false,false,false': [0.1983471074380162, 0.21780270944315097]}
{'': [nan, 0.22042996742105647], 'false': [nan, 0.22042996742105647], 'false,false': [nan, 0.22042996742105897], 'false,false,false': [nan, 0.22042996742105897]}
{'': [nan, 0.2216210897234696], 'false': [nan, 0.2216210897234696], 'false,false': [nan, 0.2216210897234696], 'false,false,false': [nan, 0.22162108972346986]}
{'': [0.22811351573596908, 0.2258004324598046], 'true': [2.0959633376492788e-05, 2.40107349694559e-05], 'false': [nan, 0.2258004324598046], 'false,false': [nan, 0.2258004324598046], 'false,false,false': [0.2436000000000003, 0.2160664819944586], 'true,true': [nan, 2.0959633376492788e-05], 'true,true,false': [nan, 2.0959633376492788e-05]}
{'': [nan, 0.18680985254178528], 'false': [nan, 0.18680985254178528], 'false,false': [nan, 0.1868098525417857], 'false,false,false': [0.13260744674080577, 0.2259866123116681]}
{'': [nan, 0.19872592298934996], 'false': [nan, 0.1987259229893501], 'false,false': [nan, 0.1987259229893501], 'false,false,false': [nan, 0.1987259229893501]}
{'': [nan, 0.1906508088660028], 'false': [nan, 0.1906508088660028], 'false,false': [nan, 0.19065080886600275], 'false,false,false': [nan, 0.19065080886600275]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.216
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), enzyme(H, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.15729423424481004;  // std dev = 4.953, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | | | else return 0.07243464938522666;  // std dev = 3.761, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7501483263358987;  // std dev = 0.185, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return -0.025878497950096908;  // std dev = 0.323, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( phenotype(G, H), interaction(I, G) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.16499594141325843;  // std dev = 2.270, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.343954278549023;  // std dev = 1.260, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.47806825485685567;  // std dev = 0.382, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( phenotype(K, M), complex(A, N) )
%   | | | then return 0.09910073691859878;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2305666317683234;  // std dev = 2.997, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.22633247467458367;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11894521957348174;  // std dev = 3.709, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.4958790863560286;  // std dev = 0.338, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.6456506938364406;  // std dev = 0.055, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.15329515284287099;  // std dev = 0.324, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G) )
%   | | then return 0.6239130304396222;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.40781481946623455;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), enzyme(H, K) )
%   | | | then return -0.005871395704055351;  // std dev = 1.845, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.17717347882380796;  // std dev = 3.321, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6829005956750168;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18480962821033975;  // std dev = 4.436, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.41145681031281617;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, E) )
%   | | then return 0.5834623237735377;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.47785050954556524;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1811142340476668;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.5809304986202601;  // std dev = 0.252, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.03958245195384006;  // std dev = 0.725, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.02584386209096334;  // std dev = 4.114, 129.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=31 */
%   | | | else return 0.08325795769570697;  // std dev = 5.235, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, E) )
%   | | then return 0.2442259691117206;  // std dev = 0.300, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.5746458535568749;  // std dev = 0.148, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return -0.1728589368230273;  // std dev = 0.041, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(G, B), interaction(A, I) )
%   | | then return 0.4169916287048353;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3235757652460258;  // std dev = 1.579, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.07032841697786264;  // std dev = 5.076, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.27441063557387096;  // std dev = 1.017, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.16480692266911134;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.10696477611726947;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, E) )
%   | then return -0.09738236455351103;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.18083698241311363;  // std dev = 0.823, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), interaction(C, G) )
%   | | | then return -0.029629901773129786;  // std dev = 2.071, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return 0.035810431581868335;  // std dev = 3.384, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.4831732393230736;  // std dev = 0.287, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | | else return -0.1673183493490109;  // std dev = 0.044, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( complex(A, M) )
%   | | | then return -0.034737457462670714;  // std dev = 0.977, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.044008612356786665;  // std dev = 2.067, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return 0.12414435199845422;  // std dev = 0.338, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3714154729573393;  // std dev = 0.173, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.14223099879462064;  // std dev = 0.045, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( enzyme(A, F), complex(E, G) )
%   | | then return 0.017957698955619977;  // std dev = 0.262, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.005633996037115565;  // std dev = 0.583, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04714776997126058;  // std dev = 2.029, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( complex(I, J), interaction(K, I) )
%   | | | then return 0.1470253530210474;  // std dev = 3.616, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   | | | else return -0.00195984047852637;  // std dev = 2.251, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return -0.14009849191788348;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.027208040035416922;  // std dev = 1.810, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then if ( complex(A, E), phenotype(D, F) )
%   | | then return 0.24421017826715502;  // std dev = 0.176, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.40833648162736086;  // std dev = 0.161, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15115490431226328;  // std dev = 0.067, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.18584630367353505;  // std dev = 0.855, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -7.222713543494641E-4;  // std dev = 5.057, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4077603550707538;  // std dev = 0.342, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1552340641794315;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.1287558520375369;  // std dev = 0.630, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5133297734452142;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.18993618521267672;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.03827221333645329;  // std dev = 0.446, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2799893426099607;  // std dev = 0.186, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return -0.13075456484010128;  // std dev = 0.042, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1984118180200648;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, H) )
%   | | | then return -0.06911710382770321;  // std dev = 1.369, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.022693347927274014;  // std dev = 1.559, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.0013048164501161894;  // std dev = 3.026, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.07858213410013465;  // std dev = 3.574, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(F, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.23348504498789574;  // std dev = 0.880, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.19906595058422105;  // std dev = 1.310, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.45517360535909157;  // std dev = 2.184, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | | else return -0.09212766258567336;  // std dev = 0.946, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | else return -0.16438484715801116;  // std dev = 0.069, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( interaction(A, H) )
%   | then return 0.38405557891153386;  // std dev = 0.844, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.08498998622252554;  // std dev = 0.539, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15705070665088247;  // std dev = 0.334, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.31203222023239735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '14.196', 'seconds']
Refined model CLL: -0.192128


******************************************
Best model found
******************************************
Results 

CLL : -0.183353 

AUC ROC : 0.983991 

AUC PR : 0.581199 

Precision : 0.466495 

Recall : 0.683019 

F1 : 0.554364 

Total Learning Time : 33.216 

Total Inference Time : 29.6654531955719 

Total revision time: 71.68758433151245
Best scored revision CLL: -0.192128


Results 

CLL : -0.183353 

AUC ROC : 0.983991 

AUC PR : 0.581199 

Precision : 0.466495 

Recall : 0.683019 

F1 : 0.554364 

Total Learning Time : 71.79904024887085 

Total Inference Time : 29.6654531955719 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.24
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18209259707134337;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17379204716198055;  // std dev = 5.011, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   | | | else return 0.20692012597971451;  // std dev = 5.821, 145.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15322764698392494;  // std dev = 5.362, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   | | | else return 0.11695265865629957;  // std dev = 5.749, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.04516697041588515;  // std dev = 4.212, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | | else return 0.10160370968659663;  // std dev = 6.814, 214.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08971858201540081;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08478042041218613;  // std dev = 7.841, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7369235842970144;  // std dev = 0.057, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26305803058092825;  // std dev = 0.080, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.09995275241576301;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.04366047324195742;  // std dev = 4.847, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.028021413624647752;  // std dev = 4.345, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | | else return 0.028242989959667793;  // std dev = 5.782, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05459467918106489;  // std dev = 7.041, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04446944028220041;  // std dev = 7.012, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.951', 'seconds']
Parameter learned model CLL:-0.322314 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.011, 74, 38], 'false,false,false,false': [5.821, 91, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.362, 83, 44], 'false,false,false,false': [5.749, 106, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.212, 68, 24], 'false,false,false,false': [6.814, 146, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.841, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.057, 0, 44], 'true,false': [0.08, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.996, 25, 14], 'false,false,false,false': [4.847, 76, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.345, 99, 44], 'false,false,false,false': [5.782, 110, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.041, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.012, 178, 92]}]
{'': [nan, 0.21900416584011229], 'false': [nan, 0.219004165840112], 'false,false': [nan, 0.21900416584011229], 'false,false,false': [nan, 0.219004165840112]}
{'': [nan, 0.22982936910475313], 'false': [nan, 0.22982936910475651], 'false,false': [nan, 0.22982936910475313], 'false,false,false': [0.2241709183673479, 0.2337217598097513]}
{'': [nan, 0.22028940681922915], 'false': [nan, 0.22028940681922915], 'false,false': [nan, 0.2202894068192289], 'false,false,false': [0.22641055114374814, 0.21464673093022968]}
{'': [nan, 0.21039667864673678], 'false': [nan, 0.21039667864673678], 'false,false': [nan, 0.2103966786467371], 'false,false,false': [0.19281663516067996, 0.21699684092084273]}
{'': [nan, 0.21779296118838526], 'false': [nan, 0.21779296118838526], 'false,false': [nan, 0.21779296118838426], 'false,false,false': [nan, 0.21779296118838426]}
{'': [nan, 0.22194102137473984], 'false': [nan, 0.22194102137473984], 'false,false': [nan, 0.22194102137473845], 'false,false,false': [nan, 0.22194102137473934]}
{'': [0.22397207127283458, 0.21850003074206975], 'true': [7.499826077280018e-05, 7.496885366598242e-05], 'false': [nan, 0.21850003074206975], 'false,false': [nan, 0.21850003074206975], 'false,false,false': [0.23011176857330723, 0.2135537190082645], 'true,true': [nan, 7.499826077280018e-05], 'true,true,false': [nan, 7.499826077280018e-05]}
{'': [nan, 0.17378951894752714], 'false': [nan, 0.17378951894752714], 'false,false': [nan, 0.17378951894752753], 'false,false,false': [0.13199663428684916, 0.2116147013600117]}
{'': [nan, 0.1843024744068908], 'false': [nan, 0.18430247440689076], 'false,false': [nan, 0.18430247440689076], 'false,false,false': [nan, 0.18430247440689076]}
{'': [nan, 0.1820970402712281], 'false': [nan, 0.1820970402712281], 'false,false': [nan, 0.18209704027122914], 'false,false,false': [nan, 0.18209704027122914]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.647
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.791482268432845;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.1123862232351056;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.16997689208875832;  // std dev = 4.467, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(C, E), enzyme(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(C, D), phenotype(C, F) )
%   | | | then return 0.3260580900251963;  // std dev = 1.346, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.15540864575881652;  // std dev = 3.664, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   else if ( phenotype(A, G), location(A, H) )
%   | then return 0.09191630642346829;  // std dev = 0.409, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7327299667445833;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1254446385283914;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.556997956280896;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11823976229958677;  // std dev = 4.422, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.6739974753043557;  // std dev = 0.108, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14319797568593315;  // std dev = 0.144, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( recursion_proteinclass(D, B), location(D, C) )
%   | | | then return 0.6716291146019587;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14241523017970392;  // std dev = 4.428, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then return 0.0906344743401574;  // std dev = 0.412, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7038449731342202;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1435094473692274;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14570280533287425;  // std dev = 3.115, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.05272740969703873;  // std dev = 1.396, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.42006741788631097;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return 0.45340930589082573;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6602185392474564;  // std dev = 0.207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5728854808938467;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.16505140336792917;  // std dev = 0.105, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.037711256189716505;  // std dev = 2.870, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.12160871646226135;  // std dev = 5.753, 166.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=55 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5502730453473775;  // std dev = 0.236, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return -0.18008702104648913;  // std dev = 0.359, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(F, H), complex(H, I) )
%   | | then if ( complex(F, I), enzyme(F, J) )
%   | | | then return 0.2836350848111157;  // std dev = 1.168, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0853495200209012;  // std dev = 2.126, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( location(A, K), location(F, K) )
%   | | | then return 0.42415490565602737;  // std dev = 1.371, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.13310805044014967;  // std dev = 1.275, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.40320349050122434;  // std dev = 0.237, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.11985074351195685;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.117373439877429;  // std dev = 4.622, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.248072737088931;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.43133639429132753;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(A, H) )
%   | | then if ( interaction(E, H) )
%   | | | then return -0.04074133443675955;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.11542263420876879;  // std dev = 1.366, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( interaction(I, E), enzyme(I, F) )
%   | | | then return -0.06569262721369824;  // std dev = 0.732, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07488168168847323;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1513678799745557;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.03661180884497847;  // std dev = 2.472, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.07275737423848387;  // std dev = 5.454, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.00769943985331491;  // std dev = 0.331, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   else if ( interaction(D, A) )
%   | then if ( complex(D, E), interaction(F, D) )
%   | | then if ( interaction(D, D) )
%   | | | then return -0.0023910203067548956;  // std dev = 1.332, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2272539537863809;  // std dev = 1.805, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, G), location(D, H) )
%   | | | then return -0.06861556136313676;  // std dev = 1.626, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.016013722873459594;  // std dev = 2.873, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.10163523178205743;  // std dev = 1.451, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3731070644818353;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.04697673226030007;  // std dev = 1.682, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2467964862567098;  // std dev = 0.997, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.20377436399516347;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3359763546634913;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.23890275785277842;  // std dev = 1.011, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.34449317322967077;  // std dev = 0.595, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07562902823091712;  // std dev = 2.807, 92.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=13 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), complex(A, I) )
%   | | | then return -0.12262199767653281;  // std dev = 0.712, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.03016721017564642;  // std dev = 2.871, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return -0.00998889927014579;  // std dev = 1.876, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.08398006926038461;  // std dev = 4.201, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), enzyme(E, F) )
%   | then return 0.08648533250192637;  // std dev = 0.319, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | else if ( enzyme(A, G), interaction(H, D) )
%   | | then return 0.12248595848994896;  // std dev = 0.343, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.015309380593789862;  // std dev = 0.319, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( phenotype(A, I), location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), interaction(A, L) )
%   | | | then return 0.5695737130053173;  // std dev = 0.570, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.16551341947176426;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return -0.24536791913445888;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.3205151102456664;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.007404802914774801;  // std dev = 3.217, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.10054113787821271;  // std dev = 2.951, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.16807584815712878;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(E, F) )
%   | | | then return 0.03041734379641042;  // std dev = 1.656, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.1065662713243041;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( complex(C, G), enzyme(A, H) )
%   | | then return 0.015156293391897202;  // std dev = 0.300, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( location(A, I), location(C, I) )
%   | | | then return 0.14684657843812488;  // std dev = 1.667, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.06787735040264674;  // std dev = 2.176, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.1704552604196477;  // std dev = 0.207, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return -0.03455598607771702;  // std dev = 0.346, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | else return 0.023690194070222673;  // std dev = 0.418, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.886', 'seconds']
Refined model CLL: -0.270965


******************************************
Best model found
******************************************
Results 

CLL : -0.277929 

AUC ROC : 0.922185 

AUC PR : 0.189746 

Precision : 0.237918 

Recall : 0.462094 

F1 : 0.31411 

Total Learning Time : 17.647 

Total Inference Time : 10.148160934448242 

Total revision time: 35.593787109375
Best scored revision CLL: -0.270965


Results 

CLL : -0.277929 

AUC ROC : 0.922185 

AUC PR : 0.189746 

Precision : 0.237918 

Recall : 0.462094 

F1 : 0.31411 

Total Learning Time : 35.7052430267334 

Total Inference Time : 10.148160934448242 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.212
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22255571476052957;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19247862549387704;  // std dev = 4.221, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return 0.14578215256789806;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09054222395631566;  // std dev = 4.472, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0.13246947455155236;  // std dev = 6.244, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.08489496047928939;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.1107248169262569;  // std dev = 7.206, 237.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08970563899440409;  // std dev = 7.632, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08116809466117232;  // std dev = 7.585, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7413105512144872;  // std dev = 0.010, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.25830084921031204;  // std dev = 0.012, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.03677378908497929;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.09230186106419513;  // std dev = 5.005, 109.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036622529173468574;  // std dev = 3.471, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.037095817663743355;  // std dev = 6.279, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023763470091417757;  // std dev = 7.206, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03116120321199333;  // std dev = 7.116, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.120', 'seconds']
Parameter learned model CLL:-0.333223 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.393, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.221, 49, 28], 'false,false,false,false': [6.294, 125, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.472, 70, 28], 'false,false,false,false': [6.244, 119, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.51, 21, 9], 'false,false,false,false': [7.206, 160, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.632, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.585, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 28], 'true,false': [0.012, 49, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [5.005, 70, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.471, 60, 28], 'false,false,false,false': [6.279, 123, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.206, 187, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.116, 179, 86]}]
{'': [nan, 0.23161447859810488], 'false': [nan, 0.23161447859810458], 'false,false': [nan, 0.23161447859810488], 'false,false,false': [nan, 0.23161447859810458]}
{'': [nan, 0.22136094674556178], 'false': [nan, 0.2213609467455623], 'false,false': [nan, 0.22136094674556178], 'false,false,false': [0.23140495867768662, 0.21648899638687333]}
{'': [nan, 0.21491501617388814], 'false': [nan, 0.21491501617388814], 'false,false': [nan, 0.2149150161738888], 'false,false,false': [0.20407189334079565, 0.22029210348949793]}
{'': [nan, 0.21816288426502975], 'false': [nan, 0.21816288426502975], 'false,false': [nan, 0.21816288426503028], 'false,false,false': [0.2099999999999997, 0.21912119654258136]}
{'': [nan, 0.21896092808380363], 'false': [nan, 0.21896092808380363], 'false,false': [nan, 0.21896092808380435], 'false,false,false': [nan, 0.21896092808380435]}
{'': [nan, 0.2212625689449328], 'false': [nan, 0.2212625689449328], 'false,false': [nan, 0.22126256894493176], 'false,false,false': [nan, 0.22126256894493218]}
{'': [0.23122820075901537, 0.22499079228623609], 'true': [3.505012987720895e-06, 2.797652089765366e-06], 'false': [nan, 0.22499079228623609], 'false,false': [nan, 0.22499079228623609], 'false,false,false': [0.2144584789035202, 0.22977863816177102], 'true,true': [nan, 3.505012987720895e-06], 'true,true,false': [nan, 3.505012987720895e-06]}
{'': [nan, 0.19132607129808996], 'false': [nan, 0.19132607129808996], 'false,false': [nan, 0.1913260712980904], 'false,false,false': [0.1368878952606089, 0.21779317752856306]}
{'': [nan, 0.1901857426887032], 'false': [nan, 0.19018574268870353], 'false,false': [nan, 0.19018574268870353], 'false,false,false': [nan, 0.19018574268870353]}
{'': [nan, 0.19106278429013496], 'false': [nan, 0.19106278429013496], 'false,false': [nan, 0.19106278429013504], 'false,false,false': [nan, 0.19106278429013504]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.213
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11901850031690367;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10304689428318578;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1968586125188659;  // std dev = 5.270, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.3861400788776212;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.729832666771678;  // std dev = 0.080, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.13279938541546787;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1517208325304172;  // std dev = 1.745, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(A, I), complex(H, J) )
%   | | | then return 0.18991357976656206;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.07997104398366138;  // std dev = 4.002, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.167951302307171;  // std dev = 4.545, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6910473071063536;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, C), interaction(F, A) )
%   | | then return -0.0799094639302774;  // std dev = 0.281, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.8131653767769706;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22957114135124151;  // std dev = 2.121, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.60879868354123;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.09517262604257772;  // std dev = 0.424, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( interaction(A, K) )
%   | | then return 0.05655625557039849;  // std dev = 0.410, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6507591152298267;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11080650373818819;  // std dev = 4.098, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4164073092795189;  // std dev = 0.228, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.03491774954016734;  // std dev = 1.656, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return -0.1484014958711028;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(D, H), location(A, I) )
%   | | | then return 0.04173813737174575;  // std dev = 2.303, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.30908626167683206;  // std dev = 1.498, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8025365180557752;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18273430769544674;  // std dev = 0.140, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.23060310969605713;  // std dev = 3.965, 67.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=31 */
%   | | | else return 0.13447447843378632;  // std dev = 3.252, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(A, D), phenotype(C, F) )
%   | | | then return 0.3983787413139483;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5520031542797204;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3471480681752701;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11020081333865783;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.10226671061313299;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6200551924162946;  // std dev = 0.334, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.002974776298016739;  // std dev = 4.661, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.19398082077457332;  // std dev = 2.031, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.07158069343826813;  // std dev = 4.023, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.32482470374711114;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6141338106225743;  // std dev = 0.381, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7876010472940151;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return -0.3652750136607176;  // std dev = 0.072, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.18992676355775776;  // std dev = 0.051, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( location(A, K) )
%   | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | then if ( interaction(A, M), interaction(L, M) )
%   | | | then return 0.5818427887270643;  // std dev = 1.285, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.19615461994301164;  // std dev = 3.590, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | | else return -0.22695986264160461;  // std dev = 0.062, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return 0.23480293507885439;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.46397575224227133;  // std dev = 0.200, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.18973024393456503;  // std dev = 0.086, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(E, G), interaction(E, A) )
%   | | then return -0.14813344459515207;  // std dev = 0.538, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.27637578251523254;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.03459670843641821;  // std dev = 1.717, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then if ( location(A, J), enzyme(I, K) )
%   | | | then return 0.20193782402071134;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.03407296351353635;  // std dev = 4.148, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.205750023020811;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3785455482587396;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.27141040223410884;  // std dev = 0.169, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, E), interaction(D, E) )
%   | | then return -0.10812810913747736;  // std dev = 0.236, 60.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=7 */
%   | | else if ( enzyme(D, F), complex(C, G) )
%   | | | then return 0.20986919798165804;  // std dev = 1.207, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.005807677860841694;  // std dev = 3.318, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.6201129511962453;  // std dev = 0.623, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.18770483867460286;  // std dev = 1.849, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | else return -0.18289936404017795;  // std dev = 0.235, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, K) )
%   | | then return -0.010285101648896325;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.15837712983187244;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17307049630164334;  // std dev = 0.086, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), enzyme(H, G) )
%   | | | then return -0.09991855686106023;  // std dev = 1.618, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.0490888518446876;  // std dev = 0.793, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.050690058715112604;  // std dev = 1.403, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.13919216863008052;  // std dev = 1.155, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5603124183907625;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13947264968563963;  // std dev = 0.171, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return -0.09206763446512076;  // std dev = 0.729, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.009439641694799767;  // std dev = 4.348, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), phenotype(D, F) )
%   | then return -0.11972023929122251;  // std dev = 0.244, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else return -0.008303583131409643;  // std dev = 0.251, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( phenotype(G, I), recursion_proteinclass(H, B) )
%   | | then return 0.3076318599214848;  // std dev = 0.144, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(H, J), phenotype(H, K) )
%   | | | then return -0.1333829528158987;  // std dev = 1.144, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | | else return 0.023342692746459948;  // std dev = 2.686, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.4747235637718973;  // std dev = 0.931, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.21063948506109034;  // std dev = 0.199, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.10690830478364413;  // std dev = 2.379, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.2090429931235368;  // std dev = 1.193, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.101', 'seconds']
Refined model CLL: -0.227883


******************************************
Best model found
******************************************
Results 

CLL : -0.245999 

AUC ROC : 0.969709 

AUC PR : 0.246711 

Precision : 0.234007 

Recall : 0.491166 

F1 : 0.31699 

Total Learning Time : 21.213 

Total Inference Time : 12.536444187164307 

Total revision time: 41.24323301315307
Best scored revision CLL: -0.227883


Results 

CLL : -0.245999 

AUC ROC : 0.969709 

AUC PR : 0.246711 

Precision : 0.234007 

Recall : 0.491166 

F1 : 0.31699 

Total Learning Time : 41.35468893051147 

Total Inference Time : 12.536444187164307 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.346
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2020224528860736;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16506886294421727;  // std dev = 5.416, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.17850972315927113;  // std dev = 5.300, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13347601349068483;  // std dev = 4.854, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.11957020367125781;  // std dev = 5.975, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11360833942254656;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.11143466575069659;  // std dev = 6.723, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09483514275966037;  // std dev = 7.645, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11625176909578572;  // std dev = 7.421, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6973488583987766;  // std dev = 0.985, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.27506058823364227;  // std dev = 0.009, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.014963531480924124;  // std dev = 4.140, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.0722662680461941;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.035276592410233676;  // std dev = 3.840, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.02071959117083674;  // std dev = 6.026, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05313687759974181;  // std dev = 6.948, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008586763486488853;  // std dev = 7.141, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.363', 'seconds']
Parameter learned model CLL:-0.328179 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.416, 88, 44], 'false,false,false,false': [5.3, 81, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.854, 72, 35], 'false,false,false,false': [5.975, 114, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [6.723, 139, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.645, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.421, 150, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.985, 1, 35], 'true,false': [0.009, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.14, 60, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.84, 72, 35], 'false,false,false,false': [6.026, 120, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.948, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.141, 193, 87]}]
{'': [nan, 0.22562452155165771], 'false': [nan, 0.22562452155165766], 'false,false': [nan, 0.22562452155165771], 'false,false,false': [nan, 0.22562452155165766]}
{'': [nan, 0.22434997558593894], 'false': [nan, 0.2243499755859379], 'false,false': [nan, 0.22434997558593894], 'false,false,false': [0.22222222222222246, 0.22652185223725307]}
{'': [nan, 0.21711027182440928], 'false': [nan, 0.21711027182440928], 'false,false': [nan, 0.217110271824409], 'false,false,false': [0.2201608271343119, 0.21506815971507792]}
{'': [nan, 0.21962440477176473], 'false': [nan, 0.21962440477176473], 'false,false': [nan, 0.21962440477176437], 'false,false,false': [0.22037086804622397, 0.21940228521416474]}
{'': [nan, 0.2205585134810677], 'false': [nan, 0.2205585134810677], 'false,false': [nan, 0.22055851348106728], 'false,false,false': [nan, 0.22055851348106728]}
{'': [nan, 0.2323590362459077], 'false': [nan, 0.2323590362459077], 'false,false': [nan, 0.2323590362459068], 'false,false,false': [nan, 0.2323590362459077]}
{'': [0.23172940444854442, 0.2157530222424381], 'true': [0.02695539291318758, 1.261907272024724e-06], 'false': [nan, 0.2157530222424381], 'false,false': [nan, 0.2157530222424381], 'false,false,false': [0.2040816326530614, 0.22618503276939525], 'true,true': [nan, 0.02695539291318758], 'true,true,false': [nan, 0.02695539291318758]}
{'': [nan, 0.1830402387620929], 'false': [nan, 0.1830402387620929], 'false,false': [nan, 0.18304023876209272], 'false,false,false': [0.1378121481124543, 0.21109504969176207]}
{'': [nan, 0.19153988655764764], 'false': [nan, 0.1915398865576485], 'false,false': [nan, 0.1915398865576485], 'false,false,false': [nan, 0.1915398865576485]}
{'': [nan, 0.1821434968259818], 'false': [nan, 0.1821434968259818], 'false,false': [nan, 0.1821434968259813], 'false,false,false': [nan, 0.1821434968259813]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.367
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( enzyme(C, E), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, D), interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( location(A, D) )
%   | | | then return 0.23128326345772016;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I), enzyme(G, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17438825133882793;  // std dev = 5.030, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.740337125562719;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1458961471057039;  // std dev = 0.144, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.0856651080860467;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.49426725862368115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5776005919570145;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.005504829624352474;  // std dev = 2.007, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17975983389496591;  // std dev = 5.818, 148.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=53 */
%   | | | else return 0.12442468946133586;  // std dev = 1.850, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( location(A, D), recursion_proteinclass(C, B) )
%   | then return 0.4978231646737814;  // std dev = 0.281, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.017720609031289945;  // std dev = 0.404, 157.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=34 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( phenotype(E, G), phenotype(A, G) )
%   | | | then return 0.14269255192258198;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.015052462376655971;  // std dev = 1.556, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7974475376233441;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21181710312791513;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6818075903825479;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.12157943501855561;  // std dev = 3.317, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.2293706248494906;  // std dev = 3.045, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.4830036585004889;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12421239476073923;  // std dev = 0.137, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.49605586912113375;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(E, F), complex(A, F) )
%   | | | then return -0.12594445157558576;  // std dev = 0.592, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1627040229627025;  // std dev = 4.259, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.615833688761166;  // std dev = 0.965, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.01359135761489688;  // std dev = 1.980, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.11998440999613764;  // std dev = 3.040, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.05496744869087839;  // std dev = 3.628, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.3392832037081888;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4487567397400726;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.6350190016531803;  // std dev = 0.276, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7853416274036339;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.2167770528306534;  // std dev = 0.120, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.44486233297624533;  // std dev = 4.100, 86.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   | | | else return -0.21444669162381294;  // std dev = 0.501, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.0620107846767283;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.11359162369703639;  // std dev = 1.285, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( enzyme(C, E), complex(C, F) )
%   | then return -0.05262191065663953;  // std dev = 0.300, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( complex(A, G), phenotype(C, H) )
%   | | then if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | | then return 0.4377902801107393;  // std dev = 0.929, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05727038193963204;  // std dev = 2.724, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.31179215876453115;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.022184032279188283;  // std dev = 4.930, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   else if ( interaction(A, K), interaction(K, K) )
%   | then return 0.04620750794152135;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.45742993155627976;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.19091748519452478;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05480854910954966;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5370837814158101;  // std dev = 0.155, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2019919148232955;  // std dev = 0.066, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.5949261741575087;  // std dev = 0.333, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.39409157524581157;  // std dev = 1.270, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.22843941078298594;  // std dev = 0.053, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( enzyme(A, H), interaction(A, A) )
%   | | then if ( location(A, I) )
%   | | | then return 0.00504575847801271;  // std dev = 0.304, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0845931254372296;  // std dev = 0.432, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.08644008471152913;  // std dev = 3.628, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.2898752877448044;  // std dev = 1.231, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(C, E), location(A, F) )
%   | then return 0.03653173121608271;  // std dev = 0.320, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
%   | else if ( interaction(G, C), interaction(H, G) )
%   | | then if ( interaction(C, H), enzyme(G, I) )
%   | | | then return 0.15807525164372735;  // std dev = 1.537, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.061089806090188735;  // std dev = 2.662, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( interaction(C, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6253023751027417;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24632356811550404;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( phenotype(A, K) )
%   | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | then return 0.4520704730787073;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.24257716155442538;  // std dev = 0.226, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, M) )
%   | | then return -0.027566606752663647;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09664087970889171;  // std dev = 0.352, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(A, E), enzyme(C, F) )
%   | then return -0.013816889114213617;  // std dev = 0.275, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.4043170112332778;  // std dev = 0.273, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12437797792460113;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.1231801304948505;  // std dev = 2.327, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then return 0.06856547406821624;  // std dev = 0.288, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.11397309714590398;  // std dev = 1.099, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.19059405710551344;  // std dev = 1.189, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( interaction(A, M), location(M, N) )
%   | | | then return -0.02549005819154041;  // std dev = 1.739, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.02185036514285744;  // std dev = 3.215, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F), location(E, C) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.1824713950178929;  // std dev = 0.728, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.03276598598980056;  // std dev = 1.853, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.24856088667766005;  // std dev = 0.670, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.06498267434662128;  // std dev = 2.006, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( location(J, C), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.49558125046766205;  // std dev = 1.079, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.1596973445913111;  // std dev = 1.457, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return -0.21451111104639167;  // std dev = 0.044, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, L), interaction(L, A) )
%   | then return 0.058636686693085034;  // std dev = 0.666, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3133738467594194;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '13.491', 'seconds']
Refined model CLL: -0.243904


******************************************
Best model found
******************************************
Results 

CLL : -0.232771 

AUC ROC : 0.985354 

AUC PR : 0.319526 

Precision : 0.249275 

Recall : 0.609929 

F1 : 0.353909 

Total Learning Time : 26.367 

Total Inference Time : 16.57903289794922 

Total revision time: 51.111792028427125
Best scored revision CLL: -0.243904


Results 

CLL : -0.232771 

AUC ROC : 0.985354 

AUC PR : 0.319526 

Precision : 0.249275 

Recall : 0.609929 

F1 : 0.353909 

Total Learning Time : 51.16006606864929 

Total Inference Time : 16.57903289794922 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.553
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19691115008322618;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18861403544200384;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.18861403544200384;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10157222936511352;  // std dev = 5.368, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
%   | | | else return 0.13259578008975123;  // std dev = 6.506, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13739604841773553;  // std dev = 4.344, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.11258832800230649;  // std dev = 7.094, 228.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0920498716133009;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06412886918382325;  // std dev = 8.427, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7362481371727474;  // std dev = 0.014, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.263704054314638;  // std dev = 0.019, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.062200152686176735;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.05362872411474814;  // std dev = 5.215, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.053655175905613466;  // std dev = 4.106, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.05396366064502755;  // std dev = 6.489, 190.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028927152904545592;  // std dev = 7.743, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026222571638523956;  // std dev = 7.722, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.160', 'seconds']
Parameter learned model CLL:-0.326532 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.786, 94, 52], 'false,false,false,false': [5.786, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.368, 97, 41], 'false,false,false,false': [6.506, 129, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.344, 54, 29], 'false,false,false,false': [7.094, 153, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.427, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 41], 'true,false': [0.019, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.93, 47, 23], 'false,false,false,false': [5.215, 85, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.106, 78, 41], 'false,false,false,false': [6.489, 127, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.743, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.722, 218, 104]}]
{'': [nan, 0.22400237668304385], 'false': [nan, 0.22400237668304232], 'false,false': [nan, 0.22400237668304385], 'false,false,false': [nan, 0.22400237668304232]}
{'': [nan, 0.22931131544379604], 'false': [nan, 0.22931131544379793], 'false,false': [nan, 0.22931131544379604], 'false,false,false': [0.2293113154437972, 0.2293113154437972]}
{'': [nan, 0.21583103764922393], 'false': [nan, 0.21583103764922393], 'false,false': [nan, 0.21583103764921843], 'false,false,false': [0.20883217811384058, 0.2204589843749989]}
{'': [nan, 0.22260289996657803], 'false': [nan, 0.22260289996657803], 'false,false': [nan, 0.22260289996657803], 'false,false,false': [0.227318914211062, 0.22072186058600815]}
{'': [nan, 0.22044344661965737], 'false': [nan, 0.22044344661965737], 'false,false': [nan, 0.22044344661965798], 'false,false,false': [nan, 0.22044344661965798]}
{'': [nan, 0.2164885577098841], 'false': [nan, 0.2164885577098841], 'false,false': [nan, 0.21648855770988318], 'false,false,false': [nan, 0.21648855770988396]}
{'': [0.2276110990215912, 0.2186982248520712], 'true': [4.780722170962219e-06, 4.8736966730893685e-06], 'false': [nan, 0.2186982248520712], 'false,false': [nan, 0.2186982248520712], 'false,false,false': [0.2206122448979595, 0.2176000000000003], 'true,true': [nan, 4.780722170962219e-06], 'true,true,false': [nan, 4.780722170962219e-06]}
{'': [nan, 0.19083604632991508], 'false': [nan, 0.19083604632991508], 'false,false': [nan, 0.1908360463299152], 'false,false,false': [0.14165504319088693, 0.22163884848957316]}
{'': [nan, 0.18389268517516505], 'false': [nan, 0.18389268517516474], 'false,false': [nan, 0.18389268517516474], 'false,false,false': [nan, 0.18389268517516474]}
{'': [nan, 0.18518835360285502], 'false': [nan, 0.18518835360285502], 'false,false': [nan, 0.1851883536028547], 'false,false,false': [nan, 0.1851883536028547]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 34.648
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7812258581764345;  // std dev = 1.664, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( complex(A, I), interaction(A, A) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.16814893509951098;  // std dev = 4.625, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, A) )
%   | then return 0.5604369136311727;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8113286986864694;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7491385773484672;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return -0.0316492320016992;  // std dev = 1.978, 52.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | | else return 0.0984679042960854;  // std dev = 1.601, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.735875837400709;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.07903621610705447;  // std dev = 3.567, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.15476850648609147;  // std dev = 4.999, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6783183587851097;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.15335383502452946;  // std dev = 0.125, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I), phenotype(F, J) )
%   | | | then return -0.015483896155270608;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6244467449504987;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5731232411144115;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then if ( complex(K, L), interaction(K, K) )
%   | | | then return -0.1647506369422467;  // std dev = 0.130, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.10684162070088112;  // std dev = 2.969, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.036845211008362376;  // std dev = 1.624, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.12918013890903507;  // std dev = 5.557, 168.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=54 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(C, E) )
%   | then return 0.1150281630093825;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F), complex(C, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5195767964026794;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.42138175394749106;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3188448218265154;  // std dev = 0.575, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.24058167959742116;  // std dev = 0.552, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6122897383236138;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14536174150570508;  // std dev = 0.031, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.03943936108209399;  // std dev = 3.336, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | | | else return 0.10273264050806413;  // std dev = 5.658, 185.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), complex(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.38599264371261244;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6212430894222205;  // std dev = 0.490, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.15680197415018315;  // std dev = 0.230, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.0626509793508654;  // std dev = 5.121, 177.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=53 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.33622775205968053;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(C, G), complex(A, H) )
%   | | | then return -0.15307979466628033;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.023345843497741815;  // std dev = 3.307, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   else if ( phenotype(A, I) )
%   | then return 0.3655935600123903;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.029619898647994483;  // std dev = 0.634, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3590233824874149;  // std dev = 0.092, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5000905887973534;  // std dev = 0.729, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.13370055941303918;  // std dev = 0.140, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.13330694735707582;  // std dev = 0.602, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0859879681485516;  // std dev = 1.521, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3610090321190117;  // std dev = 3.977, 94.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=64 */
%   | | | else return -0.17993594460068799;  // std dev = 0.369, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.03140956657100908;  // std dev = 1.558, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.03542341257589611;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40114564889762966;  // std dev = 0.157, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.13874239216870107;  // std dev = 0.041, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(E, G), interaction(H, A) )
%   | | then if ( complex(E, I), interaction(A, H) )
%   | | | then return -0.020276281336022002;  // std dev = 0.612, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.02839191404607649;  // std dev = 1.488, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.09805821936993636;  // std dev = 0.488, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07999080335903871;  // std dev = 0.670, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2413398248815142;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.005290731488054655;  // std dev = 1.238, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.076512247513941;  // std dev = 4.548, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), location(F, D) )
%   | | then return 0.17922931149095778;  // std dev = 0.304, 42.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | else return 0.4494317367534489;  // std dev = 0.244, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return -0.1563806522635454;  // std dev = 0.074, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5328157019096773;  // std dev = 0.202, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.188310383235246;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K), interaction(I, A) )
%   | | | then return -0.003098429245074877;  // std dev = 0.592, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17789495628636176;  // std dev = 1.588, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.00857049415447492;  // std dev = 1.972, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.032577905607640484;  // std dev = 2.074, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, F) )
%   | | | then return 0.23353481141477123;  // std dev = 1.132, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.10812395024540478;  // std dev = 2.019, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( interaction(A, H), interaction(I, D) )
%   | | | then return 0.08101396376344919;  // std dev = 1.853, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.38467884961661086;  // std dev = 1.943, 48.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   | else return -0.1397747327974176;  // std dev = 0.047, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( complex(J, L) )
%   | | then if ( interaction(J, M), recursion_proteinclass(M, B) )
%   | | | then return 0.4195412556019268;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.17865397502079125;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.016538900647034987;  // std dev = 0.845, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.4341564605111185;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return 0.00460116659114399;  // std dev = 0.159, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.11495128883336285;  // std dev = 0.217, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else return -0.03406321695431666;  // std dev = 0.229, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( interaction(A, G), location(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.22568246602690445;  // std dev = 0.275, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(G, I), interaction(G, J) )
%   | | | then return 0.03753696394026106;  // std dev = 2.103, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.056086094344365206;  // std dev = 0.667, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15531308524388063;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.036963206514862415;  // std dev = 2.269, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.006679262338049079;  // std dev = 2.828, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '26.960', 'seconds']
Refined model CLL: -0.189682


******************************************
Best model found
******************************************
Results 

CLL : -0.193094 

AUC ROC : 0.985277 

AUC PR : 0.429025 

Precision : 0.324376 

Recall : 0.637736 

F1 : 0.430025 

Total Learning Time : 34.648 

Total Inference Time : 32.8228919506073 

Total revision time: 76.64632084465028
Best scored revision CLL: -0.189682


Results 

CLL : -0.193094 

AUC ROC : 0.985277 

AUC PR : 0.429025 

Precision : 0.324376 

Recall : 0.637736 

F1 : 0.430025 

Total Learning Time : 76.69459488487244 

Total Inference Time : 32.8228919506073 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.322
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.180955952643372;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17241159443013104;  // std dev = 5.812, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
%   | | | else return 0.1911849891897036;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.20818241099183285;  // std dev = 5.139, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   | | | else return 0.12185374249708354;  // std dev = 5.739, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1129564440689532;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.14884774253383778;  // std dev = 6.474, 181.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06765242947984726;  // std dev = 7.965, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053618736711702926;  // std dev = 7.969, 298.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7274445170740402;  // std dev = 0.035, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27384801671822895;  // std dev = 0.051, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05812440077958168;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.0865403545128686;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02750637044694722;  // std dev = 4.311, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.07917396652941329;  // std dev = 5.570, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027482147545998287;  // std dev = 7.145, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020393022591523934;  // std dev = 7.150, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.158', 'seconds']
Parameter learned model CLL:-0.319725 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.893, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.812, 100, 51], 'false,false,false,false': [5.136, 74, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.139, 66, 44], 'false,false,false,false': [5.739, 105, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 51, 26], 'false,false,false,false': [6.474, 115, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.965, 204, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.969, 206, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.035, 0, 44], 'true,false': [0.051, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [3.871, 43, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.311, 94, 44], 'false,false,false,false': [5.57, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.145, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.15, 195, 92]}]
{'': [nan, 0.21860264696829915], 'false': [nan, 0.21860264696829887], 'false,false': [nan, 0.21860264696829915], 'false,false,false': [nan, 0.21860264696829887]}
{'': [nan, 0.2262422974730096], 'false': [nan, 0.2262422974730048], 'false,false': [nan, 0.2262422974730096], 'false,false,false': [0.22367440024560203, 0.22941398865784424]}
{'': [nan, 0.22746667363415476], 'false': [nan, 0.22746667363415476], 'false,false': [nan, 0.22746667363415563], 'false,false,false': [0.24008681082537456, 0.21527629903785436]}
{'': [nan, 0.22947538515408014], 'false': [nan, 0.22947538515408014], 'false,false': [nan, 0.2294753851540803], 'false,false,false': [0.22364648338674353, 0.2315706252908579]}
{'': [nan, 0.21432827472179553], 'false': [nan, 0.21432827472179553], 'false,false': [nan, 0.21432827472179478], 'false,false,false': [nan, 0.21432827472179478]}
{'': [nan, 0.21309373924343758], 'false': [nan, 0.21309373924343758], 'false,false': [nan, 0.21309373924343875], 'false,false,false': [nan, 0.21309373924343797]}
{'': [0.22198228181340163, 0.2213964928188829], 'true': [2.851923326337284e-05, 2.94011610033443e-05], 'false': [nan, 0.2213964928188829], 'false,false': [nan, 0.2213964928188829], 'false,false,false': [0.21631148854350268, 0.22704315886134033], 'true,true': [nan, 2.851923326337284e-05], 'true,true,false': [nan, 2.851923326337284e-05]}
{'': [nan, 0.18174579230969837], 'false': [nan, 0.18174579230969837], 'false,false': [nan, 0.1817457923097003], 'false,false,false': [0.13469542741818227, 0.22814356124102037]}
{'': [nan, 0.17847567224585412], 'false': [nan, 0.1784756722458542], 'false,false': [nan, 0.1784756722458542], 'false,false,false': [nan, 0.1784756722458542]}
{'': [nan, 0.178134655367333], 'false': [nan, 0.178134655367333], 'false,false': [nan, 0.17813465536733256], 'false,false,false': [nan, 0.17813465536733256]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.14
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then return 0.11814893509951237;  // std dev = 0.439, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1914822684328457;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.2391013160518933;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.21109011157010057;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.13087620782678508;  // std dev = 4.178, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8370569523524525;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.059687232050450297;  // std dev = 0.417, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.8164254729273198;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15685051293530136;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3380200175615915;  // std dev = 1.730, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8329450653192493;  // std dev = 0.025, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.16731106379006483;  // std dev = 0.031, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.21418446073805814;  // std dev = 3.430, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.13318048537728563;  // std dev = 4.074, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), phenotype(D, F) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.10545881079662749;  // std dev = 0.414, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7382285068413257;  // std dev = 0.204, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1461026215499817;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.07698746755245822;  // std dev = 0.422, 96.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7140393008926083;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J), phenotype(I, J) )
%   | | | then return -0.05146069427774372;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10426524040105362;  // std dev = 2.352, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1026632021708387;  // std dev = 2.867, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.19255015898273614;  // std dev = 4.021, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), phenotype(A, D) )
%   | then return 0.6086907557127255;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return 0.6702527977054936;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, E), interaction(F, C) )
%   | | | then return 0.7541504710655288;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8020960222321019;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5709088913161784;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( enzyme(H, J), complex(H, I) )
%   | | | then return -0.1310791367614622;  // std dev = 0.976, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.052177992926547866;  // std dev = 3.121, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.15035549659479497;  // std dev = 3.448, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.059464230521769024;  // std dev = 4.813, 134.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.48250193886990933;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.16766393266891452;  // std dev = 0.012, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.3717299603827699;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08417224218092506;  // std dev = 1.136, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.45203782511495705;  // std dev = 0.259, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.021500999112239617;  // std dev = 1.849, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.08685245368059946;  // std dev = 2.636, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.17037155024783188;  // std dev = 3.455, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return 0.09109815894538252;  // std dev = 4.659, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4190419186837335;  // std dev = 0.247, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), phenotype(A, G) )
%   | | then if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.17285186770740968;  // std dev = 1.274, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.051816927124260156;  // std dev = 2.024, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(D, J) )
%   | | | then return 0.2456756909974769;  // std dev = 2.566, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.04020793244500839;  // std dev = 1.175, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( complex(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.6416043196473122;  // std dev = 0.426, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.19921959171774353;  // std dev = 0.206, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(N, A), complex(A, P) )
%   | | | then return -0.029670899869184864;  // std dev = 1.679, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.03210697831928119;  // std dev = 4.737, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.3336391829193067;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.7262648644248143;  // std dev = 0.275, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5241978476158137;  // std dev = 0.635, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.21351345219700238;  // std dev = 0.056, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.36943799328671856;  // std dev = 1.041, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.293128697892546;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.29729191374366576;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.022576284412978227;  // std dev = 1.397, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.09307172199705473;  // std dev = 4.741, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2564345803603139;  // std dev = 0.213, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(D, F), location(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11676214003190108;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03027066768908665;  // std dev = 2.884, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.6024424770035177;  // std dev = 0.409, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.24986459165570712;  // std dev = 0.310, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( complex(A, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.038451010570997306;  // std dev = 0.902, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.006611876490672628;  // std dev = 2.123, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.17128865156559572;  // std dev = 2.140, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.06441231118783962;  // std dev = 3.674, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.44105340261842846;  // std dev = 0.188, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.2135176200891461;  // std dev = 0.070, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then return 0.013571684978034475;  // std dev = 0.320, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( interaction(E, I), enzyme(I, J) )
%   | | | then return 0.03125265579027229;  // std dev = 0.615, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10332403789497362;  // std dev = 1.905, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.40280538427667156;  // std dev = 1.322, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.21940637171978344;  // std dev = 0.241, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.303820613376091;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1262123340428363;  // std dev = 3.087, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( location(A, D), complex(A, E) )
%   | then return 0.02203698729402406;  // std dev = 0.250, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | else if ( interaction(F, C) )
%   | | then return -0.07370502604434423;  // std dev = 0.357, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   | | else return -0.013921227896675445;  // std dev = 0.329, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.42927314279029627;  // std dev = 0.283, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.20312736504026183;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5509252683568315;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23444603422273916;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.08045321327657061;  // std dev = 1.281, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.0031867857904242384;  // std dev = 1.512, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.438', 'seconds']
Refined model CLL: -0.234118


******************************************
Best model found
******************************************
Results 

CLL : -0.232641 

AUC ROC : 0.974555 

AUC PR : 0.333977 

Precision : 0.3575 

Recall : 0.516245 

F1 : 0.422452 

Total Learning Time : 14.14 

Total Inference Time : 6.712009906768799 

Total revision time: 29.003330814361572
Best scored revision CLL: -0.234118


Results 

CLL : -0.232641 

AUC ROC : 0.974555 

AUC PR : 0.333977 

Precision : 0.3575 

Recall : 0.516245 

F1 : 0.422452 

Total Learning Time : 29.05160485458374 

Total Inference Time : 6.712009906768799 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.133
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17549210853124703;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.12755071668703502;  // std dev = 6.067, 178.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=52 */
%   | | | else return 0.1655129726050016;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16123985549310846;  // std dev = 4.278, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.1686432607372383;  // std dev = 6.120, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12511810725354286;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.15772689396904224;  // std dev = 6.496, 181.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1048344424088897;  // std dev = 7.520, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07447517267831115;  // std dev = 7.583, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.732697917741836;  // std dev = 0.034, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2681625699692222;  // std dev = 0.052, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02398301704665261;  // std dev = 4.825, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | else return 0.06424714574041762;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.018421709288091573;  // std dev = 3.482, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.07772578575669284;  // std dev = 6.095, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05931849237015264;  // std dev = 6.960, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006186648096832816;  // std dev = 7.186, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.508', 'seconds']
Parameter learned model CLL:-0.344567 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.067, 126, 52], 'false,false,false,false': [4.772, 69, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.278, 53, 28], 'false,false,false,false': [6.12, 106, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [6.496, 114, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.52, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.583, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 28], 'true,false': [0.052, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.825, 79, 33], 'false,false,false,false': [4.054, 48, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.482, 65, 28], 'false,false,false,false': [6.095, 103, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.96, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.186, 187, 86]}]
{'': [nan, 0.21663648370801125], 'false': [nan, 0.21663648370801117], 'false,false': [nan, 0.21663648370801125], 'false,false,false': [nan, 0.21663648370801117]}
{'': [nan, 0.21238332847861713], 'false': [nan, 0.21238332847861735], 'false,false': [nan, 0.21238332847861713], 'false,false,false': [0.20679207170811992, 0.22113300028277852]}
{'': [nan, 0.22758443873588674], 'false': [nan, 0.22758443873588674], 'false,false': [nan, 0.2275844387358871], 'false,false,false': [0.22599378900835745, 0.22835194352351515]}
{'': [nan, 0.23069661456033572], 'false': [nan, 0.23069661456033572], 'false,false': [nan, 0.23069661456033605], 'false,false,false': [0.22222222222222288, 0.233110682070351]}
{'': [nan, 0.2252825819172337], 'false': [nan, 0.2252825819172337], 'false,false': [nan, 0.2252825819172337], 'false,false,false': [nan, 0.2252825819172337]}
{'': [nan, 0.2220157775552903], 'false': [nan, 0.2220157775552903], 'false,false': [nan, 0.22201577755529017], 'false,false,false': [nan, 0.22201577755529112]}
{'': [0.21736021181564516, 0.2150637305840763], 'true': [4.214259527600207e-05, 4.567392021850303e-05], 'false': [nan, 0.2150637305840763], 'false,false': [nan, 0.2150637305840763], 'false,false,false': [0.2078284438775521, 0.22518296115593936], 'true,true': [nan, 4.214259527600207e-05], 'true,true,false': [nan, 4.214259527600207e-05]}
{'': [nan, 0.1948028753702273], 'false': [nan, 0.1948028753702273], 'false,false': [nan, 0.19480287537022714], 'false,false,false': [0.1303998724159462, 0.2307168992315084]}
{'': [nan, 0.20183072825499784], 'false': [nan, 0.20183072825499823], 'false,false': [nan, 0.20183072825499823], 'false,false,false': [nan, 0.20183072825499823]}
{'': [nan, 0.1891740414535132], 'false': [nan, 0.1891740414535132], 'false,false': [nan, 0.18917404145351294], 'false,false,false': [nan, 0.18917404145351294]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.818
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.0803711573217346;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.1893591261823139;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A) )
%   | then return 0.5301320478738477;  // std dev = 0.793, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, C), phenotype(A, E) )
%   | | then return 0.43933261569216936;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(C, D) )
%   | | | then return 0.24808102275960012;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1498129106832304;  // std dev = 2.148, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.6480448407823828;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), phenotype(A, I) )
%   | | | then return 0.11496227290862866;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5942437637871817;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04691534838315725;  // std dev = 3.552, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return 0.1578246686382069;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return 0.21061677733276749;  // std dev = 1.174, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.600345115053533;  // std dev = 0.131, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.5921512183722548;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1393867708368048;  // std dev = 0.086, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.18748853341750374;  // std dev = 3.862, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.11686708385118606;  // std dev = 5.304, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( phenotype(A, D), complex(C, E) )
%   | | then return 0.5875355184680625;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.45935397274471407;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return 0.45526008478231633;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09062644702556015;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.12642438966114014;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.446602762698745;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.03198138705312657;  // std dev = 3.438, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return 0.0952621282473017;  // std dev = 5.804, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then return -0.009330920867586277;  // std dev = 0.334, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( phenotype(A, G) )
%   | | then if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | | then return 0.5262842513663732;  // std dev = 0.552, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.021160941210517873;  // std dev = 3.752, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | else if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7320231649021088;  // std dev = 0.560, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.21544961317229355;  // std dev = 0.214, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then return 0.4499030599534018;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.40690196381712823;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.009550285434469568;  // std dev = 2.350, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.11874696881708943;  // std dev = 2.819, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.25536334356522394;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3471731926451525;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.6855794127650217;  // std dev = 0.643, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.2264742602726372;  // std dev = 0.244, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.1957444874891026;  // std dev = 0.238, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6170778831891679;  // std dev = 1.030, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.22813013376902752;  // std dev = 0.164, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.09047178003847771;  // std dev = 3.311, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.019290181700215108;  // std dev = 2.908, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4524200625575287;  // std dev = 0.185, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1681578555875389;  // std dev = 0.042, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | then return 0.4732833638328066;  // std dev = 0.229, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(E, H), phenotype(F, I) )
%   | | | then return 0.0805142773505565;  // std dev = 2.245, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.03155904978717069;  // std dev = 2.660, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return -0.08948545516464362;  // std dev = 0.952, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.22776600401614566;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.2652314057743894;  // std dev = 1.930, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.07762434957432489;  // std dev = 2.036, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.25520855593881475;  // std dev = 0.213, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16615817224467316;  // std dev = 0.068, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(F, C), complex(F, G) )
%   | | | then return 0.09540329496266158;  // std dev = 3.154, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0.002068857686802676;  // std dev = 3.221, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( enzyme(I, J), complex(H, K) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.010022401203190453;  // std dev = 1.021, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.07476581565352716;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, I), complex(A, L) )
%   | | | then return 0.1295405579147153;  // std dev = 0.982, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3459164092908186;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.340215644743707;  // std dev = 1.066, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A), phenotype(A, E) )
%   | then return -0.17018643382859527;  // std dev = 0.288, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( phenotype(C, F), interaction(C, C) )
%   | | then return 0.048321337100261236;  // std dev = 0.771, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(C, G), complex(C, H) )
%   | | | then return -0.013314987957365054;  // std dev = 1.485, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.07274364950148798;  // std dev = 1.274, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   else if ( phenotype(A, I), enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.5107325450191109;  // std dev = 0.171, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.22018741728650784;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then return -0.022089930597864793;  // std dev = 0.236, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.030516068424894724;  // std dev = 3.644, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | | else return 0.09854399087786936;  // std dev = 2.423, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( complex(D, C), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.3093757752902749;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.21322320500595765;  // std dev = 0.139, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.12969797040975276;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.04596186371316415;  // std dev = 0.214, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.18046528927237865;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.08962012666156223;  // std dev = 1.194, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.05128616272403624;  // std dev = 1.280, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.07144715311358575;  // std dev = 2.733, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | | else return 0.007418891252492864;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.634', 'seconds']
Refined model CLL: -0.249965


******************************************
Best model found
******************************************
Results 

CLL : -0.260588 

AUC ROC : 0.957491 

AUC PR : 0.250495 

Precision : 0.271304 

Recall : 0.551237 

F1 : 0.363636 

Total Learning Time : 16.818 

Total Inference Time : 9.282560110092163 

Total revision time: 33.54115989303589
Best scored revision CLL: -0.249965


Results 

CLL : -0.260588 

AUC ROC : 0.957491 

AUC PR : 0.250495 

Precision : 0.271304 

Recall : 0.551237 

F1 : 0.363636 

Total Learning Time : 33.58943393325806 

Total Inference Time : 9.282560110092163 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18277580077115402;  // std dev = 7.665, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15794136887875995;  // std dev = 5.456, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.178411957114054;  // std dev = 5.311, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.07518937112171098;  // std dev = 5.072, 132.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
%   | | | else return 0.14307910481047145;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17001799354592434;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.11438945530436226;  // std dev = 6.721, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09890436887676043;  // std dev = 7.640, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07601954671117177;  // std dev = 7.668, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7137123759104633;  // std dev = 0.989, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2574392702221471;  // std dev = 0.027, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.15010568567846316;  // std dev = 3.751, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
%   | | | else return 0.0505007256696589;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04600433336440283;  // std dev = 3.874, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.010418302441640897;  // std dev = 6.053, 176.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06019923344822259;  // std dev = 6.924, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047374468126557504;  // std dev = 6.934, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.377', 'seconds']
Parameter learned model CLL:-0.336813 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.665, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.456, 92, 44], 'false,false,false,false': [5.311, 82, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.072, 97, 35], 'false,false,false,false': [5.888, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.549, 34, 20], 'false,false,false,false': [6.721, 139, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.64, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.989, 1, 35], 'true,false': [0.027, 66, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.751, 34, 24], 'false,false,false,false': [4.369, 60, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.874, 73, 35], 'false,false,false,false': [6.053, 124, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.924, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.934, 162, 87]}]
{'': [nan, 0.2192442637558485], 'false': [nan, 0.21924426375584855], 'false,false': [nan, 0.2192442637558485], 'false,false,false': [nan, 0.21924426375584855]}
{'': [nan, 0.22222222222222257], 'false': [nan, 0.22222222222222346], 'false,false': [nan, 0.22222222222222257], 'false,false,false': [0.21885813148789027, 0.22566400000000011]}
{'': [nan, 0.2108225830085728], 'false': [nan, 0.2108225830085728], 'false,false': [nan, 0.2108225830085727], 'false,false,false': [0.19486672868541785, 0.22221122487346234]}
{'': [nan, 0.22268977521235736], 'false': [nan, 0.22268977521235736], 'false,false': [nan, 0.22268977521235686], 'false,false,false': [0.23319615912208505, 0.21929296361270176]}
{'': [nan, 0.22112215988830844], 'false': [nan, 0.22112215988830844], 'false,false': [nan, 0.22112215988830833], 'false,false,false': [nan, 0.22112215988830833]}
{'': [nan, 0.21940039716496157], 'false': [nan, 0.21940039716496157], 'false,false': [nan, 0.21940039716496096], 'false,false,false': [nan, 0.21940039716496246]}
{'': [0.2249849610157996, 0.22949799364232532], 'false': [nan, 0.22949799364232532], 'false,false': [nan, 0.22949799364232532], 'false,false,false': [0.24256837098691977, 0.2169421487603304], 'true': [0.027172951009645157, 1.1061094658547756e-05], 'true,true': [nan, 0.027172951009645157], 'true,true,false': [nan, 0.027172951009645157]}
{'': [nan, 0.18213571368861786], 'false': [nan, 0.18213571368861786], 'false,false': [nan, 0.18213571368861764], 'false,false,false': [0.13894247099264143, 0.20815908242073847]}
{'': [nan, 0.1910115756038078], 'false': [nan, 0.19101157560380708], 'false,false': [nan, 0.19101157560380708], 'false,false,false': [nan, 0.19101157560380708]}
{'': [nan, 0.19309801827392106], 'false': [nan, 0.19309801827392106], 'false,false': [nan, 0.19309801827392106], 'false,false,false': [nan, 0.19309801827392106]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.066
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(A, G) )
%   | | then return -0.05094197399139689;  // std dev = 0.287, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( interaction(A, H), complex(E, I) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13474467978036342;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7581489350995116;  // std dev = 1.643, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.16117923812981538;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.2619950889456659;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7438191550040489;  // std dev = 0.132, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7731187437362488;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13970859099380029;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, E), interaction(F, A) )
%   | | | then return 0.21438430294739932;  // std dev = 3.875, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | | else return 0.11939056785360876;  // std dev = 5.496, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.5528337848624674;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.647954610742771;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3289479303064336;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return -0.09458343876999613;  // std dev = 0.313, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(G, G), interaction(A, G) )
%   | | | then return -0.03002780232758353;  // std dev = 0.903, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.10595670997827016;  // std dev = 3.901, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4783877102287087;  // std dev = 3.552, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | | | else return -0.1657825201918944;  // std dev = 0.248, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0.3101666315728246;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4216421552067598;  // std dev = 0.798, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.6774019323660605;  // std dev = 1.453, 69.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.2207058809218939;  // std dev = 0.314, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.23623696360670815;  // std dev = 1.296, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then return -0.14059788090196745;  // std dev = 0.207, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.18794730866785234;  // std dev = 0.034, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(A, J), interaction(J, A) )
%   | then if ( location(J, K) )
%   | | then return -0.0665311776147394;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.019654443699217306;  // std dev = 0.533, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.17016861896875776;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3502834879883297;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, D) )
%   | | | then return 0.24635152230163704;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.49818042586758227;  // std dev = 0.264, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.18100775120779214;  // std dev = 0.459, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.1441561627828378;  // std dev = 0.323, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6066680123408349;  // std dev = 0.189, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1733339425374783;  // std dev = 0.248, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11296319873840507;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.053063130065389735;  // std dev = 4.417, 153.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3083542687167983;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, D) )
%   | | then return -0.1104904224186942;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | | then return 0.4520589245790262;  // std dev = 0.389, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08097791531629708;  // std dev = 2.352, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   else if ( phenotype(A, F) )
%   | then return 0.08452371346960648;  // std dev = 0.264, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5751198007017688;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0373164966664263;  // std dev = 1.981, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.07977734940263488;  // std dev = 0.930, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.022902657560320564;  // std dev = 2.684, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.36407758840655263;  // std dev = 0.088, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.14286254769967272;  // std dev = 0.068, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2162843685011975;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5451711853416087;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1349410002781507;  // std dev = 0.204, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.04363556417348954;  // std dev = 2.012, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.21501391606616735;  // std dev = 1.297, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.07212229941911717;  // std dev = 2.927, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | else return 0.2782582426754002;  // std dev = 0.498, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1915614828787899;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.006600196635999686;  // std dev = 0.611, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.21275714877592422;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, I), interaction(E, E) )
%   | | | then return -0.06279170221388104;  // std dev = 0.786, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return -0.015910932988691506;  // std dev = 2.059, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( enzyme(A, L), phenotype(J, M) )
%   | | | then return 0.14389592794657163;  // std dev = 0.534, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06468960341394839;  // std dev = 1.325, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, N), enzyme(A, P) )
%   | | | then return 0.11694911693829167;  // std dev = 1.214, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.04045448990183985;  // std dev = 3.331, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), location(C, F) )
%   | then return 0.0652199499114467;  // std dev = 0.232, 71.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=32 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.17599547466765225;  // std dev = 0.678, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.12548785065790174;  // std dev = 1.092, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.009144890313970618;  // std dev = 2.455, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.2224871194511748;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.03130195024107648;  // std dev = 0.250, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.252048112011478;  // std dev = 1.894, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | | | else return -0.1638511367824292;  // std dev = 0.175, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.25323893165670885;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), location(A, E) )
%   | then return 0.13474651851212796;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.25277560178274633;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), location(A, G) )
%   | | | then return 0.164514729552594;  // std dev = 0.472, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.40607517330858667;  // std dev = 0.351, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, F), interaction(J, A) )
%   | | | then return -0.05563535505155939;  // std dev = 2.527, 89.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | | | else return -0.0012892646232714126;  // std dev = 3.251, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | else if ( enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.296838032373311;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12588166032126533;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13733456663063542;  // std dev = 0.765, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '45.034', 'seconds']
Refined model CLL: -0.198365


******************************************
Best model found
******************************************
Results 

CLL : -0.209248 

AUC ROC : 0.989638 

AUC PR : 0.394915 

Precision : 0.280105 

Recall : 0.758865 

F1 : 0.409178 

Total Learning Time : 32.066 

Total Inference Time : 24.511258125305176 

Total revision time: 64.22415620422363
Best scored revision CLL: -0.198365


Results 

CLL : -0.209248 

AUC ROC : 0.989638 

AUC PR : 0.394915 

Precision : 0.280105 

Recall : 0.758865 

F1 : 0.409178 

Total Learning Time : 69.2449587020874 

Total Inference Time : 24.511258125305176 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.654
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1969111500832262;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1495228226120673;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | | | else return 0.17911631854702667;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.162611146918413;  // std dev = 5.149, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | | else return 0.1614131624702258;  // std dev = 6.381, 178.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10653099095875299;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.11006107144668202;  // std dev = 7.093, 228.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09721249424393509;  // std dev = 8.319, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06777593201862488;  // std dev = 8.390, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7329590733524499;  // std dev = 0.019, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2666859000998338;  // std dev = 0.025, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08289283508448501;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.11321117941599905;  // std dev = 4.961, 104.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02619443819491679;  // std dev = 4.184, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.020221913383587618;  // std dev = 6.594, 203.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03859191581856923;  // std dev = 7.678, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03689718703791521;  // std dev = 7.626, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.261', 'seconds']
Parameter learned model CLL:-0.335663 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.959, 112, 52], 'false,false,false,false': [5.829, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.149, 75, 41], 'false,false,false,false': [6.381, 115, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.433, 61, 29], 'false,false,false,false': [7.093, 153, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.319, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.39, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 41], 'true,false': [0.025, 84, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.871, 43, 23], 'false,false,false,false': [4.961, 64, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.184, 91, 41], 'false,false,false,false': [6.594, 140, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.678, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.626, 203, 104]}]
{'': [nan, 0.22400237668304385], 'false': [nan, 0.2240023766830423], 'false,false': [nan, 0.22400237668304385], 'false,false,false': [nan, 0.2240023766830423]}
{'': [nan, 0.22151000040569407], 'false': [nan, 0.22151000040569596], 'false,false': [nan, 0.22151000040569407], 'false,false,false': [0.21653777513384787, 0.22648888888888796]}
{'': [nan, 0.22869095060362593], 'false': [nan, 0.22869095060362593], 'false,false': [nan, 0.22869095060362685], 'false,false,false': [0.2285563350139362, 0.228778111360869]}
{'': [nan, 0.220020912986309], 'false': [nan, 0.220020912986309], 'false,false': [nan, 0.22002091298630835], 'false,false,false': [0.2183950617283956, 0.22065916954695322]}
{'': [nan, 0.2225392386200742], 'false': [nan, 0.2225392386200742], 'false,false': [nan, 0.22253923862007396], 'false,false,false': [nan, 0.22253923862007396]}
{'': [nan, 0.21861128785754888], 'false': [nan, 0.21861128785754888], 'false,false': [nan, 0.21861128785754813], 'false,false,false': [nan, 0.21861128785754932]}
{'': [0.22026754941345425, 0.23316086607571895], 'false': [nan, 0.23316086607571895], 'false,false': [nan, 0.23316086607571895], 'false,false,false': [0.22704315886134, 0.23668639053254398], 'true': [8.75676663945924e-06, 7.673325890604554e-06], 'true,true': [nan, 8.75676663945924e-06], 'true,true,false': [nan, 8.75676663945924e-06]}
{'': [nan, 0.18208218543593715], 'false': [nan, 0.18208218543593715], 'false,false': [nan, 0.18208218543593743], 'false,false,false': [0.13263725380382302, 0.2142195140918604]}
{'': [nan, 0.1889690706200903], 'false': [nan, 0.18896907062008994], 'false,false': [nan, 0.18896907062008994], 'false,false,false': [nan, 0.18896907062008994]}
{'': [nan, 0.1894357224181402], 'false': [nan, 0.1894357224181402], 'false,false': [nan, 0.189435722418141], 'false,false,false': [nan, 0.189435722418141]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.951
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(D, C), interaction(D, E) )
%   | | then return -0.030739953789376596;  // std dev = 0.314, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08672036367094092;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8236661764788221;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.19148226843284424;  // std dev = 4.967, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.7325241745848107;  // std dev = 0.070, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4367191618700204;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then return -0.14116956706470024;  // std dev = 0.020, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.28946919764262563;  // std dev = 2.081, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.07378453807261752;  // std dev = 2.596, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.29050868177034056;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07686579084108625;  // std dev = 3.352, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12731274752922098;  // std dev = 3.075, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.20070524707788212;  // std dev = 4.332, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.3883117329048402;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5984640527078625;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, A) )
%   | then return -0.12602064169122792;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | | then return 0.6408516401745672;  // std dev = 1.858, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.05754802781646732;  // std dev = 6.033, 222.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=54 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.7470409198952229;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19475130720368192;  // std dev = 1.981, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5171401051747222;  // std dev = 0.118, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(E, A) )
%   | | | then return 0.6846532798174279;  // std dev = 0.237, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.11682144682619097;  // std dev = 0.707, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.17246003941555452;  // std dev = 0.217, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0.02727226512591918;  // std dev = 2.886, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( location(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7032783673630354;  // std dev = 1.301, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.1862664476626938;  // std dev = 0.180, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.48012709000466847;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06939585013781277;  // std dev = 3.654, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.3214445087937169;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09738927461589232;  // std dev = 0.284, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( interaction(A, C) )
%   | | then return 0.017115501200171537;  // std dev = 0.257, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5772430945539974;  // std dev = 0.338, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.140772558861129;  // std dev = 0.127, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3749104851562627;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5002968787486101;  // std dev = 0.296, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.16781161539992515;  // std dev = 1.980, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.05342147457334379;  // std dev = 5.353, 182.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=50 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24262340700263682;  // std dev = 0.174, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3276159860432812;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.024751285095513702;  // std dev = 3.728, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | else if ( recursion_proteinclass(E, B), interaction(E, G) )
%   | | | then return 0.4419006054581774;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16133701310773194;  // std dev = 0.827, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5716672665024998;  // std dev = 1.070, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.17338191476667605;  // std dev = 0.316, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11403732710015284;  // std dev = 3.608, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | | | else return 0.053234306729040407;  // std dev = 1.572, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.436339987278821;  // std dev = 0.176, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.1918754044232522;  // std dev = 0.076, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), location(G, F) )
%   | | | then return -0.2639335878806339;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4409817553440277;  // std dev = 1.742, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | else return -0.16875388927301155;  // std dev = 0.365, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(A, I) )
%   | | then if ( location(A, J), phenotype(I, K) )
%   | | | then return 0.10093568958049688;  // std dev = 1.331, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 1.0134572259101107E-4;  // std dev = 1.129, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( location(A, L) )
%   | | | then return 0.21405014381465898;  // std dev = 2.375, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.11595782139875159;  // std dev = 1.325, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.07662561938332275;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21458515454544083;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( location(A, F), complex(A, G) )
%   | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, G) )
%   | | | then return 0.39029499100950305;  // std dev = 0.722, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.17321698173052588;  // std dev = 0.474, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.15355619580957286;  // std dev = 0.345, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( phenotype(J, I), enzyme(J, K) )
%   | | | then return -0.022092785807120215;  // std dev = 1.438, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.08466389868194835;  // std dev = 2.531, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.04113384341089775;  // std dev = 1.942, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.015241857955736755;  // std dev = 3.075, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.27070026412171383;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.06701898374030711;  // std dev = 0.241, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else if ( interaction(A, C) )
%   | | then return -0.11128968148245932;  // std dev = 0.209, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2600400904832004;  // std dev = 0.289, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.02226062284316832;  // std dev = 4.534, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.40788929735755436;  // std dev = 0.291, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.18325874392220864;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.09793257876158137;  // std dev = 0.575, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.13531413899560985;  // std dev = 0.591, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.11240438199784113;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.21275788488415207;  // std dev = 0.240, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.30859593754884135;  // std dev = 2.703, 90.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=77 */
%   | | | else return -0.11989876496997662;  // std dev = 1.209, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else return -0.15257105789198683;  // std dev = 0.063, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.48580088833068896;  // std dev = 0.317, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2212134392081223;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.13750777636982522;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06837444495715471;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '44.242', 'seconds']
Refined model CLL: -0.182492


******************************************
Best model found
******************************************
Results 

CLL : -0.191052 

AUC ROC : 0.98 

AUC PR : 0.480937 

Precision : 0.454301 

Recall : 0.637736 

F1 : 0.530612 

Total Learning Time : 33.951 

Total Inference Time : 27.97779893875122 

Total revision time: 71.16667697906495
Best scored revision CLL: -0.182492


Results 

CLL : -0.191052 

AUC ROC : 0.98 

AUC PR : 0.480937 

Precision : 0.454301 

Recall : 0.637736 

F1 : 0.530612 

Total Learning Time : 76.18747947692871 

Total Inference Time : 27.97779893875122 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19027889899842937;  // std dev = 7.839, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15821342569734592;  // std dev = 5.868, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
%   | | | else return 0.1962045197732165;  // std dev = 5.111, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15431360356921495;  // std dev = 5.362, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
%   | | | else return 0.14073164892939938;  // std dev = 5.657, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07425126005926433;  // std dev = 4.300, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return 0.13232416229135632;  // std dev = 6.553, 189.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08160594765966131;  // std dev = 7.921, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07844651797624849;  // std dev = 7.849, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7355695826471547;  // std dev = 0.061, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2640178945584324;  // std dev = 0.088, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06799403778437849;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | | else return 0.0654245194578337;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05969093996714506;  // std dev = 4.223, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.0816248071648529;  // std dev = 5.525, 132.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027108155274848753;  // std dev = 7.109, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036988156787636804;  // std dev = 7.022, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.356', 'seconds']
Parameter learned model CLL:-0.330833 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.839, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.868, 106, 51], 'false,false,false,false': [5.111, 72, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.362, 83, 44], 'false,false,false,false': [5.657, 96, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.3, 64, 26], 'false,false,false,false': [6.553, 123, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.921, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.849, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.061, 0, 44], 'true,false': [0.088, 93, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.082, 50, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.223, 81, 44], 'false,false,false,false': [5.525, 84, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.109, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.022, 176, 92]}]
{'': [nan, 0.22181965097942233], 'false': [nan, 0.22181965097942197], 'false,false': [nan, 0.22181965097942233], 'false,false,false': [nan, 0.22181965097942197]}
{'': [nan, 0.22463648834018918], 'false': [nan, 0.22463648834019337], 'false,false': [nan, 0.22463648834018918], 'false,false,false': [0.21931924215992754, 0.2311849009319439]}
{'': [nan, 0.22423161044139814], 'false': [nan, 0.22423161044139814], 'false,false': [nan, 0.2242316104413975], 'false,false,false': [0.22640206633742882, 0.2222309401195329]}
{'': [nan, 0.2209182848420544], 'false': [nan, 0.2209182848420544], 'false,false': [nan, 0.22091828484205575], 'false,false,false': [0.20543209876543295, 0.2272047682050126]}
{'': [nan, 0.2170905486386635], 'false': [nan, 0.2170905486386635], 'false,false': [nan, 0.21709054863866264], 'false,false,false': [nan, 0.21709054863866264]}
{'': [nan, 0.2207912985766893], 'false': [nan, 0.2207912985766893], 'false,false': [nan, 0.2207912985766898], 'false,false,false': [nan, 0.22079129857668978]}
{'': [0.2179232048220163, 0.22298944316812513], 'false': [nan, 0.22298944316812513], 'false,false': [nan, 0.22298944316812513], 'false,false,false': [0.22222222222222238, 0.22383217993079652], 'true': [8.503987893854708e-05, 8.346292342167733e-05], 'true,true': [nan, 8.503987893854708e-05], 'true,true,false': [nan, 8.503987893854708e-05]}
{'': [nan, 0.1882967873848094], 'false': [nan, 0.1882967873848094], 'false,false': [nan, 0.18829678738480954], 'false,false,false': [0.14269149779062254, 0.23124961925794318]}
{'': [nan, 0.17795572225075176], 'false': [nan, 0.1779557222507515], 'false,false': [nan, 0.1779557222507515], 'false,false,false': [nan, 0.1779557222507515]}
{'': [nan, 0.18398971869553418], 'false': [nan, 0.18398971869553418], 'false,false': [nan, 0.18398971869553402], 'false,false,false': [nan, 0.18398971869553402]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.688
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2441138473802134;  // std dev = 3.675, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.19713198594696973;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.11856560176617899;  // std dev = 4.300, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12951761371485424;  // std dev = 0.034, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(F, G) )
%   | | | then return -0.1742377500951655;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.26240495845378486;  // std dev = 1.452, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.1720188840485651;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14813710889553966;  // std dev = 4.040, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | else if ( location(A, K) )
%   | | | then return 0.20971835649406606;  // std dev = 5.454, 128.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=48 */
%   | | | else return 0.07576224990483449;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then if ( interaction(D, D) )
%   | | then return 0.5977700438217494;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3080169831008329;  // std dev = 0.606, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6973233966351414;  // std dev = 0.216, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(F, G) )
%   | | then return -0.148250253635665;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07854508782366265;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.0863912283542272;  // std dev = 0.922, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5654630906692911;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12767796327658187;  // std dev = 4.352, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.19517858375432046;  // std dev = 5.016, 106.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.4303305899915415;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5800658274184796;  // std dev = 0.243, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.787909167862717;  // std dev = 0.047, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.20589077746640322;  // std dev = 0.176, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), interaction(H, J) )
%   | | | then return 0.25992851877605777;  // std dev = 2.568, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.46577014560286767;  // std dev = 3.634, 68.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=48 */
%   | | else return -0.209756125877924;  // std dev = 0.308, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0.16777342933337708;  // std dev = 0.447, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.40552600725275884;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E), interaction(D, D) )
%   | | then if ( interaction(F, A) )
%   | | | then return -0.1060239648136963;  // std dev = 0.149, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.0060212589392483334;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), interaction(D, H) )
%   | | | then return 0.15387882103898584;  // std dev = 2.449, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return -0.016956036893649384;  // std dev = 2.500, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(I, K), location(J, K) )
%   | | | then return 0.033776024443824534;  // std dev = 3.968, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return 0.27026197139489017;  // std dev = 0.857, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.22442085856472294;  // std dev = 1.775, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.12980672388786813;  // std dev = 2.632, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3071415244041814;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2952810080631423;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, F), interaction(C, C) )
%   | | | then return 0.07062728303699509;  // std dev = 1.986, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.03086001131416908;  // std dev = 3.109, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.28937407217815814;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(H, I), enzyme(A, I) )
%   | | | then return -0.12251570564651838;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.07674218351579695;  // std dev = 4.519, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.20715900454643954;  // std dev = 0.935, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10450419943710217;  // std dev = 2.166, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5124522499110186;  // std dev = 0.190, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.21201457216263;  // std dev = 0.055, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(A, G), phenotype(F, G) )
%   | | then return -0.06949163917453588;  // std dev = 0.279, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( phenotype(E, H), complex(E, I) )
%   | | | then return 0.03788704295416685;  // std dev = 1.844, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.22149724171485338;  // std dev = 2.149, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), complex(L, M) )
%   | | | then return 0.13079998082445735;  // std dev = 1.423, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03907898814668606;  // std dev = 1.405, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.028373801745705095;  // std dev = 1.767, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.046970741578029704;  // std dev = 2.667, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.16117576636492653;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(D, E), interaction(D, D) )
%   | | then return 0.13191277979275096;  // std dev = 0.376, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.024907913979235217;  // std dev = 0.263, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5647734287532648;  // std dev = 0.142, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.21174336431750493;  // std dev = 0.055, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5167245467943524;  // std dev = 0.907, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.23153368572862063;  // std dev = 0.465, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.24398557817073505;  // std dev = 1.377, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.11413912484230421;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.06478419626855819;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1804409928791196;  // std dev = 0.377, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16070251301562613;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4282084172958415;  // std dev = 0.921, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.17677000405161084;  // std dev = 0.065, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.16859501444480465;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.29261922987584593;  // std dev = 2.758, 59.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=44 */
%   | | | else return -0.182727731371444;  // std dev = 0.334, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0.3277014836838766;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C) )
%   | then return 6.336742800798796E-4;  // std dev = 0.236, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   | else if ( interaction(E, D), location(E, C) )
%   | | then return -0.07219288653016613;  // std dev = 0.211, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( enzyme(A, F), complex(D, G) )
%   | | | then return -0.11759176330058392;  // std dev = 0.607, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -9.237892425957931E-4;  // std dev = 1.594, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( interaction(I, J), complex(J, K) )
%   | | then if ( phenotype(H, L), phenotype(A, L) )
%   | | | then return -0.014436260329781299;  // std dev = 0.827, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.07674139550725455;  // std dev = 1.782, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( location(A, M), location(I, M) )
%   | | | then return -0.08307211164792588;  // std dev = 1.255, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.004733890657435988;  // std dev = 1.287, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return -0.12207279507518733;  // std dev = 0.251, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '20.451', 'seconds']
Refined model CLL: -0.209237


******************************************
Best model found
******************************************
Results 

CLL : -0.21318 

AUC ROC : 0.987676 

AUC PR : 0.365664 

Precision : 0.261239 

Recall : 0.776173 

F1 : 0.390909 

Total Learning Time : 20.688 

Total Inference Time : 13.812062978744507 

Total revision time: 42.37801428604126
Best scored revision CLL: -0.209237


Results 

CLL : -0.21318 

AUC ROC : 0.987676 

AUC PR : 0.365664 

Precision : 0.261239 

Recall : 0.776173 

F1 : 0.390909 

Total Learning Time : 47.398816783905026 

Total Inference Time : 13.812062978744507 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.159
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22255571476052957;  // std dev = 7.393, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1478606667654905;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | | | else return 0.20246863548388702;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1265867168694967;  // std dev = 4.353, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.14247531777677067;  // std dev = 6.189, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10837282291689855;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.1223832589308721;  // std dev = 6.637, 195.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.060437934469778375;  // std dev = 7.755, 286.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08183843313716017;  // std dev = 7.573, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7369254286562621;  // std dev = 0.033, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2634461797900058;  // std dev = 0.051, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08281771804506756;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | | | else return -0.0121532098294817;  // std dev = 4.292, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07171842585766885;  // std dev = 3.324, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return 0.08490940302145837;  // std dev = 6.082, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03853468793419558;  // std dev = 7.082, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032272396436664255;  // std dev = 7.055, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.583', 'seconds']
Parameter learned model CLL:-0.345389 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.393, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.951, 111, 52], 'false,false,false,false': [4.615, 57, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.353, 59, 28], 'false,false,false,false': [6.189, 113, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.589, 40, 19], 'false,false,false,false': [6.637, 128, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.755, 200, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.573, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.033, 0, 28], 'true,false': [0.051, 63, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.641, 62, 33], 'false,false,false,false': [4.292, 70, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.324, 49, 28], 'false,false,false,false': [6.082, 102, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.082, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.055, 169, 86]}]
{'': [nan, 0.23161447859810488], 'false': [nan, 0.23161447859810458], 'false,false': [nan, 0.23161447859810488], 'false,false,false': [nan, 0.23161447859810458]}
{'': [nan, 0.22394444788889542], 'false': [nan, 0.22394444788889595], 'false,false': [nan, 0.22394444788889542], 'false,false,false': [0.21724566223794664, 0.23402970655717972]}
{'': [nan, 0.22199335156356342], 'false': [nan, 0.22199335156356342], 'false,false': [nan, 0.22199335156356412], 'false,false,false': [0.2178265154469633, 0.2240281931237195]}
{'': [nan, 0.22415626840140976], 'false': [nan, 0.22415626840140976], 'false,false': [nan, 0.2241562684014101], 'false,false,false': [0.21832806664751492, 0.22587407757511088]}
{'': [nan, 0.21030233520258568], 'false': [nan, 0.21030233520258568], 'false,false': [nan, 0.21030233520258584], 'false,false,false': [nan, 0.21030233520258584]}
{'': [nan, 0.2222653632114162], 'false': [nan, 0.2222653632114162], 'false,false': [nan, 0.22226536321141685], 'false,false,false': [nan, 0.22226536321141632]}
{'': [0.21321626804352214, 0.21255957842661444], 'true': [3.90351814274175e-05, 4.067256792737001e-05], 'false': [nan, 0.21255957842661444], 'false,false': [nan, 0.21255957842661444], 'false,false,false': [0.22670360110803317, 0.19390581717451488], 'true,true': [nan, 3.90351814274175e-05], 'true,true,false': [nan, 3.90351814274175e-05]}
{'': [nan, 0.20273786634132318], 'false': [nan, 0.20273786634132318], 'false,false': [nan, 0.2027378663413227], 'false,false,false': [0.14351647734657838, 0.2311816275391479]}
{'': [nan, 0.19667815240083614], 'false': [nan, 0.19667815240083636], 'false,false': [nan, 0.19667815240083636], 'false,false,false': [nan, 0.19667815240083636]}
{'': [nan, 0.1951947595684437], 'false': [nan, 0.1951947595684437], 'false,false': [nan, 0.1951947595684436], 'false,false,false': [nan, 0.1951947595684436]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.407
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(D, E), complex(D, F) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0867203636709409;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.17904445748757122;  // std dev = 5.404, 134.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.5082438995261179;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3298112354398127;  // std dev = 1.536, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.07963090643400585;  // std dev = 0.381, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7306570516259981;  // std dev = 1.918, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.16183732448590846;  // std dev = 0.106, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.04816758991113414;  // std dev = 1.322, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.1302138147687225;  // std dev = 3.356, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.2665118285226811;  // std dev = 0.876, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(C, F) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6752245636731737;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.6217418111573809;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.04558916763864309;  // std dev = 1.897, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | | else return 0.11640427042493814;  // std dev = 1.859, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.03877423374055901;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.13034614519358362;  // std dev = 4.926, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), interaction(E, C) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.05382294495095776;  // std dev = 0.346, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else return 0.19894486906860206;  // std dev = 0.400, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.6651810664140977;  // std dev = 0.303, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.004261186865750827;  // std dev = 0.369, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.38616722668864384;  // std dev = 0.270, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(M, L) )
%   | | | then return 0.04481830071802203;  // std dev = 2.314, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.15801014056675042;  // std dev = 2.113, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12726781556603137;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.2335041556135827;  // std dev = 3.050, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(C, D) )
%   | | then return 0.3875683297462267;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4457852898899596;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06584986736934073;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.5042760519485682;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2055305779847461;  // std dev = 0.704, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), complex(I, G) )
%   | | | then return -0.09989218129384257;  // std dev = 1.403, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.07119214417916937;  // std dev = 1.900, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.13565317067978994;  // std dev = 3.365, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.05227066454310158;  // std dev = 4.282, 119.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32902125444593805;  // std dev = 0.066, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, A), complex(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.050381742220272224;  // std dev = 0.444, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14798048402767486;  // std dev = 0.142, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.24945507016747273;  // std dev = 0.937, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.02403689058312858;  // std dev = 2.833, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), phenotype(I, K) )
%   | | | then return 0.1866514216363787;  // std dev = 2.129, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.05217015385934529;  // std dev = 4.270, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.07931389114260609;  // std dev = 1.121, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.5182686440631245;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.23256635704936615;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5857196361590546;  // std dev = 0.138, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.2006241525245338;  // std dev = 0.069, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(F, A), phenotype(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5271938276236147;  // std dev = 0.422, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.17630379498205972;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07718004490000847;  // std dev = 3.283, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.25869230697293577;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.006160672496817862;  // std dev = 3.053, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.031197689560095863;  // std dev = 1.983, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( phenotype(D, E), complex(A, F) )
%   | | then return 0.20611475963194578;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1756846377932466;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.276417972500184;  // std dev = 0.180, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, G) )
%   | | then return -0.0915118985032268;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.23209309006623624;  // std dev = 0.572, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.09011017001872855;  // std dev = 1.942, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.026655185955146522;  // std dev = 4.660, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | | else if ( location(A, J) )
%   | | | then return -0.005921885599257176;  // std dev = 2.296, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.1770067429718946;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F) )
%   | | then return 0.23226531339740986;  // std dev = 0.234, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.4676930285762416;  // std dev = 0.284, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else return -0.18259567978196856;  // std dev = 0.053, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( location(A, I), location(G, I) )
%   | | then return -0.06176309587039938;  // std dev = 0.284, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else return 0.14207636878201832;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6787507306385996;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2886856714989614;  // std dev = 0.076, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.013292558710375126;  // std dev = 2.525, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.14131746377281146;  // std dev = 1.894, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.179628297964848;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3470090793549653;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5058936873227452;  // std dev = 0.222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(H, E), phenotype(H, I) )
%   | | | then return -0.16730906848977783;  // std dev = 0.107, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.28331701671774695;  // std dev = 0.143, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.25224237854957005;  // std dev = 3.483, 92.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=60 */
%   | | | else return -0.18737124300765068;  // std dev = 0.611, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.03534282873127696;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1526248335970246;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.541', 'seconds']
Refined model CLL: -0.210245


******************************************
Best model found
******************************************
Results 

CLL : -0.232308 

AUC ROC : 0.973196 

AUC PR : 0.258508 

Precision : 0.245501 

Recall : 0.674912 

F1 : 0.360038 

Total Learning Time : 16.407 

Total Inference Time : 9.362029790878296 

Total revision time: 33.47246886825562
Best scored revision CLL: -0.210245


Results 

CLL : -0.232308 

AUC ROC : 0.973196 

AUC PR : 0.258508 

Precision : 0.245501 

Recall : 0.674912 

F1 : 0.360038 

Total Learning Time : 38.49327136611939 

Total Inference Time : 9.362029790878296 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.252
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1993254056877476;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19877931454335834;  // std dev = 5.279, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.12265318841723215;  // std dev = 5.523, 148.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1472119448938992;  // std dev = 4.808, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.16028794671583785;  // std dev = 5.807, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.05979965673686938;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.12545448911663495;  // std dev = 6.643, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08495472946913829;  // std dev = 7.685, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0935099377445908;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7351479479567311;  // std dev = 0.006, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2649310096412483;  // std dev = 0.008, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.042956767766520625;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.06317771537391557;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.043378633328440906;  // std dev = 3.814, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.032558188389518405;  // std dev = 5.964, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.055645351455666923;  // std dev = 6.920, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030829905749643702;  // std dev = 6.979, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.651', 'seconds']
Parameter learned model CLL:-0.336116 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.279, 76, 44], 'false,false,false,false': [5.523, 105, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.808, 68, 35], 'false,false,false,false': [5.807, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.79, 51, 20], 'false,false,false,false': [6.643, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.685, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.006, 0, 35], 'true,false': [0.008, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 50, 24], 'false,false,false,false': [4.333, 57, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.814, 71, 35], 'false,false,false,false': [5.964, 112, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.92, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.979, 173, 87]}]
{'': [nan, 0.2247750865051912], 'false': [nan, 0.22477508650519115], 'false,false': [nan, 0.2247750865051912], 'false,false,false': [nan, 0.22477508650519115]}
{'': [nan, 0.2192442637558481], 'false': [nan, 0.21924426375584877], 'false,false': [nan, 0.2192442637558481], 'false,false,false': [0.23222222222222272, 0.20612673484295135]}
{'': [nan, 0.22650920751049183], 'false': [nan, 0.22650920751049183], 'false,false': [nan, 0.2265092075104917], 'false,false,false': [0.22446052406089587, 0.22786481659584545]}
{'': [nan, 0.21909695058692022], 'false': [nan, 0.21909695058692022], 'false,false': [nan, 0.21909695058691936], 'false,false,false': [0.20234080539575475, 0.22399399145613738]}
{'': [nan, 0.21795491935094743], 'false': [nan, 0.21795491935094743], 'false,false': [nan, 0.2179549193509477], 'false,false,false': [nan, 0.2179549193509477]}
{'': [nan, 0.2260212234997003], 'false': [nan, 0.2260212234997003], 'false,false': [nan, 0.2260212234996999], 'false,false,false': [nan, 0.22602122349970025]}
{'': [0.23374093868437534, 0.2201815236497779], 'true': [1.0172627916915645e-06, 9.88039500039093e-07], 'false': [nan, 0.2201815236497779], 'false,false': [nan, 0.2201815236497779], 'false,false,false': [0.21913805697589472, 0.2208996539792391], 'true,true': [nan, 1.0172627916915645e-06], 'true,true,false': [nan, 1.0172627916915645e-06]}
{'': [nan, 0.1856372725141373], 'false': [nan, 0.1856372725141373], 'false,false': [nan, 0.18563727251413717], 'false,false,false': [0.13721035950795316, 0.2168916287980233]}
{'': [nan, 0.19307594175515244], 'false': [nan, 0.19307594175515227], 'false,false': [nan, 0.19307594175515227], 'false,false,false': [nan, 0.19307594175515227]}
{'': [nan, 0.1873323681719235], 'false': [nan, 0.1873323681719235], 'false,false': [nan, 0.18733236817192353], 'false,false,false': [nan, 0.18733236817192353]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.477
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(D, F), interaction(G, A) )
%   | | then return -0.07935106490048774;  // std dev = 0.242, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | else return 0.20297652130640886;  // std dev = 0.475, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( location(A, H), interaction(A, I) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, K), interaction(A, K) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.2956489350995123;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return 0.0010060779566550668;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17201754823819804;  // std dev = 5.432, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(A, E), phenotype(A, F) )
%   | then return 0.4241022633074866;  // std dev = 0.457, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( interaction(A, G), complex(C, H) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.4785087519097808;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.31822252559754305;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(C, I), enzyme(C, J) )
%   | | | then return 0.05678815360910872;  // std dev = 1.185, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22113952943139342;  // std dev = 3.266, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then return 0.19866401613031792;  // std dev = 0.446, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.8271421512022187;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return -0.0039612757299456215;  // std dev = 1.586, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.16282000288001774;  // std dev = 4.668, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6938036528710464;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4410710062980231;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.433568583122054;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7537104076660563;  // std dev = 0.991, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return -0.1947155941952994;  // std dev = 0.159, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, A) )
%   | | then return -0.158873560383449;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.22264131896778477;  // std dev = 2.388, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.1113999204841655;  // std dev = 4.829, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.564662993454032;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.04362388332977334;  // std dev = 0.393, 156.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=41 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), interaction(A, H) )
%   | | then return 0.6624343671383839;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.2548645490239227;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12894279369994735;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.702918405759257;  // std dev = 0.320, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.18716389039857592;  // std dev = 0.109, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.12653194226234254;  // std dev = 2.966, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.0369056191244526;  // std dev = 1.221, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( enzyme(D, E), location(A, F) )
%   | | then return 0.3594262717081545;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41843040997548503;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4721081961254294;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5271977553914092;  // std dev = 0.145, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16885779471387444;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.09031614252640273;  // std dev = 5.854, 201.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=66 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.049874116703513736;  // std dev = 1.183, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.064076282920416;  // std dev = 1.741, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5202070522643311;  // std dev = 0.116, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.17751334290112178;  // std dev = 0.091, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(F, G), phenotype(F, H) )
%   | | then if ( enzyme(A, I), phenotype(G, H) )
%   | | | then return 0.3379081657642713;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06377094195086871;  // std dev = 4.099, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.32889778027070743;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.013147162975439568;  // std dev = 3.948, 107.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=25 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.039856121255601465;  // std dev = 0.793, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.28146479355130644;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14360101292486424;  // std dev = 1.015, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.4342427079703482;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5995123884674348;  // std dev = 0.167, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.22501861996607908;  // std dev = 0.074, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.23545460911169477;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1719079957839326;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4773766487825693;  // std dev = 0.666, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.18785431702026;  // std dev = 0.237, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.13877835378196776;  // std dev = 3.682, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | | else return 0.3158517064051919;  // std dev = 1.294, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3028409818041513;  // std dev = 0.143, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, F), interaction(A, C) )
%   | | then return -0.3429062069303932;  // std dev = 0.202, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(G, C), complex(G, H) )
%   | | | then return -0.08801781194713915;  // std dev = 2.319, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.028327082215496957;  // std dev = 1.250, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then return -0.028397071354649653;  // std dev = 0.299, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.35120446130242394;  // std dev = 2.790, 61.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | | | else return -0.20720356655612415;  // std dev = 0.434, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.011709502235210834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1331459844418954;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.15704259556001124;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.012338194827906095;  // std dev = 0.255, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.42180237018777533;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), interaction(E, E) )
%   | | | then return 0.29602780008837876;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.006931471327554215;  // std dev = 2.821, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( enzyme(A, K), interaction(J, L) )
%   | | | then return 0.07616120973456768;  // std dev = 0.798, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.007168012988273757;  // std dev = 0.839, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.14151145251316227;  // std dev = 2.336, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.31867094975683496;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1663421300042767;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), interaction(F, H) )
%   | | | then return 0.4582030487344909;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09246858936062337;  // std dev = 0.809, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.178291440954172;  // std dev = 0.333, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.013466626682452522;  // std dev = 2.370, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(K, L) )
%   | | | then return -0.03697869880034636;  // std dev = 1.833, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.03404672929154677;  // std dev = 0.977, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.11404408105777446;  // std dev = 1.576, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.013709269985814638;  // std dev = 3.393, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.085', 'seconds']
Refined model CLL: -0.236132


******************************************
Best model found
******************************************
Results 

CLL : -0.237776 

AUC ROC : 0.974294 

AUC PR : 0.343569 

Precision : 0.288462 

Recall : 0.638298 

F1 : 0.397351 

Total Learning Time : 21.477 

Total Inference Time : 13.953544855117798 

Total revision time: 43.13475003623962
Best scored revision CLL: -0.236132


Results 

CLL : -0.237776 

AUC ROC : 0.974294 

AUC PR : 0.343569 

Precision : 0.288462 

Recall : 0.638298 

F1 : 0.397351 

Total Learning Time : 43.26255073928833 

Total Inference Time : 13.953544855117798 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.601
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19913254165688998;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.12427442094605348;  // std dev = 6.067, 178.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=52 */
%   | | | else return 0.16980192714771697;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1814116202617114;  // std dev = 5.085, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
%   | | | else return 0.20801353166341688;  // std dev = 6.158, 158.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10370422520074486;  // std dev = 4.445, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.12621041018471812;  // std dev = 6.980, 214.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09976446360802925;  // std dev = 8.271, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04746505987587265;  // std dev = 8.477, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7357724455715382;  // std dev = 0.039, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26425669356701903;  // std dev = 0.054, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0540455499472553;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.04103715464251292;  // std dev = 5.215, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0505432356596935;  // std dev = 4.104, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   | | | else return 0.06713869741039606;  // std dev = 6.389, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02540315200420671;  // std dev = 7.739, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03040782178151003;  // std dev = 7.683, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.222', 'seconds']
Parameter learned model CLL:-0.335513 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.067, 126, 52], 'false,false,false,false': [5.869, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.085, 70, 41], 'false,false,false,false': [6.158, 95, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.445, 62, 29], 'false,false,false,false': [6.98, 139, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.271, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.477, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.039, 0, 41], 'true,false': [0.054, 78, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.943, 48, 23], 'false,false,false,false': [5.215, 85, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.104, 80, 41], 'false,false,false,false': [6.389, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.739, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.683, 204, 104]}]
{'': [nan, 0.2247137866165031], 'false': [nan, 0.22471378661650146], 'false,false': [nan, 0.2247137866165031], 'false,false,false': [nan, 0.22471378661650146]}
{'': [nan, 0.2151255624909289], 'false': [nan, 0.21512556249092862], 'false,false': [nan, 0.2151255624909289], 'false,false,false': [0.20679207170811864, 0.223646483386744]}
{'': [nan, 0.23726702470148867], 'false': [nan, 0.23726702470148867], 'false,false': [nan, 0.23726702470149022], 'false,false,false': [0.23292297034836976, 0.2400268512556917]}
{'': [nan, 0.22462778338035405], 'false': [nan, 0.22462778338035405], 'false,false': [nan, 0.22462778338035488], 'false,false,false': [0.21712353580485422, 0.22766771379441977]}
{'': [nan, 0.22575719630026328], 'false': [nan, 0.22575719630026328], 'false,false': [nan, 0.22575719630026386], 'false,false,false': [nan, 0.22575719630026386]}
{'': [nan, 0.2138901421956688], 'false': [nan, 0.2138901421956688], 'false,false': [nan, 0.21389014219567032], 'false,false,false': [nan, 0.21389014219566893]}
{'': [0.22588146335415263, 0.21814774533197367], 'true': [3.6688147750864554e-05, 3.684814045278574e-05], 'false': [nan, 0.21814774533197367], 'false,false': [nan, 0.21814774533197367], 'false,false,false': [0.2190041658401105, 0.21759999999999896], 'true,true': [nan, 3.6688147750864554e-05], 'true,true,false': [nan, 3.6688147750864554e-05]}
{'': [nan, 0.19227931184847838], 'false': [nan, 0.19227931184847838], 'false,false': [nan, 0.19227931184847832], 'false,false,false': [0.13919789103517138, 0.22805008436981572]}
{'': [nan, 0.18659621994298176], 'false': [nan, 0.18659621994298123], 'false,false': [nan, 0.18659621994298123], 'false,false,false': [nan, 0.18659621994298123]}
{'': [nan, 0.19163367174214332], 'false': [nan, 0.19163367174214332], 'false,false': [nan, 0.191633671742144], 'false,false,false': [nan, 0.191633671742144]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 38.041
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( complex(A, H), interaction(F, A) )
%   | | | then return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.07333880851723384;  // std dev = 3.653, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14830437551402012;  // std dev = 6.305, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6214242025939605;  // std dev = 0.378, 43.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | else if ( interaction(A, F), location(F, D) )
%   | | then return -0.0509985520300962;  // std dev = 0.296, 100.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=11 */
%   | | else if ( phenotype(A, G), phenotype(C, G) )
%   | | | then return 0.2557867539152117;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.12356155363763797;  // std dev = 5.039, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.8289937700942418;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16087991275145488;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( complex(A, K), enzyme(A, L) )
%   | | then return 0.1823181849694829;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.17245342058187849;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.034351331436780555;  // std dev = 2.337, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then return 0.6874232266727841;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8229162643173666;  // std dev = 0.074, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.17438835707715541;  // std dev = 0.113, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.4377986331117423;  // std dev = 0.776, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.6657901575038536;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5200341034842639;  // std dev = 0.773, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04572897622699708;  // std dev = 3.243, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1785098157169129;  // std dev = 3.946, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.10516407317638794;  // std dev = 3.936, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), location(D, C) )
%   | then return 0.38595633384417233;  // std dev = 0.289, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.4619268220000363;  // std dev = 0.406, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return -0.12180760283521212;  // std dev = 1.212, 49.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=2 */
%   | | | else return 0.11374555909757633;  // std dev = 5.630, 159.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( enzyme(A, I), enzyme(G, J) )
%   | | then return 0.1372888816087405;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.5982050272955124;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( location(A, K) )
%   | | then return 0.03715653786003312;  // std dev = 0.754, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1841768699749403;  // std dev = 1.104, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2592824135860401;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3981355113974333;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(D, E), enzyme(D, F) )
%   | | then if ( phenotype(A, E), interaction(G, D) )
%   | | | then return 0.040142673607923875;  // std dev = 1.095, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.15750260820271766;  // std dev = 1.593, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return -0.01152493798710158;  // std dev = 0.339, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then return 0.02358694940162421;  // std dev = 0.334, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(A, L), phenotype(J, L) )
%   | | | then return 0.27223974262543094;  // std dev = 1.349, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.07862525160803062;  // std dev = 2.826, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.3458164693088955;  // std dev = 1.631, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.1715371313594509;  // std dev = 3.798, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.4990569042283281;  // std dev = 0.121, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.018258570732461638;  // std dev = 1.057, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15461920900619588;  // std dev = 0.270, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(A, D), enzyme(A, F) )
%   | | | then return 0.43831750323087243;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.049975576695333736;  // std dev = 5.916, 195.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=61 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then return 0.34770984783293685;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6780739086657659;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20840338585274287;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.06279461142713005;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4773072387186721;  // std dev = 0.169, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.19628183483159564;  // std dev = 0.100, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.31997166429244256;  // std dev = 0.216, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14647256847775106;  // std dev = 0.182, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.03566638784688748;  // std dev = 5.243, 140.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=42 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.596530757042561;  // std dev = 0.245, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22349732564210845;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(A, K) )
%   | | | then return 0.09102349922596445;  // std dev = 0.664, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01664194378704858;  // std dev = 1.013, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22916754064483438;  // std dev = 0.266, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( location(A, E), location(D, F) )
%   | | then if ( interaction(D, G), phenotype(G, H) )
%   | | | then return 0.008820232165164053;  // std dev = 3.073, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return -0.08440812989106751;  // std dev = 0.849, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.07265422642292722;  // std dev = 0.766, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.23765717954646687;  // std dev = 0.795, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5301437274192152;  // std dev = 1.884, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return -0.2416368629992758;  // std dev = 0.322, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( location(A, L) )
%   | | | then return 0.037559110035886696;  // std dev = 3.188, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return -0.02482310996283416;  // std dev = 1.318, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.18408466548023075;  // std dev = 1.475, 37.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | | else return 0.4883822246351226;  // std dev = 2.265, 67.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=61 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.2258012917201455;  // std dev = 0.665, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.2978244729593108;  // std dev = 0.658, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.18677300243228256;  // std dev = 0.073, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   else if ( interaction(A, H) )
%   | then return 0.2987582573326655;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.06551223130690068;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.014234940619298994;  // std dev = 0.362, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.058763647453564626;  // std dev = 0.918, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(A, G) )
%   | | then return 0.0032260854336732072;  // std dev = 0.217, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.13681304164993993;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18041266156185998;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3042336908258655;  // std dev = 0.249, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.18702485974026856;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.14002152503650864;  // std dev = 1.664, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return -0.01536154644270355;  // std dev = 4.537, 247.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=55 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.04648159677353869;  // std dev = 0.834, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.17337449106564273;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '25.152', 'seconds']
Refined model CLL: -0.208129


******************************************
Best model found
******************************************
Results 

CLL : -0.209857 

AUC ROC : 0.981876 

AUC PR : 0.371982 

Precision : 0.220026 

Recall : 0.630189 

F1 : 0.326172 

Total Learning Time : 38.041 

Total Inference Time : 37.00448417663574 

Total revision time: 84.13627318572998
Best scored revision CLL: -0.208129


Results 

CLL : -0.209857 

AUC ROC : 0.981876 

AUC PR : 0.371982 

Precision : 0.220026 

Recall : 0.630189 

F1 : 0.326172 

Total Learning Time : 84.26407388877868 

Total Inference Time : 37.00448417663574 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.325
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18672036367094097;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17386622303608404;  // std dev = 5.802, 150.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=51 */
%   | | | else return 0.14684332227272662;  // std dev = 5.307, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1177108284353259;  // std dev = 5.520, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | | else return 0.132433873162579;  // std dev = 5.705, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17181777398328837;  // std dev = 4.007, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | | else return 0.1396396811130048;  // std dev = 6.554, 189.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10914308505280544;  // std dev = 7.764, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08726665077589842;  // std dev = 7.776, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7266121538482839;  // std dev = 0.038, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2740158173000821;  // std dev = 0.053, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.022169895228433517;  // std dev = 4.323, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | | | else return 0.025527723282279775;  // std dev = 4.027, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03475557007943434;  // std dev = 4.271, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.05427938678311982;  // std dev = 5.686, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040485066320145584;  // std dev = 7.083, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03393119425657617;  // std dev = 7.067, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.518', 'seconds']
Parameter learned model CLL:-0.322778 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.802, 99, 51], 'false,false,false,false': [5.307, 90, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.52, 99, 44], 'false,false,false,false': [5.705, 101, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.007, 42, 26], 'false,false,false,false': [6.554, 123, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.764, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.776, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.038, 0, 44], 'true,false': [0.053, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.323, 74, 25], 'false,false,false,false': [4.027, 55, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.271, 90, 44], 'false,false,false,false': [5.686, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.083, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.067, 182, 92]}]
{'': [nan, 0.22061224489796044], 'false': [nan, 0.2206122448979601], 'false,false': [nan, 0.22061224489796044], 'false,false,false': [nan, 0.2206122448979601]}
{'': [nan, 0.2202099770772936], 'false': [nan, 0.2202099770772925], 'false,false': [nan, 0.2202099770772936], 'false,false,false': [0.22440000000000196, 0.2150224345900581]}
{'': [nan, 0.21584156805242571], 'false': [nan, 0.21584156805242571], 'false,false': [nan, 0.21584156805242585], 'false,false,false': [0.21304867977360897, 0.21841583407737047]}
{'': [nan, 0.22983655356635768], 'false': [nan, 0.22983655356635768], 'false,false': [nan, 0.22983655356635763], 'false,false,false': [0.23615916955017363, 0.22728778410732944]}
{'': [nan, 0.22576804550832077], 'false': [nan, 0.22576804550832077], 'false,false': [nan, 0.22576804550832144], 'false,false,false': [nan, 0.22576804550832144]}
{'': [nan, 0.22562650953167673], 'false': [nan, 0.22562650953167673], 'false,false': [nan, 0.22562650953167682], 'false,false,false': [nan, 0.22562650953167693]}
{'': [0.22084826377513747, 0.19776311774023528], 'true': [3.326124734538315e-05, 3.1527605291437054e-05], 'false': [nan, 0.19776311774023528], 'false,false': [nan, 0.19776311774023528], 'false,false,false': [0.18875624936231014, 0.20792241946088097], 'true,true': [nan, 3.326124734538315e-05], 'true,true,false': [nan, 3.326124734538315e-05]}
{'': [nan, 0.18006381611985495], 'false': [nan, 0.18006381611985495], 'false,false': [nan, 0.18006381611985472], 'false,false,false': [0.1361584797017679, 0.21990459529281567]}
{'': [nan, 0.1817724590714543], 'false': [nan, 0.18177245907145387], 'false,false': [nan, 0.18177245907145387], 'false,false,false': [nan, 0.18177245907145387]}
{'': [nan, 0.18227524690354188], 'false': [nan, 0.18227524690354188], 'false,false': [nan, 0.18227524690354138], 'false,false,false': [nan, 0.18227524690354138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.928
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(D, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.19713198594696998;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.16278469668891546;  // std dev = 5.656, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(C, E), enzyme(A, E) )
%   | | then return -0.1432294958431151;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(C, C), interaction(A, F) )
%   | | | then return -0.026220099755098022;  // std dev = 1.249, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.136300385140167;  // std dev = 4.331, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8028211723691799;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, H) )
%   | | | then return -0.07476701700781076;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.19440846880995474;  // std dev = 1.956, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18755318555291625;  // std dev = 4.829, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.5494621961441817;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.6451118128679775;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7291738094076121;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.12799315780602066;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.18055368311457812;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.09523962613709844;  // std dev = 6.427, 205.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4115058714098169;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), enzyme(F, C) )
%   | | then return -0.1232693109639753;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return -0.12801020712777314;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2318109258849544;  // std dev = 2.975, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( phenotype(G, I), location(A, J) )
%   | | then return 0.033998625026768196;  // std dev = 0.392, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else return 0.17019003998042984;  // std dev = 0.471, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.05013044365021506;  // std dev = 0.395, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.2000405848487419;  // std dev = 2.827, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.11125007337439911;  // std dev = 4.533, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.3166768537619081;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, C), phenotype(C, F) )
%   | | then return 0.37976580170141866;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.42609736111799873;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.11812701935484811;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.550438223759998;  // std dev = 0.132, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.11876927620210366;  // std dev = 4.328, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.031791382121413095;  // std dev = 5.609, 168.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.06849658536853111;  // std dev = 0.338, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.04073304415982541;  // std dev = 0.354, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.3774616924227741;  // std dev = 0.190, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.09310510294546039;  // std dev = 3.036, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.016874591437947443;  // std dev = 3.290, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(I, J), location(A, J) )
%   | | | then return 0.029399892791675097;  // std dev = 3.917, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | | else return 0.14537166558279604;  // std dev = 2.139, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.22117521961991438;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.39801362239643095;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5929761162978598;  // std dev = 0.212, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.22982377150130007;  // std dev = 0.086, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.030991795157913622;  // std dev = 0.159, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7568231690206676;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23573756398351992;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), interaction(J, G) )
%   | | | then return 0.0443682183134561;  // std dev = 2.067, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.1233861740531536;  // std dev = 2.325, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.1516481857792338;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.019151993103761807;  // std dev = 3.481, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21714359967902766;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( location(E, F), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2117461817226846;  // std dev = 2.387, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return -0.20252495607028653;  // std dev = 0.453, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( phenotype(E, H) )
%   | | | then return 0.004092250187757633;  // std dev = 1.360, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2047975217723351;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( location(J, I), enzyme(J, K) )
%   | | | then return -0.002495022625521156;  // std dev = 1.347, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.14300518421124805;  // std dev = 3.226, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.12287362592415754;  // std dev = 2.066, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.0020174710453116154;  // std dev = 3.433, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1835724998556843;  // std dev = 0.069, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.020346511346160247;  // std dev = 1.714, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.08884002141326565;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( complex(D, J), interaction(A, K) )
%   | | | then return -0.02924471011476912;  // std dev = 1.295, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.11668709582408335;  // std dev = 2.285, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( enzyme(A, L), location(A, M) )
%   | | then if ( location(N, M), recursion_proteinclass(N, B) )
%   | | | then return 0.4258413361225243;  // std dev = 1.606, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.20999563484617542;  // std dev = 0.303, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, P) )
%   | | | then return -0.026941686962431072;  // std dev = 1.990, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.06350753799252083;  // std dev = 3.510, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.18722297950660494;  // std dev = 0.159, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), enzyme(A, G) )
%   | | then return -0.07209917867400803;  // std dev = 0.306, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else return -0.014368986861321192;  // std dev = 0.352, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5401265420090798;  // std dev = 0.157, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.2556675753945881;  // std dev = 0.056, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6256282971971497;  // std dev = 0.481, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2806649160418866;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.24292567543305;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.004834826617087319;  // std dev = 3.880, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.211', 'seconds']
Refined model CLL: -0.258692


******************************************
Best model found
******************************************
Results 

CLL : -0.265774 

AUC ROC : 0.914294 

AUC PR : 0.233755 

Precision : 0.250627 

Recall : 0.361011 

F1 : 0.295858 

Total Learning Time : 14.928 

Total Inference Time : 9.039712905883789 

Total revision time: 31.92639587211609
Best scored revision CLL: -0.258692


Results 

CLL : -0.265774 

AUC ROC : 0.914294 

AUC PR : 0.233755 

Precision : 0.250627 

Recall : 0.361011 

F1 : 0.295858 

Total Learning Time : 32.054196575164795 

Total Inference Time : 9.039712905883789 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.129
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17666745361803127;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13410479075862566;  // std dev = 6.038, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
%   | | | else return 0.16217729296905892;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13283924574905168;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.17228056316133922;  // std dev = 6.101, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08305089683944764;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.11409023008329226;  // std dev = 6.715, 205.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11001391834718402;  // std dev = 7.540, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10562633876559775;  // std dev = 7.449, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7042078855641828;  // std dev = 0.979, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2611662979217734;  // std dev = 0.036, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07960164891135577;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | | else return 0.08526926818461;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03987308389837382;  // std dev = 3.480, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.046767005362737236;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013432874457265704;  // std dev = 7.228, 280.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04981414805993272;  // std dev = 6.997, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.362', 'seconds']
Parameter learned model CLL:-0.345711 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.038, 122, 52], 'false,false,false,false': [4.784, 70, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.369, 60, 28], 'false,false,false,false': [6.101, 104, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.678, 47, 19], 'false,false,false,false': [6.715, 138, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.54, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.449, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.979, 1, 28], 'true,false': [0.036, 47, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.628, 61, 33], 'false,false,false,false': [3.993, 44, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.48, 60, 28], 'false,false,false,false': [6.2, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.228, 194, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.997, 161, 86]}]
{'': [nan, 0.21706447187928746], 'false': [nan, 0.21706447187928732], 'false,false': [nan, 0.21706447187928746], 'false,false,false': [nan, 0.21706447187928732]}
{'': [nan, 0.2136535376015747], 'false': [nan, 0.21365353760157493], 'false,false': [nan, 0.2136535376015747], 'false,false,false': [0.20953890870656858, 0.22004437869822466]}
{'': [nan, 0.22558818187626384], 'false': [nan, 0.22558818187626384], 'false,false': [nan, 0.22558818187626412], 'false,false,false': [0.2169064531489761, 0.22975660529963154]}
{'': [nan, 0.2164931513403617], 'false': [nan, 0.2164931513403617], 'false,false': [nan, 0.21649315134036146], 'false,false,false': [0.2050045913682277, 0.21995726865913404]}
{'': [nan, 0.22468481846660243], 'false': [nan, 0.22468481846660243], 'false,false': [nan, 0.2246848184666024], 'false,false,false': [nan, 0.2246848184666024]}
{'': [nan, 0.22927938477212734], 'false': [nan, 0.22927938477212734], 'false,false': [nan, 0.22927938477212742], 'false,false,false': [nan, 0.22927938477212656]}
{'': [0.2325558828148648, 0.22919141581952265], 'true': [0.03307636464732817, 2.75146364851002e-05], 'false': [nan, 0.22919141581952265], 'false,false': [nan, 0.22919141581952265], 'false,false,false': [0.2278180172023552, 0.23104389834068495], 'true,true': [nan, 0.03307636464732817], 'true,true,false': [nan, 0.03307636464732817]}
{'': [nan, 0.19442513711658146], 'false': [nan, 0.19442513711658146], 'false,false': [nan, 0.19442513711658171], 'false,false,false': [0.13760471059082346, 0.22347996723856664]}
{'': [nan, 0.186571038164865], 'false': [nan, 0.18657103816486517], 'false,false': [nan, 0.18657103816486517], 'false,false,false': [nan, 0.18657103816486517]}
{'': [nan, 0.19821147588222718], 'false': [nan, 0.19821147588222718], 'false,false': [nan, 0.19821147588222637], 'false,false,false': [nan, 0.19821147588222637]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.257
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7581489350995123;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.1366299477577395;  // std dev = 5.634, 158.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=44 */
%   else if ( interaction(A, G), enzyme(A, H) )
%   | then if ( interaction(A, I), interaction(G, I) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.024815601766178936;  // std dev = 1.826, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.21926004621062345;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7506284237052882;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), interaction(E, D) )
%   | | then return -0.022098952536816187;  // std dev = 0.307, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( complex(D, F), phenotype(A, G) )
%   | | | then return 0.37423622189828587;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.21810052761616355;  // std dev = 1.722, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.8142378667973781;  // std dev = 0.147, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1791045113446219;  // std dev = 0.190, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return 0.10937832219098287;  // std dev = 0.430, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7420813735514968;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19175267982050134;  // std dev = 4.718, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, E) )
%   | then if ( complex(C, F), complex(D, F) )
%   | | then return 0.5747386200289852;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6990687757412563;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(C, G) )
%   | | then return 0.2994390368269597;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.019513779355485615;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.14465691816017276;  // std dev = 0.079, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.1917204106240934;  // std dev = 1.642, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.038602848046900846;  // std dev = 2.058, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.17892245978790075;  // std dev = 4.977, 115.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=43 */
%   | | | else return 0.2545190185419971;  // std dev = 2.736, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.4550699499609146;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6022722701055881;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11745888986656988;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.28349143489938383;  // std dev = 1.793, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.1312210322283197;  // std dev = 3.668, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.16530710136469;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04727701033509407;  // std dev = 1.109, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.3910517197041411;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06201611382392893;  // std dev = 4.378, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.394733754547656;  // std dev = 0.067, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.12125985639751805;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( location(E, F) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.1343180068618028;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.031156144903294013;  // std dev = 4.027, 122.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=23 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.40474410298086766;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.040705309977911344;  // std dev = 1.455, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4037364689611049;  // std dev = 3.133, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   | | | else return -0.2306673048284754;  // std dev = 0.242, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0.2516193131778907;  // std dev = 1.243, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.24540310501250567;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3192260266265249;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4169762739715306;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.10873844982966692;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.15605593699388373;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40576853457507667;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.020665354610301768;  // std dev = 2.889, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.07892472464352912;  // std dev = 5.298, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2574568476101773;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.7796764809524535;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6182354892303844;  // std dev = 0.521, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.23063734038047623;  // std dev = 0.085, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.28834329738760167;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B), location(H, J) )
%   | | | then return 0.46267800720394064;  // std dev = 1.355, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.07303390761056687;  // std dev = 3.006, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22841454796913654;  // std dev = 1.593, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.05635045546976227;  // std dev = 3.206, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.164361302846705;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20344724574842957;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F) )
%   | | then return 0.27487108438694496;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3696573068857438;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24230034914541534;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), location(A, K) )
%   | | | then return -0.062040163342325906;  // std dev = 2.607, 72.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | | | else return 0.09950857687137586;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.024460937593918076;  // std dev = 2.478, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.04659434723918959;  // std dev = 4.285, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3233845035294755;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4822042316019547;  // std dev = 0.352, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.07717555847474455;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.23257582782216488;  // std dev = 0.070, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.011504723282176662;  // std dev = 2.231, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.3040255512268732;  // std dev = 3.296, 71.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=52 */
%   | | else return -0.20754917879368648;  // std dev = 0.056, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(K, A) )
%   | | then return 0.1739938219140429;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.027959245325213027;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), interaction(A, F) )
%   | then return -0.14912620813512895;  // std dev = 0.250, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else if ( complex(D, G), phenotype(A, H) )
%   | | then return 0.06270331414970286;  // std dev = 0.227, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.17209909799424083;  // std dev = 0.819, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.03310638895685783;  // std dev = 1.619, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.18705170992245723;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.07158116963226187;  // std dev = 1.454, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.0024884689276003023;  // std dev = 1.491, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.1253462530866736;  // std dev = 1.335, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.010248018929419985;  // std dev = 4.086, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '20.099', 'seconds']
Refined model CLL: -0.242107


******************************************
Best model found
******************************************
Results 

CLL : -0.255915 

AUC ROC : 0.949467 

AUC PR : 0.16792 

Precision : 0.189189 

Recall : 0.420495 

F1 : 0.260965 

Total Learning Time : 20.257 

Total Inference Time : 11.597983837127686 

Total revision time: 39.35524185752869
Best scored revision CLL: -0.242107


Results 

CLL : -0.255915 

AUC ROC : 0.949467 

AUC PR : 0.16792 

Precision : 0.189189 

Recall : 0.420495 

F1 : 0.260965 

Total Learning Time : 39.483042560577395 

Total Inference Time : 11.597983837127686 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.343
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1979926850995123;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18281421204715664;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.1742342320005986;  // std dev = 5.906, 155.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13621095935663655;  // std dev = 4.842, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.12898524289597832;  // std dev = 5.934, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.20719939987231628;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.08289285114535011;  // std dev = 7.158, 245.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10137611868577721;  // std dev = 7.607, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08346137052299758;  // std dev = 7.607, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7250650677819639;  // std dev = 0.077, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2752678461015915;  // std dev = 0.117, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06878824256187178;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.06035318605928149;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07907553818299892;  // std dev = 3.657, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | | else return 0.04500802489009847;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.043329225991986825;  // std dev = 6.962, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038199577223366574;  // std dev = 6.926, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.367', 'seconds']
Parameter learned model CLL:-0.337399 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.699, 63, 34], 'false,false,false,false': [5.906, 102, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.842, 71, 35], 'false,false,false,false': [5.934, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.839, 19, 14], 'false,false,false,false': [7.158, 172, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.607, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.607, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.077, 0, 35], 'true,false': [0.117, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.651, 40, 20], 'false,false,false,false': [4.654, 67, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.657, 55, 35], 'false,false,false,false': [5.942, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.962, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.926, 167, 87]}]
{'': [nan, 0.2243499755859384], 'false': [nan, 0.22434997558593836], 'false,false': [nan, 0.2243499755859384], 'false,false,false': [nan, 0.22434997558593836]}
{'': [nan, 0.22604875283446743], 'false': [nan, 0.226048752834468], 'false,false': [nan, 0.22604875283446743], 'false,false,false': [0.22765437347220835, 0.2250156087408958]}
{'': [nan, 0.2196816420671931], 'false': [nan, 0.2196816420671931], 'false,false': [nan, 0.2196816420671926], 'false,false,false': [0.22116120155112134, 0.21868679420455947]}
{'': [nan, 0.21493425811264705], 'false': [nan, 0.21493425811264705], 'false,false': [nan, 0.21493425811264807], 'false,false,false': [0.24426078971533516, 0.2091499096262408]}
{'': [nan, 0.22259002009206194], 'false': [nan, 0.22259002009206194], 'false,false': [nan, 0.22259002009206194], 'false,false,false': [nan, 0.22259002009206194]}
{'': [nan, 0.22343190697684295], 'false': [nan, 0.22343190697684295], 'false,false': [nan, 0.2234319069768431], 'false,false,false': [nan, 0.2234319069768433]}
{'': [0.21203261343884366, 0.22007897517710767], 'false': [nan, 0.22007897517710767], 'false,false': [nan, 0.22007897517710767], 'false,false,false': [0.22222222222222232, 0.21875318845015823], 'true': [0.00017023742033594707, 0.00017189989514304616], 'true,true': [nan, 0.00017023742033594707], 'true,true,false': [nan, 0.00017023742033594707]}
{'': [nan, 0.19342404980109867], 'false': [nan, 0.19342404980109867], 'false,false': [nan, 0.19342404980109806], 'false,false,false': [0.14859846883904035, 0.21791265195630244]}
{'': [nan, 0.18932725063667472], 'false': [nan, 0.18932725063667463], 'false,false': [nan, 0.18932725063667463], 'false,false,false': [nan, 0.18932725063667463]}
{'': [nan, 0.1888313631203282], 'false': [nan, 0.1888313631203282], 'false,false': [nan, 0.18883136312032806], 'false,false,false': [nan, 0.18883136312032806]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.045
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8126943896449667;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0.23519811542738034;  // std dev = 0.485, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.058148935099512376;  // std dev = 2.366, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.12481560176617902;  // std dev = 2.966, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), enzyme(C, G) )
%   | | then return 0.39522206823436745;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7531768793559759;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, D), interaction(A, H) )
%   | | then if ( complex(A, I), complex(C, I) )
%   | | | then return -0.14761786127876844;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.07820310520631416;  // std dev = 3.731, 84.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.3168469402403423;  // std dev = 1.494, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.162427049391154;  // std dev = 4.973, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   else if ( phenotype(A, L) )
%   | then return 0.6300862126948608;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, M) )
%   | | then return 0.02704131272080069;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.33465356265595075;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B), location(D, C) )
%   | then return 0.6287067740557231;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.6280148390676056;  // std dev = 0.265, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(F, A), interaction(D, G) )
%   | | | then return -0.07901933352492735;  // std dev = 2.299, 64.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=6 */
%   | | | else return 0.060251509159809154;  // std dev = 2.928, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6872119190043988;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6855559628187955;  // std dev = 5.16e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14437427107771575;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.40891255151995853;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.16593079303893163;  // std dev = 3.955, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), complex(F, C) )
%   | | then return 0.48129208887998276;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.678086905738184;  // std dev = 0.381, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5234497972740993;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.17955248564054963;  // std dev = 0.083, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4779613296539145;  // std dev = 0.110, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(I, K), phenotype(I, L) )
%   | | | then return 0.04088077114537152;  // std dev = 0.866, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22793641604438902;  // std dev = 2.021, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.03484319876824844;  // std dev = 3.173, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | | else return 0.11657192758572502;  // std dev = 3.911, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.404640436678196;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), enzyme(F, D) )
%   | | then return -0.15410026569394614;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, A), complex(C, H) )
%   | | | then return 0.0795595000268728;  // std dev = 1.597, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.02955732118106062;  // std dev = 2.089, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then return 0.038931000826545624;  // std dev = 0.261, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( interaction(A, K), phenotype(A, L) )
%   | | then if ( phenotype(K, L), interaction(K, A) )
%   | | | then return -0.04721700173885277;  // std dev = 0.471, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06405344493776806;  // std dev = 1.391, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.04154094699001923;  // std dev = 1.094, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1087283180302021;  // std dev = 4.637, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.3168054486357442;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.751429934996353;  // std dev = 0.148, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5299807019561369;  // std dev = 0.333, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1935817999509992;  // std dev = 0.099, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.39692557850510696;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4531262947081518;  // std dev = 0.465, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.12092710251165895;  // std dev = 0.130, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.21801785463926138;  // std dev = 2.453, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.05685513563664349;  // std dev = 3.498, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.32505013779645864;  // std dev = 0.113, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.4445522679507937;  // std dev = 0.098, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.14298709876018686;  // std dev = 0.402, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.2794130260043248;  // std dev = 0.321, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.34556209175362795;  // std dev = 0.720, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.032769073343401976;  // std dev = 4.455, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
%   | else if ( interaction(A, J) )
%   | | then return 0.01823207074657914;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.10502759564998794;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09060559290864956;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.16211302878984835;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.28751954541334435;  // std dev = 0.218, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2823201177899686;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.5484408478053802;  // std dev = 0.684, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.16195980679293673;  // std dev = 0.087, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16256321438585836;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06080649952423268;  // std dev = 2.787, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.04139549300516545;  // std dev = 0.780, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09454397116728849;  // std dev = 2.935, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C) )
%   | | then if ( interaction(A, E) )
%   | | | then return -0.03942870773060616;  // std dev = 0.896, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2512117349467928;  // std dev = 0.256, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.2419423644532671;  // std dev = 0.479, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07707773914667433;  // std dev = 0.263, 106.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=19 */
%   else if ( phenotype(A, F) )
%   | then return 0.002984236399879136;  // std dev = 0.263, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.01636308800322138;  // std dev = 0.759, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.044389535732201946;  // std dev = 1.311, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08669051780288174;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | | else return 0.21622288044503354;  // std dev = 1.001, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( enzyme(C, E), interaction(F, A) )
%   | then return -0.025785488254236842;  // std dev = 0.183, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.12998798302138934;  // std dev = 0.704, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.40841917214510465;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.03900733245959656;  // std dev = 0.280, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.22951252917296136;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( location(K, M), location(A, M) )
%   | | | then return -0.030252752905704894;  // std dev = 3.166, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | | else return 0.026655846624960424;  // std dev = 2.196, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else if ( location(A, N) )
%   | | | then return -0.048335252414453946;  // std dev = 1.172, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.1518875078040321;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.656', 'seconds']
Refined model CLL: -0.220948


******************************************
Best model found
******************************************
Results 

CLL : -0.235354 

AUC ROC : 0.964424 

AUC PR : 0.387741 

Precision : 0.290429 

Recall : 0.624113 

F1 : 0.396396 

Total Learning Time : 25.045 

Total Inference Time : 14.44636607170105 

Total revision time: 47.39137910652161
Best scored revision CLL: -0.220948


Results 

CLL : -0.235354 

AUC ROC : 0.964424 

AUC PR : 0.387741 

Precision : 0.290429 

Recall : 0.624113 

F1 : 0.396396 

Total Learning Time : 47.48102997589112 

Total Inference Time : 14.44636607170105 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.418
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20138325853185615;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1720311524434643;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else return 0.15164478669627365;  // std dev = 6.949, 222.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17481259996891993;  // std dev = 5.097, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   | | | else return 0.12345648124282739;  // std dev = 6.569, 200.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.14124298680411623;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.1528362791087792;  // std dev = 7.634, 251.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.079926930217498;  // std dev = 8.400, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09894368352728539;  // std dev = 8.187, 293.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6948731696326168;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.281231522475355;  // std dev = 0.007, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08747185013064299;  // std dev = 3.660, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.06815468027128051;  // std dev = 5.270, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.006376547192038349;  // std dev = 4.243, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   | | | else return 0.057555599608613804;  // std dev = 6.425, 183.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03356216722284682;  // std dev = 7.681, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.049357156599134075;  // std dev = 7.540, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.022', 'seconds']
Parameter learned model CLL:-0.345496 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.666, 64, 33], 'false,false,false,false': [6.949, 151, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.097, 71, 41], 'false,false,false,false': [6.569, 137, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.763, 21, 12], 'false,false,false,false': [7.634, 159, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.4, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.187, 189, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.988, 1, 41], 'true,false': [0.007, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.66, 37, 21], 'false,false,false,false': [5.27, 82, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.243, 96, 41], 'false,false,false,false': [6.425, 120, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.681, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.54, 186, 104]}]
{'': [nan, 0.22542452265028698], 'false': [nan, 0.22542452265028534], 'false,false': [nan, 0.22542452265028698], 'false,false,false': [nan, 0.22542452265028534]}
{'': [nan, 0.21973054510077178], 'false': [nan, 0.21973054510077664], 'false,false': [nan, 0.21973054510077178], 'false,false,false': [0.22446593686895655, 0.21753510267023893]}
{'': [nan, 0.22220407659825425], 'false': [nan, 0.22220407659825425], 'false,false': [nan, 0.22220407659825478], 'false,false,false': [0.23196616312927362, 0.2157905308837427]}
{'': [nan, 0.23209550621896388], 'false': [nan, 0.23209550621896388], 'false,false': [nan, 0.23209550621896227], 'false,false,false': [0.231404958677686, 0.23217067792218454]}
{'': [nan, 0.21777142831476265], 'false': [nan, 0.21777142831476265], 'false,false': [nan, 0.21777142831476393], 'false,false,false': [nan, 0.21777142831476393]}
{'': [nan, 0.22876430782301488], 'false': [nan, 0.22876430782301488], 'false,false': [nan, 0.2287643078230132], 'false,false,false': [nan, 0.22876430782301393]}
{'': [0.2230799616547286, 0.22629390642268526], 'false': [nan, 0.22629390642268526], 'false,false': [nan, 0.22629390642268526], 'false,false,false': [0.23097502972651549, 0.22398543184183184], 'true': [0.023219069286593792, 5.732781757195049e-07], 'true,true': [nan, 0.023219069286593792], 'true,true,false': [nan, 0.023219069286593792]}
{'': [nan, 0.18593158539036467], 'false': [nan, 0.18593158539036467], 'false,false': [nan, 0.18593158539036528], 'false,false,false': [0.13143709969199058, 0.2256066177996282]}
{'': [nan, 0.1884808539714562], 'false': [nan, 0.18848085397145697], 'false,false': [nan, 0.18848085397145697], 'false,false,false': [nan, 0.18848085397145697]}
{'': [nan, 0.19605380966982158], 'false': [nan, 0.19605380966982158], 'false,false': [nan, 0.19605380966982106], 'false,false,false': [nan, 0.19605380966982106]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.483
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), interaction(A, H) )
%   | | | then return -0.0072356802851030666;  // std dev = 2.461, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
%   | | | else return 0.11572469267526996;  // std dev = 3.553, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.14386322081379807;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.20297652130640767;  // std dev = 5.119, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.25055117589312487;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7380397285024398;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(G, F), interaction(G, G) )
%   | | | then return -0.1487513640455064;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.08198105583820237;  // std dev = 4.104, 94.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7286076186237866;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.13819617379873916;  // std dev = 5.253, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.5816019640045568;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.224731078603413;  // std dev = 2.309, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5322979271798955;  // std dev = 0.222, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, D) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.02089803223975743;  // std dev = 2.377, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.15775546924981113;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5905695551590147;  // std dev = 1.222, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.02913532239674332;  // std dev = 2.923, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, K), complex(J, L) )
%   | | | then return 0.03974850294503712;  // std dev = 2.668, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.21816279818058085;  // std dev = 1.640, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return 0.22102439951601505;  // std dev = 2.370, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.14379688230080542;  // std dev = 4.777, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.45365888932945014;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5313050186078893;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.4304093014092016;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, G), interaction(F, F) )
%   | | | then return -0.1244700205219862;  // std dev = 0.012, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.08433360751902678;  // std dev = 6.430, 210.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=61 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7972438523119656;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1779285873546992;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2642053034395771;  // std dev = 1.792, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.09916216572217915;  // std dev = 1.942, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A), complex(A, C) )
%   then return -0.04914321308237115;  // std dev = 0.239, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( phenotype(D, E), interaction(D, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.29996783669916327;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5108157162018245;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(D, G), interaction(D, D) )
%   | | | then return 0.04649715799197535;  // std dev = 1.913, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.1299282474453899;  // std dev = 3.020, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.07446255521842866;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06685433459214049;  // std dev = 1.390, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.2374579319241495;  // std dev = 0.908, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.09073052597162877;  // std dev = 5.895, 172.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.3432779801323452;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4443874752664557;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3206883548942516;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, F) )
%   | | then return -0.10825388177071367;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.2316389928612246;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), interaction(J, G) )
%   | | | then return 0.09121361122080549;  // std dev = 6.042, 184.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=62 */
%   | | | else return 0.005822261142463952;  // std dev = 2.499, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.05380988462904776;  // std dev = 1.485, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.05508313225105023;  // std dev = 2.719, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5461922209964688;  // std dev = 0.230, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.21580664479810946;  // std dev = 0.133, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.3893006902420842;  // std dev = 0.261, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25001714760431215;  // std dev = 1.204, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.04973096500766782;  // std dev = 0.396, 93.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=22 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.01983196138200982;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.337596580444189;  // std dev = 1.452, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( location(A, J) )
%   | | | then return 0.034115531327103585;  // std dev = 4.060, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | | else return 0.1860043235569925;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C), location(E, D) )
%   | | then return 0.433311375350856;  // std dev = 0.249, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return 0.08166798665290927;  // std dev = 0.323, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return -0.1018769626969487;  // std dev = 0.274, 117.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=17 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5734924939385923;  // std dev = 0.241, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.22068679958080845;  // std dev = 0.069, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6778534591879194;  // std dev = 0.621, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.23654167119327615;  // std dev = 0.090, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.060739722300033556;  // std dev = 3.155, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.24565637512455074;  // std dev = 1.562, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( enzyme(C, E), interaction(C, A) )
%   | then return -0.09458563567467831;  // std dev = 0.300, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then return -0.010817691248052189;  // std dev = 0.321, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | else return 0.05190781532356296;  // std dev = 0.364, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B), interaction(A, G) )
%   | | then return 0.3958643305871749;  // std dev = 0.175, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.03258916716238594;  // std dev = 3.062, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.1019482682174161;  // std dev = 3.880, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | else if ( complex(A, J) )
%   | | then return -0.0983071530033856;  // std dev = 0.263, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.022700406220551573;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.010491262494590687;  // std dev = 1.034, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), complex(C, E) )
%   | then return 0.2800528856271611;  // std dev = 0.329, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | else if ( interaction(A, C), complex(C, F) )
%   | | then return -0.19089393092342016;  // std dev = 0.119, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return -0.018765168928496057;  // std dev = 4.971, 190.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=52 */
%   | | | else return 0.09574279598545091;  // std dev = 2.151, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   else if ( complex(A, H), enzyme(A, I) )
%   | then return -0.07586018715450568;  // std dev = 0.222, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.49463778671478215;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.21112753237806473;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.35933418160683367;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14660127129099043;  // std dev = 1.127, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.726', 'seconds']
Refined model CLL: -0.260421


******************************************
Best model found
******************************************
Results 

CLL : -0.271604 

AUC ROC : 0.913143 

AUC PR : 0.274275 

Precision : 0.306358 

Recall : 0.4 

F1 : 0.346972 

Total Learning Time : 25.483 

Total Inference Time : 16.028604984283447 

Total revision time: 50.2409109840393
Best scored revision CLL: -0.260421


Results 

CLL : -0.271604 

AUC ROC : 0.913143 

AUC PR : 0.274275 

Precision : 0.306358 

Recall : 0.4 

F1 : 0.346972 

Total Learning Time : 50.33056185340881 

Total Inference Time : 16.028604984283447 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.402
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2053187464202672;  // std dev = 7.750, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19665831905696377;  // std dev = 4.911, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | | | else return 0.15854643094507762;  // std dev = 6.027, 165.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11876361892305215;  // std dev = 5.494, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.13723872468353723;  // std dev = 5.666, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10664799349911085;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.07581845927786963;  // std dev = 6.946, 234.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12244325019913047;  // std dev = 7.718, 261.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09725209073669983;  // std dev = 7.736, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7278980517021519;  // std dev = 0.045, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27273427733788846;  // std dev = 0.066, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.015842453740778802;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.07866183430652422;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03977469841835228;  // std dev = 4.271, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.07056086192823605;  // std dev = 5.572, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06610846861839685;  // std dev = 6.867, 251.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009861006841907676;  // std dev = 7.134, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.944', 'seconds']
Parameter learned model CLL:-0.333695 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.75, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.911, 66, 38], 'false,false,false,false': [6.027, 111, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.494, 96, 44], 'false,false,false,false': [5.666, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 50, 24], 'false,false,false,false': [6.946, 166, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.718, 169, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.736, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.045, 0, 44], 'true,false': [0.066, 98, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.149, 34, 14], 'false,false,false,false': [4.712, 64, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.271, 87, 44], 'false,false,false,false': [5.572, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.867, 159, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.134, 192, 92]}]
{'': [nan, 0.22664293342826763], 'false': [nan, 0.22664293342826716], 'false,false': [nan, 0.22664293342826763], 'false,false,false': [nan, 0.22664293342826716]}
{'': [nan, 0.22503834938710324], 'false': [nan, 0.22503834938709977], 'false,false': [nan, 0.22503834938710324], 'false,false,false': [0.23187869822485305, 0.22016528925619647]}
{'': [nan, 0.21862875041176236], 'false': [nan, 0.21862875041176236], 'false,false': [nan, 0.21862875041176252], 'false,false,false': [0.2155898602024158, 0.2213951806558243]}
{'': [nan, 0.2094543619481566], 'false': [nan, 0.2094543619481566], 'false,false': [nan, 0.20945436194815667], 'false,false,false': [0.21913805697589425, 0.2061636395378686]}
{'': [nan, 0.22824843679014847], 'false': [nan, 0.22824843679014847], 'false,false': [nan, 0.22824843679014795], 'false,false,false': [nan, 0.22824843679014795]}
{'': [nan, 0.2275349309241449], 'false': [nan, 0.2275349309241449], 'false,false': [nan, 0.22753493092414623], 'false,false,false': [nan, 0.22753493092414587]}
{'': [0.21416225115468893, 0.22087598645617812], 'false': [nan, 0.22087598645617812], 'false,false': [nan, 0.22087598645617812], 'false,false,false': [0.20659722222222243, 0.2265722615576847], 'true': [4.6080762035332675e-05, 4.489723559042878e-05], 'true,true': [nan, 4.6080762035332675e-05], 'true,true,false': [nan, 4.6080762035332675e-05]}
{'': [nan, 0.184830027693378], 'false': [nan, 0.184830027693378], 'false,false': [nan, 0.1848300276933789], 'false,false,false': [0.13925262124739116, 0.22826677468286977]}
{'': [nan, 0.18786908901419838], 'false': [nan, 0.18786908901419652], 'false,false': [nan, 0.18786908901419652], 'false,false,false': [nan, 0.18786908901419652]}
{'': [nan, 0.17918475650717003], 'false': [nan, 0.17918475650717003], 'false,false': [nan, 0.17918475650717003], 'false,false,false': [nan, 0.17918475650717003]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.8
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995115;  // std dev = 2.60e-07, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.10814893509951236;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2086643990170371;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.743329951693919;  // std dev = 0.171, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.5360765289229101;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return -0.01982988218597315;  // std dev = 1.369, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.10098164564847377;  // std dev = 4.127, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1827862261279313;  // std dev = 3.635, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.08476943673142641;  // std dev = 3.302, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.54946792140929;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6624784413215418;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.27325116917561737;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5833817360348225;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(G, H), complex(G, I) )
%   | | | then return 0.10324728472001195;  // std dev = 3.585, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return -0.004709906367789613;  // std dev = 3.496, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
%   | | else if ( location(A, J) )
%   | | | then return 0.1498067014638803;  // std dev = 4.188, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | | else return 0.0487396762140642;  // std dev = 1.042, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.44947644247612534;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.08690250345983931;  // std dev = 1.393, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.15291508627868355;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, A), complex(G, D) )
%   | | | then return 0.19899482781334657;  // std dev = 1.670, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.052168431585037915;  // std dev = 1.828, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.13279663786814075;  // std dev = 2.604, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.02745053006948553;  // std dev = 2.796, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.41071652742652215;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12613909454728206;  // std dev = 4.415, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.3069803271135878;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.39280878570520344;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14490752707870122;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, G), location(F, H) )
%   | | | then return -0.017136632719849863;  // std dev = 0.644, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.14362282717154598;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6599422752459737;  // std dev = 1.045, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.18751522450322428;  // std dev = 0.275, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.002312638117979039;  // std dev = 2.062, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.09120340490367507;  // std dev = 4.574, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2701023545194018;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.10628781202833563;  // std dev = 1.084, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.06042067588529295;  // std dev = 2.555, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(A, I), interaction(J, D) )
%   | | | then return 0.14108186880615087;  // std dev = 1.722, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.037633605556273875;  // std dev = 3.932, 108.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=30 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.3371936889202694;  // std dev = 0.848, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.17767046141751752;  // std dev = 2.223, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.03426136966324659;  // std dev = 1.546, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1618366393182002;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22343785772995503;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2606154863190837;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5815868519243952;  // std dev = 0.581, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.1822172331893396;  // std dev = 0.040, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2659727790560411;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(H, J), location(I, K) )
%   | | | then return 0.1531466838698457;  // std dev = 1.012, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07079731344510737;  // std dev = 1.458, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.03101062657776889;  // std dev = 2.127, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.11005311891488341;  // std dev = 3.776, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(C, E) )
%   | then return -0.015768043820643313;  // std dev = 0.757, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1830143937452215;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, A), interaction(A, H) )
%   | | then return -0.1009380022312208;  // std dev = 0.050, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(F, I), complex(A, I) )
%   | | | then return 0.1757946348567566;  // std dev = 0.456, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03193000469367361;  // std dev = 1.794, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(A, M) )
%   | | | then return -0.06859937589475762;  // std dev = 1.223, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.037671109760629734;  // std dev = 3.071, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.2482799932521882;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.047104042184196275;  // std dev = 4.129, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( recursion_proteinclass(C, B), interaction(C, E) )
%   | then return 0.15559660201043346;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.3678437475189383;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, G), complex(C, D) )
%   | | | then return -0.13711822674529978;  // std dev = 0.976, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.011493103855878949;  // std dev = 1.857, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.18634876931656;  // std dev = 2.206, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | | else return 0.4004898507153565;  // std dev = 2.632, 51.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=39 */
%   | | else return -0.21917199623620712;  // std dev = 0.053, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, A) )
%   | | then return -0.030114715554776;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.013468012706793563;  // std dev = 0.342, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B), complex(A, D) )
%   | then return 0.14188403353791995;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.07295439541194831;  // std dev = 0.195, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( interaction(C, F), complex(F, D) )
%   | | | then return 0.06594883760840549;  // std dev = 1.871, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.0231240031058963;  // std dev = 1.973, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then return -0.004553402717046901;  // std dev = 0.228, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5116242909102333;  // std dev = 0.621, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.19554118175463828;  // std dev = 0.219, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.10094486929345847;  // std dev = 2.321, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.04342501578464513;  // std dev = 1.529, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '363', 'milliseconds']
Refined model CLL: -0.209045


******************************************
Best model found
******************************************
Results 

CLL : -0.216388 

AUC ROC : 0.983313 

AUC PR : 0.34786 

Precision : 0.271917 

Recall : 0.66065 

F1 : 0.385263 

Total Learning Time : 17.8 

Total Inference Time : 11.79127287864685 

Total revision time: 37.632134057998655
Best scored revision CLL: -0.209045


Results 

CLL : -0.216388 

AUC ROC : 0.983313 

AUC PR : 0.34786 

Precision : 0.271917 

Recall : 0.66065 

F1 : 0.385263 

Total Learning Time : 37.72178492736816 

Total Inference Time : 11.79127287864685 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.121
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2049231286478999;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16867858244273398;  // std dev = 4.307, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.15901280067158108;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11842044461407136;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.10947313734906068;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.12050791265748843;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.12729156585321386;  // std dev = 7.140, 228.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08367612107799995;  // std dev = 7.668, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07667151385272121;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7367370298803255;  // std dev = 0.001, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26325528961174627;  // std dev = 0.002, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06436364597732526;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.058319822682956074;  // std dev = 5.151, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03007741329926222;  // std dev = 3.474, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.034746136149138004;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06258907685140237;  // std dev = 7.008, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06385252382974853;  // std dev = 6.916, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.296', 'seconds']
Parameter learned model CLL:-0.343884 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.307, 55, 28], 'false,false,false,false': [6.245, 119, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.392, 62, 28], 'false,false,false,false': [6.362, 134, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.449, 18, 9], 'false,false,false,false': [7.14, 151, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 28], 'true,false': [0.002, 65, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [5.151, 83, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.474, 61, 28], 'false,false,false,false': [6.333, 130, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.008, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.916, 151, 86]}]
{'': [nan, 0.2265218522372537], 'false': [nan, 0.2265218522372534], 'false,false': [nan, 0.2265218522372537], 'false,false,false': [nan, 0.2265218522372534]}
{'': [nan, 0.22136094674556106], 'false': [nan, 0.22136094674556164], 'false,false': [nan, 0.22136094674556106], 'false,false,false': [0.22354478153578267, 0.22030706374285697]}
{'': [nan, 0.21195575681336332], 'false': [nan, 0.21195575681336332], 'false,false': [nan, 0.2119557568133636], 'false,false,false': [0.21435346255278387, 0.21080628300100146]}
{'': [nan, 0.22348124503585548], 'false': [nan, 0.22348124503585548], 'false,false': [nan, 0.2234812450358551], 'false,false,false': [0.22222222222222196, 0.2236254673538374]}
{'': [nan, 0.21617540634128785], 'false': [nan, 0.21617540634128785], 'false,false': [nan, 0.21617540634128823], 'false,false,false': [nan, 0.21617540634128823]}
{'': [nan, 0.2192336832279407], 'false': [nan, 0.2192336832279407], 'false,false': [nan, 0.21923368322794112], 'false,false,false': [nan, 0.21923368322794118]}
{'': [0.2104257860109195, 0.21838936057008979], 'false': [nan, 0.21838936057008979], 'false,false': [nan, 0.21838936057008979], 'false,false,false': [0.22027348394768154, 0.2174818597151306], 'true': [6.819031415718411e-08, 6.659757859713758e-08], 'true,true': [nan, 6.819031415718411e-08], 'true,true,false': [nan, 6.819031415718411e-08]}
{'': [nan, 0.18834624481757112], 'false': [nan, 0.18834624481757112], 'false,false': [nan, 0.1883462448175715], 'false,false,false': [0.13558282546740263, 0.21331766870355848]}
{'': [nan, 0.1988213241434253], 'false': [nan, 0.19882132414342563], 'false,false': [nan, 0.19882132414342563], 'false,false,false': [nan, 0.19882132414342563]}
{'': [nan, 0.20181428666605886], 'false': [nan, 0.20181428666605886], 'false,false': [nan, 0.20181428666605827], 'false,false,false': [nan, 0.20181428666605827]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.314
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.15360348055405781;  // std dev = 0.456, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, F), interaction(D, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.24703782398840118;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.17666745361803043;  // std dev = 5.413, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | | else return 0.09148226843284563;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.6279691903746851;  // std dev = 0.326, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.04234890744224927;  // std dev = 0.402, 86.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( location(F, G), phenotype(F, H) )
%   | | then if ( interaction(I, F), interaction(F, I) )
%   | | | then return 0.15590707202536921;  // std dev = 2.722, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.2679434975398884;  // std dev = 3.358, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | else if ( complex(F, J), interaction(K, F) )
%   | | | then return 0.03525421604598263;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.13205722000057574;  // std dev = 3.286, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.505070101459489;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23386226157994874;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.5133105950235567;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.3778324987691922;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.6954324641340767;  // std dev = 0.096, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( enzyme(F, G), phenotype(A, H) )
%   | | then return 0.2901354884703765;  // std dev = 0.951, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.059900604240963;  // std dev = 1.572, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return -0.173141080404388;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.6043383774432748;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.13944239739174993;  // std dev = 4.428, 89.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=29 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.12541719181831473;  // std dev = 2.718, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.05397495826356098;  // std dev = 3.861, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.5747377740280355;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.24190081693694546;  // std dev = 0.358, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6546546441260186;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03861888517234999;  // std dev = 2.617, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else return -0.08540488197850044;  // std dev = 0.282, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6539411603475189;  // std dev = 2.075, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return -0.20626312422881027;  // std dev = 0.175, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1446506208684922;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16561678891688258;  // std dev = 3.624, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(C, D), complex(D, E) )
%   | | then return 0.36720077228214826;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4641714100843016;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.17577619134003797;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.13479629467275125;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( interaction(H, F), phenotype(F, G) )
%   | | | then return -0.055761900334143466;  // std dev = 1.978, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.08987836018491313;  // std dev = 3.897, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4917845010548562;  // std dev = 0.196, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1216517735650564;  // std dev = 4.383, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3378193837720975;  // std dev = 0.061, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(D, F), phenotype(E, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.6272052862359055;  // std dev = 0.321, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.026835552333511006;  // std dev = 4.667, 134.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=35 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.08635850667826986;  // std dev = 0.779, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.2672202901550541;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.10716946774014542;  // std dev = 1.081, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.47375936797867063;  // std dev = 0.726, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.14909548621662128;  // std dev = 1.841, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.060909372979808404;  // std dev = 3.139, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22657129619549193;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.5899008646196081;  // std dev = 0.511, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7110837418477275;  // std dev = 0.215, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.2264028544174794;  // std dev = 0.057, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( enzyme(H, I) )
%   | | then return -0.037120401365462165;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.35765123004841093;  // std dev = 0.293, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1483075837996902;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.28638283129450653;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04319593409121219;  // std dev = 5.027, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.240259480216534;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), complex(A, G) )
%   | | then if ( phenotype(A, F), interaction(A, E) )
%   | | | then return -0.10081225837964061;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 9.775160308266905E-4;  // std dev = 1.511, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.33460839098285794;  // std dev = 0.968, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.041603933714253805;  // std dev = 3.529, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), complex(K, L) )
%   | | | then return -0.1476335359242445;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -6.794459111522655E-5;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.0574836389024587;  // std dev = 1.783, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.009243317332526311;  // std dev = 3.706, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3040920491056209;  // std dev = 0.204, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( enzyme(A, E), interaction(D, F) )
%   | | then return 0.029336721696228012;  // std dev = 0.352, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.0860247860082966;  // std dev = 0.301, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.6760115911831437;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.24802328465307485;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.030246655283956748;  // std dev = 2.273, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.12089457223265837;  // std dev = 2.717, 43.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=19 */
%   | | else if ( location(A, K) )
%   | | | then return 0.006377773032347557;  // std dev = 0.871, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07286967671722482;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(C, E), enzyme(A, F) )
%   | then if ( location(A, G), phenotype(C, H) )
%   | | then return 0.02211234794976154;  // std dev = 0.318, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.3375188243423565;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.040301291973258435;  // std dev = 0.235, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | then return 0.553653332053507;  // std dev = 0.184, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.1984535206802732;  // std dev = 0.076, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then if ( recursion_proteinclass(M, B) )
%   | | | then return 0.3377017980087427;  // std dev = 0.563, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.023378562825485946;  // std dev = 2.823, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.049582766998504314;  // std dev = 1.917, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.01132052576488604;  // std dev = 2.483, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '21.737', 'seconds']
Refined model CLL: -0.243953


******************************************
Best model found
******************************************
Results 

CLL : -0.241546 

AUC ROC : 0.95561 

AUC PR : 0.187822 

Precision : 0.213213 

Recall : 0.501767 

F1 : 0.299262 

Total Learning Time : 16.314 

Total Inference Time : 7.34024715423584 

Total revision time: 30.971477088928225
Best scored revision CLL: -0.243953


Results 

CLL : -0.241546 

AUC ROC : 0.95561 

AUC PR : 0.187822 

Precision : 0.213213 

Recall : 0.501767 

F1 : 0.299262 

Total Learning Time : 31.06112795829773 

Total Inference Time : 7.34024715423584 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.366
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18521660427244457;  // std dev = 7.651, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15062120187060235;  // std dev = 5.484, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.12461497982121464;  // std dev = 5.523, 148.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17087731384810165;  // std dev = 4.744, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.1706238145777286;  // std dev = 5.785, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.06248044799738674;  // std dev = 3.801, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.12084575729898037;  // std dev = 6.684, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10838795778048088;  // std dev = 7.576, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09502134529466837;  // std dev = 7.540, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7336981088902207;  // std dev = 0.019, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26615775036253175;  // std dev = 0.026, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06300479401483618;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.08013143879337017;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0470437262896018;  // std dev = 3.795, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | | else return 0.0742826099157873;  // std dev = 5.764, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03446972400237617;  // std dev = 6.988, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017027093294979107;  // std dev = 7.053, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.370', 'seconds']
Parameter learned model CLL:-0.337455 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.484, 95, 44], 'false,false,false,false': [5.523, 105, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.744, 63, 35], 'false,false,false,false': [5.785, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.801, 52, 20], 'false,false,false,false': [6.684, 134, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.576, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.54, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 35], 'true,false': [0.026, 69, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.986, 47, 24], 'false,false,false,false': [4.266, 52, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.795, 69, 35], 'false,false,false,false': [5.764, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.988, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.053, 180, 87]}]
{'': [nan, 0.22009440895471846], 'false': [nan, 0.2200944089547185], 'false,false': [nan, 0.22009440895471846], 'false,false,false': [nan, 0.2200944089547185]}
{'': [nan, 0.21124452160400253], 'false': [nan, 0.21124452160400117], 'false,false': [nan, 0.21124452160400253], 'false,false,false': [0.21634490968376358, 0.20612673484295085]}
{'': [nan, 0.22938895518990812], 'false': [nan, 0.22938895518990812], 'false,false': [nan, 0.22938895518990646], 'false,false,false': [0.22968159129295765, 0.2291925024065261]}
{'': [nan, 0.21719975978106817], 'false': [nan, 0.21719975978106817], 'false,false': [nan, 0.2171997597810688], 'false,false,false': [0.20061728395061698, 0.2222413310802767]}
{'': [nan, 0.22419915067490145], 'false': [nan, 0.22419915067490145], 'false,false': [nan, 0.22419915067490118], 'false,false,false': [nan, 0.22419915067490118]}
{'': [nan, 0.22651811442223854], 'false': [nan, 0.22651811442223854], 'false,false': [nan, 0.22651811442223924], 'false,false,false': [nan, 0.2265181144222379]}
{'': [0.2232256722144725, 0.22581693716212256], 'false': [nan, 0.22581693716212256], 'false,false': [nan, 0.22581693716212256], 'false,false,false': [0.22376512596706996, 0.2274999999999995], 'true': [9.809968109765675e-06, 9.658865891091668e-06], 'true,true': [nan, 9.809968109765675e-06], 'true,true,false': [nan, 9.809968109765675e-06]}
{'': [nan, 0.19222784667364573], 'false': [nan, 0.19222784667364573], 'false,false': [nan, 0.19222784667364526], 'false,false,false': [0.13846844548992002, 0.2307429376955813]}
{'': [nan, 0.18784247970599044], 'false': [nan, 0.18784247970599127], 'false,false': [nan, 0.18784247970599127], 'false,false,false': [nan, 0.18784247970599127]}
{'': [nan, 0.18632113073325468], 'false': [nan, 0.18632113073325468], 'false,false': [nan, 0.18632113073325499], 'false,false,false': [nan, 0.18632113073325499]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 29.319
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, E), complex(D, F) )
%   | | | then return 0.10814893509951237;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12130682983635366;  // std dev = 4.292, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | | | else return 0.17210242347160493;  // std dev = 4.304, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8084919171123196;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.831275877020759;  // std dev = 0.117, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.16135824716548963;  // std dev = 0.015, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1365219206184381;  // std dev = 0.149, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.08567285896404862;  // std dev = 4.470, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | | else return 0.15539948855068528;  // std dev = 4.943, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.2616145519214846;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5854680213227981;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7713921744584668;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.0891199144269682;  // std dev = 1.250, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.15884263474151059;  // std dev = 2.135, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.49159804848365196;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.17669554631122789;  // std dev = 2.771, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(N, A), location(A, P) )
%   | | | then return 0.11061130844470812;  // std dev = 5.369, 147.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=43 */
%   | | | else return 0.23992874357066438;  // std dev = 1.379, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.36228162945270737;  // std dev = 0.293, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), complex(D, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.0054894063397266145;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1649279407717233;  // std dev = 1.289, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(D, I), interaction(D, A) )
%   | | | then return -0.1288941054464653;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0026002739724462712;  // std dev = 2.071, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), phenotype(J, M) )
%   | | | then return 0.0598658996843369;  // std dev = 1.415, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2908693210556036;  // std dev = 2.255, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( complex(A, N), interaction(P, A) )
%   | | | then return 0.21251853139327848;  // std dev = 2.658, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.10191365021626457;  // std dev = 4.991, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.34489523622554663;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.3404555356294711;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.47203042822390673;  // std dev = 0.374, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), complex(A, H) )
%   | | | then return 0.6897436057203484;  // std dev = 0.614, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.30911858667878755;  // std dev = 4.331, 80.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=43 */
%   | | else return -0.2118639913444785;  // std dev = 0.045, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.08941529259799716;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.06272633741982166;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04404011516489764;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.37692251241465835;  // std dev = 0.248, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.46322516624630056;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.17691694925448248;  // std dev = 0.042, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( location(A, H), interaction(I, A) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.28788017309111813;  // std dev = 0.155, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5710639583662757;  // std dev = 0.898, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.08515022373400298;  // std dev = 1.976, 55.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
%   | | | else return 0.07370520851533074;  // std dev = 4.850, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
%   | else if ( interaction(A, A) )
%   | | then return -0.024555493729858192;  // std dev = 0.313, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.33126836763306944;  // std dev = 0.492, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.20394913428540268;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.34953542066280713;  // std dev = 0.183, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5757656970955601;  // std dev = 0.282, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.18287153476519036;  // std dev = 0.073, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( interaction(I, G), phenotype(I, J) )
%   | | then if ( enzyme(G, K), interaction(G, I) )
%   | | | then return -0.024173586950766778;  // std dev = 1.715, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.08877739227352544;  // std dev = 4.096, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.020529631776890322;  // std dev = 1.437, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.05415644746812992;  // std dev = 1.709, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | else return 0.4192927887216947;  // std dev = 0.926, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(A, E), phenotype(C, F) )
%   | then return -9.206801587984168E-4;  // std dev = 0.255, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | else if ( interaction(C, C), location(A, D) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.24309246678913485;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.03110095322148898;  // std dev = 2.042, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( complex(C, G), phenotype(C, H) )
%   | | | then return 0.24256791632944655;  // std dev = 2.041, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.08706588802606419;  // std dev = 3.709, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return -0.21171256435821395;  // std dev = 0.305, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return -0.09616452728531182;  // std dev = 0.384, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.06703554779764147;  // std dev = 0.543, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.04240855449934114;  // std dev = 1.068, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16256777681600254;  // std dev = 0.266, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.3266392246616984;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1236645727821643;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return -0.12357449385034554;  // std dev = 0.899, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return -0.006405779509389556;  // std dev = 3.649, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( complex(A, K), complex(I, L) )
%   | | | then return -0.01538007467336131;  // std dev = 0.803, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.22257674280445383;  // std dev = 1.695, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.14975204900190006;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.01814648523080143;  // std dev = 3.202, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.15848449498422876;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.27531324306561167;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, D), complex(A, F) )
%   | | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.2127497827700257;  // std dev = 0.705, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.04117791080312791;  // std dev = 0.645, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.19313544623907056;  // std dev = 1.324, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.10590670915946478;  // std dev = 2.848, 85.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), location(I, L) )
%   | | | then return 0.005065205838593717;  // std dev = 3.890, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | | else return 0.3184185736522537;  // std dev = 1.404, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.25576179432223933;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.458', 'seconds']
Refined model CLL: -0.255683


******************************************
Best model found
******************************************
Results 

CLL : -0.273121 

AUC ROC : 0.929936 

AUC PR : 0.29208 

Precision : 0.213763 

Recall : 0.51773 

F1 : 0.302591 

Total Learning Time : 29.319 

Total Inference Time : 18.388155221939087 

Total revision time: 55.52389937400818
Best scored revision CLL: -0.255683


Results 

CLL : -0.273121 

AUC ROC : 0.929936 

AUC PR : 0.29208 

Precision : 0.213763 

Recall : 0.51773 

F1 : 0.302591 

Total Learning Time : 55.61625820159912 

Total Inference Time : 18.388155221939087 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.439
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21189043169815247;  // std dev = 8.198, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13623231925651347;  // std dev = 6.008, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | | | else return 0.1817013176666886;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09516641080622631;  // std dev = 5.406, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
%   | | | else return 0.15172842881910364;  // std dev = 6.420, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.20367530691628494;  // std dev = 4.142, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | | else return 0.11436154542546802;  // std dev = 7.074, 226.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09552420723826144;  // std dev = 8.324, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06076679040209054;  // std dev = 8.427, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7090501275934488;  // std dev = 0.991, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.26693688046756714;  // std dev = 0.036, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.047629037811245147;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.04536690264440355;  // std dev = 5.225, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0214610994278405;  // std dev = 4.250, 135.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=41 */
%   | | | else return 0.050062423059531326;  // std dev = 6.507, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.052940229239345764;  // std dev = 7.646, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036102804727300014;  // std dev = 7.665, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.205', 'seconds']
Parameter learned model CLL:-0.333747 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.198, 190, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.008, 118, 52], 'false,false,false,false': [5.808, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 102, 41], 'false,false,false,false': [6.42, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.142, 42, 29], 'false,false,false,false': [7.074, 151, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.324, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.427, 224, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.991, 1, 41], 'true,false': [0.036, 84, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.981, 51, 23], 'false,false,false,false': [5.225, 86, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.25, 94, 41], 'false,false,false,false': [6.507, 129, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.646, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.665, 204, 104]}]
{'': [nan, 0.22860845018279652], 'false': [nan, 0.22860845018279466], 'false,false': [nan, 0.22860845018279652], 'false,false,false': [nan, 0.22860845018279466]}
{'': [nan, 0.2200862307661822], 'false': [nan, 0.22008623076618755], 'false,false': [nan, 0.2200862307661822], 'false,false,false': [0.2123183391003456, 0.22790357925493002]}
{'': [nan, 0.2175497377830394], 'false': [nan, 0.2175497377830394], 'false,false': [nan, 0.2175497377830423], 'false,false,false': [0.20438045340308303, 0.22648935742506712]}
{'': [nan, 0.22770584872820754], 'false': [nan, 0.22770584872820754], 'false,false': [nan, 0.22770584872820812], 'false,false,false': [0.24161872644316598, 0.22142804175211755]}
{'': [nan, 0.22277542243042936], 'false': [nan, 0.22277542243042936], 'false,false': [nan, 0.22277542243042936], 'false,false,false': [nan, 0.22277542243042936]}
{'': [nan, 0.21650131974561715], 'false': [nan, 0.21650131974561715], 'false,false': [nan, 0.21650131974561768], 'false,false,false': [nan, 0.21650131974561668]}
{'': [0.21947959220718602, 0.21576588609695166], 'true': [0.02337380162872997, 1.5607528449339336e-05], 'false': [nan, 0.21576588609695166], 'false,false': [nan, 0.21576588609695166], 'false,false,false': [0.2142074506939367, 0.21667926429831183], 'true,true': [nan, 0.02337380162872997], 'true,true,false': [nan, 0.02337380162872997]}
{'': [nan, 0.1849002278531415], 'false': [nan, 0.1849002278531415], 'false,false': [nan, 0.18490022785314097], 'false,false,false': [0.1337769117868313, 0.22050858829614736]}
{'': [nan, 0.1942179367199708], 'false': [nan, 0.19421793671997084], 'false,false': [nan, 0.19421793671997084], 'false,false,false': [nan, 0.19421793671997084]}
{'': [nan, 0.1907313909579916], 'false': [nan, 0.1907313909579916], 'false,false': [nan, 0.19073139095799233], 'false,false,false': [nan, 0.19073139095799233]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 65.907
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(A, E) )
%   | then if ( complex(D, E) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19148226843284566;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0.10139217834275562;  // std dev = 0.429, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( recursion_proteinclass(G, B), interaction(I, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1709451436303194;  // std dev = 6.735, 211.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=66 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19148226843284563;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( complex(A, E), interaction(D, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8164518597935604;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, G), interaction(G, C) )
%   | | then return 0.09166231561861189;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7486150897666976;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8348252804900502;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8352133549999;  // std dev = 0.006, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.16154887663772516;  // std dev = 0.108, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.25998029495571356;  // std dev = 3.048, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | | else return 0.1414179824691122;  // std dev = 5.268, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(D, F), complex(E, G) )
%   | | | then return 0.5647858361328628;  // std dev = 1.698, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return 0.6943236037994666;  // std dev = 2.313, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else if ( enzyme(D, H), enzyme(A, H) )
%   | | | then return 0.7669064383659058;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12221953919644588;  // std dev = 1.184, 39.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | else if ( complex(A, I) )
%   | | then return -0.14251290663420177;  // std dev = 0.191, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.1876218253218673;  // std dev = 0.155, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(A, J) )
%   | then return 0.13359907973931326;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.7794533246333909;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21572331532562514;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( location(E, C) )
%   | | | then return 0.5239289651237997;  // std dev = 2.514, 88.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=81 */
%   | | | else return 0.26913942662503554;  // std dev = 2.039, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.14970897461631313;  // std dev = 0.136, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.5119981169117899;  // std dev = 0.770, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.14895001644356168;  // std dev = 0.021, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( interaction(A, G) )
%   | then return 0.27032962199812477;  // std dev = 0.915, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.003332999769116903;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.197484225710347;  // std dev = 1.219, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return 0.049534275176556584;  // std dev = 0.464, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.29515467193136863;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.36451360281847167;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.44078838989135954;  // std dev = 0.053, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.12042799957424387;  // std dev = 0.038, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3760215007124749;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, I), location(A, J) )
%   | | | then return 0.07059263743815786;  // std dev = 3.193, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | | | else return 0.13984316690000784;  // std dev = 2.814, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.07362271164967972;  // std dev = 0.664, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.058150294491621395;  // std dev = 1.624, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( enzyme(A, D), interaction(C, A) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.06386452964735607;  // std dev = 0.917, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.25172205955804516;  // std dev = 0.160, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.03764991545888342;  // std dev = 0.259, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else return -0.054299309912343385;  // std dev = 0.234, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.298993459557534;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(H, J), complex(H, K) )
%   | | | then return 0.22890256941041115;  // std dev = 1.065, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.06167691584151376;  // std dev = 1.983, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.06669735080718979;  // std dev = 3.015, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | | else return 0.001905078307376234;  // std dev = 2.946, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.015128393166956968;  // std dev = 0.208, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( phenotype(F, D), interaction(F, F) )
%   | | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.1928354344777558;  // std dev = 2.400, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return -0.15909158802128306;  // std dev = 0.084, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.4617143621612477;  // std dev = 0.898, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.16211695725266825;  // std dev = 0.027, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.025251014269292788;  // std dev = 0.612, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.128503251953843;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.278133411997601;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07426830181833718;  // std dev = 2.840, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, G) )
%   | | then if ( recursion_proteinclass(D, B), phenotype(A, E) )
%   | | | then return 0.36286957990477314;  // std dev = 0.259, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.008260041543459955;  // std dev = 1.666, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | | then return 0.30001754099855577;  // std dev = 0.868, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.023086253691448393;  // std dev = 3.915, 209.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=52 */
%   | else return -0.05215785705799395;  // std dev = 0.234, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then return 0.19214804524912232;  // std dev = 0.385, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then return 0.029281813173029584;  // std dev = 0.263, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12467822865258067;  // std dev = 0.872, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08134873659722935;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.2411352474868906;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), phenotype(E, F) )
%   | | then return -0.24425578184194913;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.17643945822076132;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.21852792554030362;  // std dev = 0.219, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else return -0.07133510582790734;  // std dev = 0.187, 114.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=14 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2283044826300509;  // std dev = 2.579, 67.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   | | | else return -0.1436799906129305;  // std dev = 0.235, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.022227437456318347;  // std dev = 1.303, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2140867160024502;  // std dev = 1.212, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, C) )
%   | then return -0.02490515660041831;  // std dev = 0.597, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, E), interaction(E, F) )
%   | | then return 0.2012364457959734;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.26006080293870637;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), interaction(J, A) )
%   | | | then return 0.011474000634876422;  // std dev = 1.881, 56.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=29 */
%   | | | else return 0.25988774625022726;  // std dev = 2.506, 69.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=52 */
%   | | else return -0.12038471540184713;  // std dev = 0.025, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( phenotype(L, M) )
%   | | | then return -0.13063383210247173;  // std dev = 1.608, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.04130330725072284;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.06132946266303749;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '25.609', 'seconds']
Refined model CLL: -0.181401


******************************************
Best model found
******************************************
Results 

CLL : -0.164053 

AUC ROC : 0.993018 

AUC PR : 0.518046 

Precision : 0.406574 

Recall : 0.886792 

F1 : 0.557533 

Total Learning Time : 65.907 

Total Inference Time : 60.879899978637695 

Total revision time: 135.81054000473023
Best scored revision CLL: -0.181401


Results 

CLL : -0.164053 

AUC ROC : 0.993018 

AUC PR : 0.518046 

Precision : 0.406574 

Recall : 0.886792 

F1 : 0.557533 

Total Learning Time : 135.90289883232117 

Total Inference Time : 60.879899978637695 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.28
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15492312864789934;  // std dev = 8.043, 310.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16306532923656875;  // std dev = 5.868, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
%   | | | else return 0.16622456490535728;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12896770508264144;  // std dev = 5.493, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.16761394689158854;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1608239958968692;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.1334572977792909;  // std dev = 6.581, 192.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07639810957393472;  // std dev = 7.971, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13620234600203956;  // std dev = 7.532, 240.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7289871723443769;  // std dev = 0.016, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27082561647214853;  // std dev = 0.022, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.025993288696042338;  // std dev = 4.180, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | | else return 0.026789427855669838;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04301863743949171;  // std dev = 4.247, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.06203113028449155;  // std dev = 5.616, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06116906507792644;  // std dev = 6.919, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023089633340508953;  // std dev = 7.056, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.102', 'seconds']
Parameter learned model CLL:-0.333181 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.043, 218, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.868, 106, 51], 'false,false,false,false': [5.249, 84, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.493, 96, 44], 'false,false,false,false': [5.573, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.059, 45, 26], 'false,false,false,false': [6.581, 126, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.971, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.532, 148, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 44], 'true,false': [0.022, 87, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.18, 58, 25], 'false,false,false,false': [4.005, 53, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.247, 87, 44], 'false,false,false,false': [5.616, 92, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.919, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.056, 185, 92]}]
{'': [nan, 0.20869927159209264], 'false': [nan, 0.20869927159209256], 'false,false': [nan, 0.20869927159209264], 'false,false,false': [nan, 0.20869927159209256]}
{'': [nan, 0.21980785674764788], 'false': [nan, 0.2198078567476488], 'false,false': [nan, 0.21980785674764788], 'false,false,false': [0.21931924215992543, 0.22041600000000056]}
{'': [nan, 0.22221305909770692], 'false': [nan, 0.22221305909770692], 'false,false': [nan, 0.222213059097706], 'false,false,false': [0.21550967486647407, 0.2283560129900069]}
{'': [nan, 0.22747460938166003], 'false': [nan, 0.22747460938166003], 'false,false': [nan, 0.22747460938165978], 'false,false,false': [0.23209680618924722, 0.22556317523239935]}
{'': [nan, 0.21390820192740828], 'false': [nan, 0.21390820192740828], 'false,false': [nan, 0.21390820192740853], 'false,false,false': [nan, 0.21390820192740853]}
{'': [nan, 0.2363756534213536], 'false': [nan, 0.2363756534213536], 'false,false': [nan, 0.23637565342135403], 'false,false,false': [nan, 0.23637565342135367]}
{'': [0.2229860142277284, 0.2107508072232227], 'true': [5.517793174612186e-06, 5.645367993666034e-06], 'false': [nan, 0.2107508072232227], 'false,false': [nan, 0.2107508072232227], 'false,false,false': [0.21048047612135293, 0.2110457063711918], 'true,true': [nan, 5.517793174612186e-06], 'true,true,false': [nan, 5.517793174612186e-06]}
{'': [nan, 0.18304440890296525], 'false': [nan, 0.18304440890296525], 'false,false': [nan, 0.1830444089029664], 'false,false,false': [0.13768011256492446, 0.22531769395623322]}
{'': [nan, 0.18774227520581918], 'false': [nan, 0.18774227520581993], 'false,false': [nan, 0.18774227520581993], 'false,false,false': [nan, 0.18774227520581993]}
{'': [nan, 0.1797294200992397], 'false': [nan, 0.1797294200992397], 'false,false': [nan, 0.17972942009923795], 'false,false,false': [nan, 0.17972942009923795]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.233
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.17698951480965672;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.12219387891973606;  // std dev = 5.881, 178.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( enzyme(D, F), enzyme(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, F) )
%   | | | then return -0.14468841897281554;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.061828708146876805;  // std dev = 1.074, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, D), location(A, E) )
%   | | | then return 0.4210531330902401;  // std dev = 1.277, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.12895914634032693;  // std dev = 5.920, 173.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=50 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.12092417987024111;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.16479010584404452;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.35957973493163276;  // std dev = 2.291, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.13428047345885089;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(C, E), enzyme(A, E) )
%   | | then return -0.061698467087102304;  // std dev = 0.300, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( interaction(D, F), interaction(F, G) )
%   | | | then return 0.11583228903416372;  // std dev = 3.912, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return -0.005521815850982376;  // std dev = 2.451, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.694214275301423;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7654040762195744;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.17528368204625314;  // std dev = 0.000755, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.09919217273954202;  // std dev = 3.541, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.1647243524559488;  // std dev = 2.293, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3404940537642644;  // std dev = 0.280, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(C, E), complex(A, D) )
%   | | then return -0.0729123390755818;  // std dev = 0.310, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else if ( location(A, F), interaction(C, G) )
%   | | | then return 0.17478717825506168;  // std dev = 3.032, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.0064728180923434514;  // std dev = 2.110, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5850142283220828;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K), enzyme(A, L) )
%   | | | then return 0.026867854388381976;  // std dev = 2.232, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.13610988282026262;  // std dev = 3.177, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.17304262311038043;  // std dev = 2.274, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.0992668957995693;  // std dev = 3.099, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3828681996177044;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.13890527985094014;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.010172494766881235;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.12697968742909077;  // std dev = 1.848, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.0014030742599820316;  // std dev = 2.623, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.7813695833223714;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20638755282333898;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.17527852957472656;  // std dev = 1.993, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.08714169240640837;  // std dev = 5.327, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.268618482842052;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3859226047844708;  // std dev = 0.226, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(F, G) )
%   | | then return -0.18632377431717728;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, H), location(F, I) )
%   | | | then return -0.07721336293300779;  // std dev = 0.744, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.11743370942533993;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( complex(A, K), interaction(L, J) )
%   | | | then return 0.24096022242542992;  // std dev = 1.692, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.08375568169396039;  // std dev = 3.562, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.021436429028155277;  // std dev = 2.355, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.06574184656137513;  // std dev = 4.715, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.53676797341248;  // std dev = 0.247, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.21103029754222224;  // std dev = 0.072, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(E, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.05115381769892633;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.22252762592151787;  // std dev = 1.773, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return -0.024931344286470876;  // std dev = 0.362, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7262229453755807;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2530096748635645;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.18702682984173113;  // std dev = 1.775, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.06222497274399473;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), complex(C, E) )
%   | then return -0.013947849149518632;  // std dev = 0.822, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.22049718368901267;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.41770258737183863;  // std dev = 0.707, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.7036519346759713;  // std dev = 0.207, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.21439657189189293;  // std dev = 0.053, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6190202285717529;  // std dev = 0.220, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.26262590580423356;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.006733147647453066;  // std dev = 3.818, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | | else return 0.07316153504237495;  // std dev = 2.621, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.132252232260514;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2460240910953166;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), interaction(I, A) )
%   | | | then return 0.34784739965412365;  // std dev = 0.774, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.551986541132514;  // std dev = 0.700, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.16394616588261895;  // std dev = 0.043, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.055829398459488346;  // std dev = 0.863, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.2600027628233621;  // std dev = 1.820, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return -0.015981794593900665;  // std dev = 1.468, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.0528238574366943;  // std dev = 3.637, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), location(D, F) )
%   | then return 0.03310725630180482;  // std dev = 0.288, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( location(G, C) )
%   | | | then return -0.15563994505954412;  // std dev = 1.029, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.050331887851918576;  // std dev = 0.182, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.25674230885093385;  // std dev = 0.408, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02035737251966937;  // std dev = 3.370, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), interaction(A, L) )
%   | | | then return 0.5381383278061594;  // std dev = 0.733, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.2227671690424399;  // std dev = 0.285, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.20742830701085985;  // std dev = 0.075, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.17141505532021617;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.676', 'seconds']
Refined model CLL: -0.22072


******************************************
Best model found
******************************************
Results 

CLL : -0.237649 

AUC ROC : 0.975532 

AUC PR : 0.277211 

Precision : 0.25744 

Recall : 0.624549 

F1 : 0.364594 

Total Learning Time : 17.233 

Total Inference Time : 9.031088829040527 

Total revision time: 34.23357175636291
Best scored revision CLL: -0.22072


Results 

CLL : -0.237649 

AUC ROC : 0.975532 

AUC PR : 0.277211 

Precision : 0.25744 

Recall : 0.624549 

F1 : 0.364594 

Total Learning Time : 34.325930583953856 

Total Inference Time : 9.031088829040527 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.138
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18514513281814404;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1695682012519196;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.1610074072072546;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12790307873632814;  // std dev = 4.369, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.15299752008850798;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14723664029210512;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.11745090583648067;  // std dev = 6.692, 202.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09948285143457952;  // std dev = 7.565, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.083747280649;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7308950250671619;  // std dev = 0.019, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2687516826110331;  // std dev = 0.027, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.043691151019314575;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.06892962331389486;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03352315031914229;  // std dev = 3.426, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.0665487701595247;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05168207728362975;  // std dev = 6.989, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04522237996336816;  // std dev = 6.962, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.453', 'seconds']
Parameter learned model CLL:-0.351325 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [4.784, 70, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.369, 60, 28], 'false,false,false,false': [6.172, 111, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [6.692, 135, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.565, 171, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 28], 'true,false': [0.027, 57, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [4.069, 49, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.426, 59, 28], 'false,false,false,false': [6.153, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.989, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.962, 159, 86]}]
{'': [nan, 0.22006968439618982], 'false': [nan, 0.22006968439618962], 'false,false': [nan, 0.22006968439618982], 'false,false,false': [nan, 0.22006968439618962]}
{'': [nan, 0.22179156542090886], 'false': [nan, 0.22179156542090891], 'false,false': [nan, 0.22179156542090886], 'false,false,false': [0.22293444328824122, 0.22004437869822477]}
{'': [nan, 0.22266565944860967], 'false': [nan, 0.22266565944860967], 'false,false': [nan, 0.2226656594486096], 'false,false,false': [0.21692620178442523, 0.2254386250576588]}
{'': [nan, 0.22357699137420287], 'false': [nan, 0.22357699137420287], 'false,false': [nan, 0.22357699137420237], 'false,false,false': [0.22997508009967893, 0.22171388857825414]}
{'': [nan, 0.22269411185407337], 'false': [nan, 0.22269411185407337], 'false,false': [nan, 0.2226941118540734], 'false,false,false': [nan, 0.2226941118540734]}
{'': [nan, 0.22355739644651157], 'false': [nan, 0.22355739644651157], 'false,false': [nan, 0.2235573964465107], 'false,false,false': [nan, 0.2235573964465119]}
{'': [0.22075647763973036, 0.21905181797536777], 'true': [1.2327973517324762e-05, 1.3151755583391895e-05], 'false': [nan, 0.21905181797536777], 'false,false': [nan, 0.21905181797536777], 'false,false,false': [0.21551020408163307, 0.22370343316289257], 'true,true': [nan, 1.2327973517324762e-05], 'true,true,false': [nan, 1.2327973517324762e-05]}
{'': [nan, 0.1954991270480565], 'false': [nan, 0.1954991270480565], 'false,false': [nan, 0.19549912704805678], 'false,false,false': [0.13491490893511188, 0.22668738189504972]}
{'': [nan, 0.19614352088803202], 'false': [nan, 0.19614352088803202], 'false,false': [nan, 0.19614352088803202], 'false,false,false': [nan, 0.19614352088803202]}
{'': [nan, 0.19782008657680772], 'false': [nan, 0.19782008657680772], 'false,false': [nan, 0.19782008657680736], 'false,false,false': [nan, 0.19782008657680736]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.819
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(D, E) )
%   | then if ( interaction(C, F), complex(F, G) )
%   | | then return 0.17393840878372288;  // std dev = 0.465, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.039967116917694036;  // std dev = 0.386, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.08395538671241558;  // std dev = 0.418, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.39148226843284567;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.25814893509951237;  // std dev = 3.633, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.7522149621597101;  // std dev = 0.053, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.3897709296239669;  // std dev = 1.112, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, A), interaction(E, G) )
%   | | then if ( location(A, H), interaction(G, E) )
%   | | | then return -0.11899218252111916;  // std dev = 0.974, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.18095198905105167;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.1884142499039877;  // std dev = 1.936, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.05435693566281714;  // std dev = 2.473, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return 0.4694388641447192;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.11124229127471426;  // std dev = 2.938, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.19178385086527674;  // std dev = 4.699, 104.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.4503096509831644;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.6090426041942155;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5472674584039214;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7955686123293849;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.15202171622946395;  // std dev = 0.113, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( enzyme(A, J), enzyme(I, K) )
%   | | | then return 0.208090064356205;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.022733106834698587;  // std dev = 2.934, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5322569361166473;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1024490027270831;  // std dev = 5.690, 171.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.5773213847468568;  // std dev = 0.144, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.038177318438796515;  // std dev = 0.398, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | else return -0.00998069926865878;  // std dev = 0.344, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.7865331998608234;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2277379157585205;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J) )
%   | | then if ( enzyme(J, K), phenotype(A, L) )
%   | | | then return 0.2347773273465745;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.06353584050558285;  // std dev = 3.391, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.10264004101429577;  // std dev = 2.351, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.29714210620216963;  // std dev = 1.756, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.36142292905031903;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.21705689745132536;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.47718080843462457;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6812374947026782;  // std dev = 0.079, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.18556968854014935;  // std dev = 0.174, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6443864762122116;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10882497466652592;  // std dev = 1.898, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.6206509632666056;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.037967500850598815;  // std dev = 4.781, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(C, F) )
%   | | then return 0.047100433554483644;  // std dev = 0.354, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(E, G) )
%   | | | then return 0.20877185122704087;  // std dev = 0.793, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.34118484745221406;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.025721851512718524;  // std dev = 0.362, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.36806506212139983;  // std dev = 0.108, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( location(A, J), complex(A, K) )
%   | | | then return -0.07678153470184292;  // std dev = 0.989, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03646600388041254;  // std dev = 1.783, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.03554675542976518;  // std dev = 2.194, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.12485780960968249;  // std dev = 3.678, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5350117545455716;  // std dev = 0.206, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.18767993174693992;  // std dev = 0.056, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( enzyme(A, G), enzyme(E, H) )
%   | | then return -0.050574614775827365;  // std dev = 0.253, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.4131479540203896;  // std dev = 0.506, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.016341891053033894;  // std dev = 4.244, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return -0.08837645101187741;  // std dev = 1.410, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.005975970214374224;  // std dev = 1.028, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.11340810811785614;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.04510526646468331;  // std dev = 1.132, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.1756290521091149;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.36549917956289796;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14650415624033256;  // std dev = 0.058, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25630912245737886;  // std dev = 0.577, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.15053913284933165;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( complex(H, J), phenotype(H, K) )
%   | | | then return 0.06281315524626145;  // std dev = 3.001, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | | else return -3.4117273024301794E-5;  // std dev = 3.732, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.15927561073923666;  // std dev = 1.570, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.04151995670600601;  // std dev = 2.060, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C) )
%   | then return -0.05331054197310026;  // std dev = 0.170, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( phenotype(C, E), phenotype(D, F) )
%   | | then if ( location(D, G) )
%   | | | then return 0.08978466184677164;  // std dev = 3.229, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return -0.09174566498690118;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.03930640813299397;  // std dev = 0.371, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.32678186725572833;  // std dev = 0.223, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.45627164916871976;  // std dev = 0.340, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.19779468765532193;  // std dev = 0.153, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.05393693566575481;  // std dev = 0.833, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0337626596513726;  // std dev = 3.109, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(C, E), phenotype(A, E) )
%   | then return -0.05846743551887283;  // std dev = 0.237, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else return -0.01073820250038788;  // std dev = 0.272, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.12849012989600564;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7148068462487707;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15980738190009403;  // std dev = 0.470, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H), phenotype(A, J) )
%   | | | then return 0.27042318240286023;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.024483288637204354;  // std dev = 2.140, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.12159524289670509;  // std dev = 2.359, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.023422231727754414;  // std dev = 3.351, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.615', 'seconds']
Refined model CLL: -0.2429


******************************************
Best model found
******************************************
Results 

CLL : -0.236103 

AUC ROC : 0.942604 

AUC PR : 0.255467 

Precision : 0.256454 

Recall : 0.526502 

F1 : 0.344907 

Total Learning Time : 16.819 

Total Inference Time : 6.995074033737183 

Total revision time: 31.353366119384766
Best scored revision CLL: -0.2429


Results 

CLL : -0.236103 

AUC ROC : 0.942604 

AUC PR : 0.255467 

Precision : 0.256454 

Recall : 0.526502 

F1 : 0.344907 

Total Learning Time : 31.44572494697571 

Total Inference Time : 6.995074033737183 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.304
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1953582374250937;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15619554779269448;  // std dev = 5.456, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.22716154887202533;  // std dev = 5.103, 109.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16597643381706803;  // std dev = 4.729, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.10571865517472046;  // std dev = 6.027, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1218529453484361;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.12304578315160052;  // std dev = 6.651, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1051628285736956;  // std dev = 7.557, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09109130285500128;  // std dev = 7.525, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7177160074397666;  // std dev = 0.043, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.28139147023248484;  // std dev = 0.058, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.014709492650044176;  // std dev = 4.160, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | | | else return 0.06728897728597706;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05938443827490287;  // std dev = 3.681, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | | | else return 0.03664584458686985;  // std dev = 5.960, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02079021762499081;  // std dev = 7.095, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027327720616609007;  // std dev = 7.011, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.182', 'seconds']
Parameter learned model CLL:-0.33189 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.456, 92, 44], 'false,false,false,false': [5.103, 66, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.729, 62, 35], 'false,false,false,false': [6.027, 120, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.636, 39, 20], 'false,false,false,false': [6.651, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.557, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.525, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.043, 0, 35], 'true,false': [0.058, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.16, 62, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.681, 60, 35], 'false,false,false,false': [5.96, 112, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.095, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.011, 177, 87]}]
{'': [nan, 0.22349918875067695], 'false': [nan, 0.2234991887506769], 'false,false': [nan, 0.22349918875067695], 'false,false,false': [nan, 0.2234991887506769]}
{'': [nan, 0.22900458142440575], 'false': [nan, 0.22900458142440713], 'false,false': [nan, 0.22900458142440575], 'false,false,false': [0.21885813148788988, 0.23886878208905038]}
{'': [nan, 0.21898628975107406], 'false': [nan, 0.21898628975107406], 'false,false': [nan, 0.2189862897510742], 'false,false,false': [0.23052987406789757, 0.2111669254454617]}
{'': [nan, 0.22441424435769514], 'false': [nan, 0.22441424435769514], 'false,false': [nan, 0.22441424435769525], 'false,false,false': [0.22407354208560823, 0.22451595416877446]}
{'': [nan, 0.22573612349266908], 'false': [nan, 0.22573612349266908], 'false,false': [nan, 0.22573612349266847], 'false,false,false': [nan, 0.22573612349266847]}
{'': [nan, 0.22741449434037594], 'false': [nan, 0.22741449434037594], 'false,false': [nan, 0.2274144943403759], 'false,false,false': [nan, 0.2274144943403758]}
{'': [0.22398835126387368, 0.2140037839048274], 'true': [5.255829334578672e-05, 4.989381671674999e-05], 'false': [nan, 0.2140037839048274], 'false,false': [nan, 0.2140037839048274], 'false,false,false': [0.20118983234180687, 0.2261850327693946], 'true,true': [nan, 5.255829334578672e-05], 'true,true,false': [nan, 5.255829334578672e-05]}
{'': [nan, 0.18955337582314385], 'false': [nan, 0.18955337582314385], 'false,false': [nan, 0.1895533758231429], 'false,false,false': [0.14259345514166533, 0.21656611968817793]}
{'': [nan, 0.18645851437614847], 'false': [nan, 0.1864585143761482], 'false,false': [nan, 0.1864585143761482], 'false,false,false': [nan, 0.1864585143761482]}
{'': [nan, 0.18616728571336033], 'false': [nan, 0.18616728571336033], 'false,false': [nan, 0.18616728571336075], 'false,false,false': [nan, 0.18616728571336075]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.188
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D) )
%   | then if ( enzyme(A, E), complex(C, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return 0.15602127552504308;  // std dev = 0.457, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | else return 0.23592671287728903;  // std dev = 0.485, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8352909638442307;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.14048845513358;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( enzyme(E, G), complex(E, H) )
%   | | | then return 0.42165111253058535;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.18905329219826575;  // std dev = 5.272, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.026937066406559664;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.1444681490621174;  // std dev = 4.111, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6875068539196254;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.12920046404834545;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5770993646473463;  // std dev = 1.509, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.010178851472416569;  // std dev = 3.673, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.07504233614274793;  // std dev = 2.272, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.16208973664170742;  // std dev = 5.049, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5277476523218242;  // std dev = 0.162, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), phenotype(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.036979179018388535;  // std dev = 1.368, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.18385365734321973;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.4227113026328742;  // std dev = 1.056, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04429510214537222;  // std dev = 2.740, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6800688405520501;  // std dev = 1.418, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.20208593276317144;  // std dev = 0.228, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.12593572677898268;  // std dev = 4.196, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | | else return 0.36148749175713596;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then return -0.03354168404563969;  // std dev = 0.175, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), phenotype(E, G) )
%   | | then if ( complex(E, H), interaction(I, A) )
%   | | | then return 0.3973987965068018;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2334112109005034;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(E, J) )
%   | | | then return 0.06647508288091505;  // std dev = 2.281, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.26082726858564703;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L), interaction(M, K) )
%   | | | then return 0.037860999933151694;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36863059511967017;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.022821167808905873;  // std dev = 2.896, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.0809162730248448;  // std dev = 5.150, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.17437720965164663;  // std dev = 0.275, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5915369592559002;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, E) )
%   | | then return -0.03841210809778011;  // std dev = 0.272, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15473310744568122;  // std dev = 1.482, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.024578827452517295;  // std dev = 1.995, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4721921500884587;  // std dev = 0.978, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.00188031135708353;  // std dev = 2.708, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.11893848493629684;  // std dev = 4.504, 100.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=39 */
%   | | | else return 0.3587350280579315;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5833978762596725;  // std dev = 0.146, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.22997938217184213;  // std dev = 0.075, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.13815522365404584;  // std dev = 0.699, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.48492503136570153;  // std dev = 0.854, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.1983984027671006;  // std dev = 0.037, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6030879701467821;  // std dev = 1.145, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.23102711971729123;  // std dev = 0.132, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.03486590737099129;  // std dev = 0.531, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.08079002850354187;  // std dev = 3.208, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then return -0.04305878436726424;  // std dev = 0.226, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( interaction(C, G), phenotype(G, H) )
%   | | then return 0.16812447450263796;  // std dev = 0.626, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09923550972282247;  // std dev = 0.558, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.011778738373454518;  // std dev = 1.055, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( location(A, J), interaction(K, A) )
%   | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | then return 0.39212749394070967;  // std dev = 0.155, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(K, J), phenotype(K, M) )
%   | | | then return -0.02024485405207956;  // std dev = 3.058, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
%   | | | else return 0.044502422662275415;  // std dev = 3.759, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | else if ( enzyme(A, N) )
%   | | then return 0.03803258830051288;  // std dev = 0.722, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.24009829626410667;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return -0.1129795173987596;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24024912761745398;  // std dev = 0.195, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.25453764871268736;  // std dev = 0.264, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), complex(H, D) )
%   | | | then return -0.10535397091890049;  // std dev = 1.047, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.03380898003594986;  // std dev = 3.423, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.5414103904365332;  // std dev = 0.825, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.108093319528378;  // std dev = 1.581, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else return -0.24900107835201513;  // std dev = 0.090, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0.15554059685992394;  // std dev = 1.029, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, C), complex(A, E) )
%   | then return -0.0840997103729198;  // std dev = 0.236, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(A, F), location(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.26872303552458243;  // std dev = 0.297, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0383131311899515;  // std dev = 1.376, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.0340026222396323;  // std dev = 0.250, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( enzyme(A, I), location(A, J) )
%   | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | then return 0.48646892652148077;  // std dev = 0.129, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.20444950266447612;  // std dev = 0.046, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then return 0.26194064803143;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.07801241798337803;  // std dev = 2.063, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.00549198895300054;  // std dev = 2.501, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '15.988', 'seconds']
Refined model CLL: -0.227449


******************************************
Best model found
******************************************
Results 

CLL : -0.237293 

AUC ROC : 0.983307 

AUC PR : 0.40217 

Precision : 0.315542 

Recall : 0.712766 

F1 : 0.437432 

Total Learning Time : 22.188 

Total Inference Time : 23.08776092529297 

Total revision time: 53.08535994720459
Best scored revision CLL: -0.227449


Results 

CLL : -0.237293 

AUC ROC : 0.983307 

AUC PR : 0.40217 

Precision : 0.315542 

Recall : 0.712766 

F1 : 0.437432 

Total Learning Time : 58.09033931922912 

Total Inference Time : 23.08776092529297 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.56
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21553725125071574;  // std dev = 8.175, 291.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1719408869431008;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.1589495478358389;  // std dev = 5.906, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14921496282493574;  // std dev = 5.185, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.14415495666815295;  // std dev = 6.455, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13761953808186722;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | | else return 0.10231815219554036;  // std dev = 7.139, 234.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08153799708366949;  // std dev = 8.409, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07749505070098736;  // std dev = 8.341, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.703366904573602;  // std dev = 0.991, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2726651821411264;  // std dev = 0.041, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08092056043380785;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.0499346015229534;  // std dev = 5.235, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.012686823404311664;  // std dev = 4.248, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
%   | | | else return 0.03824740640958897;  // std dev = 6.564, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050581760198622996;  // std dev = 7.643, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014684773752384007;  // std dev = 7.812, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.171', 'seconds']
Parameter learned model CLL:-0.32656 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.175, 187, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [5.906, 106, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.185, 78, 41], 'false,false,false,false': [6.455, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 52, 29], 'false,false,false,false': [7.139, 159, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.409, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.341, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.991, 1, 41], 'true,false': [0.041, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.871, 43, 23], 'false,false,false,false': [5.235, 87, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.248, 97, 41], 'false,false,false,false': [6.564, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.643, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.812, 226, 104]}]
{'': [nan, 0.229661907629813], 'false': [nan, 0.22966190762981115], 'false,false': [nan, 0.229661907629813], 'false,false,false': [nan, 0.22966190762981115]}
{'': [nan, 0.22293444328824008], 'false': [nan, 0.22293444328824005], 'false,false': [nan, 0.22293444328824008], 'false,false,false': [0.22506925207756004, 0.22079794904662486]}
{'': [nan, 0.2247398845493552], 'false': [nan, 0.2247398845493552], 'false,false': [nan, 0.224739884549355], 'false,false,false': [0.22588927891188526, 0.22399452971329764]}
{'': [nan, 0.22115132476698018], 'false': [nan, 0.22115132476698018], 'false,false': [nan, 0.22115132476698068], 'false,false,false': [0.22984301173601696, 0.2178222155899559]}
{'': [nan, 0.2175517860425567], 'false': [nan, 0.2175517860425567], 'false,false': [nan, 0.217551786042556], 'false,false,false': [nan, 0.217551786042556]}
{'': [nan, 0.2215473622028158], 'false': [nan, 0.2215473622028158], 'false,false': [nan, 0.22154736220281518], 'false,false,false': [nan, 0.2215473622028155]}
{'': [0.21770577358855875, 0.2198348278156933], 'false': [nan, 0.2198348278156933], 'false,false': [nan, 0.2198348278156933], 'false,false,false': [0.227043158861341, 0.215760431520862], 'true': [0.02339091342085157, 1.9176675575349485e-05], 'true,true': [nan, 0.02339091342085157], 'true,true,false': [nan, 0.02339091342085157]}
{'': [nan, 0.18157492021731683], 'false': [nan, 0.18157492021731683], 'false,false': [nan, 0.18157492021731714], 'false,false,false': [0.13078648961276837, 0.21652749670727908]}
{'': [nan, 0.19091470016942413], 'false': [nan, 0.1909147001694245], 'false,false': [nan, 0.1909147001694245], 'false,false,false': [nan, 0.1909147001694245]}
{'': [nan, 0.18493076384432283], 'false': [nan, 0.18493076384432283], 'false,false': [nan, 0.18493076384432316], 'false,false,false': [nan, 0.18493076384432316]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 29.735
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8010060779566543;  // std dev = 0.232, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.18314893509951125;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12285481745245355;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.2217852987358758;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7227269303567316;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06370065256680547;  // std dev = 0.392, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.4627314008816152;  // std dev = 0.910, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.054528493671943394;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10216607716816013;  // std dev = 1.653, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.7308607257211748;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2717709837457114;  // std dev = 1.443, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7779133113493324;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17083229380483098;  // std dev = 5.676, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5827209591113797;  // std dev = 0.194, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), phenotype(E, G) )
%   | | | then return 0.7156172461841552;  // std dev = 1.020, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.01744474729034786;  // std dev = 0.802, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.17333706888743475;  // std dev = 0.253, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -5.911064565815439E-4;  // std dev = 2.845, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( location(A, J) )
%   | | | then return 0.07433175471978394;  // std dev = 4.467, 124.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   | | | else return 0.27527519748582413;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.05203823454814451;  // std dev = 1.361, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1606576993477742;  // std dev = 2.777, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5188865379726644;  // std dev = 0.118, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, D), location(A, E) )
%   | | then return -0.039825657538689836;  // std dev = 0.288, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | else if ( location(A, F) )
%   | | | then return 0.060392122490313664;  // std dev = 3.346, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.30947614245541577;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6824260103214869;  // std dev = 0.071, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.14984133454380041;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5371332753326391;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.017798529238761407;  // std dev = 2.759, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return 0.14210280605572306;  // std dev = 4.066, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( phenotype(A, D), interaction(E, C) )
%   | | then return 0.2926918943168925;  // std dev = 0.284, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.0361585077544738;  // std dev = 1.086, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.40956562196856794;  // std dev = 0.128, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5099314994549926;  // std dev = 0.260, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.15536601275424844;  // std dev = 0.142, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.15737727461081807;  // std dev = 2.338, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11159170000927245;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.16748161295470204;  // std dev = 2.211, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.0408875102219565;  // std dev = 5.489, 202.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=54 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2566599341603062;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), phenotype(E, F) )
%   | | then return 0.45954199125277445;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.368430109133171;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.07793508484661338;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4803620106517874;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.48967690944325976;  // std dev = 1.245, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.08455208724018852;  // std dev = 2.823, 109.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.045047222247224364;  // std dev = 2.497, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.1495790260836257;  // std dev = 4.180, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4505641877622372;  // std dev = 0.168, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.20516566100194344;  // std dev = 0.109, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.23863538566276526;  // std dev = 0.290, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.16646921726341596;  // std dev = 0.286, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.02599360957678583;  // std dev = 2.300, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return 0.01472957875232477;  // std dev = 2.166, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.13776200109858489;  // std dev = 3.379, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3439122395495902;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1537017688554027;  // std dev = 1.143, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2071297867533161;  // std dev = 0.064, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.22938089347113425;  // std dev = 0.446, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3277416139236989;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, I), enzyme(I, J) )
%   | | | then return -0.09081735576845996;  // std dev = 1.673, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | | else return 0.04379048370478516;  // std dev = 1.720, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(M, A), phenotype(M, L) )
%   | | | then return 0.050580239599835874;  // std dev = 1.936, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.2693679519877027;  // std dev = 1.268, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.019097492374240216;  // std dev = 2.649, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | | else return 0.051519570034134494;  // std dev = 4.022, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17586569687813788;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.24512861585508086;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4314483395500143;  // std dev = 0.623, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.14981898216469122;  // std dev = 0.482, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.20565201868654892;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.020657129111810637;  // std dev = 0.890, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.08847203327695805;  // std dev = 0.551, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.11421724691993898;  // std dev = 2.389, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.022825245795930215;  // std dev = 4.522, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D), interaction(A, E) )
%   | then return -0.01184163421622523;  // std dev = 0.183, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( enzyme(C, F) )
%   | | then return -0.09616011134323342;  // std dev = 0.723, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, G), complex(C, H) )
%   | | | then return -0.06359916946871329;  // std dev = 0.941, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.021630413368336203;  // std dev = 1.782, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.19207496480725714;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.16045482508759526;  // std dev = 0.974, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.029668835236898762;  // std dev = 2.770, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.07013697993911495;  // std dev = 3.857, 96.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | | | else return -0.019403492077971138;  // std dev = 1.702, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.576', 'seconds']
Refined model CLL: -0.235215


******************************************
Best model found
******************************************
Results 

CLL : -0.236972 

AUC ROC : 0.944991 

AUC PR : 0.353944 

Precision : 0.34384 

Recall : 0.45283 

F1 : 0.390879 

Total Learning Time : 29.735 

Total Inference Time : 21.563164234161377 

Total revision time: 60.4701184463501
Best scored revision CLL: -0.235215


Results 

CLL : -0.236972 

AUC ROC : 0.944991 

AUC PR : 0.353944 

Precision : 0.34384 

Recall : 0.45283 

F1 : 0.390879 

Total Learning Time : 65.47509781837464 

Total Inference Time : 21.563164234161377 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.415
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21893324882500279;  // std dev = 7.669, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19105767056552006;  // std dev = 5.706, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
%   | | | else return 0.19542697147737556;  // std dev = 5.098, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14139741984359752;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.12679646286753923;  // std dev = 5.686, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07938502188259615;  // std dev = 4.259, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | | else return 0.11528727100532307;  // std dev = 6.615, 196.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07669080196504062;  // std dev = 7.924, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07736080819079105;  // std dev = 7.837, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7307851827881635;  // std dev = 0.026, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2687458774785185;  // std dev = 0.038, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10864025728868038;  // std dev = 3.941, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | | else return 0.05293368997516003;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04522471025882763;  // std dev = 4.271, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.028738216917546102;  // std dev = 5.731, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04188281514492087;  // std dev = 7.053, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0266280273982003;  // std dev = 7.064, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.389', 'seconds']
Parameter learned model CLL:-0.32798 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.706, 90, 51], 'false,false,false,false': [5.098, 71, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.384, 85, 44], 'false,false,false,false': [5.686, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.259, 60, 26], 'false,false,false,false': [6.615, 130, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.924, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.837, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 44], 'true,false': [0.038, 100, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 41, 25], 'false,false,false,false': [3.943, 48, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.271, 85, 44], 'false,false,false,false': [5.731, 104, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.053, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.064, 187, 92]}]
{'': [nan, 0.2306189926951187], 'false': [nan, 0.23061899269511807], 'false,false': [nan, 0.2306189926951187], 'false,false,false': [nan, 0.23061899269511807]}
{'': [nan, 0.23140495867768454], 'false': [nan, 0.2314049586776853], 'false,false': [nan, 0.23140495867768454], 'false,false,false': [0.23087369850611, 0.2320631377551025]}
{'': [nan, 0.2222189681910813], 'false': [nan, 0.2222189681910813], 'false,false': [nan, 0.22221896819108208], 'false,false,false': [0.22474337232768452, 0.2199040325735784]}
{'': [nan, 0.2197705834864975], 'false': [nan, 0.2197705834864975], 'false,false': [nan, 0.2197705834864967], 'false,false,false': [0.21092482422931305, 0.22325879542083663]}
{'': [nan, 0.21653926904438647], 'false': [nan, 0.21653926904438647], 'false,false': [nan, 0.21653926904438636], 'false,false,false': [nan, 0.21653926904438636]}
{'': [nan, 0.22170870715281538], 'false': [nan, 0.22170870715281538], 'false,false': [nan, 0.22170870715281604], 'false,false,false': [nan, 0.22170870715281546]}
{'': [0.2120069963318939, 0.227633157487986], 'false': [nan, 0.227633157487986], 'false,false': [nan, 0.227633157487986], 'false,false,false': [0.23530762167125793, 0.21900416584011104], 'true': [1.5224155856298115e-05, 1.432762223377182e-05], 'true,true': [nan, 1.5224155856298115e-05], 'true,true,false': [nan, 1.5224155856298115e-05]}
{'': [nan, 0.18185845954053614], 'false': [nan, 0.18185845954053614], 'false,false': [nan, 0.1818584595405362], 'false,false,false': [0.141380443414513, 0.216086734138957]}
{'': [nan, 0.18422009255980226], 'false': [nan, 0.18422009255980024], 'false,false': [nan, 0.18422009255980024], 'false,false,false': [nan, 0.18422009255980024]}
{'': [nan, 0.1788707771444302], 'false': [nan, 0.1788707771444302], 'false,false': [nan, 0.17887077714443098], 'false,false,false': [nan, 0.17887077714443098]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.528
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(D, A), interaction(E, D) )
%   | | then return 0.024815601766178936;  // std dev = 0.373, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( phenotype(C, F), complex(A, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.143863220813798;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.1228548174524535;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.24276431971489695;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.1410436719416165;  // std dev = 5.553, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), location(D, F) )
%   | then if ( location(A, F), phenotype(E, G) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7496295223487972;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13366493770323867;  // std dev = 2.356, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.5181957936415291;  // std dev = 0.434, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0.11028534951418231;  // std dev = 0.443, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return 0.04409252217396148;  // std dev = 0.363, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8227264233277296;  // std dev = 0.182, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.15954366932657868;  // std dev = 0.125, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.0027785782337502833;  // std dev = 1.502, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.1580703640084292;  // std dev = 4.704, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.597234690481714;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.013570114775411996;  // std dev = 0.349, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( location(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.21199831616513143;  // std dev = 1.337, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.09846699841510974;  // std dev = 1.107, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.7413582685474335;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3724800856418433;  // std dev = 0.966, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0877229217257274;  // std dev = 3.657, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.2584266739908494;  // std dev = 1.982, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.14917307875251612;  // std dev = 4.762, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5024770512094889;  // std dev = 0.280, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(D, A), location(D, E) )
%   | | then return -0.07407122086083429;  // std dev = 0.244, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.020835481558539537;  // std dev = 0.848, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.17803799893487854;  // std dev = 2.536, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5457296950433446;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1379918485455738;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03416741980031706;  // std dev = 1.956, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7107207521339193;  // std dev = 0.264, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.053064133708906516;  // std dev = 5.978, 191.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then return -0.053765885711156834;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.4777772639152333;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.14071143099490582;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4588613249667466;  // std dev = 1.123, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.024740765800740153;  // std dev = 0.376, 89.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.3290321193301091;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11263815166650663;  // std dev = 1.408, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return -0.05384564113739548;  // std dev = 0.748, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10501986941366855;  // std dev = 5.256, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, C) )
%   | then return 0.28383942092158176;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3704802114437608;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then return -0.2054648973974715;  // std dev = 0.176, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, F), interaction(F, I) )
%   | | | then return -0.10329141620699833;  // std dev = 1.292, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.035714278451480536;  // std dev = 1.692, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6878996620775913;  // std dev = 0.520, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.2659065687040931;  // std dev = 0.378, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return 0.023678076269008804;  // std dev = 2.165, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.12018417887743403;  // std dev = 5.084, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5184217755933769;  // std dev = 0.187, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2148086320096776;  // std dev = 0.052, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.23776574649154336;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6566349960941368;  // std dev = 0.465, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.2592264246662902;  // std dev = 0.047, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7104982598599541;  // std dev = 0.210, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.23012053003236344;  // std dev = 0.066, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09316435039751048;  // std dev = 2.370, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.16558017404527056;  // std dev = 2.703, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.007923912766076874;  // std dev = 0.595, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, F) )
%   | | then return 0.16843985177897916;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.24631474006507056;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), complex(A, J) )
%   | | | then return 0.18549058461258228;  // std dev = 2.507, 55.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=31 */
%   | | | else return 0.4417376877134683;  // std dev = 2.684, 57.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=45 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.16489459589527034;  // std dev = 0.424, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.24354267624887457;  // std dev = 0.390, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, A) )
%   | | then return -0.2622591144149636;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.05724798950376479;  // std dev = 0.233, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.13429234076963653;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16479302349455666;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19807729386242506;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.23570679402188996;  // std dev = 0.239, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0017103748175923972;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K) )
%   | | | then return -0.07837858679136883;  // std dev = 0.548, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.052032772824690626;  // std dev = 2.300, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.15598481864229466;  // std dev = 1.240, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.025212512193180225;  // std dev = 4.299, 176.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1771508684475842;  // std dev = 0.091, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1084330279764406;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.007317270254627306;  // std dev = 1.473, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.11287355965498444;  // std dev = 0.527, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.2298733737298095;  // std dev = 0.413, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( enzyme(G, I), enzyme(A, I) )
%   | | | then return -0.06289559098117996;  // std dev = 0.310, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.013770882230997102;  // std dev = 4.069, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.014940045549690044;  // std dev = 1.531, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.15896764452909298;  // std dev = 1.737, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '25.715', 'seconds']
Refined model CLL: -0.228989


******************************************
Best model found
******************************************
Results 

CLL : -0.226518 

AUC ROC : 0.975099 

AUC PR : 0.242505 

Precision : 0.240196 

Recall : 0.530686 

F1 : 0.330709 

Total Learning Time : 19.528 

Total Inference Time : 13.292528867721558 

Total revision time: 40.9276076965332
Best scored revision CLL: -0.228989


Results 

CLL : -0.226518 

AUC ROC : 0.975099 

AUC PR : 0.242505 

Precision : 0.240196 

Recall : 0.530686 

F1 : 0.330709 

Total Learning Time : 45.93258706855774 

Total Inference Time : 13.292528867721558 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.213
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1663926626980791;  // std dev = 7.713, 279.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16166320874340098;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | | | else return 0.1800975521777426;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1908562438303174;  // std dev = 4.172, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.18383044142103097;  // std dev = 6.037, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.06621699112205444;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.13658221486206965;  // std dev = 6.576, 189.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11029501128853052;  // std dev = 7.481, 246.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09527457931432123;  // std dev = 7.450, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7271815488360177;  // std dev = 0.044, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27094268178632924;  // std dev = 0.052, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05703704902836485;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.003929729335057514;  // std dev = 4.221, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07826871548096762;  // std dev = 3.268, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | | else return 0.06341356591457813;  // std dev = 6.131, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046195168167825616;  // std dev = 6.973, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004302484480359853;  // std dev = 7.155, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.619', 'seconds']
Parameter learned model CLL:-0.349916 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.713, 193, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.925, 108, 52], 'false,false,false,false': [4.725, 65, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.172, 46, 28], 'false,false,false,false': [6.037, 98, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.689, 48, 19], 'false,false,false,false': [6.576, 122, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.481, 160, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.45, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.044, 0, 28], 'true,false': [0.052, 51, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.678, 65, 33], 'false,false,false,false': [4.221, 62, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.268, 45, 28], 'false,false,false,false': [6.131, 107, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.973, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.155, 185, 86]}]
{'': [nan, 0.21322953199470787], 'false': [nan, 0.21322953199470782], 'false,false': [nan, 0.21322953199470787], 'false,false,false': [nan, 0.21322953199470782]}
{'': [nan, 0.22179156542090517], 'false': [nan, 0.22179156542090678], 'false,false': [nan, 0.22179156542090517], 'false,false,false': [0.21937499999999693, 0.22548719518416493]}
{'': [nan, 0.23415040325998562], 'false': [nan, 0.23415040325998562], 'false,false': [nan, 0.23415040325998532], 'false,false,false': [0.23518726194161704, 0.2336426783845914]}
{'': [nan, 0.22306415544919794], 'false': [nan, 0.22306415544919794], 'false,false': [nan, 0.22306415544919797], 'false,false,false': [0.2031632880374246, 0.22882312148753464]}
{'': [nan, 0.227499952166629], 'false': [nan, 0.227499952166629], 'false,false': [nan, 0.22749995216662935], 'false,false,false': [nan, 0.22749995216662935]}
{'': [nan, 0.22932293327117023], 'false': [nan, 0.22932293327117023], 'false,false': [nan, 0.22932293327117087], 'false,false,false': [nan, 0.22932293327117104]}
{'': [0.22801059420630163, 0.21531799352481829], 'true': [6.863433833683073e-05, 5.3232115746238306e-05], 'false': [nan, 0.21531799352481829], 'false,false': [nan, 0.21531799352481829], 'false,false,false': [0.2233444398167422, 0.20478266613819496], 'true,true': [nan, 6.863433833683073e-05], 'true,true,false': [nan, 6.863433833683073e-05]}
{'': [nan, 0.20287989549688348], 'false': [nan, 0.20287989549688348], 'false,false': [nan, 0.20287989549688318], 'false,false,false': [0.14629370929616287, 0.22784730988525978]}
{'': [nan, 0.19847615419795273], 'false': [nan, 0.1984761541979533], 'false,false': [nan, 0.1984761541979533], 'false,false,false': [nan, 0.1984761541979533]}
{'': [nan, 0.18892127496057548], 'false': [nan, 0.18892127496057548], 'false,false': [nan, 0.1889212749605763], 'false,false,false': [nan, 0.1889212749605763]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.563
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then return 0.20025419825740592;  // std dev = 0.474, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | else return 0.13885068948547727;  // std dev = 0.449, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( interaction(G, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, L), complex(G, M) )
%   | | | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.2073552843058613;  // std dev = 3.784, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(P, A), complex(A, Q) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3914822684328456;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8214247131819372;  // std dev = 0.155, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.05690603446586944;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.15672302219012063;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.16240817036566288;  // std dev = 1.634, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.01368330381205386;  // std dev = 2.203, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8009089009716351;  // std dev = 0.241, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.1517470401871974;  // std dev = 0.105, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.06288959748393359;  // std dev = 3.034, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.1911638824194851;  // std dev = 4.051, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.759659424858919;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16640637824225185;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(F, C), enzyme(F, G) )
%   | | | then return -0.006456328816208362;  // std dev = 1.496, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.1003909137796961;  // std dev = 2.485, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( enzyme(H, I) )
%   | | then return 0.35634784150412413;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6638065245384418;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15743465862737613;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7114954724847313;  // std dev = 0.233, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09492120193917584;  // std dev = 5.670, 178.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5612221081016889;  // std dev = 0.233, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.0517615832188088;  // std dev = 0.389, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( complex(G, F) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.676387759680456;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.177891294546652;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.38372788391078;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, I), enzyme(A, K) )
%   | | | then return 0.41220570661565165;  // std dev = 0.685, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08859702817441718;  // std dev = 2.668, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.07222784738685949;  // std dev = 2.303, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.01744101508653502;  // std dev = 3.545, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3953935133891782;  // std dev = 0.259, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( phenotype(A, D), complex(C, E) )
%   | | then return -0.05029617221443802;  // std dev = 0.294, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.4975838498044357;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08463106960945724;  // std dev = 3.795, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.3957918204722096;  // std dev = 0.363, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07618112233741904;  // std dev = 0.260, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4095217121837937;  // std dev = 3.114, 54.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | | | else return -0.2011220965238005;  // std dev = 0.342, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.016929739498293205;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2680134501727873;  // std dev = 0.140, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4620857163921344;  // std dev = 0.285, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.13867648187612144;  // std dev = 0.059, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.4151707185229489;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1872594543121686;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.12202562814833455;  // std dev = 2.396, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.05139147683556037;  // std dev = 5.302, 181.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=52 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.25385903026222556;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.5693099252528159;  // std dev = 0.524, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6859167681034506;  // std dev = 0.226, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.21269530274026321;  // std dev = 0.069, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.29927454620152927;  // std dev = 0.096, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5822206442628933;  // std dev = 0.218, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19444942544818042;  // std dev = 0.379, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.2257127943781157;  // std dev = 0.740, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0353694581505777;  // std dev = 4.745, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.02239359572292639;  // std dev = 0.295, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0.06586357884428622;  // std dev = 1.552, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.26898251863740014;  // std dev = 1.025, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.23998701051899746;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.032562106988766756;  // std dev = 4.084, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.29734110658182955;  // std dev = 1.007, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.21131464559654056;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.2157345492138427;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0879395520467845;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.17803398895121222;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.05576737130316062;  // std dev = 0.238, 50.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( complex(E, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.026811526926740662;  // std dev = 1.361, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.14258762267989739;  // std dev = 1.170, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.30402095018516373;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( recursion_proteinclass(I, B), complex(I, K) )
%   | | | then return 0.23783733283567102;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.014325064645079304;  // std dev = 2.964, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.29948107604499724;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05647670107420586;  // std dev = 3.782, 106.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.16838653828247366;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.05761391144804925;  // std dev = 0.277, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.2503670953050605;  // std dev = 0.260, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.21742807139847983;  // std dev = 1.213, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.00944706578300188;  // std dev = 1.891, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(L, A), interaction(L, L) )
%   | | | then return -6.335269192549453E-4;  // std dev = 0.537, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.342283912746307;  // std dev = 1.291, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.04340261423387463;  // std dev = 4.121, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | | else return 0.22929370670951396;  // std dev = 0.954, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.399', 'seconds']
Refined model CLL: -0.244211


******************************************
Best model found
******************************************
Results 

CLL : -0.243173 

AUC ROC : 0.960424 

AUC PR : 0.284341 

Precision : 0.294664 

Recall : 0.448763 

F1 : 0.355742 

Total Learning Time : 15.563 

Total Inference Time : 7.5561511516571045 

Total revision time: 30.660204387664795
Best scored revision CLL: -0.244211


Results 

CLL : -0.243173 

AUC ROC : 0.960424 

AUC PR : 0.284341 

Precision : 0.294664 

Recall : 0.448763 

F1 : 0.355742 

Total Learning Time : 35.66518375968933 

Total Inference Time : 7.5561511516571045 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.155
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1993254056877476;  // std dev = 7.571, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.11598361561862708;  // std dev = 5.613, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
%   | | | else return 0.190445981210025;  // std dev = 5.253, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13111582285267326;  // std dev = 4.877, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.1885585030393404;  // std dev = 5.681, 137.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09322097050626105;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.11255379956493054;  // std dev = 6.683, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09755319584844505;  // std dev = 7.612, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07657517388348445;  // std dev = 7.632, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7399120932097365;  // std dev = 0.053, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26012382465528916;  // std dev = 0.076, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0572368838538728;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.04366752928611627;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.01526871855740319;  // std dev = 3.935, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
%   | | | else return 0.061697406913441374;  // std dev = 5.828, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06676152077119814;  // std dev = 6.851, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.011324748915663409;  // std dev = 7.218, 297.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.267', 'seconds']
Parameter learned model CLL:-0.329588 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.571, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.613, 111, 44], 'false,false,false,false': [5.253, 77, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.877, 74, 35], 'false,false,false,false': [5.681, 85, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.746, 47, 20], 'false,false,false,false': [6.683, 134, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.612, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.632, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.053, 0, 35], 'true,false': [0.076, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 50, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.935, 86, 35], 'false,false,false,false': [5.828, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.851, 154, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.218, 210, 87]}]
{'': [nan, 0.2247750865051912], 'false': [nan, 0.22477508650519115], 'false,false': [nan, 0.2247750865051912], 'false,false,false': [nan, 0.22477508650519115]}
{'': [nan, 0.21627768595041358], 'false': [nan, 0.21627768595041436], 'false,false': [nan, 0.21627768595041358], 'false,false,false': [0.20328824141519344, 0.22993055555555542]}
{'': [nan, 0.22872976804755973], 'false': [nan, 0.22872976804755973], 'false,false': [nan, 0.22872976804755946], 'false,false,false': [0.21825003031891357, 0.23560561642959804]}
{'': [nan, 0.2190916074035838], 'false': [nan, 0.2190916074035838], 'false,false': [nan, 0.21909160740358266], 'false,false,false': [0.20940075740699482, 0.22222845116592627]}
{'': [nan, 0.22202911749745624], 'false': [nan, 0.22202911749745624], 'false,false': [nan, 0.22202911749745532], 'false,false,false': [nan, 0.22202911749745532]}
{'': [nan, 0.22145836303018088], 'false': [nan, 0.22145836303018088], 'false,false': [nan, 0.22145836303018046], 'false,false,false': [nan, 0.22145836303018046]}
{'': [0.22020268706638346, 0.21942038008201722], 'true': [8.025410708520603e-05, 8.03457036904456e-05], 'false': [nan, 0.21942038008201722], 'false,false': [nan, 0.21942038008201722], 'false,false,false': [0.21913805697589459, 0.21957815035154066], 'true,true': [nan, 8.025410708520603e-05], 'true,true,false': [nan, 8.025410708520603e-05]}
{'': [nan, 0.1830095940598135], 'false': [nan, 0.1830095940598135], 'false,false': [nan, 0.1830095940598141], 'false,false,false': [0.1279946769628576, 0.22642582006760287]}
{'': [nan, 0.19473189212528189], 'false': [nan, 0.19473189212528325], 'false,false': [nan, 0.19473189212528325], 'false,false,false': [nan, 0.19473189212528325]}
{'': [nan, 0.17540245328798165], 'false': [nan, 0.17540245328798165], 'false,false': [nan, 0.17540245328798096], 'false,false,false': [nan, 0.17540245328798096]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.092
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( complex(F, G), phenotype(D, H) )
%   | | | then return 0.14116780302404067;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(I, D), interaction(D, I) )
%   | | | then return 0.06968739663797391;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.18769438964496687;  // std dev = 4.409, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return 0.42532568689470573;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7580011734199621;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.832351967608585;  // std dev = 0.050, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.16790870235628094;  // std dev = 0.089, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.11409226076232529;  // std dev = 3.393, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8252750341599958;  // std dev = 0.122, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16239206046007215;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.21220713843890202;  // std dev = 3.338, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.13190155586387028;  // std dev = 3.633, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6204280862781567;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return -0.15966197660874196;  // std dev = 0.142, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, G), interaction(H, C) )
%   | | | then return 0.018968781399083277;  // std dev = 2.148, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.17692206099495314;  // std dev = 2.296, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.6208667055389169;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6935054896546521;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03853983304545374;  // std dev = 3.166, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.16803644479448562;  // std dev = 4.431, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.3852077730542636;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( phenotype(A, E), interaction(C, F) )
%   | then return 0.023044451616525918;  // std dev = 0.349, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.5305429719308463;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, D) )
%   | | | then return 0.4736699071551393;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04339768896022411;  // std dev = 2.614, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5202802579424348;  // std dev = 0.254, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.24969257414734025;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.465616438735403;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.3114827349144216;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12039151740653803;  // std dev = 5.127, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.40843129779671744;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return -0.11954281645666184;  // std dev = 0.265, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.03447182061891791;  // std dev = 2.304, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.07284567959356877;  // std dev = 5.944, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( enzyme(A, I) )
%   | | then return 0.021404873720031425;  // std dev = 0.293, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.14018421539330314;  // std dev = 1.042, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then return 0.0619842953267861;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2544116804282718;  // std dev = 0.915, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3681030156619968;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.37952653213550325;  // std dev = 0.143, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.18761000334836256;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.25944862032297017;  // std dev = 0.674, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return -0.032273923377862966;  // std dev = 1.692, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.19362624896054045;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), complex(I, J) )
%   | | | then return -0.048618456605100745;  // std dev = 0.976, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2771723808801904;  // std dev = 3.037, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return -0.03982275463741873;  // std dev = 2.319, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.08072021567418478;  // std dev = 4.531, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.3417301982251379;  // std dev = 0.221, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.5813007158461889;  // std dev = 0.346, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6622673875525799;  // std dev = 0.533, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.24481076334449525;  // std dev = 0.093, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.26848778281394975;  // std dev = 0.356, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3979617358864117;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05309426741024284;  // std dev = 3.437, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return -0.001254554740956477;  // std dev = 3.653, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.059543205258106566;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then return 0.009274070303327286;  // std dev = 0.340, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.5584260782691496;  // std dev = 0.392, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.24919540642665405;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( enzyme(A, H), interaction(I, A) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.4629482547279868;  // std dev = 0.318, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.2629249189567289;  // std dev = 0.062, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.5467068475175053;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22278969455208017;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(N, A), location(N, P) )
%   | | | then return 0.0966686319603041;  // std dev = 2.930, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.18685790839636404;  // std dev = 1.299, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2106774033730204;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.45802598746494266;  // std dev = 0.090, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.18377648560443804;  // std dev = 0.057, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), interaction(F, A) )
%   | | then return 0.13792490347640993;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3346661031009655;  // std dev = 0.249, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), location(A, I) )
%   | | | then return -0.008631422922880987;  // std dev = 4.314, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | | else return 0.05458728336895308;  // std dev = 2.884, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.01438277119020634;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20108492679381684;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3678728416425079;  // std dev = 0.210, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | else return -0.1918179938036733;  // std dev = 0.075, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(A, G), interaction(E, E) )
%   | | then return -0.17647348311119868;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.12567184956390745;  // std dev = 1.145, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.04690394400473969;  // std dev = 2.945, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J) )
%   | | | then return 0.1475114455489643;  // std dev = 0.602, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03558011420157632;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.1372606810675518;  // std dev = 1.320, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return -0.07080935268446817;  // std dev = 3.002, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.020', 'seconds']
Refined model CLL: -0.239147


******************************************
Best model found
******************************************
Results 

CLL : -0.251383 

AUC ROC : 0.957265 

AUC PR : 0.335758 

Precision : 0.300752 

Recall : 0.567376 

F1 : 0.39312 

Total Learning Time : 22.092 

Total Inference Time : 13.762519121170044 

Total revision time: 43.530519983291626
Best scored revision CLL: -0.239147


Results 

CLL : -0.251383 

AUC ROC : 0.957265 

AUC PR : 0.335758 

Precision : 0.300752 

Recall : 0.567376 

F1 : 0.39312 

Total Learning Time : 43.56526901435852 

Total Inference Time : 13.762519121170044 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.596
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19691115008322616;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17011198954269766;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | else return 0.15744965188036;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1707868178392927;  // std dev = 5.111, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
%   | | | else return 0.13507026989810222;  // std dev = 6.514, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.108948335562848;  // std dev = 4.409, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return 0.1121545147156302;  // std dev = 7.109, 230.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08979604208781085;  // std dev = 8.378, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08377431720235609;  // std dev = 8.312, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7275910643650593;  // std dev = 0.005, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27245960307416733;  // std dev = 0.007, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0985262626228667;  // std dev = 3.821, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.07779542976771961;  // std dev = 5.131, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03162804605733149;  // std dev = 4.138, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.03472147022630172;  // std dev = 6.561, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04550511247098779;  // std dev = 7.635, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024063530317859058;  // std dev = 7.705, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.237', 'seconds']
Parameter learned model CLL:-0.332079 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.869, 102, 52], 'false,false,false,false': [5.925, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.111, 72, 41], 'false,false,false,false': [6.514, 130, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.409, 59, 29], 'false,false,false,false': [7.109, 155, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.378, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.312, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 41], 'true,false': [0.007, 64, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.821, 40, 23], 'false,false,false,false': [5.131, 77, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.138, 86, 41], 'false,false,false,false': [6.561, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.635, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.705, 214, 104]}]
{'': [nan, 0.22400237668304385], 'false': [nan, 0.22400237668304232], 'false,false': [nan, 0.22400237668304385], 'false,false,false': [nan, 0.22400237668304232]}
{'': [nan, 0.22151000040569407], 'false': [nan, 0.22151000040569596], 'false,false': [nan, 0.22151000040569407], 'false,false,false': [0.22364648338674217, 0.219374999999999]}
{'': [nan, 0.2243286096847396], 'false': [nan, 0.2243286096847396], 'false,false': [nan, 0.22432860968474394], 'false,false,false': [0.23117403469169082, 0.21984958513079036]}
{'': [nan, 0.22005270912844171], 'false': [nan, 0.22005270912844171], 'false,false': [nan, 0.2200527091284409], 'false,false,false': [0.22094524793388326, 0.21970837135530716]}
{'': [nan, 0.21934507150800667], 'false': [nan, 0.21934507150800667], 'false,false': [nan, 0.21934507150800772], 'false,false,false': [nan, 0.21934507150800772]}
{'': [nan, 0.22288330643472617], 'false': [nan, 0.22288330643472617], 'false,false': [nan, 0.2228833064347276], 'false,false,false': [nan, 0.22288330643472645]}
{'': [0.23802935428196367, 0.22747533280141602], 'true': [7.259060320429521e-07, 6.83999376333011e-07], 'false': [nan, 0.22747533280141602], 'false,false': [nan, 0.22747533280141602], 'false,false,false': [0.23179642227261316, 0.22499817371612132], 'true,true': [nan, 7.259060320429521e-07], 'true,true,false': [nan, 7.259060320429521e-07]}
{'': [nan, 0.18455908305897722], 'false': [nan, 0.18455908305897722], 'false,false': [nan, 0.18455908305897722], 'false,false,false': [0.13479944630246826, 0.21631150524281362]}
{'': [nan, 0.19049787502157609], 'false': [nan, 0.1904978750215763], 'false,false': [nan, 0.1904978750215763], 'false,false,false': [nan, 0.1904978750215763]}
{'': [nan, 0.1866814117203001], 'false': [nan, 0.1866814117203001], 'false,false': [nan, 0.18668141172030045], 'false,false,false': [nan, 0.18668141172030045]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.953
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(F, C), interaction(F, F) )
%   | | | then return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.19713198594696998;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.09624417319475045;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.20297652130640767;  // std dev = 5.119, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(A, A), recursion_proteinclass(C, B) )
%   | then return 0.764651586544427;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15397536886597982;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1891546318012748;  // std dev = 0.454, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8038408914929982;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08864514660237632;  // std dev = 2.096, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else return 0.10404695698808555;  // std dev = 0.442, 164.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=45 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then return 0.08890950479754221;  // std dev = 0.422, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.30019165295515216;  // std dev = 1.933, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.17822708941229487;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.6185495978295651;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), interaction(D, F) )
%   | | then return 0.0746912199329494;  // std dev = 0.414, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.14316762194730753;  // std dev = 3.724, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.23753202555624012;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.05484974190760449;  // std dev = 0.382, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.7845988777274118;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.059768711870872335;  // std dev = 4.112, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.09746821521761266;  // std dev = 2.068, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.31257399428106325;  // std dev = 1.554, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3914193098727279;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.517771923141303;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.6144836389336871;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7800438293157353;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1500943038352264;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.7257066375512012;  // std dev = 0.152, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.316350793323026;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.021997984131185387;  // std dev = 3.293, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | | else return 0.09786454701326003;  // std dev = 6.609, 206.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=64 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), complex(C, E) )
%   | then return 0.10009569842786087;  // std dev = 0.400, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.6526728339612514;  // std dev = 0.204, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5729763987819539;  // std dev = 1.272, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.20028244734484832;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.42949587552923163;  // std dev = 0.283, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.019679168952192842;  // std dev = 2.774, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.09770590181067546;  // std dev = 2.650, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.010299538420750085;  // std dev = 2.066, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.13638294855858796;  // std dev = 5.004, 109.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return -0.013547030998134554;  // std dev = 0.878, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.34852796933759295;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5480986055216998;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.6502479885513879;  // std dev = 0.581, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.1310949305856056;  // std dev = 1.168, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.1987294360022301;  // std dev = 0.309, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.05001817428145546;  // std dev = 6.220, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
%   | else if ( complex(A, J) )
%   | | then return 0.6682771954000778;  // std dev = 0.269, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1742109470714019;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5278502388923645;  // std dev = 0.191, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.23229339596257934;  // std dev = 0.085, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, E), enzyme(E, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.054463859336568575;  // std dev = 0.797, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.007097783510415047;  // std dev = 0.680, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.3414740625783305;  // std dev = 0.972, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04829954645543536;  // std dev = 5.227, 140.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=43 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.397720050030598;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09595351660490312;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.23614327262734355;  // std dev = 1.397, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27432662014920406;  // std dev = 0.109, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F), phenotype(D, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.2053365405959332;  // std dev = 1.043, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.009734559338365941;  // std dev = 1.173, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( complex(D, I), interaction(J, D) )
%   | | | then return -0.07145987679126033;  // std dev = 2.889, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | | else return 0.025973125044554103;  // std dev = 2.226, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( location(A, K), complex(A, L) )
%   | | then if ( complex(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.4745820644120708;  // std dev = 0.705, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.172815254245451;  // std dev = 0.437, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.1962375615016689;  // std dev = 1.620, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0722816411814447;  // std dev = 4.286, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.2265348350065215;  // std dev = 0.318, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.09170501212631255;  // std dev = 0.258, 129.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=17 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F) )
%   | | | then return -0.28392423435762143;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4877259018288646;  // std dev = 1.000, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.21266053583642672;  // std dev = 0.174, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( enzyme(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.09129586961074082;  // std dev = 1.292, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.0448199179892337;  // std dev = 2.435, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.09437084152582287;  // std dev = 3.878, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | | else return 0.25618064665022655;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2191340841394984;  // std dev = 0.101, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), complex(D, G) )
%   | | | then return 0.370627121181624;  // std dev = 0.229, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.06663258233738202;  // std dev = 1.198, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1534821047269434;  // std dev = 0.655, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.0234020753128725;  // std dev = 2.700, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5155687277594379;  // std dev = 0.201, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.19706777876055145;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.045259824208931564;  // std dev = 1.237, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.06542722843392568;  // std dev = 4.568, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.621', 'seconds']
Refined model CLL: -0.268472


******************************************
Best model found
******************************************
Results 

CLL : -0.292931 

AUC ROC : 0.895913 

AUC PR : 0.289771 

Precision : 0.340299 

Recall : 0.430189 

F1 : 0.38 

Total Learning Time : 23.953 

Total Inference Time : 17.70414090156555 

Total revision time: 50.70789382362366
Best scored revision CLL: -0.268472


Results 

CLL : -0.292931 

AUC ROC : 0.895913 

AUC PR : 0.289771 

Precision : 0.340299 

Recall : 0.430189 

F1 : 0.38 

Total Learning Time : 50.74264285469055 

Total Inference Time : 17.70414090156555 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.37
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19391535845717667;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17286708054469466;  // std dev = 5.802, 150.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=51 */
%   | | | else return 0.14584417978133588;  // std dev = 5.307, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12326548752250162;  // std dev = 5.494, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.15965304711633435;  // std dev = 5.585, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11661905997582594;  // std dev = 4.176, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | | else return 0.13330504423590234;  // std dev = 6.562, 190.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09956493769510193;  // std dev = 7.819, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09001124217618153;  // std dev = 7.766, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7103839382986491;  // std dev = 0.990, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.26742143896958664;  // std dev = 0.009, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.029894547661157032;  // std dev = 4.157, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | | else return 0.06993641946836159;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03253406600958255;  // std dev = 4.343, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.02755522007502756;  // std dev = 5.740, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01809863839644416;  // std dev = 7.235, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01866725431966872;  // std dev = 7.212, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.214', 'seconds']
Parameter learned model CLL:-0.316389 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.802, 99, 51], 'false,false,false,false': [5.307, 90, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.494, 96, 44], 'false,false,false,false': [5.585, 89, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.176, 53, 26], 'false,false,false,false': [6.562, 124, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.819, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.766, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.99, 1, 44], 'true,false': [0.009, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.157, 56, 25], 'false,false,false,false': [3.886, 44, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.343, 95, 44], 'false,false,false,false': [5.74, 105, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.235, 205, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.212, 199, 92]}]
{'': [nan, 0.2230273323032673], 'false': [nan, 0.2230273323032669], 'false,false': [nan, 0.2230273323032673], 'false,false,false': [nan, 0.2230273323032669]}
{'': [nan, 0.22020997707728882], 'false': [nan, 0.22020997707729226], 'false,false': [nan, 0.22020997707728882], 'false,false,false': [0.22440000000000096, 0.21502243459005985]}
{'': [nan, 0.2219082682320643], 'false': [nan, 0.2219082682320643], 'false,false': [nan, 0.22190826823206516], 'false,false,false': [0.21559423365097538, 0.2276913691273506]}
{'': [nan, 0.2249967645539082], 'false': [nan, 0.2249967645539082], 'false,false': [nan, 0.2249967645539086], 'false,false,false': [0.22079794904662725, 0.22666082076724486]}
{'': [nan, 0.22312509644768247], 'false': [nan, 0.22312509644768247], 'false,false': [nan, 0.22312509644768203], 'false,false,false': [nan, 0.22312509644768203]}
{'': [nan, 0.2258961428829182], 'false': [nan, 0.2258961428829182], 'false,false': [nan, 0.22589614288291834], 'false,false,false': [nan, 0.22589614288291832]}
{'': [0.22140575127024262, 0.21923798240065295], 'true': [0.021765359761597363, 9.712081389112726e-07], 'false': [nan, 0.21923798240065295], 'false,false': [nan, 0.21923798240065295], 'false,false,false': [0.21338210638622207, 0.2254399643573178], 'true,true': [nan, 0.021765359761597363], 'true,true,false': [nan, 0.021765359761597363]}
{'': [nan, 0.17745816950709428], 'false': [nan, 0.17745816950709428], 'false,false': [nan, 0.17745816950709473], 'false,false,false': [0.13571973844256352, 0.21536559753031576]}
{'': [nan, 0.1762245868678855], 'false': [nan, 0.17622458686788617], 'false,false': [nan, 0.17622458686788617], 'false,false,false': [nan, 0.17622458686788617]}
{'': [nan, 0.17873749731228394], 'false': [nan, 0.17873749731228394], 'false,false': [nan, 0.17873749731228458], 'false,false,false': [nan, 0.17873749731228458]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.972
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(D, A), interaction(E, D) )
%   | | then if ( enzyme(E, F), phenotype(A, G) )
%   | | | then return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.09875043885891037;  // std dev = 4.930, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.3396304165809938;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.15951879811321046;  // std dev = 3.920, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6528067455442875;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.026181761003357926;  // std dev = 2.192, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.21904352414671274;  // std dev = 2.476, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10603813912157455;  // std dev = 1.466, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.07030444693520747;  // std dev = 1.619, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.11621219728012686;  // std dev = 1.704, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.011444992815265956;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( location(A, L) )
%   | | | then return 0.16952803167275549;  // std dev = 5.717, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
%   | | | else return 0.3376004040054227;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.5717621504054301;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7828242694023307;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, E), enzyme(D, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.14674463966339038;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1803293265015804;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, G) )
%   | | | then return 0.0929698514033662;  // std dev = 3.990, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return -0.054509152796910876;  // std dev = 1.289, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5717621504054301;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1264705333339073;  // std dev = 4.538, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | | else return 0.22558156025657694;  // std dev = 3.131, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, A), phenotype(C, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.5352217923410408;  // std dev = 0.123, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.07164445205263247;  // std dev = 0.425, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5637661195509056;  // std dev = 0.293, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.030617975356787085;  // std dev = 0.421, 98.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7428191310551909;  // std dev = 0.119, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.20855727001515315;  // std dev = 0.056, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.42978758989928023;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.22741478144958407;  // std dev = 2.889, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.11138071188402827;  // std dev = 3.057, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3739455260181117;  // std dev = 0.202, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3037090457416367;  // std dev = 0.971, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.19262793119840882;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(D, H) )
%   | | | then return -0.08478549633281891;  // std dev = 0.927, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.16680476440492278;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.09111901608007002;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3465257238049511;  // std dev = 1.332, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.13177754011105203;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.05300250066608595;  // std dev = 5.513, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.25866871779969464;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.41340286921865366;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.29452177548508846;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7217848346812817;  // std dev = 0.386, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.21579846729064858;  // std dev = 0.446, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, H), phenotype(A, I) )
%   | | | then return -0.04450533718731303;  // std dev = 1.222, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.09612595679746153;  // std dev = 3.300, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.23401038179658623;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.12228126322738965;  // std dev = 3.019, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4660041298490853;  // std dev = 0.163, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1855944030347214;  // std dev = 0.362, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), interaction(A, H) )
%   | | then return 0.556555851466534;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, E), complex(E, J) )
%   | | | then return 0.23666529092824515;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0374706202712979;  // std dev = 2.410, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.7283149699017477;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2887028621212353;  // std dev = 0.457, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.10658858962974652;  // std dev = 1.941, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.007588658429787388;  // std dev = 3.282, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.14346406325298017;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return 0.16733585876603604;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.28462829190986555;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20766626245267958;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, H) )
%   | | | then return -0.11383768693120987;  // std dev = 1.386, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return 0.12973858914618785;  // std dev = 1.035, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06963803349968047;  // std dev = 2.208, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return -0.004004349074748113;  // std dev = 5.282, 165.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), phenotype(D, E) )
%   | then if ( interaction(D, A) )
%   | | then return -0.03809150198959776;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return 0.05610213412156996;  // std dev = 0.363, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | else return -0.036256628836848874;  // std dev = 0.329, 120.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=33 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.20114482442923678;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.06318189263641844;  // std dev = 1.106, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.029117018764787613;  // std dev = 1.796, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.2409789487341791;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.06743876022345686;  // std dev = 1.758, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.24103445502584342;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(C, B) )
%   | then return 0.18143346511789285;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D), interaction(C, F) )
%   | | then return -0.10321573720358311;  // std dev = 0.252, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else return 0.0065562172451788855;  // std dev = 0.378, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( phenotype(A, I), phenotype(G, J) )
%   | | then return 0.24276147043742213;  // std dev = 0.736, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(K, G), complex(K, L) )
%   | | | then return 0.04780687172559739;  // std dev = 2.085, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -0.029097940909948956;  // std dev = 1.838, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( enzyme(A, M), interaction(N, A) )
%   | | then return 0.03760988256264105;  // std dev = 0.297, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( complex(A, P), interaction(A, Q) )
%   | | | then return 0.17363529014921314;  // std dev = 0.674, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09434862827703325;  // std dev = 3.394, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '10.339', 'seconds']
Refined model CLL: -0.271585


******************************************
Best model found
******************************************
Results 

CLL : -0.308854 

AUC ROC : 0.864131 

AUC PR : 0.149717 

Precision : 0.242424 

Recall : 0.404332 

F1 : 0.303112 

Total Learning Time : 14.972 

Total Inference Time : 6.770552158355713 

Total revision time: 29.771975032806395
Best scored revision CLL: -0.271585


Results 

CLL : -0.308854 

AUC ROC : 0.864131 

AUC PR : 0.149717 

Precision : 0.242424 

Recall : 0.404332 

F1 : 0.303112 

Total Learning Time : 29.80672406387329 

Total Inference Time : 6.770552158355713 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.103
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2049231286478999;  // std dev = 7.495, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15632918485237207;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | | | else return 0.1713291848523722;  // std dev = 4.737, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12218514275496789;  // std dev = 4.380, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.10773814526163496;  // std dev = 6.370, 193.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08548423487795093;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.14030196600477632;  // std dev = 6.594, 191.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08339665679599317;  // std dev = 7.668, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07622820285339064;  // std dev = 7.624, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7062029309233422;  // std dev = 0.979, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2590816696861674;  // std dev = 0.047, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03712574898251049;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return 0.06315622635791458;  // std dev = 4.096, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05733908021168737;  // std dev = 3.429, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.02374538682569395;  // std dev = 6.384, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06428917796225528;  // std dev = 7.027, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06698171395308358;  // std dev = 6.914, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.370', 'seconds']
Parameter learned model CLL:-0.343844 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.495, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.925, 108, 52], 'false,false,false,false': [4.737, 66, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.38, 61, 28], 'false,false,false,false': [6.37, 135, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [6.594, 124, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.624, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.979, 1, 28], 'true,false': [0.047, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 77, 33], 'false,false,false,false': [4.096, 51, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.429, 55, 28], 'false,false,false,false': [6.384, 137, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.027, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.914, 151, 86]}]
{'': [nan, 0.2265218522372537], 'false': [nan, 0.2265218522372534], 'false,false': [nan, 0.2265218522372537], 'false,false,false': [nan, 0.2265218522372534]}
{'': [nan, 0.22136094674556106], 'false': [nan, 0.22136094674556173], 'false,false': [nan, 0.22136094674556106], 'false,false,false': [0.2193749999999989, 0.22440000000000118]}
{'': [nan, 0.21196505908345273], 'false': [nan, 0.21196505908345273], 'false,false': [nan, 0.21196505908345276], 'false,false,false': [0.2155874217173341, 0.21022877187527542]}
{'': [nan, 0.22348333555990663], 'false': [nan, 0.22348333555990663], 'false,false': [nan, 0.2234833355599066], 'false,false,false': [0.2087402343750002, 0.22766924031815178]}
{'': [nan, 0.2161543589720271], 'false': [nan, 0.2161543589720271], 'false,false': [nan, 0.21615435897202684], 'false,false,false': [nan, 0.21615435897202684]}
{'': [nan, 0.21934320001704166], 'false': [nan, 0.21934320001704166], 'false,false': [nan, 0.2193432000170413], 'false,false,false': [nan, 0.21934320001704147]}
{'': [0.21810074088510337, 0.214552530747255], 'true': [0.03304387018422096, 3.772284425813906e-05], 'false': [nan, 0.214552530747255], 'false,false': [nan, 0.214552530747255], 'false,false,false': [0.2100000000000001, 0.22074099722991677], 'true,true': [nan, 0.03304387018422096], 'true,true,false': [nan, 0.03304387018422096]}
{'': [nan, 0.18914840887985707], 'false': [nan, 0.18914840887985707], 'false,false': [nan, 0.18914840887985723], 'false,false,false': [0.14169920333779779, 0.20900780031518196]}
{'': [nan, 0.19992692759770975], 'false': [nan, 0.19992692759771047], 'false,false': [nan, 0.19992692759771047], 'false,false,false': [nan, 0.19992692759771047]}
{'': [nan, 0.20171538153692137], 'false': [nan, 0.20171538153692137], 'false,false': [nan, 0.20171538153692203], 'false,false,false': [nan, 0.20171538153692203]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.572
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.05814893509951236;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.13300273626910217;  // std dev = 5.838, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.5302571636950734;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7510301076641341;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8187841295814892;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15019948056637994;  // std dev = 0.050, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), enzyme(I, K) )
%   | | | then return 0.3235107953731001;  // std dev = 1.489, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.09197609260668377;  // std dev = 4.347, 103.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=26 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.09117506772764578;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.19249542254043672;  // std dev = 4.440, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.26813667147310566;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5552622935463367;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.64409304964534;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.722836305639974;  // std dev = 1.670, 47.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | | | else return -0.16487538677392957;  // std dev = 0.180, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07759690562150184;  // std dev = 4.050, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | | else return 0.23608790954483766;  // std dev = 1.238, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.5193888942429451;  // std dev = 0.092, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3464551987584241;  // std dev = 0.272, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( complex(F, G), location(A, H) )
%   | | then if ( enzyme(F, I), enzyme(A, I) )
%   | | | then return 0.08054816663806821;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06674753371988602;  // std dev = 1.496, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.37642640592754556;  // std dev = 0.655, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08294472163814878;  // std dev = 1.342, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.31281088010674024;  // std dev = 0.943, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.11799929293335618;  // std dev = 5.371, 167.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3437130991003413;  // std dev = 0.192, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, D) )
%   | | then if ( phenotype(D, F), complex(D, G) )
%   | | | then return -0.11980002571051131;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.019434043429902972;  // std dev = 1.356, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( enzyme(D, H), phenotype(D, I) )
%   | | | then return 0.14781437376171616;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.024946288703478404;  // std dev = 2.830, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( location(A, L) )
%   | | | then return 0.08062846225218828;  // std dev = 3.852, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return -0.06096460140490941;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.0762335353803689;  // std dev = 1.821, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.26282183164342604;  // std dev = 2.050, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3249846389528181;  // std dev = 0.087, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return -0.13305540700379737;  // std dev = 0.720, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.05124538781459755;  // std dev = 1.369, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.20915547002764953;  // std dev = 0.441, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.012860630763841582;  // std dev = 1.735, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), interaction(K, M) )
%   | | | then return 0.07778301776053226;  // std dev = 1.642, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.36339884040063386;  // std dev = 1.182, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return 0.28691198110885213;  // std dev = 0.787, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02823760328085407;  // std dev = 4.959, 165.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48340747760606606;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.17503326869760186;  // std dev = 0.089, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.11621620198211989;  // std dev = 1.157, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.02993442550289001;  // std dev = 1.426, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0.16806865418461484;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4522691947696579;  // std dev = 1.847, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return -0.1726979305449356;  // std dev = 0.168, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3231992318629219;  // std dev = 0.244, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02381665858068655;  // std dev = 3.306, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19438757111481095;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(E, D), location(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.03325769028844115;  // std dev = 1.520, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return -0.09453660159724447;  // std dev = 1.083, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4223777957473649;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.028759476028769725;  // std dev = 2.115, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3161199059128631;  // std dev = 3.053, 65.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=44 */
%   | | | else return -0.189955254160465;  // std dev = 0.320, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.058842018631247495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1538862249506331;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B), complex(C, E) )
%   | then return -0.45953325793742517;  // std dev = 0.886, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.23392946088517996;  // std dev = 0.209, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.1452896460687023;  // std dev = 0.238, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0019394410743376585;  // std dev = 2.159, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( complex(A, I), location(A, J) )
%   | | then return -0.0062296803770379005;  // std dev = 0.225, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(K, G), recursion_proteinclass(K, B) )
%   | | | then return 0.4718569560725257;  // std dev = 0.464, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.056607142821510276;  // std dev = 2.208, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.14594729747282514;  // std dev = 0.239, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.009971176436071852;  // std dev = 0.307, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.2069221714513289;  // std dev = 0.219, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( location(A, F), location(C, F) )
%   | | then if ( phenotype(A, D), enzyme(C, G) )
%   | | | then return 0.10452708329568974;  // std dev = 0.899, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.08606774740060873;  // std dev = 2.568, 99.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=16 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.15168678877426417;  // std dev = 0.855, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.004708450360535173;  // std dev = 1.361, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( complex(A, I) )
%   | then return 0.006064700339579942;  // std dev = 0.255, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.03832634521589021;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.14263161317451084;  // std dev = 1.459, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.08528608396165563;  // std dev = 2.930, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.280', 'seconds']
Refined model CLL: -0.214097


******************************************
Best model found
******************************************
Results 

CLL : -0.229467 

AUC ROC : 0.964171 

AUC PR : 0.236639 

Precision : 0.227468 

Recall : 0.561837 

F1 : 0.323829 

Total Learning Time : 16.572 

Total Inference Time : 8.783521175384521 

Total revision time: 32.72228507995605
Best scored revision CLL: -0.214097


Results 

CLL : -0.229467 

AUC ROC : 0.964171 

AUC PR : 0.236639 

Precision : 0.227468 

Recall : 0.561837 

F1 : 0.323829 

Total Learning Time : 32.757034111022946 

Total Inference Time : 8.783521175384521 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.216
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21617362645753707;  // std dev = 7.473, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15355526716817755;  // std dev = 4.795, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return 0.17390158751449983;  // std dev = 5.896, 154.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11197467107217347;  // std dev = 4.925, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | | else return 0.15173906257493464;  // std dev = 5.828, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.13036155275603686;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.12296572726990602;  // std dev = 6.933, 214.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14074122715716883;  // std dev = 7.347, 229.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07283799167584999;  // std dev = 7.587, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7244365619233879;  // std dev = 0.007, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27547175602095086;  // std dev = 0.010, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04736971954279903;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.04527321461863778;  // std dev = 4.631, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.028073066799769997;  // std dev = 3.836, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.05203902024905375;  // std dev = 5.838, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013830582395144042;  // std dev = 7.095, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026887068351526155;  // std dev = 6.986, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.032', 'seconds']
Parameter learned model CLL:-0.337203 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.473, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.795, 71, 34], 'false,false,false,false': [5.896, 101, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.925, 79, 35], 'false,false,false,false': [5.828, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.036, 27, 14], 'false,false,false,false': [6.933, 141, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.347, 142, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.587, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 35], 'true,false': [0.01, 62, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [4.631, 65, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.836, 73, 35], 'false,false,false,false': [5.838, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.095, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.986, 177, 87]}]
{'': [nan, 0.2298430117360168], 'false': [nan, 0.22984301173601665], 'false,false': [nan, 0.2298430117360168], 'false,false,false': [nan, 0.22984301173601665]}
{'': [nan, 0.22307359759097178], 'false': [nan, 0.2230735975909732], 'false,false': [nan, 0.22307359759097178], 'false,false,false': [0.2189569160997747, 0.22571259908922325]}
{'': [nan, 0.22093313219289765], 'false': [nan, 0.22093313219289765], 'false,false': [nan, 0.22093313219289645], 'false,false,false': [0.21280482776085638, 0.2264278497021534]}
{'': [nan, 0.2246598303165191], 'false': [nan, 0.2246598303165191], 'false,false': [nan, 0.22465983031651934], 'false,false,false': [0.22486615110053576, 0.2246115069500634]}
{'': [nan, 0.23568174334262984], 'false': [nan, 0.23568174334262984], 'false,false': [nan, 0.2356817433426302], 'false,false,false': [nan, 0.2356817433426302]}
{'': [nan, 0.2240072935939275], 'false': [nan, 0.2240072935939275], 'false,false': [nan, 0.22400729359392754], 'false,false,false': [nan, 0.22400729359392765]}
{'': [0.23058958737747737, 0.22079801596409462], 'true': [1.6022044867725072e-06, 1.6411759021891265e-06], 'false': [nan, 0.22079801596409462], 'false,false': [nan, 0.22079801596409462], 'false,false,false': [0.22037086804622472, 0.2210649378254872], 'true,true': [nan, 1.6022044867725072e-06], 'true,true,false': [nan, 1.6022044867725072e-06]}
{'': [nan, 0.18851409674378605], 'false': [nan, 0.18851409674378605], 'false,false': [nan, 0.18851409674378589], 'false,false,false': [0.13621424364581727, 0.22568110983662457]}
{'': [nan, 0.1823635035150259], 'false': [nan, 0.18236350351502648], 'false,false': [nan, 0.18236350351502648], 'false,false,false': [nan, 0.18236350351502648]}
{'': [nan, 0.18484984679923044], 'false': [nan, 0.18484984679923044], 'false,false': [nan, 0.18484984679923064], 'false,false,false': [nan, 0.18484984679923064]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 42.617
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.11396288858788445;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.15470065923744247;  // std dev = 5.500, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7359812264346162;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.33598122643461614;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13601098556799363;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7812614388839575;  // std dev = 0.174, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.08708968168244734;  // std dev = 6.416, 219.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=55 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.48385403089743456;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.0814236205190338;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3312322750164858;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.5718010450134163;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.7394271167844038;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6657896449153333;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12567756134849992;  // std dev = 0.073, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then if ( complex(G, F), interaction(H, G) )
%   | | | then return -0.06737445020405856;  // std dev = 0.690, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1880332588509214;  // std dev = 3.770, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.04207754337341446;  // std dev = 2.466, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.11681719463233618;  // std dev = 5.146, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0.46240389942415366;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.586342159084416;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.6325068189670863;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1902142818482213;  // std dev = 0.120, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.05383749405583186;  // std dev = 3.227, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.45257639771971836;  // std dev = 4.033, 76.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=51 */
%   | | | else return -0.1942125577998816;  // std dev = 0.339, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0.4683594544858636;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.40183238558325823;  // std dev = 0.894, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.6126191151819926;  // std dev = 2.390, 66.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=60 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.2502557367001844;  // std dev = 0.223, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.39613623397559844;  // std dev = 1.144, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.1727491998647624;  // std dev = 0.414, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.07736183042908762;  // std dev = 0.338, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then return -0.17294934186897554;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.12294934186897555;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, A) )
%   | then return 0.2410678119641999;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, E) )
%   | | then return 0.3548430621822555;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2990885921442655;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.09358604815103655;  // std dev = 0.167, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.28076923438176826;  // std dev = 0.604, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0678143841562123;  // std dev = 3.051, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.0073268568901648096;  // std dev = 2.905, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0.05844028096884518;  // std dev = 3.402, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22316041281920054;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.522596763520655;  // std dev = 0.137, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.1855306584739372;  // std dev = 0.076, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.3129001185031885;  // std dev = 0.218, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1451166442072516;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.002348719364205526;  // std dev = 2.097, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(I, K), location(A, K) )
%   | | | then return 0.11691246200271867;  // std dev = 2.659, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.02699792117756057;  // std dev = 2.024, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return 0.4128764169050312;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2122665419969315;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), enzyme(D, H) )
%   | | | then return 0.38261228593000807;  // std dev = 0.545, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04975681892859545;  // std dev = 1.553, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.38929886520854734;  // std dev = 1.177, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.17810562076464106;  // std dev = 0.476, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5081036503107912;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.23037383918939705;  // std dev = 0.263, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return -7.958561509469356E-4;  // std dev = 3.699, 156.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=42 */
%   | | | else return 0.19092827217962688;  // std dev = 1.267, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.10807913084919196;  // std dev = 1.351, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return 0.40318365094458963;  // std dev = 2.026, 64.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=59 */
%   | | else if ( interaction(D, G), interaction(A, H) )
%   | | | then return 0.09438849783172831;  // std dev = 0.988, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.21886530523088432;  // std dev = 0.308, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07987271923849291;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1638274512108036;  // std dev = 0.075, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( phenotype(I, K) )
%   | | then return -0.1394782114190339;  // std dev = 0.749, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.05993193720209511;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.2549275639843769;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.1429032529695251;  // std dev = 0.242, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else if ( interaction(C, A) )
%   | | then return -0.14548430273327012;  // std dev = 0.070, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.007232264857517073;  // std dev = 0.291, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( complex(F, H), enzyme(G, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.2069459196168244;  // std dev = 0.486, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.003971592266097757;  // std dev = 1.612, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | else if ( location(F, J), phenotype(G, K) )
%   | | | then return 0.08384200560998166;  // std dev = 1.999, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.003647991396754329;  // std dev = 1.177, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( phenotype(A, L) )
%   | | then return -0.17590508820790812;  // std dev = 0.718, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.010596850873416825;  // std dev = 0.599, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '33.776', 'seconds']
Refined model CLL: -0.194322


******************************************
Best model found
******************************************
Results 

CLL : -0.214067 

AUC ROC : 0.984065 

AUC PR : 0.268969 

Precision : 0.161802 

Recall : 0.904255 

F1 : 0.274489 

Total Learning Time : 42.617 

Total Inference Time : 34.8742311000824 

Total revision time: 85.1821542339325
Best scored revision CLL: -0.194322


Results 

CLL : -0.214067 

AUC ROC : 0.984065 

AUC PR : 0.268969 

Precision : 0.161802 

Recall : 0.904255 

F1 : 0.274489 

Total Learning Time : 85.24908214378357 

Total Inference Time : 34.8742311000824 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.576
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20025419825740762;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14929054673071035;  // std dev = 4.746, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.16688851480037634;  // std dev = 6.872, 212.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13088815552364882;  // std dev = 5.270, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.1381012616442781;  // std dev = 6.498, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06817944158369132;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.13981507137425983;  // std dev = 7.711, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09675454200246106;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06143198984538714;  // std dev = 8.436, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7368562997802502;  // std dev = 0.050, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26291738142673565;  // std dev = 0.073, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04269458408271433;  // std dev = 3.810, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.04860179912593902;  // std dev = 5.351, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07496762463401094;  // std dev = 4.015, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
%   | | | else return 0.04892409488212555;  // std dev = 6.513, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03769333865224715;  // std dev = 7.689, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04310949253128142;  // std dev = 7.592, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.921', 'seconds']
Parameter learned model CLL:-0.334449 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.746, 71, 33], 'false,false,false,false': [6.872, 141, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27, 86, 41], 'false,false,false,false': [6.498, 128, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.941, 31, 12], 'false,false,false,false': [7.711, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.436, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.05, 0, 41], 'true,false': [0.073, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.81, 47, 21], 'false,false,false,false': [5.351, 90, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.015, 70, 41], 'false,false,false,false': [6.513, 130, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.689, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.592, 198, 104]}]
{'': [nan, 0.22506925207756448], 'false': [nan, 0.22506925207756287], 'false,false': [nan, 0.22506925207756448], 'false,false,false': [nan, 0.22506925207756287]}
{'': [nan, 0.22079794904662972], 'false': [nan, 0.22079794904662886], 'false,false': [nan, 0.22079794904662972], 'false,false,false': [0.21662352071005925, 0.22274385902456648]}
{'': [nan, 0.22010966175500876], 'false': [nan, 0.22010966175500876], 'false,false': [nan, 0.22010966175500993], 'false,false,false': [0.21867158772428916, 0.2210450892103037]}
{'': [nan, 0.22539384669575432], 'false': [nan, 0.22539384669575432], 'false,false': [nan, 0.225393846695755], 'false,false,false': [0.20118983234180607, 0.22866856243052544]}
{'': [nan, 0.22223549414398724], 'false': [nan, 0.22223549414398724], 'false,false': [nan, 0.22223549414398855], 'false,false,false': [nan, 0.22223549414398855]}
{'': [nan, 0.21631496088648236], 'false': [nan, 0.21631496088648236], 'false,false': [nan, 0.2163149608864838], 'false,false,false': [nan, 0.21631496088648178]}
{'': [0.2194762948701185, 0.21576317807412196], 'true': [6.086150235440075e-05, 6.241926440482402e-05], 'false': [nan, 0.21576317807412196], 'false,false': [nan, 0.21576317807412196], 'false,false,false': [0.21345155709342617, 0.21694214876033116], 'true,true': [nan, 6.086150235440075e-05], 'true,true,false': [nan, 6.086150235440075e-05]}
{'': [nan, 0.19268819243914406], 'false': [nan, 0.19268819243914406], 'false,false': [nan, 0.19268819243914406], 'false,false,false': [0.14519581808005178, 0.21975480342582573]}
{'': [nan, 0.18827262152594088], 'false': [nan, 0.18827262152594107], 'false,false': [nan, 0.18827262152594107], 'false,false,false': [nan, 0.18827262152594107]}
{'': [nan, 0.19086137076270665], 'false': [nan, 0.19086137076270665], 'false,false': [nan, 0.1908613707627063], 'false,false,false': [nan, 0.1908613707627063]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 37.583
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then if ( interaction(A, A), interaction(C, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5248156017661785;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   | | | else return -0.04093363370782712;  // std dev = 3.145, 109.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12600607795665522;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.21604367194161622;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), phenotype(D, E) )
%   | | then return 0.7373269569258907;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.12719651518985492;  // std dev = 1.105, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.7373269569258906;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.7429508247103795;  // std dev = 2.335, 82.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | | | else return -0.04407527809197236;  // std dev = 2.058, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | else return -0.15429398838278435;  // std dev = 0.262, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return 0.4297641009533521;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08284997283524811;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3421075884809363;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5382294009540707;  // std dev = 0.230, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( enzyme(D, F), enzyme(A, F) )
%   | | | then return -0.1853051240829865;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.030628641359291723;  // std dev = 2.162, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.1599221890349074;  // std dev = 1.457, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.011233814163341389;  // std dev = 1.210, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7014000753259687;  // std dev = 0.225, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1486943480439994;  // std dev = 0.168, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.22198734949916543;  // std dev = 2.705, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.12345345104444726;  // std dev = 4.742, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5312297386642049;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.005796254475364044;  // std dev = 0.281, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( phenotype(D, G), interaction(D, D) )
%   | | | then return 0.403276152805137;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08027205465747275;  // std dev = 2.769, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.49157118079695744;  // std dev = 0.076, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return -0.13991058178693405;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.09184599463417067;  // std dev = 2.252, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.45479625729944895;  // std dev = 0.174, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1408892670710214;  // std dev = 4.593, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(C, E) )
%   | then return 0.06279350702110909;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.33487867600732446;  // std dev = 0.224, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.5305594199080326;  // std dev = 0.862, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.043936693267282306;  // std dev = 0.874, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.051700191375962386;  // std dev = 0.270, 91.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
%   | else if ( location(A, I), phenotype(A, J) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.42384987079573055;  // std dev = 2.488, 43.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | | | else return -0.17364826629980168;  // std dev = 0.081, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.055886181843225795;  // std dev = 2.508, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.11319441207089041;  // std dev = 1.884, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then if ( complex(E, D), interaction(E, C) )
%   | | then return 0.27006016616539313;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1165447696400738;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.426169357109077;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3084259837850078;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.34287313124269975;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.1709047143456395;  // std dev = 2.365, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return -0.14179366491419348;  // std dev = 0.297, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.1334983895747687;  // std dev = 2.046, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.03887425498938861;  // std dev = 4.532, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.021966608757498233;  // std dev = 0.281, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3882518785594831;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2637424468410322;  // std dev = 0.573, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3949455176730523;  // std dev = 0.909, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.16933068583927532;  // std dev = 0.193, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4955710028268313;  // std dev = 1.342, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.18188214761348817;  // std dev = 0.623, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.02098708695016664;  // std dev = 1.937, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.025220031226287076;  // std dev = 2.825, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return -0.08841448539304013;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23411469353814243;  // std dev = 0.050, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( location(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.30571643364651596;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4506371636630351;  // std dev = 0.461, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.15688329020147526;  // std dev = 0.096, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(J, L), enzyme(A, M) )
%   | | | then return -0.029729649949824133;  // std dev = 1.433, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.03987605112498562;  // std dev = 3.817, 125.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
%   | | else if ( interaction(N, A), location(A, P) )
%   | | | then return 0.12441021849184072;  // std dev = 1.446, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.315206939889095;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then if ( enzyme(C, G), interaction(H, C) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return -0.4302687956532584;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.039308328082427756;  // std dev = 1.479, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( interaction(C, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3633716998055064;  // std dev = 0.725, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.21408503436383147;  // std dev = 0.839, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.008802740672137498;  // std dev = 0.288, 178.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=59 */
%   else if ( phenotype(A, K) )
%   | then return 0.025539511146861184;  // std dev = 0.279, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( complex(A, L), location(A, M) )
%   | | then return -0.024612121158668017;  // std dev = 0.196, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.05975980825528673;  // std dev = 1.357, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.23980967922501603;  // std dev = 1.143, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(D, D), complex(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16515673828705807;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.24930251640841086;  // std dev = 0.251, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.01799655689209891;  // std dev = 0.238, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.3393016214659768;  // std dev = 2.355, 62.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | | | else return -0.1221647209288101;  // std dev = 1.493, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else return -0.16435520598554856;  // std dev = 0.063, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3109923913746855;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.3409443441101285;  // std dev = 0.491, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.016489363062129225;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '17.438', 'seconds']
Refined model CLL: -0.193203


******************************************
Best model found
******************************************
Results 

CLL : -0.192781 

AUC ROC : 0.989012 

AUC PR : 0.346679 

Precision : 0.350626 

Recall : 0.739623 

F1 : 0.475728 

Total Learning Time : 37.583 

Total Inference Time : 38.58023715019226 

Total revision time: 85.13940413856506
Best scored revision CLL: -0.193203


Results 

CLL : -0.192781 

AUC ROC : 0.989012 

AUC PR : 0.346679 

Precision : 0.350626 

Recall : 0.739623 

F1 : 0.475728 

Total Learning Time : 85.20633204841613 

Total Inference Time : 38.58023715019226 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.28
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1976323299334608;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17780358504977425;  // std dev = 4.987, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
%   | | | else return 0.1518756668141638;  // std dev = 6.062, 169.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12672927723060595;  // std dev = 5.475, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.1469412552586723;  // std dev = 5.637, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10547035921979489;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.1197620948331772;  // std dev = 6.734, 204.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13567620526645544;  // std dev = 7.615, 249.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0719860920280484;  // std dev = 7.844, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7290846896699473;  // std dev = 0.008, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27099844087933506;  // std dev = 0.011, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.006869369396519012;  // std dev = 3.162, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.07685438878030619;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03714546957901459;  // std dev = 4.271, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.05615628592505834;  // std dev = 5.618, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.049526878336034225;  // std dev = 6.979, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.010157805852531206;  // std dev = 7.140, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.557', 'seconds']
Parameter learned model CLL:-0.329355 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.987, 72, 38], 'false,false,false,false': [6.062, 115, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.475, 94, 44], 'false,false,false,false': [5.637, 94, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 51, 24], 'false,false,false,false': [6.734, 136, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.615, 157, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.844, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 44], 'true,false': [0.011, 98, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.162, 35, 14], 'false,false,false,false': [4.699, 63, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.271, 90, 44], 'false,false,false,false': [5.618, 92, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.979, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.14, 198, 92]}]
{'': [nan, 0.2242344194659672], 'false': [nan, 0.22423441946596676], 'false,false': [nan, 0.2242344194659672], 'false,false,false': [nan, 0.22423441946596676]}
{'': [nan, 0.2210146323916697], 'false': [nan, 0.2210146323916703], 'false,false': [nan, 0.2210146323916697], 'false,false,false': [0.22611570247933893, 0.2174293617170267]}
{'': [nan, 0.22061945127267837], 'false': [nan, 0.22061945127267837], 'false,false': [nan, 0.22061945127267718], 'false,false,false': [0.21718020872395147, 0.22376046975067435]}
{'': [nan, 0.22107035889228477], 'false': [nan, 0.22107035889228477], 'false,false': [nan, 0.22107035889228452], 'false,false,false': [0.21759999999999968, 0.22229131922165382]}
{'': [nan, 0.23289779599682903], 'false': [nan, 0.23289779599682903], 'false,false': [nan, 0.23289779599683003], 'false,false,false': [nan, 0.23289779599683003]}
{'': [nan, 0.2213368798631417], 'false': [nan, 0.2213368798631417], 'false,false': [nan, 0.22133687986314257], 'false,false,false': [nan, 0.22133687986314224]}
{'': [0.21388330718497392, 0.22083509897628165], 'false': [nan, 0.22083509897628165], 'false,false': [nan, 0.22083509897628165], 'false,false,false': [0.20408163265306134, 0.22765437347220693], 'true': [1.3090779038549272e-06, 1.2848018960749748e-06], 'true,true': [nan, 1.3090779038549272e-06], 'true,true,false': [nan, 1.3090779038549272e-06]}
{'': [nan, 0.1818428232356476], 'false': [nan, 0.1818428232356476], 'false,false': [nan, 0.1818428232356476], 'false,false,false': [0.13614767272133843, 0.22540286164367196]}
{'': [nan, 0.1851808791587464], 'false': [nan, 0.18518087915874695], 'false,false': [nan, 0.18518087915874695], 'false,false,false': [nan, 0.18518087915874695]}
{'': [nan, 0.17577015765699563], 'false': [nan, 0.17577015765699563], 'false,false': [nan, 0.1757701576569956], 'false,false,false': [nan, 0.1757701576569956]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.647
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.26240425424844854;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.12285481745245355;  // std dev = 3.638, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.15896194322959353;  // std dev = 5.086, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7672161015637403;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(C, D) )
%   | | then return -0.004456894622327158;  // std dev = 0.345, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( complex(A, E) )
%   | | | then return 0.3584854337120143;  // std dev = 2.530, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.19975790452807504;  // std dev = 1.720, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.7708245796983493;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8287453877950025;  // std dev = 0.120, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.16259781259675557;  // std dev = 0.125, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2992145980287845;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.1554328409251794;  // std dev = 4.732, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.543100413775911;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.701333234072719;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7036064960007893;  // std dev = 0.216, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1443093419296772;  // std dev = 0.147, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.11073265294059098;  // std dev = 5.016, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7880411194176197;  // std dev = 0.134, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.19511026989212565;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.08523978218903945;  // std dev = 2.601, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.2155111711310018;  // std dev = 2.884, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.4085382066916444;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, D) )
%   | | then return 0.6143671877395201;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.47896251176567883;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.538173373528246;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( complex(A, H), phenotype(F, G) )
%   | | | then return 0.21118010882518787;  // std dev = 1.343, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.008454055021749307;  // std dev = 3.380, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.011047700461508795;  // std dev = 2.156, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.13761874536524848;  // std dev = 5.087, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.03936910997914357;  // std dev = 0.373, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.08156906985043007;  // std dev = 1.601, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.024077407275883277;  // std dev = 2.023, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.03810628359190407;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.25479616979913444;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7499151843136017;  // std dev = 0.169, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.21868245691080945;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.36950025440294354;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09082340718171844;  // std dev = 2.951, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3335534525635112;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, D) )
%   | | then if ( interaction(C, C), interaction(E, A) )
%   | | | then return -0.1472733281388736;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04229583849948762;  // std dev = 1.697, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( phenotype(A, F), interaction(C, C) )
%   | | | then return 0.7071940288010352;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14266303987686782;  // std dev = 2.811, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3435126665635694;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4001405450124331;  // std dev = 3.534, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | | | else return -0.22507144285723707;  // std dev = 0.404, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.010831385988349637;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5116851157545464;  // std dev = 0.164, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2070288940058751;  // std dev = 0.064, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.293655135597643;  // std dev = 0.259, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6340432162956579;  // std dev = 0.203, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.24616926420739793;  // std dev = 0.082, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6767239751473956;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23366582128142505;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.20611856461544367;  // std dev = 0.937, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08819519956927613;  // std dev = 3.296, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21015192481827497;  // std dev = 0.078, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.0028892971638655;  // std dev = 1.163, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.185941681433092;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(D, I), complex(D, J) )
%   | | | then return -0.2290369100788967;  // std dev = 0.716, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.032632079637978234;  // std dev = 1.604, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( complex(A, M), enzyme(K, N) )
%   | | | then return -0.04623209048070569;  // std dev = 1.083, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.08791240416524564;  // std dev = 2.665, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | else if ( interaction(A, P), interaction(Q, A) )
%   | | | then return -0.06568349737061578;  // std dev = 1.015, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.049117977466505564;  // std dev = 3.520, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), enzyme(E, F) )
%   | then if ( enzyme(A, G) )
%   | | then return 0.02117329135559734;  // std dev = 0.269, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06069748924968681;  // std dev = 1.170, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.37966923460644275;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.010852743065780709;  // std dev = 0.293, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   else if ( interaction(I, A), location(I, J) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.1774574499818664;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.037698369227429536;  // std dev = 0.300, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.23994979258577465;  // std dev = 2.093, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | | else return -0.22283947661629458;  // std dev = 0.412, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.06372081855420249;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.13658023902017402;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22725970167973664;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.21538361226795985;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09220061369595767;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4214832887991231;  // std dev = 0.830, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.1774239627991494;  // std dev = 0.406, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.036732343856701904;  // std dev = 2.577, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return -0.01627291235425246;  // std dev = 3.417, 108.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.872', 'seconds']
Refined model CLL: -0.220214


******************************************
Best model found
******************************************
Results 

CLL : -0.231609 

AUC ROC : 0.981399 

AUC PR : 0.276585 

Precision : 0.222222 

Recall : 0.66426 

F1 : 0.333032 

Total Learning Time : 15.647 

Total Inference Time : 9.390052795410156 

Total revision time: 33.284210636138916
Best scored revision CLL: -0.220214


Results 

CLL : -0.231609 

AUC ROC : 0.981399 

AUC PR : 0.276585 

Precision : 0.222222 

Recall : 0.66426 

F1 : 0.333032 

Total Learning Time : 33.35113854598999 

Total Inference Time : 9.390052795410156 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.162
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18145720577620447;  // std dev = 7.629, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.12030835098168532;  // std dev = 4.472, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0.16043676189661543;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1722399106004253;  // std dev = 4.236, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.15014557310670124;  // std dev = 6.203, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.05488319402089209;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.12115194208822067;  // std dev = 7.166, 231.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0964524910052923;  // std dev = 7.604, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07658783868092699;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.701291541787577;  // std dev = 0.990, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.26329206630285346;  // std dev = 0.075, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.10690706610458818;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.10168147006837633;  // std dev = 4.965, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08146044334735038;  // std dev = 3.336, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.06281042851855231;  // std dev = 6.155, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039108311531820664;  // std dev = 7.066, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0403430682545389;  // std dev = 7.011, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.043', 'seconds']
Parameter learned model CLL:-0.351341 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.629, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.472, 70, 28], 'false,false,false,false': [6.253, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.236, 50, 28], 'false,false,false,false': [6.203, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [7.166, 154, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.604, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.99, 1, 28], 'true,false': [0.075, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [4.965, 67, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.336, 47, 28], 'false,false,false,false': [6.155, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.066, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.011, 162, 86]}]
{'': [nan, 0.21878003278873953], 'false': [nan, 0.2187800327887394], 'false,false': [nan, 0.21878003278873953], 'false,false,false': [nan, 0.2187800327887394]}
{'': [nan, 0.21450325561856654], 'false': [nan, 0.21450325561856676], 'false,false': [nan, 0.21450325561856654], 'false,false,false': [0.20408163265306087, 0.21966923368261476]}
{'': [nan, 0.22579517278215264], 'false': [nan, 0.22579517278215264], 'false,false': [nan, 0.22579517278215355], 'false,false,false': [0.23006808665922812, 0.22370515018216788]}
{'': [nan, 0.21922874197334416], 'false': [nan, 0.21922874197334416], 'false,false': [nan, 0.2192287419733437], 'false,false,false': [0.1946366782006923, 0.2222849093291554]}
{'': [nan, 0.22066245670874193], 'false': [nan, 0.22066245670874193], 'false,false': [nan, 0.22066245670874268], 'false,false,false': [nan, 0.22066245670874268]}
{'': [nan, 0.21965644666867032], 'false': [nan, 0.21965644666867032], 'false,false': [nan, 0.21965644666866962], 'false,false,false': [nan, 0.21965644666866924]}
{'': [0.21678250604559068, 0.23233916666391724], 'false': [nan, 0.23233916666391724], 'false,false': [nan, 0.23233916666391724], 'false,false,false': [0.23187869822485174, 0.23255606977571996], 'true': [0.03382180690253476, 9.615288912554627e-05], 'true,true': [nan, 0.03382180690253476], 'true,true,false': [nan, 0.03382180690253476]}
{'': [nan, 0.20261972658376526], 'false': [nan, 0.20261972658376526], 'false,false': [nan, 0.2026197265837657], 'false,false,false': [0.14839830302962032, 0.22686286890492866]}
{'': [nan, 0.19504411230279867], 'false': [nan, 0.19504411230279867], 'false,false': [nan, 0.19504411230279867], 'false,false,false': [nan, 0.19504411230279867]}
{'': [nan, 0.19817807888482897], 'false': [nan, 0.19817807888482897], 'false,false': [nan, 0.1981780788848286], 'false,false,false': [nan, 0.1981780788848286]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.373
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(D, A), complex(D, E) )
%   | | then if ( interaction(F, D), enzyme(A, G) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.19148226843284566;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.1016271959690766;  // std dev = 4.602, 115.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=28 */
%   | | | else return 0.2059750220560341;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(C, E), complex(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7354117310784307;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, C) )
%   | | | then return -0.10413785607463745;  // std dev = 0.856, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.3241544083236803;  // std dev = 2.126, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.1179064400062989;  // std dev = 0.442, 186.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=53 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.8358951220378182;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( phenotype(A, L), interaction(J, M) )
%   | | | then return 0.4453220942605934;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11863915109181734;  // std dev = 2.071, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.34060860814920585;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.49784830259309726;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, D) )
%   | | then return 0.7410572784842235;  // std dev = 0.205, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else if ( interaction(D, G), complex(G, H) )
%   | | | then return 0.7712421224978501;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.21629957870528155;  // std dev = 1.120, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.1850417132444727;  // std dev = 0.256, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then if ( interaction(J, A) )
%   | | then return 0.6504980938404575;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3476142342959298;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12495955596882213;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.00802691852313252;  // std dev = 1.776, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.08912148498322901;  // std dev = 3.779, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.437434055325657;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.5766791847282203;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6659643349264049;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B), interaction(G, A) )
%   | | then return 0.6699502820014168;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12698620962434287;  // std dev = 0.213, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.047820444483554686;  // std dev = 3.863, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5207099809570641;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12293409144457083;  // std dev = 4.192, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | | else return 0.3837847658891941;  // std dev = 0.459, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( complex(A, E), complex(C, E) )
%   | | then return 0.30621569791151027;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4368708103755468;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13474004337227696;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return 0.26844586625812167;  // std dev = 0.500, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10818925530669787;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.03786823449781648;  // std dev = 1.015, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.48740438333290054;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07575234097119891;  // std dev = 5.214, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
%   | | | else return 0.0017647494510792438;  // std dev = 2.791, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2527423826732405;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3463245790772128;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), location(A, H) )
%   | | then if ( complex(G, I), enzyme(G, J) )
%   | | | then return 0.01529038386285105;  // std dev = 1.622, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.07333226903686994;  // std dev = 1.920, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( complex(F, K) )
%   | | | then return 0.3811207697750281;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03355131247329386;  // std dev = 0.973, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09958876999392555;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.11022961203851074;  // std dev = 4.449, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.02191674039130988;  // std dev = 2.875, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.2745916989073966;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06513651224508052;  // std dev = 0.739, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.5044845160815594;  // std dev = 0.397, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7126171561690804;  // std dev = 0.228, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.20061535659227642;  // std dev = 0.069, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.27304031926019456;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3491994399953259;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.009542487365890787;  // std dev = 3.161, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | | else return 0.09909748997964352;  // std dev = 3.748, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( phenotype(E, C), interaction(E, E) )
%   | then return -0.04192069545796408;  // std dev = 0.262, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else return 0.05839750724063499;  // std dev = 0.294, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( recursion_proteinclass(F, B), interaction(H, A) )
%   | | then return 0.21926517623145747;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.16131204728769719;  // std dev = 1.226, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.018890200394888527;  // std dev = 2.301, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), phenotype(L, M) )
%   | | | then return 0.09276891532727585;  // std dev = 1.686, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.20349429014900172;  // std dev = 1.606, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return -0.02534398162524642;  // std dev = 1.224, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.07619429702354538;  // std dev = 3.687, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.26150232858526734;  // std dev = 0.256, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.08272460655149305;  // std dev = 1.674, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return -0.008071816262636235;  // std dev = 1.538, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else return -0.1848729424296462;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.21893474795657047;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), location(I, L) )
%   | | | then return 0.03904860102010048;  // std dev = 3.648, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return -0.09060529104099413;  // std dev = 0.951, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.2374231227073713;  // std dev = 1.179, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.0632442153401008;  // std dev = 2.980, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(G, C), interaction(G, E) )
%   | | then return -0.04409242518995824;  // std dev = 0.308, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( complex(C, H) )
%   | | | then return 0.475043987059709;  // std dev = 0.260, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13383133110816842;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | then return 0.5645850887346758;  // std dev = 0.117, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.24585907790511313;  // std dev = 0.040, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( interaction(A, J), interaction(K, A) )
%   | then return 0.0037060187450710658;  // std dev = 0.299, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | else if ( complex(A, L), phenotype(A, M) )
%   | | then return 0.009606869574336787;  // std dev = 0.291, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.1542354076787383;  // std dev = 1.746, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.08396202695334927;  // std dev = 2.802, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.349', 'seconds']
Refined model CLL: -0.262591


******************************************
Best model found
******************************************
Results 

CLL : -0.275178 

AUC ROC : 0.948042 

AUC PR : 0.232816 

Precision : 0.245487 

Recall : 0.480565 

F1 : 0.32497 

Total Learning Time : 16.373 

Total Inference Time : 7.994317054748535 

Total revision time: 31.786304388046265
Best scored revision CLL: -0.262591


Results 

CLL : -0.275178 

AUC ROC : 0.948042 

AUC PR : 0.232816 

Precision : 0.245487 

Recall : 0.480565 

F1 : 0.32497 

Total Learning Time : 31.85323229789734 

Total Inference Time : 7.994317054748535 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.289
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17800187627598277;  // std dev = 7.692, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16589757884796444;  // std dev = 5.426, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | | else return 0.18466400711375083;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13992291244575955;  // std dev = 4.842, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.11183091892336604;  // std dev = 6.022, 172.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.180701923965978;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.09058724086191709;  // std dev = 6.846, 223.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09188526422630221;  // std dev = 7.684, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0689507847634779;  // std dev = 7.716, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.732026347020129;  // std dev = 0.041, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2683725218628311;  // std dev = 0.061, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05660963392413933;  // std dev = 4.076, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.10900839053561168;  // std dev = 4.221, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.040960291039070715;  // std dev = 3.809, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.10027116554038538;  // std dev = 5.722, 141.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06193297704966084;  // std dev = 6.881, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02479645897654314;  // std dev = 7.020, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.309', 'seconds']
Parameter learned model CLL:-0.336223 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.692, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.426, 89, 44], 'false,false,false,false': [5.288, 80, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.842, 71, 35], 'false,false,false,false': [6.022, 120, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.487, 31, 20], 'false,false,false,false': [6.846, 156, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.684, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.716, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.041, 0, 35], 'true,false': [0.061, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.076, 54, 24], 'false,false,false,false': [4.221, 49, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.809, 71, 35], 'false,false,false,false': [5.722, 89, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.881, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.02, 174, 87]}]
{'': [nan, 0.21754703719723267], 'false': [nan, 0.21754703719723276], 'false,false': [nan, 0.21754703719723267], 'false,false,false': [nan, 0.21754703719723276]}
{'': [nan, 0.22434997558593772], 'false': [nan, 0.22434997558593797], 'false,false': [nan, 0.22434997558593772], 'false,false,false': [0.22138051896658975, 0.22737788353493324]}
{'': [nan, 0.2149594984659242], 'false': [nan, 0.2149594984659242], 'false,false': [nan, 0.21495949846592408], 'false,false,false': [0.22114039187384854, 0.2108494404541905]}
{'': [nan, 0.21667054750777992], 'false': [nan, 0.21667054750777992], 'false,false': [nan, 0.21667054750778092], 'false,false,false': [0.23836985774702, 0.2101964160025461]}
{'': [nan, 0.21788662386958743], 'false': [nan, 0.21788662386958743], 'false,false': [nan, 0.21788662386958646], 'false,false,false': [nan, 0.21788662386958646]}
{'': [nan, 0.2149418985411574], 'false': [nan, 0.2149418985411574], 'false,false': [nan, 0.21494189854115772], 'false,false,false': [nan, 0.21494189854115686]}
{'': [0.21193622260904355, 0.22283842035993845], 'false': [nan, 0.22283842035993845], 'false,false': [nan, 0.22283842035993845], 'false,false,false': [0.21301775147929045, 0.2314049586776858], 'true': [4.772891573777217e-05, 4.677433742343862e-05], 'true,true': [nan, 4.772891573777217e-05], 'true,true,false': [nan, 4.772891573777217e-05]}
{'': [nan, 0.19215420557392948], 'false': [nan, 0.19215420557392948], 'false,false': [nan, 0.19215420557392904], 'false,false,false': [0.13690292912343002, 0.23218097166421378]}
{'': [nan, 0.1948239941027392], 'false': [nan, 0.19482399410274034], 'false,false': [nan, 0.19482399410274034], 'false,false,false': [nan, 0.19482399410274034]}
{'': [nan, 0.18883839985135714], 'false': [nan, 0.18883839985135714], 'false,false': [nan, 0.18883839985135645], 'false,false,false': [nan, 0.18883839985135645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.253
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(D, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.14006382871653417;  // std dev = 6.169, 188.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=53 */
%   | | else if ( location(A, F) )
%   | | | then return 0.06403128804068885;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6173126854066587;  // std dev = 0.315, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then return -0.12335321066755921;  // std dev = 0.166, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.7999774271533443;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1526656017751939;  // std dev = 6.106, 175.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
%   else if ( interaction(A, G) )
%   | then if ( complex(G, H), complex(A, H) )
%   | | then return 0.020110576342122936;  // std dev = 0.362, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( complex(G, I) )
%   | | | then return 0.18350762608857316;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1001742927552398;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.040229434624539144;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.01691342251831799;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then return 0.5739983395258303;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6754350325032796;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11690328727010948;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.17536796494204004;  // std dev = 1.710, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.041613087303428935;  // std dev = 1.481, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), location(A, L) )
%   | | | then return 0.11071956448199333;  // std dev = 5.942, 174.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=53 */
%   | | | else return 0.29766868312674954;  // std dev = 1.526, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.10278622483594324;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.04114377386914448;  // std dev = 1.927, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.4379564258165219;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5911528724703661;  // std dev = 0.258, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1041739936655928;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.019382686544240874;  // std dev = 1.094, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.12433980969437243;  // std dev = 1.767, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5113171684702051;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.1931628765009345;  // std dev = 3.711, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.12338304570398163;  // std dev = 5.067, 117.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(C, E), enzyme(A, F) )
%   | then if ( interaction(A, G), location(A, H) )
%   | | then return 0.07362555013780894;  // std dev = 0.419, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.1003637223072434;  // std dev = 1.243, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3293917009602471;  // std dev = 1.818, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | else if ( phenotype(C, K), recursion_proteinclass(C, B) )
%   | | then return 0.334873497968508;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, D), interaction(A, L) )
%   | | | then return 0.09937926725009531;  // std dev = 3.125, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.02394332757418587;  // std dev = 4.923, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   else if ( interaction(A, M), complex(M, N) )
%   | then if ( complex(A, N) )
%   | | then return 0.07460351752587757;  // std dev = 0.400, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.4602384826038233;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5530913923418873;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( phenotype(C, E), location(A, D) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27295472366787116;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(C, F), interaction(A, G) )
%   | | | then return -0.14505263998159024;  // std dev = 0.261, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.09313601252506641;  // std dev = 4.175, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | else if ( enzyme(A, H), location(A, D) )
%   | | then return -0.04307146626140291;  // std dev = 0.383, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | | then return 0.27078774586745114;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04169860534827932;  // std dev = 4.389, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   else if ( enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.6933427468471913;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.23077892555880752;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.45778293383530766;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5948483939940029;  // std dev = 0.188, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2344944761184762;  // std dev = 0.064, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( location(A, G), location(E, H) )
%   | | then if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.350834410010456;  // std dev = 0.245, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.056432994142098326;  // std dev = 2.266, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.07265263494557007;  // std dev = 0.773, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.17799004787322156;  // std dev = 0.652, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), location(A, M) )
%   | | | then return 0.08720615063898055;  // std dev = 4.352, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | | else return 0.3430449235276365;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.1846368710859349;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, C) )
%   | then return 0.12928109075051153;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2575715201182404;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then if ( phenotype(A, F) )
%   | | then return -0.08189821850154845;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.13723333196836424;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.07155557596556758;  // std dev = 1.415, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.04590376000857086;  // std dev = 1.664, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.06925136722340823;  // std dev = 5.606, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | | | else return -0.02873039782807722;  // std dev = 1.637, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.2100250076922084;  // std dev = 0.316, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | else if ( interaction(C, F), interaction(D, F) )
%   | | then return -0.15766771009623995;  // std dev = 0.121, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
%   | | else return -0.01746764005058116;  // std dev = 0.415, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4860313177839708;  // std dev = 0.164, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.21996021243928615;  // std dev = 0.050, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K), complex(I, L) )
%   | | | then return 0.2671726127678912;  // std dev = 1.126, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.044947177387244935;  // std dev = 2.478, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.09407781074713997;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2595727896124115;  // std dev = 2.529, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(A, E), complex(D, F) )
%   | then return -0.030945967742393547;  // std dev = 0.356, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | then return 0.33020945732097884;  // std dev = 0.330, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, D), enzyme(H, C) )
%   | | | then return -0.1404007728826544;  // std dev = 0.190, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.13171830017694686;  // std dev = 2.707, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   else if ( complex(A, I) )
%   | then return 0.007890781973544836;  // std dev = 0.279, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.191234136674557;  // std dev = 0.793, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.04681952244557655;  // std dev = 3.990, 99.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=23 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.23258628850538882;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08761152482278024;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.238', 'seconds']
Refined model CLL: -0.289532


******************************************
Best model found
******************************************
Results 

CLL : -0.292906 

AUC ROC : 0.875092 

AUC PR : 0.179304 

Precision : 0.171875 

Recall : 0.468085 

F1 : 0.251429 

Total Learning Time : 23.253 

Total Inference Time : 14.083701133728027 

Total revision time: 45.08297533226013
Best scored revision CLL: -0.289532


Results 

CLL : -0.292906 

AUC ROC : 0.875092 

AUC PR : 0.179304 

Precision : 0.171875 

Recall : 0.468085 

F1 : 0.251429 

Total Learning Time : 45.22196335029602 

Total Inference Time : 14.083701133728027 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.683
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21676962475468542;  // std dev = 8.167, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18828222113102933;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | | else return 0.14481304662737204;  // std dev = 5.968, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13912570962331167;  // std dev = 5.220, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.1680807549446324;  // std dev = 6.337, 174.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11948259725446181;  // std dev = 4.371, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.09816940818906611;  // std dev = 7.149, 235.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11339512761298842;  // std dev = 8.202, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0405574303138244;  // std dev = 8.526, 345.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.731283905841034;  // std dev = 0.037, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2697303580497029;  // std dev = 0.046, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06429964622280225;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.035376560495543136;  // std dev = 5.289, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03585290940503721;  // std dev = 4.142, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.05339193234624461;  // std dev = 6.487, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056779987738031015;  // std dev = 7.570, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03762403220692485;  // std dev = 7.601, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.412', 'seconds']
Parameter learned model CLL:-0.337362 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.167, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.775, 93, 52], 'false,false,false,false': [5.968, 113, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.22, 81, 41], 'false,false,false,false': [6.337, 111, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.371, 56, 29], 'false,false,false,false': [7.149, 160, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.202, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.526, 241, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.037, 0, 41], 'true,false': [0.046, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.901, 45, 23], 'false,false,false,false': [5.289, 93, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.142, 85, 41], 'false,false,false,false': [6.487, 128, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.57, 193, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 201, 104]}]
{'': [nan, 0.2300118906064233], 'false': [nan, 0.23001189060642138], 'false,false': [nan, 0.2300118906064233], 'false,false,false': [nan, 0.23001189060642138]}
{'': [nan, 0.22293444328824163], 'false': [nan, 0.22293444328824275], 'false,false': [nan, 0.22293444328824163], 'false,false,false': [0.23001189060642227, 0.21583103764922082]}
{'': [nan, 0.22791523612956519], 'false': [nan, 0.22791523612956519], 'false,false': [nan, 0.2279152361295641], 'false,false,false': [0.2233488577388127, 0.23077139516237632]}
{'': [nan, 0.21950439442469044], 'false': [nan, 0.21950439442469044], 'false,false': [nan, 0.21950439442469313], 'false,false,false': [0.2247750865051906, 0.21747731318996466]}
{'': [nan, 0.22806902517195085], 'false': [nan, 0.22806902517195085], 'false,false': [nan, 0.22806902517195], 'false,false,false': [nan, 0.22806902517195]}
{'': [nan, 0.21071980528227832], 'false': [nan, 0.21071980528227832], 'false,false': [nan, 0.2107198052822782], 'false,false,false': [nan, 0.21071980528227832]}
{'': [0.22451201891607533, 0.21506543982770668], 'true': [3.3124524250031824e-05, 2.677611815645742e-05], 'false': [nan, 0.21506543982770668], 'false,false': [nan, 0.21506543982770668], 'false,false,false': [0.22383217993079546, 0.21030018655661836], 'true,true': [nan, 3.3124524250031824e-05], 'true,true,false': [nan, 3.3124524250031824e-05]}
{'': [nan, 0.18692736334075027], 'false': [nan, 0.18692736334075027], 'false,false': [nan, 0.18692736334075064], 'false,false,false': [0.1361570157656987, 0.22029757333103347]}
{'': [nan, 0.19296122713282812], 'false': [nan, 0.19296122713282757], 'false,false': [nan, 0.19296122713282757], 'false,false,false': [nan, 0.19296122713282757]}
{'': [nan, 0.18943950937324816], 'false': [nan, 0.18943950937324816], 'false,false': [nan, 0.18943950937324794], 'false,false,false': [nan, 0.18943950937324794]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.522
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), interaction(D, E) )
%   | then if ( interaction(A, D), recursion_proteinclass(E, B) )
%   | | then return 0.8236661764788221;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.19359197307419687;  // std dev = 5.935, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.11621345122854462;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7263801614154415;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.26342396142948327;  // std dev = 0.932, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(C, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8182055925620474;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7768631385190738;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, I), phenotype(I, J) )
%   | | | then return 0.10516454552184604;  // std dev = 4.152, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | | | else return -0.09119136547972957;  // std dev = 1.300, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.15237553472651982;  // std dev = 4.444, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.26393465139581646;  // std dev = 3.334, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), location(D, E) )
%   | then return 0.6045223403617274;  // std dev = 0.239, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | else if ( complex(C, F), interaction(A, G) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.635254167614099;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06131735946980788;  // std dev = 2.708, 91.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=9 */
%   | | else if ( enzyme(A, H), phenotype(D, I) )
%   | | | then return 0.06932900026158383;  // std dev = 3.051, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.16107216163438576;  // std dev = 4.527, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   else if ( complex(A, J), phenotype(A, K) )
%   | then return 0.5197604710795006;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return -0.0043240618397440604;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(N, A), enzyme(A, P) )
%   | | | then return 0.05396298668908318;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.28888878069652446;  // std dev = 1.501, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(F, D) )
%   | | then return 0.40291034790907054;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19112324142047288;  // std dev = 0.512, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5531648519074791;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6322026237555779;  // std dev = 0.110, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.17574842419195272;  // std dev = 0.048, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.06563660343054323;  // std dev = 1.048, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.45655723613776367;  // std dev = 1.288, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.09675986748875805;  // std dev = 3.320, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.14872297518054747;  // std dev = 4.310, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.31126134795164634;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.022890095429300834;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3919561823783877;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.6756872736136437;  // std dev = 0.121, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.18368280512203272;  // std dev = 0.039, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4085771778066425;  // std dev = 1.200, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.1508722409840709;  // std dev = 0.433, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04534223946003498;  // std dev = 5.223, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   | | | else return 0.11497432121197317;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.21855983081130836;  // std dev = 0.246, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return -0.061116286436060645;  // std dev = 0.149, 72.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=9 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(A, H), interaction(F, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2570400572713886;  // std dev = 1.041, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.08140637690813568;  // std dev = 1.184, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( phenotype(A, J), phenotype(F, K) )
%   | | | then return 0.09963263830057081;  // std dev = 2.413, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.026361672911806185;  // std dev = 2.214, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( interaction(L, A), interaction(A, L) )
%   | | then return 0.31847929422609594;  // std dev = 0.529, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.09695920506493126;  // std dev = 3.965, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.1777413906503878;  // std dev = 2.348, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then return 0.2757696933868733;  // std dev = 0.071, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.44467824267017203;  // std dev = 0.088, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.14203373165097052;  // std dev = 0.083, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.5909828156502173;  // std dev = 1.720, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return -0.17032781583856668;  // std dev = 1.125, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.24829755388558625;  // std dev = 0.065, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.04656507896464911;  // std dev = 0.407, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.047031035891193264;  // std dev = 1.055, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.09051848122767552;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( complex(C, E), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return -0.010958620044229234;  // std dev = 0.398, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.20132302384039147;  // std dev = 0.139, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else if ( interaction(D, A), complex(D, H) )
%   | | then return -0.06947614164251999;  // std dev = 0.235, 101.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=15 */
%   | | else if ( complex(C, I), complex(D, I) )
%   | | | then return 0.04234699079019759;  // std dev = 3.667, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return -0.05484935642225998;  // std dev = 2.148, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   else if ( enzyme(A, J) )
%   | then return 0.24407895454811437;  // std dev = 0.977, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, K) )
%   | | then return -0.11129448883673816;  // std dev = 0.881, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.09122733148882262;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1277795036143758;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(C, G) )
%   | | then return -0.2512478988620764;  // std dev = 0.496, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15910671516795832;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21810683728868727;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.24297198408021015;  // std dev = 0.207, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.1162535567482944;  // std dev = 0.042, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, J), recursion_proteinclass(K, B) )
%   | | | then return 0.24671374014817254;  // std dev = 0.138, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.01459810786531013;  // std dev = 4.463, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.046459304601254636;  // std dev = 1.085, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.40122589858435664;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17377002746640122;  // std dev = 0.074, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), complex(E, G) )
%   | | then if ( interaction(E, F) )
%   | | | then return -0.019745134187484626;  // std dev = 1.248, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.05993972204627776;  // std dev = 1.079, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0354820292337875;  // std dev = 1.504, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.12840666772496215;  // std dev = 2.714, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3287305679618373;  // std dev = 1.660, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return -0.17934365763582263;  // std dev = 0.517, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.05955203025998593;  // std dev = 0.505, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.08203588983332148;  // std dev = 2.075, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '54.027', 'seconds']
Refined model CLL: -0.213263


******************************************
Best model found
******************************************
Results 

CLL : -0.244631 

AUC ROC : 0.973378 

AUC PR : 0.456357 

Precision : 0.196057 

Recall : 0.675472 

F1 : 0.303905 

Total Learning Time : 33.522 

Total Inference Time : 22.49538516998291 

Total revision time: 65.29551704406738
Best scored revision CLL: -0.213263


Results 

CLL : -0.244631 

AUC ROC : 0.973378 

AUC PR : 0.456357 

Precision : 0.196057 

Recall : 0.675472 

F1 : 0.303905 

Total Learning Time : 65.43450506210327 

Total Inference Time : 22.49538516998291 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.267
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18323727432212725;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1698745018890826;  // std dev = 5.821, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
%   | | | else return 0.13805188980331126;  // std dev = 5.343, 135.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1085563089406689;  // std dev = 5.563, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | | | else return 0.1257215484939954;  // std dev = 5.738, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12554882494080857;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.15825215289154076;  // std dev = 6.474, 181.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1067650340138249;  // std dev = 7.799, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.087496108399543;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7346143488539248;  // std dev = 0.000560, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2653896017648695;  // std dev = 0.000766, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04536382701783545;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.06938744817646977;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025316281841856258;  // std dev = 4.346, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | | else return 0.00736027289937062;  // std dev = 5.834, 165.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03505222040624771;  // std dev = 7.141, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04795299452235002;  // std dev = 7.013, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.884', 'seconds']
Parameter learned model CLL:-0.3218 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.88, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.821, 101, 51], 'false,false,false,false': [5.343, 94, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.563, 104, 44], 'false,false,false,false': [5.738, 105, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.163, 52, 26], 'false,false,false,false': [6.474, 115, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.799, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.00056, 0, 44], 'true,false': [0.000766, 81, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.346, 99, 44], 'false,false,false,false': [5.834, 117, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.141, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.013, 174, 92]}]
{'': [nan, 0.21940591092409814], 'false': [nan, 0.21940591092409784], 'false,false': [nan, 0.21940591092409814], 'false,false,false': [nan, 0.21940591092409784]}
{'': [nan, 0.2178003860675736], 'false': [nan, 0.21780038606757357], 'false,false': [nan, 0.2178003860675736], 'false,false,false': [0.22294840720221543, 0.21146776406035647]}
{'': [nan, 0.21226403756334725], 'false': [nan, 0.21226403756334725], 'false,false': [nan, 0.21226403756334647], 'false,false,false': [0.2090643283527368, 0.2152143056103537]}
{'': [nan, 0.2289515212311891], 'false': [nan, 0.2289515212311891], 'false,false': [nan, 0.22895152123119], 'false,false,false': [0.22222222222222285, 0.23152934903145525]}
{'': [nan, 0.22441897254383997], 'false': [nan, 0.22441897254383997], 'false,false': [nan, 0.22441897254384163], 'false,false,false': [nan, 0.22441897254384163]}
{'': [nan, 0.2242023424325737], 'false': [nan, 0.2242023424325737], 'false,false': [nan, 0.22420234243257386], 'false,false,false': [nan, 0.2242023424325736]}
{'': [0.2280978094412487, 0.220744755498151], 'true': [7.127190554905899e-09, 7.234920810598548e-09], 'false': [nan, 0.220744755498151], 'false,false': [nan, 0.220744755498151], 'false,false,false': [0.21778435239973687, 0.22383217993079618], 'true,true': [nan, 7.127190554905899e-09], 'true,true,false': [nan, 7.127190554905899e-09]}
{'': [nan, 0.17190760809146685], 'false': [nan, 0.17190760809146685], 'false,false': [nan, 0.1719076080914663], 'false,false,false': [0.13205927302904416, 0.2062931376214159]}
{'': [nan, 0.1795424015111772], 'false': [nan, 0.1795424015111775], 'false,false': [nan, 0.1795424015111775], 'false,false,false': [nan, 0.1795424015111775]}
{'': [nan, 0.18488613097222192], 'false': [nan, 0.18488613097222192], 'false,false': [nan, 0.1848861309722222], 'false,false,false': [nan, 0.1848861309722222]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.091
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B), complex(D, C) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(D, E) )
%   | | then return 0.0399671169176941;  // std dev = 0.386, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.14386322081379804;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else if ( phenotype(A, H), interaction(A, I) )
%   | then if ( enzyme(I, J) )
%   | | then return 0.001006077956655051;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return 0.13592671287729013;  // std dev = 0.448, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.15392358298683562;  // std dev = 5.439, 142.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=42 */
%   | | | else return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7548363180074145;  // std dev = 0.164, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(D, E) )
%   | | then return -0.15157220801554064;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(D, F) )
%   | | | then return -0.1467862214754447;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07660415565890119;  // std dev = 1.670, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( enzyme(G, I), enzyme(A, I) )
%   | | | then return -0.15272770823725362;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10670896734750648;  // std dev = 4.508, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5704836102096481;  // std dev = 0.809, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18727834840117527;  // std dev = 5.221, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), enzyme(C, E) )
%   | then return 0.43360561641869233;  // std dev = 0.670, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.6672772759455964;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12736430411721636;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14681582356570985;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.1054158283692435;  // std dev = 0.200, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.38591253616679533;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10209190137914508;  // std dev = 4.300, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.09310303877248464;  // std dev = 1.815, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.2233885043757372;  // std dev = 4.792, 96.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4490408762678808;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14322688624173927;  // std dev = 0.159, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6778923668289295;  // std dev = 0.264, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19165779099640026;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.5361315886656037;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.28163795087345156;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5014504154537734;  // std dev = 0.093, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.08547423842374398;  // std dev = 4.463, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | | else return 0.14108003929192747;  // std dev = 4.996, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.3726314351735837;  // std dev = 0.148, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.31170269850246635;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5008828331814233;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.45203378944273964;  // std dev = 0.203, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.059496701529000086;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( complex(H, J), phenotype(H, K) )
%   | | | then return 0.05564532371858187;  // std dev = 2.307, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.04915420271864647;  // std dev = 2.518, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.15758601338492878;  // std dev = 2.343, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.058469885785896555;  // std dev = 5.719, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.24171015179726826;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3594789036352109;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), complex(A, F) )
%   | then if ( complex(E, F), interaction(E, E) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.13022343698143612;  // std dev = 1.015, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.021393421291031316;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(E, F), enzyme(E, I) )
%   | | | then return -0.11368123249679923;  // std dev = 0.502, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.12394678098736032;  // std dev = 2.868, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4407863871369052;  // std dev = 4.079, 81.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=57 */
%   | | | else return -0.24819626648572776;  // std dev = 0.329, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return 0.14231260783338875;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5400564673692756;  // std dev = 0.247, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.22972628691269617;  // std dev = 0.070, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.0041098892995364645;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.04125361221712031;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6359168233887053;  // std dev = 0.280, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2417022378051083;  // std dev = 0.259, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6320287408505301;  // std dev = 0.347, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.22457373889152837;  // std dev = 0.254, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.013334311561640416;  // std dev = 0.384, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.13941081978679581;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23382580493061186;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then if ( interaction(A, H), phenotype(F, I) )
%   | | then if ( complex(F, J) )
%   | | | then return -0.08430192464886577;  // std dev = 1.301, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.0454705864542064;  // std dev = 0.692, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(K, F), recursion_proteinclass(K, B) )
%   | | | then return 0.42913658457320875;  // std dev = 0.253, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09122053684898346;  // std dev = 2.407, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2429402657339575;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.03914157352034963;  // std dev = 2.822, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.009932412916620609;  // std dev = 4.098, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then return 0.012619012434296261;  // std dev = 0.287, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.04910755470746044;  // std dev = 0.315, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | else return 0.1892459477218312;  // std dev = 0.369, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19719519898569138;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5421201401059463;  // std dev = 0.592, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.21217749291509128;  // std dev = 0.443, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return -0.07971419096668042;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.17327074379614482;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0269194160078834;  // std dev = 3.741, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14031336107985767;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, D), phenotype(A, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.06827996178837827;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09079067730025275;  // std dev = 0.861, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( complex(D, G), recursion_proteinclass(D, B) )
%   | | | then return 0.17855468249223014;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.028272878103129517;  // std dev = 4.593, 213.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=53 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5808130123275161;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19860060211666078;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.03952148849244653;  // std dev = 2.203, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.10390934644054514;  // std dev = 1.743, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.030', 'seconds']
Refined model CLL: -0.238174


******************************************
Best model found
******************************************
Results 

CLL : -0.233549 

AUC ROC : 0.961631 

AUC PR : 0.226281 

Precision : 0.187339 

Recall : 0.523466 

F1 : 0.275928 

Total Learning Time : 15.091 

Total Inference Time : 9.352098226547241 

Total revision time: 32.413850505828854
Best scored revision CLL: -0.238174


Results 

CLL : -0.233549 

AUC ROC : 0.961631 

AUC PR : 0.226281 

Precision : 0.187339 

Recall : 0.523466 

F1 : 0.275928 

Total Learning Time : 32.55283852386474 

Total Inference Time : 9.352098226547241 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.242
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18514513281814388;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19024871384582148;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
%   | | | else return 0.15184133962997207;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13001287104428;  // std dev = 4.356, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.17108130294739965;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14341420114015727;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.12907169364837312;  // std dev = 6.616, 193.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09523506506543217;  // std dev = 7.559, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07122761492084825;  // std dev = 7.593, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7313594788468313;  // std dev = 0.025, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26937750526160636;  // std dev = 0.031, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04310763426430229;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.06818760179791179;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0398645211676632;  // std dev = 3.408, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.05424286788449112;  // std dev = 6.192, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035029232392121905;  // std dev = 7.078, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012997658670257237;  // std dev = 7.165, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.543', 'seconds']
Parameter learned model CLL:-0.339479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.786, 94, 52], 'false,false,false,false': [4.816, 73, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.356, 59, 28], 'false,false,false,false': [6.081, 102, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [6.616, 126, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.559, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.593, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.025, 0, 28], 'true,false': [0.031, 48, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.736, 70, 33], 'false,false,false,false': [4.069, 49, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.408, 57, 28], 'false,false,false,false': [6.192, 113, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.078, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.165, 187, 86]}]
{'': [nan, 0.22006968439618982], 'false': [nan, 0.22006968439618968], 'false,false': [nan, 0.22006968439618982], 'false,false,false': [nan, 0.22006968439618968]}
{'': [nan, 0.22437469730819062], 'false': [nan, 0.22437469730819093], 'false,false': [nan, 0.22437469730819062], 'false,false,false': [0.22931131544379793, 0.21678749235741107]}
{'': [nan, 0.22693601376217976], 'false': [nan, 0.22693601376217976], 'false,false': [nan, 0.22693601376217978], 'false,false,false': [0.218133491943273, 0.23112831374367446]}
{'': [nan, 0.22753816313615513], 'false': [nan, 0.22753816313615513], 'false,false': [nan, 0.22753816313615577], 'false,false,false': [0.22997508009968007, 0.2268246388595583]}
{'': [nan, 0.22320735120118623], 'false': [nan, 0.22320735120118623], 'false,false': [nan, 0.22320735120118637], 'false,false,false': [nan, 0.22320735120118637]}
{'': [nan, 0.22089059144481074], 'false': [nan, 0.22089059144481074], 'false,false': [nan, 0.22089059144481113], 'false,false,false': [nan, 0.22089059144481069]}
{'': [0.23305124144373218, 0.22038601590926368], 'true': [2.3219473378561467e-05, 1.9960599921283368e-05], 'false': [nan, 0.22038601590926368], 'false,false': [nan, 0.22038601590926368], 'false,false,false': [0.21773965500989606, 0.22370343316289246], 'true,true': [nan, 2.3219473378561467e-05], 'true,true,false': [nan, 2.3219473378561467e-05]}
{'': [nan, 0.19516900690547292], 'false': [nan, 0.19516900690547292], 'false,false': [nan, 0.19516900690547187], 'false,false,false': [0.1366046542223091, 0.2242112993535767]}
{'': [nan, 0.19197280939540673], 'false': [nan, 0.191972809395406], 'false,false': [nan, 0.191972809395406], 'false,false,false': [nan, 0.191972809395406]}
{'': [nan, 0.18802485782915201], 'false': [nan, 0.18802485782915201], 'false,false': [nan, 0.18802485782915235], 'false,false,false': [nan, 0.18802485782915235]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.267
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( enzyme(G, I), phenotype(A, J) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.11188027838309443;  // std dev = 3.562, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.21391816586874185;  // std dev = 4.882, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7426314937338845;  // std dev = 0.131, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.014754937719292507;  // std dev = 1.558, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.18034126837226225;  // std dev = 3.889, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.09625118062069413;  // std dev = 5.211, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return -0.0846025203045152;  // std dev = 0.882, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(C, F), interaction(F, F) )
%   | | then return 0.5587952568253716;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.40109435555303613;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.12001514266598791;  // std dev = 0.035, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), location(A, I) )
%   | | | then return 0.16933493634476915;  // std dev = 3.679, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.3848859770506316;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06496864497724257;  // std dev = 3.544, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return 0.1422333206527408;  // std dev = 4.085, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6295185399006918;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7704861681411779;  // std dev = 0.124, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.21701107790956012;  // std dev = 0.114, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.41535558675858114;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5806478259104905;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.751484059697095;  // std dev = 0.317, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18163489175506622;  // std dev = 0.266, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06973179615968413;  // std dev = 4.381, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | | else return 0.13007866091152182;  // std dev = 3.183, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3622985837981145;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.04659932478015789;  // std dev = 1.305, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return -0.1843758254525686;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(A, H), complex(D, I) )
%   | | | then return 0.40474378137798533;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04163323069068941;  // std dev = 4.074, 108.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=28 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6840475666368315;  // std dev = 0.358, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.20535956761069094;  // std dev = 0.199, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.32859625783051927;  // std dev = 1.495, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13608223294567404;  // std dev = 3.124, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.28472682445190056;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.34454053039799587;  // std dev = 0.592, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6933138490201669;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.1027815249996304;  // std dev = 0.087, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.2438554941813536;  // std dev = 0.259, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.012969240327092195;  // std dev = 3.835, 117.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=28 */
%   | | | else return 0.06354958069817168;  // std dev = 2.879, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.213358491985172;  // std dev = 1.531, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.030273129213411607;  // std dev = 2.941, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48933465052766384;  // std dev = 0.190, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.20034186689612155;  // std dev = 0.056, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.32943404918605745;  // std dev = 0.271, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.13967205305322522;  // std dev = 0.964, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.004337102048560434;  // std dev = 1.936, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5503104362130434;  // std dev = 1.546, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.1955737026287214;  // std dev = 0.384, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.297571023460249;  // std dev = 1.258, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.13421419364244327;  // std dev = 1.826, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.15795643370986148;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(C, E) )
%   | | then return -0.05597197844321621;  // std dev = 0.270, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else return 0.02239851943202687;  // std dev = 0.338, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.3765908612563698;  // std dev = 0.543, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.048191201394656526;  // std dev = 1.373, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.09243648078692938;  // std dev = 1.316, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.024174439369653123;  // std dev = 0.256, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.046498310885961555;  // std dev = 2.411, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.089405674699464;  // std dev = 2.832, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return -0.006919807068876867;  // std dev = 0.318, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( location(E, G), location(F, G) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, H) )
%   | | | then return 0.46544207680015176;  // std dev = 0.591, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02844342588001862;  // std dev = 3.008, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | else if ( enzyme(F, I), interaction(J, F) )
%   | | | then return -0.10884185824184239;  // std dev = 0.992, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.01464543802261208;  // std dev = 1.414, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.26620576939962715;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2341505220435362;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return 0.019264285876753787;  // std dev = 0.793, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2569348346922617;  // std dev = 1.808, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.17067455117553976;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09773265525541393;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), interaction(H, A) )
%   | | then return -0.07231632676553121;  // std dev = 0.231, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | else if ( phenotype(A, I), phenotype(E, I) )
%   | | | then return 0.14250809396733968;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01686354034654896;  // std dev = 1.907, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.04055127180224084;  // std dev = 0.926, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.07163643797155375;  // std dev = 0.928, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | else if ( location(A, N) )
%   | | | then return 0.02661227822206017;  // std dev = 4.048, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.11324762278619992;  // std dev = 1.012, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.336', 'seconds']
Refined model CLL: -0.233117


******************************************
Best model found
******************************************
Results 

CLL : -0.242583 

AUC ROC : 0.954187 

AUC PR : 0.298625 

Precision : 0.344671 

Recall : 0.537102 

F1 : 0.41989 

Total Learning Time : 15.267 

Total Inference Time : 7.084526062011719 

Total revision time: 29.945689853668213
Best scored revision CLL: -0.233117


Results 

CLL : -0.242583 

AUC ROC : 0.954187 

AUC PR : 0.298625 

Precision : 0.344671 

Recall : 0.537102 

F1 : 0.41989 

Total Learning Time : 30.084677871704102 

Total Inference Time : 7.084526062011719 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.293
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21765306733091738;  // std dev = 7.465, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1732866441143035;  // std dev = 5.374, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.16811932127965767;  // std dev = 5.333, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.131085740338829;  // std dev = 4.853, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.13316447858705452;  // std dev = 5.906, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13924765962398247;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.11086216816569483;  // std dev = 6.707, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06674220952867499;  // std dev = 7.777, 285.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0789666524430835;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7324980189935676;  // std dev = 0.019, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2679479775839499;  // std dev = 0.025, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08266714085354315;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.08584668252722658;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0517555178380279;  // std dev = 3.771, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.07238152466440967;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027226611815099198;  // std dev = 7.061, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008237410116479658;  // std dev = 7.124, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.202', 'seconds']
Parameter learned model CLL:-0.328788 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.465, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.374, 84, 44], 'false,false,false,false': [5.333, 84, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.853, 72, 35], 'false,false,false,false': [5.906, 106, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.586, 36, 20], 'false,false,false,false': [6.707, 137, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.777, 198, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 35], 'true,false': [0.025, 61, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.956, 45, 24], 'false,false,false,false': [4.266, 52, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.771, 67, 35], 'false,false,false,false': [5.797, 95, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.061, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.124, 193, 87]}]
{'': [nan, 0.23026091113995042], 'false': [nan, 0.23026091113995023], 'false,false': [nan, 0.23026091113995042], 'false,false,false': [nan, 0.23026091113995023]}
{'': [nan, 0.2247750865051882], 'false': [nan, 0.22477508650518907], 'false,false': [nan, 0.2247750865051882], 'false,false,false': [0.22558593749999956, 0.22394444788889606]}
{'': [nan, 0.2205178598700269], 'false': [nan, 0.2205178598700269], 'false,false': [nan, 0.22051785987002742], 'false,false,false': [0.22009605608777366, 0.2208017670311973]}
{'': [nan, 0.2226262578828407], 'false': [nan, 0.2226262578828407], 'false,false': [nan, 0.2226262578828405], 'false,false,false': [0.22959183673469405, 0.22054059503256226]}
{'': [nan, 0.21219980924829138], 'false': [nan, 0.21219980924829138], 'false,false': [nan, 0.21219980924829182], 'false,false,false': [nan, 0.21219980924829182]}
{'': [nan, 0.22089967644571343], 'false': [nan, 0.22089967644571343], 'false,false': [nan, 0.2208996764457131], 'false,false,false': [nan, 0.22089967644571382]}
{'': [0.23187918249728626, 0.22719831167074], 'true': [1.0561071244552522e-05, 9.943755201221648e-06], 'false': [nan, 0.22719831167074], 'false,false': [nan, 0.22719831167074], 'false,false,false': [0.22684310018903642, 0.2275000000000003], 'true,true': [nan, 1.0561071244552522e-05], 'true,true,false': [nan, 1.0561071244552522e-05]}
{'': [nan, 0.19216368532529277], 'false': [nan, 0.19216368532529277], 'false,false': [nan, 0.1921636853252921], 'false,false,false': [0.13938870220978816, 0.22860878795066397]}
{'': [nan, 0.18743381054817132], 'false': [nan, 0.18743381054817243], 'false,false': [nan, 0.18743381054817243], 'false,false,false': [nan, 0.18743381054817243]}
{'': [nan, 0.18124362384982193], 'false': [nan, 0.18124362384982193], 'false,false': [nan, 0.18124362384982104], 'false,false,false': [nan, 0.18124362384982104]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.831
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7152917922423694;  // std dev = 0.350, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.03148226843284568;  // std dev = 0.379, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), complex(G, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11529179224236952;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( enzyme(A, J), interaction(K, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07554023944733836;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.5854216623722397;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | | | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0.08037115732173453;  // std dev = 0.416, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7824428418952268;  // std dev = 0.145, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return 0.07519130453900956;  // std dev = 1.121, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.16188030949116886;  // std dev = 2.324, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.7538964910511793;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1990771334868042;  // std dev = 2.771, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8146071535467463;  // std dev = 0.201, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14811482041182275;  // std dev = 0.023, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.18399936922251076;  // std dev = 1.998, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.10606761402943506;  // std dev = 4.219, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5988849529923882;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, F), phenotype(C, G) )
%   | | then return 0.42955925401387557;  // std dev = 1.017, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.03673907470219424;  // std dev = 0.352, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.6162580586177128;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.020855954930289685;  // std dev = 0.326, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4017554054155569;  // std dev = 4.302, 83.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=53 */
%   | | | else return -0.15268740375240067;  // std dev = 0.156, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.022828480826187457;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 5.718959613693527E-4;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3963560254545086;  // std dev = 0.307, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.04137376260410654;  // std dev = 0.358, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(F, G), interaction(H, F) )
%   | | then if ( interaction(A, I), enzyme(E, J) )
%   | | | then return 0.4083033755481746;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11071380205383381;  // std dev = 4.251, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.010080295699523647;  // std dev = 1.623, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.12454091927722152;  // std dev = 1.286, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(A, L) )
%   | | then if ( interaction(M, A) )
%   | | | then return 0.1671593357368429;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07931552532693206;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4409280830111039;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then return 0.03743477366289558;  // std dev = 0.354, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(A, G), complex(E, H) )
%   | | then if ( interaction(E, F), complex(A, I) )
%   | | | then return 0.0347801863985237;  // std dev = 1.375, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.10744868084154913;  // std dev = 1.665, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.5719588790327358;  // std dev = 0.372, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1379154484543625;  // std dev = 4.027, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.06816782271929853;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03458261284232068;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, L) )
%   | | | then return -5.087387177850701E-4;  // std dev = 0.976, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.023977496617442615;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, A) )
%   | | then return 0.40167091368955427;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.44834882485935235;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6783253799695093;  // std dev = 0.309, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.18969750148207268;  // std dev = 0.062, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.39869740743321486;  // std dev = 0.328, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.1337552389689793;  // std dev = 1.063, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.11401732677807812;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.09415790526194559;  // std dev = 2.839, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.03426285069025214;  // std dev = 3.740, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4462700508067746;  // std dev = 0.125, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1731133884370124;  // std dev = 0.086, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), interaction(F, E) )
%   | | then return 0.47735395879209674;  // std dev = 0.187, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( enzyme(F, G) )
%   | | | then return -0.2178159873070066;  // std dev = 0.280, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.04320463755565669;  // std dev = 1.382, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.21495795405339713;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.023759850195937477;  // std dev = 2.681, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.15129996739718776;  // std dev = 2.764, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return -0.040512718936140425;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.18664688428723325;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1459570849329178;  // std dev = 0.052, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( enzyme(C, D) )
%   | | | then return 0.22406668808573105;  // std dev = 0.714, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.021220401462155127;  // std dev = 1.526, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.31784061902857463;  // std dev = 0.270, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, F), interaction(G, A) )
%   | | then if ( recursion_proteinclass(G, B), location(G, F) )
%   | | | then return 0.3880545811235812;  // std dev = 0.213, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.008157711998663459;  // std dev = 4.713, 195.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=55 */
%   | | else if ( location(A, H) )
%   | | | then return 0.056769444235089395;  // std dev = 0.948, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.260421589410873;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), location(A, E) )
%   | then return 0.1348841402664008;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.30305366988407406;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.12893355679545118;  // std dev = 0.216, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then if ( phenotype(F, G), interaction(A, F) )
%   | | | then return -0.058455957548432975;  // std dev = 0.664, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09346783455416818;  // std dev = 2.788, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.0502051942506171;  // std dev = 1.386, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.03237729256647484;  // std dev = 3.952, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.1213526631812295;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2751325437977391;  // std dev = 0.181, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.36368915918226935;  // std dev = 0.402, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.557201686597002;  // std dev = 0.304, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( location(I, F), recursion_proteinclass(I, B) )
%   | | | then return -0.3459744927957876;  // std dev = 0.313, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1676320565510244;  // std dev = 0.202, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3623823571335743;  // std dev = 0.412, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.009968640973075819;  // std dev = 3.757, 138.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=35 */
%   | | else return -0.1378777233901735;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.233', 'seconds']
Refined model CLL: -0.210074


******************************************
Best model found
******************************************
Results 

CLL : -0.216969 

AUC ROC : 0.97157 

AUC PR : 0.349821 

Precision : 0.341748 

Recall : 0.624113 

F1 : 0.441656 

Total Learning Time : 25.831 

Total Inference Time : 15.13138198852539 

Total revision time: 48.90790502929688
Best scored revision CLL: -0.210074


Results 

CLL : -0.216969 

AUC ROC : 0.97157 

AUC PR : 0.349821 

Precision : 0.341748 

Recall : 0.624113 

F1 : 0.441656 

Total Learning Time : 54.0023392906189 

Total Inference Time : 15.13138198852539 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.541
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18113030155914014;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1723015260785848;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | else return 0.14233149610855483;  // std dev = 6.000, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14647368924211968;  // std dev = 5.221, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.14206988276983767;  // std dev = 6.499, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09767884095676699;  // std dev = 4.467, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.13402486993745671;  // std dev = 7.014, 218.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10186923984029783;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09190157074040374;  // std dev = 8.266, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7323888765924441;  // std dev = 0.004, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2676217794596355;  // std dev = 0.005, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04152194532111728;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0.06294698706979596;  // std dev = 5.175, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.016963656933950404;  // std dev = 4.216, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   | | | else return 0.08545816035540969;  // std dev = 6.319, 172.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046738070241448576;  // std dev = 7.616, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027084391730348496;  // std dev = 7.656, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.301', 'seconds']
Parameter learned model CLL:-0.338342 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.869, 102, 52], 'false,false,false,false': [6.0, 117, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.221, 81, 41], 'false,false,false,false': [6.499, 128, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.467, 64, 29], 'false,false,false,false': [7.014, 143, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.266, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 41], 'true,false': [0.005, 83, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.969, 50, 23], 'false,false,false,false': [5.175, 81, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.216, 96, 41], 'false,false,false,false': [6.319, 109, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.616, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.656, 210, 104]}]
{'': [nan, 0.2186644033795012], 'false': [nan, 0.21866440337949986], 'false,false': [nan, 0.2186644033795012], 'false,false,false': [nan, 0.21866440337949986]}
{'': [nan, 0.21830938665184274], 'false': [nan, 0.21830938665184194], 'false,false': [nan, 0.21830938665184274], 'false,false,false': [0.22364648338674423, 0.21301775147929117]}
{'': [nan, 0.2220317087765746], 'false': [nan, 0.2220317087765746], 'false,false': [nan, 0.2220317087765741], 'false,false,false': [0.22339905822890008, 0.22115076413026635]}
{'': [nan, 0.2226145787344224], 'false': [nan, 0.2226145787344224], 'false,false': [nan, 0.22261457873442198], 'false,false,false': [0.21459128222915952, 0.2256423253508559]}
{'': [nan, 0.22255565619324666], 'false': [nan, 0.22255565619324666], 'false,false': [nan, 0.22255565619324588], 'false,false,false': [nan, 0.22255565619324588]}
{'': [nan, 0.2254862508495778], 'false': [nan, 0.2254862508495778], 'false,false': [nan, 0.22548625084957832], 'false,false,false': [nan, 0.22548625084957813]}
{'': [0.22132398271721201, 0.2193360017184472], 'true': [3.236921006355149e-07, 3.2910341484935826e-07], 'false': [nan, 0.2193360017184472], 'false,false': [nan, 0.2193360017184472], 'false,false,false': [0.21580033777444224, 0.22129635953828294], 'true,true': [nan, 3.236921006355149e-07], 'true,true,false': [nan, 3.236921006355149e-07]}
{'': [nan, 0.18791199808785558], 'false': [nan, 0.18791199808785558], 'false,false': [nan, 0.18791199808785544], 'false,false,false': [0.12976042763730666, 0.23215035130151856]}
{'': [nan, 0.192070886429752], 'false': [nan, 0.19207088642975184], 'false,false': [nan, 0.19207088642975184], 'false,false,false': [nan, 0.19207088642975184]}
{'': [nan, 0.18668676295341907], 'false': [nan, 0.18668676295341907], 'false,false': [nan, 0.18668676295341946], 'false,false,false': [nan, 0.18668676295341946]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 28.833
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.11148226843284566;  // std dev = 3.767, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return 0.233148935099511;  // std dev = 4.330, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.09479015647355703;  // std dev = 4.865, 131.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8354824624797493;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.16344438915005582;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(G, H) )
%   | | then return 0.730774417186289;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8236339781868486;  // std dev = 0.161, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.07810576654857268;  // std dev = 2.081, 63.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=5 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.11747903116933454;  // std dev = 3.950, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.18165466184560716;  // std dev = 4.914, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5892736171669914;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, C), phenotype(C, F) )
%   | | | then return 0.7019875761169463;  // std dev = 0.939, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.10269722214058152;  // std dev = 1.419, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.05251048571739797;  // std dev = 0.301, 118.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=14 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then return 0.12278299061745755;  // std dev = 0.382, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5545314754423446;  // std dev = 3.097, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | | else return -0.1827737203603135;  // std dev = 0.093, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04982426884362034;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.41184440215196866;  // std dev = 1.490, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4152713213526568;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.004078087728792203;  // std dev = 0.321, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), interaction(D, G) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.03709603144385351;  // std dev = 1.058, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0911424171187473;  // std dev = 1.913, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(D, A), complex(D, I) )
%   | | | then return 0.45005340669803917;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15323727278510574;  // std dev = 2.467, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.47341894312866123;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0703487642220931;  // std dev = 0.924, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.09313726163227912;  // std dev = 5.293, 165.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(C, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.38422155879970904;  // std dev = 0.675, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.0036250891979025123;  // std dev = 0.330, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(C, A) )
%   | | then return -0.07786739998422684;  // std dev = 0.282, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else return 0.036635939521014675;  // std dev = 0.410, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.025716832401265956;  // std dev = 0.193, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( enzyme(G, I), phenotype(G, J) )
%   | | | then return 0.10328916915736644;  // std dev = 1.837, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.22519340076532252;  // std dev = 2.056, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.00136437304552337;  // std dev = 1.530, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.10345333815843243;  // std dev = 5.398, 170.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=60 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), complex(A, F) )
%   | then return 0.04864704351535625;  // std dev = 0.289, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( enzyme(A, G), interaction(C, H) )
%   | | then if ( enzyme(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.4373811034469934;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04206287315595604;  // std dev = 1.322, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( location(A, I), phenotype(C, J) )
%   | | | then return 0.5251780314495686;  // std dev = 0.861, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.20914826939094444;  // std dev = 1.318, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, K), enzyme(A, L) )
%   | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | then return 0.4695597916011792;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 8.748419590868916E-4;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | then return 0.2692684917772669;  // std dev = 0.366, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.010090949120193458;  // std dev = 0.380, 239.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=61 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.31292584951260277;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5411527361600821;  // std dev = 0.126, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.1934124396244089;  // std dev = 0.051, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.5903330870026194;  // std dev = 1.761, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return -0.1795618138505054;  // std dev = 1.455, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.1974349507997937;  // std dev = 0.033, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I) )
%   | | then return -0.1706888992215568;  // std dev = 0.959, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.08893050363922157;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.017658145013576678;  // std dev = 1.574, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.19043753129304827;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2646044606242511;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15696679531776936;  // std dev = 0.271, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.049167206362453114;  // std dev = 2.058, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else return 0.12452177553637019;  // std dev = 0.794, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3448797814760671;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25627366165276755;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.11750834854641128;  // std dev = 2.395, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.0032210370329361095;  // std dev = 4.556, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, A), interaction(C, C) )
%   | then return 0.03220213438388887;  // std dev = 0.210, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else return -0.0283202090749518;  // std dev = 0.235, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(E, F) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.23991365713509513;  // std dev = 0.501, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3586054745729256;  // std dev = 0.479, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(E, H) )
%   | | | then return -0.008322860059809667;  // std dev = 4.453, 171.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=48 */
%   | | | else return 0.10665083220504293;  // std dev = 1.491, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6462676392130129;  // std dev = 0.262, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15243187334766195;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.39449693129884195;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18854821149612555;  // std dev = 0.066, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(D, G), complex(A, G) )
%   | | | then return -0.09780940603195336;  // std dev = 0.902, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return -0.015315629657927187;  // std dev = 2.842, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | else if ( recursion_proteinclass(E, B), complex(E, H) )
%   | | | then return 0.3272483846825935;  // std dev = 0.266, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.02978495754256874;  // std dev = 4.038, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4707801641571572;  // std dev = 0.282, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18155367858846605;  // std dev = 0.237, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.09633440074618423;  // std dev = 0.593, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4041533265908112;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '576', 'milliseconds']
Refined model CLL: -0.234373


******************************************
Best model found
******************************************
Results 

CLL : -0.232104 

AUC ROC : 0.972506 

AUC PR : 0.260508 

Precision : 0.155193 

Recall : 0.501887 

F1 : 0.237077 

Total Learning Time : 28.833 

Total Inference Time : 21.476731777191162 

Total revision time: 59.573303865432734
Best scored revision CLL: -0.234373


Results 

CLL : -0.232104 

AUC ROC : 0.972506 

AUC PR : 0.260508 

Precision : 0.155193 

Recall : 0.501887 

F1 : 0.237077 

Total Learning Time : 64.66773812675476 

Total Inference Time : 21.476731777191162 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.326
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18439006985128545;  // std dev = 7.873, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18835546199141595;  // std dev = 5.739, 144.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=51 */
%   | | | else return 0.15201825268909036;  // std dev = 5.289, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.19137392379170978;  // std dev = 5.212, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
%   | | | else return 0.15482293308852624;  // std dev = 5.603, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12151281617135744;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.14023218043447364;  // std dev = 6.514, 185.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08704948954300391;  // std dev = 7.849, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10250975876785019;  // std dev = 7.664, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7174807551273639;  // std dev = 0.012, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2828052491521461;  // std dev = 0.015, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1042480225962619;  // std dev = 3.922, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return 0.060238579616567846;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03400260307979754;  // std dev = 4.228, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.04836097735602737;  // std dev = 5.622, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026939513950198196;  // std dev = 7.066, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012031010555609314;  // std dev = 7.119, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.164', 'seconds']
Parameter learned model CLL:-0.332998 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.739, 93, 51], 'false,false,false,false': [5.289, 88, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.212, 71, 44], 'false,false,false,false': [5.603, 91, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.121, 49, 26], 'false,false,false,false': [6.514, 119, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.849, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.664, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 44], 'true,false': [0.015, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.922, 40, 25], 'false,false,false,false': [3.916, 46, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.228, 87, 44], 'false,false,false,false': [5.622, 92, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.066, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.119, 192, 92]}]
{'': [nan, 0.21980785674764972], 'false': [nan, 0.2198078567476494], 'false,false': [nan, 0.21980785674764972], 'false,false,false': [nan, 0.2198078567476494]}
{'': [nan, 0.22342980584738387], 'false': [nan, 0.2234298058473884], 'false,false': [nan, 0.22342980584738387], 'false,false,false': [0.22873263888888903, 0.2168138933958297]}
{'': [nan, 0.23087948999900748], 'false': [nan, 0.23087948999900748], 'false,false': [nan, 0.23087948999900595], 'false,false,false': [0.23622857876925046, 0.22584911436604926]}
{'': [nan, 0.2286029809270321], 'false': [nan, 0.2286029809270321], 'false,false': [nan, 0.2286029809270316], 'false,false,false': [0.22648888888888805, 0.22935896413266166]}
{'': [nan, 0.22080710154378283], 'false': [nan, 0.22080710154378283], 'false,false': [nan, 0.22080710154378333], 'false,false,false': [nan, 0.22080710154378333]}
{'': [nan, 0.23123547243059733], 'false': [nan, 0.23123547243059733], 'false,false': [nan, 0.23123547243059894], 'false,false,false': [nan, 0.23123547243059786]}
{'': [0.23235798354766166, 0.22972219957453155], 'true': [3.078566312905454e-06, 2.811195266116366e-06], 'false': [nan, 0.22972219957453155], 'false,false': [nan, 0.22972219957453155], 'false,false,false': [0.23668639053254406, 0.2222222222222227], 'true,true': [nan, 3.078566312905454e-06], 'true,true,false': [nan, 3.078566312905454e-06]}
{'': [nan, 0.18265711802059587], 'false': [nan, 0.18265711802059587], 'false,false': [nan, 0.18265711802059484], 'false,false,false': [0.1364550894451916, 0.22578935810103626]}
{'': [nan, 0.1808743125609127], 'false': [nan, 0.18087431256091488], 'false,false': [nan, 0.18087431256091488], 'false,false,false': [nan, 0.18087431256091488]}
{'': [nan, 0.17845606365662003], 'false': [nan, 0.17845606365662003], 'false,false': [nan, 0.17845606365661992], 'false,false,false': [nan, 0.17845606365661992]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 38.659
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.0954370706927327;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.23128326345772016;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.1785372846140755;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1332262961067392;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.09316672044004003;  // std dev = 0.430, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7583963959048285;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(D, F), complex(A, F) )
%   | | | then return 0.03677813552603163;  // std dev = 2.146, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.21479731168659993;  // std dev = 4.003, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.19597977038800465;  // std dev = 3.086, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.10230460806496174;  // std dev = 3.720, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5833619453932428;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(D, E), complex(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.12553705723464323;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07156678096601136;  // std dev = 0.808, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.1291595076687679;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11020505997481513;  // std dev = 1.097, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), location(A, L) )
%   | | | then return 0.0686661181891013;  // std dev = 3.453, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.17439447355537083;  // std dev = 1.964, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.13311393781926043;  // std dev = 5.489, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return 0.3486940029046654;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.42298908353880343;  // std dev = 0.176, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.7680373629770048;  // std dev = 0.435, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(F, D), interaction(F, A) )
%   | | | then return 0.7480465687017283;  // std dev = 0.580, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.05782109890332804;  // std dev = 3.013, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else return -0.19947156255400494;  // std dev = 0.461, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( interaction(A, A) )
%   | then return 0.06003085172185244;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.05584510941411799;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then return 0.29840458459798147;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.35846881570228273;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(F, G) )
%   | | then return -0.10526018856736638;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.10218205103773997;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07430529494638154;  // std dev = 1.038, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K), interaction(L, J) )
%   | | | then return 0.10281907245004812;  // std dev = 0.578, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40525490781092477;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.1312218051378875;  // std dev = 2.645, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.07272461747904231;  // std dev = 5.284, 179.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5102753581109094;  // std dev = 0.165, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.17499694020772102;  // std dev = 0.044, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( enzyme(E, G) )
%   | | then return 0.5234771684469153;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( location(A, H) )
%   | | | then return 0.1490647437171213;  // std dev = 1.839, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.007958216313429198;  // std dev = 1.279, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6101569027233016;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2030448861875891;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return -0.009996770341324767;  // std dev = 1.716, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.04136393647060946;  // std dev = 3.052, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.011674828276929861;  // std dev = 0.268, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3681079574398984;  // std dev = 0.321, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04351477841721136;  // std dev = 2.257, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.09257854581401859;  // std dev = 1.536, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.011311891677710482;  // std dev = 2.247, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, H), location(H, I) )
%   | | | then return 0.0025873646325054855;  // std dev = 1.283, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.08713038181794182;  // std dev = 2.040, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07530739187562115;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.29719879391505205;  // std dev = 1.042, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.16000912289389657;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23154702143984707;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F) )
%   | | then if ( phenotype(A, I), complex(H, J) )
%   | | | then return -0.03214216456023675;  // std dev = 0.830, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.09171535870775456;  // std dev = 1.431, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | else return 0.062064703677435884;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2939653254978465;  // std dev = 3.688, 99.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=68 */
%   | | | else return -0.18919721248681268;  // std dev = 0.389, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return -0.03506689341165497;  // std dev = 0.378, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16282099073312456;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( complex(D, G) )
%   | | | then return -0.2175863422106922;  // std dev = 0.902, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.1084841223847427;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(H, A), phenotype(D, I) )
%   | | | then return 0.07114464751489061;  // std dev = 1.101, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.07275809559727114;  // std dev = 1.075, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( interaction(J, L), enzyme(A, M) )
%   | | | then return 0.10808121454220289;  // std dev = 0.846, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.01854748634504154;  // std dev = 1.485, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return 0.13308139154121804;  // std dev = 1.241, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.02973784886970758;  // std dev = 4.155, 149.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.09839728328605958;  // std dev = 0.473, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.47425973908560326;  // std dev = 1.130, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.2731632361645276;  // std dev = 0.350, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.2144866054532721;  // std dev = 2.439, 57.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then return -0.11794788280870078;  // std dev = 0.028, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.20527295037832155;  // std dev = 0.198, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.16958786186749436;  // std dev = 0.142, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(A, A) )
%   | then return -0.018572449758876713;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.16165431358926216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '30.234', 'seconds']
Refined model CLL: -0.195285


******************************************
Best model found
******************************************
Results 

CLL : -0.21079 

AUC ROC : 0.988251 

AUC PR : 0.346655 

Precision : 0.262061 

Recall : 0.862816 

F1 : 0.402019 

Total Learning Time : 38.659 

Total Inference Time : 37.11250591278076 

Total revision time: 83.82698093414307
Best scored revision CLL: -0.195285


Results 

CLL : -0.21079 

AUC ROC : 0.988251 

AUC PR : 0.346655 

Precision : 0.262061 

Recall : 0.862816 

F1 : 0.402019 

Total Learning Time : 88.92141519546509 

Total Inference Time : 37.11250591278076 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.39
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1839065108570885;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17636093251447602;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.2206193057202195;  // std dev = 4.568, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1317323241546629;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.12388754908087873;  // std dev = 6.288, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.0986537398446839;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.10793819854920418;  // std dev = 6.734, 207.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09162108420699831;  // std dev = 7.618, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048764733581341396;  // std dev = 7.764, 288.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7410820318612625;  // std dev = 0.026, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.25969848174311416;  // std dev = 0.042, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0808598849883905;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.04810763050815371;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06885356011024393;  // std dev = 3.365, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.06271187223366013;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05578431500624829;  // std dev = 7.032, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026341504211846483;  // std dev = 7.113, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.562', 'seconds']
Parameter learned model CLL:-0.337494 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [4.568, 54, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.346, 58, 28], 'false,false,false,false': [6.288, 124, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [6.734, 140, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.618, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.764, 202, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 28], 'true,false': [0.042, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.678, 65, 33], 'false,false,false,false': [4.146, 55, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.365, 50, 28], 'false,false,false,false': [6.209, 115, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.032, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.113, 178, 86]}]
{'': [nan, 0.21963957759412384], 'false': [nan, 0.21963957759412367], 'false,false': [nan, 0.21963957759412384], 'false,false,false': [nan, 0.21963957759412367]}
{'': [nan, 0.22993055555555691], 'false': [nan, 0.22993055555555625], 'false,false': [nan, 0.22993055555555691], 'false,false,false': [0.22506925207756312, 0.23708677685950408]}
{'': [nan, 0.21803394441876675], 'false': [nan, 0.21803394441876675], 'false,false': [nan, 0.21803394441876614], 'false,false,false': [0.21960754186484518, 0.21727062832519617]}
{'': [nan, 0.2180470597401577], 'false': [nan, 0.2180470597401577], 'false,false': [nan, 0.2180470597401577], 'false,false,false': [0.2144584789035205, 0.21908494382156854]}
{'': [nan, 0.21897056586929783], 'false': [nan, 0.21897056586929783], 'false,false': [nan, 0.21897056586929875], 'false,false,false': [nan, 0.21897056586929875]}
{'': [nan, 0.20931763993271463], 'false': [nan, 0.20931763993271463], 'false,false': [nan, 0.2093176399327149], 'false,false,false': [nan, 0.2093176399327148]}
{'': [0.20694468820878784, 0.219789340232414], 'false': [nan, 0.219789340232414], 'false,false': [nan, 0.219789340232414], 'false,false,false': [0.22334443981674398, 0.2148437499999996], 'true': [2.3230037242947888e-05, 2.5497620554456003e-05], 'true,true': [nan, 2.3230037242947888e-05], 'true,true,false': [nan, 2.3230037242947888e-05]}
{'': [nan, 0.19872711247969368], 'false': [nan, 0.19872711247969368], 'false,false': [nan, 0.19872711247969396], 'false,false,false': [0.14518223265292463, 0.22285701274259223]}
{'': [nan, 0.20020267760811494], 'false': [nan, 0.20020267760811555], 'false,false': [nan, 0.20020267760811555], 'false,false,false': [nan, 0.20020267760811555]}
{'': [nan, 0.19163087235334458], 'false': [nan, 0.19163087235334458], 'false,false': [nan, 0.19163087235334464], 'false,false,false': [nan, 0.19163087235334464]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(F, C), interaction(F, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   else if ( interaction(A, G), phenotype(A, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, A), complex(G, J) )
%   | | | then return 0.06648226843284567;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.37988806553429494;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | else if ( interaction(K, A) )
%   | | then return 0.19743464938522534;  // std dev = 0.473, 112.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=38 */
%   | | else return 0.09148226843284571;  // std dev = 0.423, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8062170503431342;  // std dev = 0.141, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.15400882288546858;  // std dev = 0.063, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4668272839388836;  // std dev = 4.878, 105.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=68 */
%   | | | else return -0.17438792785260662;  // std dev = 0.197, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.004856950389439754;  // std dev = 1.283, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1799772616902234;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then if ( interaction(D, A) )
%   | | then return 0.5499889814851291;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6165721266163748;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then return 0.6581255677356042;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7312961646427133;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.13685396058036967;  // std dev = 0.060, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, I), complex(G, J) )
%   | | | then return 0.13519154402580802;  // std dev = 1.501, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.008246879322706246;  // std dev = 2.650, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.4391928057440895;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11101142567120767;  // std dev = 5.595, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( phenotype(C, E), complex(C, F) )
%   | then return 0.05925567523362986;  // std dev = 0.384, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.42212909367765544;  // std dev = 0.373, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5096993884040683;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07793995043680167;  // std dev = 4.064, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   else if ( enzyme(A, H) )
%   | then return 0.03567648939631533;  // std dev = 0.401, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5620260189119423;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12072301945008859;  // std dev = 1.537, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.244626746759821;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30259955124439425;  // std dev = 1.189, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.1474260751789005;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4104998172414983;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5282362146867169;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.36037720503458437;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4826332540496467;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.7096377484922782;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.026112007379651234;  // std dev = 3.859, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.2994880261623817;  // std dev = 1.142, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07131373756406945;  // std dev = 4.387, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24038761484461837;  // std dev = 0.325, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, H) )
%   | | | then return 0.45522751645396997;  // std dev = 0.351, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.3365808051978515;  // std dev = 1.086, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12571432102725977;  // std dev = 0.050, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.011059541466126529;  // std dev = 3.993, 114.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=28 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7036457314455209;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2024347589713472;  // std dev = 0.251, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2620194186762963;  // std dev = 1.482, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.12320456216779521;  // std dev = 2.895, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.30996264057557277;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.002892204194201405;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6010944479082135;  // std dev = 0.161, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.21653807664978028;  // std dev = 0.101, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2720239450206121;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.04402940562792141;  // std dev = 2.054, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.02618325123206948;  // std dev = 2.937, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.054182203353347336;  // std dev = 3.068, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return 0.2449071033008824;  // std dev = 1.294, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.1904541459300786;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.234125311146926;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39524296685495175;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14737814018862924;  // std dev = 0.215, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10878120673367717;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( complex(A, J), location(A, K) )
%   | | | then return 0.24155361175398266;  // std dev = 0.940, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.062166246815014495;  // std dev = 2.054, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.030272169542374404;  // std dev = 1.922, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.04899060873695864;  // std dev = 4.461, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(D, B) )
%   | then return 0.2816092990208141;  // std dev = 0.163, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.014849799229069899;  // std dev = 0.338, 147.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then return 0.30558337364945487;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, J), enzyme(J, K) )
%   | | | then return -0.10228655449637837;  // std dev = 1.498, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.020421755317718573;  // std dev = 1.825, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( interaction(L, L) )
%   | | | then return 0.004938406330202372;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06137222664108921;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return 0.008268671311783785;  // std dev = 0.454, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.27324950823378286;  // std dev = 1.786, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), interaction(F, A) )
%   | then return -0.09673079877646198;  // std dev = 0.247, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(D, G), location(A, H) )
%   | | then return 0.07221178740123282;  // std dev = 0.286, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return -0.07669811018566342;  // std dev = 0.305, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then if ( phenotype(I, K), recursion_proteinclass(J, B) )
%   | | then return 0.2970763908366299;  // std dev = 0.146, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, A), phenotype(J, L) )
%   | | | then return -0.15297697426186518;  // std dev = 0.222, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.07766783797709428;  // std dev = 2.793, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | else if ( location(A, M) )
%   | | then if ( location(N, M), recursion_proteinclass(N, B) )
%   | | | then return 0.2954720085227753;  // std dev = 2.717, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | | | else return -0.2125682898460791;  // std dev = 0.429, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0.2799881866472383;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.128', 'seconds']
Refined model CLL: -0.250922


******************************************
Best model found
******************************************
Results 

CLL : -0.251621 

AUC ROC : 0.959223 

AUC PR : 0.230477 

Precision : 0.196721 

Recall : 0.59364 

F1 : 0.295515 

Total Learning Time : 17.634 

Total Inference Time : 10.28345799446106 

Total revision time: 35.83656890296936
Best scored revision CLL: -0.250922


Results 

CLL : -0.251621 

AUC ROC : 0.959223 

AUC PR : 0.230477 

Precision : 0.196721 

Recall : 0.59364 

F1 : 0.295515 

Total Learning Time : 40.93100316429138 

Total Inference Time : 10.28345799446106 

