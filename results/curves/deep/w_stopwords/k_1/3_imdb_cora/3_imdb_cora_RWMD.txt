Starting experiment 3_imdb_cora 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.329
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '569', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 188.757
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24811372383190183;  // std dev = 16.439, 1,136.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=443 */
%   | | | else return 0.28437844329623246;  // std dev = 3.862, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.6763307532813305;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08155319041866102;  // std dev = 4.038, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.00100607795665518;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21515079049900426;  // std dev = 16.439, 1,136.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=443 */
%   | | | else return 0.2461223356441568;  // std dev = 3.862, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28858739689073243;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.5728505077589573;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.11803483110206671;  // std dev = 3.296, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.03897984979719275;  // std dev = 2.699, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 8.835646163369304E-4;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18191736937027528;  // std dev = 16.439, 1,136.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=443 */
%   | | | else return 0.2068865189603544;  // std dev = 3.862, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2406116240341722;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.45250734201965803;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.10197016769597678;  // std dev = 3.296, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.03387352424555544;  // std dev = 2.699, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else return 0.006879783784794701;  // std dev = 0.358, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15233251460376082;  // std dev = 16.466, 1,137.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=446 */
%   | | | else return 0.1322563012212973;  // std dev = 3.745, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19457483298384468;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.34273989085368045;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1714965234832806;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08068697847689976;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05099963676451162;  // std dev = 4.033, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return -6.477495871187053E-5;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12158087556945076;  // std dev = 16.438, 1,136.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=443 */
%   | | | else return 0.14196902980214066;  // std dev = 3.866, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12630378080366475;  // std dev = 2.093, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.2834314358332234;  // std dev = 1.996, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.07654161490549095;  // std dev = 3.290, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.021864332795842097;  // std dev = 2.701, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06903406463562545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -5.6840517913869565E-5;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09882942248661214;  // std dev = 16.467, 1,137.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=446 */
%   | | | else return 0.07870699011915173;  // std dev = 3.738, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09622576765866775;  // std dev = 2.092, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.21758309719741445;  // std dev = 1.994, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12952486317973216;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.05857584325937426;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.035927216346386646;  // std dev = 4.031, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return -4.9878288247373614E-5;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07624326634368427;  // std dev = 16.437, 1,136.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=443 */
%   | | | else return 0.09348115412344037;  // std dev = 3.869, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.055281587300860704;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.18330693915056465;  // std dev = 1.769, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10477274636846318;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.04934521332437847;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03040161967427858;  // std dev = 4.031, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return -4.3769074654130575E-5;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3881941269850617;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.07337760366947162;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.034627614302523375;  // std dev = 2.478, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.06648955665047875;  // std dev = 16.689, 1,170.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=475 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.08363937535881658;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0413136067473625;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02562992005824114;  // std dev = 4.031, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return -3.8408311617986497E-5;  // std dev = 2.449, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13550974847773012;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.16065127699111464;  // std dev = 1.473, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0487358874740706;  // std dev = 16.627, 1,158.000 (wgt'ed) examples reached here.  /* #neg=701 #pos=457 */
%   | | | else return 0.07382693746724134;  // std dev = 2.895, 42.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -5.303567751555379E-4;  // std dev = 3.778, 96.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   | | | else return 0.2436186448533438;  // std dev = 1.632, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.04245389348144351;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.008722495917205756;  // std dev = 2.543, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03692808653101437;  // std dev = 16.439, 1,137.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=446 */
%   | | | else return 0.01557062373370316;  // std dev = 3.726, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.007718954204342677;  // std dev = 2.084, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.11217229386070272;  // std dev = 1.990, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06597323635193006;  // std dev = 1.359, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.03449878800516559;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0423716057333967;  // std dev = 1.717, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.006548509016218845;  // std dev = 4.368, 126.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.462', 'seconds']
Refined model CLL: -0.647148


******************************************
Best model found
******************************************
Results 

CLL : -0.625413 

AUC ROC : 0.603909 

AUC PR : 0.436476 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 188.757 

Total Inference Time : 5.590672254562378 

Total revision time: 196.6586103782654
Best scored revision CLL: -0.647148


Results 

CLL : -0.625413 

AUC ROC : 0.603909 

AUC PR : 0.436476 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 217.62893298721315 

Total Inference Time : 5.590672254562378 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.079
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '564', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 303.669
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24945328292559424;  // std dev = 23.288, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=891 */
%   | | | else return 0.2956489350995134;  // std dev = 5.612, 128.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.39868947564005247;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.6081489350995115;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.06467067422994596;  // std dev = 5.491, 184.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=38 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.048625125575702706;  // std dev = 4.024, 105.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=20 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2162970285662288;  // std dev = 23.288, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=891 */
%   | | | else return 0.25572252559754133;  // std dev = 5.612, 128.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7882638448719781;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4023789232562977;  // std dev = 3.975, 68.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16653882456488167;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.05661456993795659;  // std dev = 5.491, 184.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=38 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04260232039124591;  // std dev = 4.024, 105.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1828470621062164;  // std dev = 23.288, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=891 */
%   | | | else return 0.21456236447870056;  // std dev = 5.612, 128.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26472308927395083;  // std dev = 2.997, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.4328197137230533;  // std dev = 2.584, 36.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0631921726141679;  // std dev = 4.919, 140.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=31 */
%   | | | else return 0.04923354389926945;  // std dev = 3.282, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03715320154661487;  // std dev = 4.024, 105.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=20 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15107136695345255;  // std dev = 23.288, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=891 */
%   | | | else return 0.17520344886901312;  // std dev = 5.612, 128.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5488035557625808;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.24962603965387622;  // std dev = 3.936, 68.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13393795558757562;  // std dev = 2.162, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.04119980314605106;  // std dev = 5.490, 184.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=38 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07015739093939083;  // std dev = 0.954, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.03941878080517859;  // std dev = 3.901, 97.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12242805103142038;  // std dev = 23.288, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=891 */
%   | | | else return 0.13992299045211326;  // std dev = 5.612, 128.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14568487334887179;  // std dev = 2.967, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.26743406001010583;  // std dev = 2.576, 36.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11169429278410334;  // std dev = 2.162, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.03543598794697843;  // std dev = 5.490, 184.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=38 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.056257160346842236;  // std dev = 0.943, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.03171463960514766;  // std dev = 3.907, 99.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2126882902388256;  // std dev = 2.836, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return -0.06707995006790926;  // std dev = 2.783, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10059467048148206;  // std dev = 23.593, 2,328.000 (wgt'ed) examples reached here.  /* #neg=1,406 #pos=922 */
%   | | | else return 0.14291977817496626;  // std dev = 3.921, 69.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09182843160244987;  // std dev = 2.162, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.03035192098056155;  // std dev = 5.490, 184.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=38 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.025123272274614798;  // std dev = 4.018, 105.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=20 */
%   | | | else return -0.10369036544303811;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordauthor(H, D) )
%   | | | then return 0.41640049789216566;  // std dev = 1.194, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 3.687697952454446E-4;  // std dev = 3.768, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.00296891582204647;  // std dev = 3.578, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.08207445674813091;  // std dev = 23.641, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,391 #pos=945 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( haswordauthor(M, K) )
%   | | | then return 0.07461076889241676;  // std dev = 2.162, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.025903467503517116;  // std dev = 5.490, 184.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=38 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return -0.06657872022024244;  // std dev = 0.953, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.02775324138168437;  // std dev = 3.898, 97.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.059584414935569166;  // std dev = 23.258, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,386 #pos=891 */
%   | | | else return 0.06782604232580111;  // std dev = 5.612, 128.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=56 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.350344444917883;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08533736526598512;  // std dev = 3.922, 68.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15173646022424545;  // std dev = 2.121, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.11974692287190374;  // std dev = 0.981, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007054194353201927;  // std dev = 5.427, 192.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=37 */
%   | | | else return 0.04865296246069689;  // std dev = 3.918, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.308216423302624;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.03829374810531094;  // std dev = 0.604, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.046068020855659156;  // std dev = 23.881, 2,396.000 (wgt'ed) examples reached here.  /* #neg=1,454 #pos=942 */
%   | | | else return 0.07123967833575622;  // std dev = 3.936, 70.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1281886110393564;  // std dev = 2.118, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.003631230683067932;  // std dev = 5.433, 195.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=37 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.22503061788343515;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.041349549841650894;  // std dev = 4.008, 92.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23395813440683447;  // std dev = 2.486, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return -0.13305378246660193;  // std dev = 2.553, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.037456093805015994;  // std dev = 23.608, 2,336.000 (wgt'ed) examples reached here.  /* #neg=1,412 #pos=924 */
%   | | | else return 0.04720716797098115;  // std dev = 3.923, 68.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10659338534597254;  // std dev = 2.115, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.0030833988019390054;  // std dev = 5.433, 195.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=37 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.18907439189652198;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03499779879803889;  // std dev = 4.007, 92.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.366', 'seconds']
Refined model CLL: -0.649081


******************************************
Best model found
******************************************
Results 

CLL : -0.623017 

AUC ROC : 0.599594 

AUC PR : 0.431429 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 303.669 

Total Inference Time : 7.869487047195435 

Total revision time: 314.81589803504943
Best scored revision CLL: -0.649081


Results 

CLL : -0.623017 

AUC ROC : 0.599594 

AUC PR : 0.431429 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 335.7862206439972 

Total Inference Time : 7.869487047195435 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.843
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '563', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 616.925
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2567995657829921;  // std dev = 28.587, 3,409.000 (wgt'ed) examples reached here.  /* #neg=2,050 #pos=1,359 */
%   | | | else return 0.23580850956759875;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.471052160905963;  // std dev = 3.835, 62.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return 0.5815531904186603;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06176884460177422;  // std dev = 5.986, 221.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=45 */
%   | | | else return 0.03739421811838027;  // std dev = 3.949, 106.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=19 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01568318167485449;  // std dev = 4.402, 146.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22258012331892613;  // std dev = 28.587, 3,409.000 (wgt'ed) examples reached here.  /* #neg=2,050 #pos=1,359 */
%   | | | else return 0.20461355655125252;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3978657036633461;  // std dev = 3.603, 55.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   | | | else return 0.48912678978460244;  // std dev = 3.337, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16545944086172465;  // std dev = 2.623, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.034346579634165396;  // std dev = 6.640, 295.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01376333404604765;  // std dev = 4.402, 146.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1879355222613235;  // std dev = 28.587, 3,409.000 (wgt'ed) examples reached here.  /* #neg=2,050 #pos=1,359 */
%   | | | else return 0.17335066681803987;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.31832989257164174;  // std dev = 3.836, 62.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return 0.41147553810654963;  // std dev = 3.047, 47.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14347402087600153;  // std dev = 2.623, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.02994600295010402;  // std dev = 6.640, 295.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012060735307299703;  // std dev = 4.402, 146.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=23 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15498465762333288;  // std dev = 28.587, 3,409.000 (wgt'ed) examples reached here.  /* #neg=2,050 #pos=1,359 */
%   | | | else return 0.14372520949932566;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23900038244069557;  // std dev = 3.604, 55.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   | | | else return 0.3176729927612477;  // std dev = 3.309, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16679279076870118;  // std dev = 2.587, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.09776921295923915;  // std dev = 0.972, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013212249563084196;  // std dev = 6.300, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.03241577113392094;  // std dev = 4.752, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12530226446640877;  // std dev = 28.587, 3,409.000 (wgt'ed) examples reached here.  /* #neg=2,050 #pos=1,359 */
%   | | | else return 0.11699206565438847;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5472779837548283;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1944865340363634;  // std dev = 4.840, 104.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12010847477495741;  // std dev = 2.614, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.021999820094540556;  // std dev = 6.625, 295.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008044909319775457;  // std dev = 4.402, 146.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=23 */
%   | | | else return -0.10343552101132462;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09893709415604228;  // std dev = 28.587, 3,413.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,357 */
%   | | | else return 0.10822687939747881;  // std dev = 6.650, 184.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=73 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1267146754906149;  // std dev = 3.814, 62.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return 0.2001367683250726;  // std dev = 3.013, 47.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.140287962527905;  // std dev = 2.580, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.08890729779970655;  // std dev = 0.974, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008068446541740847;  // std dev = 6.293, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.02529243655497171;  // std dev = 4.749, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07781029631141437;  // std dev = 28.586, 3,413.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,357 */
%   | | | else return 0.08551873419791027;  // std dev = 6.650, 184.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=73 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.422653911506397;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10144092680033227;  // std dev = 4.806, 103.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03319913938011232;  // std dev = 5.957, 221.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=45 */
%   | | | else return 0.004366444043823368;  // std dev = 3.892, 106.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08074050566850777;  // std dev = 0.965, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.007761149467920806;  // std dev = 4.294, 140.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.061354169746333106;  // std dev = 28.588, 3,409.000 (wgt'ed) examples reached here.  /* #neg=2,050 #pos=1,359 */
%   | | | else return 0.05405785316191458;  // std dev = 6.643, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.311624234845849;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07957680448401722;  // std dev = 4.818, 104.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09744927111980119;  // std dev = 2.606, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.012094879441598991;  // std dev = 6.609, 295.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005132960401798845;  // std dev = 4.401, 146.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=23 */
%   | | | else return -0.0939528292474979;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04684100920724286;  // std dev = 28.586, 3,413.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,357 */
%   | | | else return 0.05433120735079109;  // std dev = 6.652, 184.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=73 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.28881422123911066;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.056108411741267544;  // std dev = 4.802, 103.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=66 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11285231806629914;  // std dev = 2.568, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.08363707431480295;  // std dev = 0.976, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003372832668412723;  // std dev = 6.285, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.016024094945306044;  // std dev = 4.747, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036731558835046016;  // std dev = 28.588, 3,409.000 (wgt'ed) examples reached here.  /* #neg=2,050 #pos=1,359 */
%   | | | else return 0.03044394841231028;  // std dev = 6.641, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23490291339951583;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.04262226489732183;  // std dev = 4.802, 103.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=66 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09357079728586648;  // std dev = 2.566, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.07377618546622419;  // std dev = 0.976, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0029103889124473415;  // std dev = 6.285, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.013740928807303899;  // std dev = 4.746, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.561', 'seconds']
Refined model CLL: -0.647695


******************************************
Best model found
******************************************
Results 

CLL : -0.623496 

AUC ROC : 0.576711 

AUC PR : 0.408509 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 616.925 

Total Inference Time : 18.768974781036377 

Total revision time: 639.7293413810729
Best scored revision CLL: -0.647695


Results 

CLL : -0.623496 

AUC ROC : 0.576711 

AUC PR : 0.408509 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 660.6996639900207 

Total Inference Time : 18.768974781036377 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.68
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '620', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 816.568
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2573177889927705;  // std dev = 33.114, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.23365913918114287;  // std dev = 7.580, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3998156017661783;  // std dev = 4.228, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return 0.5812258581764357;  // std dev = 3.608, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.07400796593651646;  // std dev = 6.199, 227.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=49 */
%   | | | else return 0.03161832285461346;  // std dev = 5.301, 196.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=34 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02566162545484144;  // std dev = 5.241, 197.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22302315543099238;  // std dev = 33.114, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.20277154730275693;  // std dev = 7.580, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7935373198772784;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3951899163538876;  // std dev = 5.533, 130.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=79 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.142757950414689;  // std dev = 2.910, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.03738544764363704;  // std dev = 7.602, 382.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022509051406803864;  // std dev = 5.241, 197.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=33 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1883390580344098;  // std dev = 33.113, 4,573.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,825 */
%   | | | else return 0.1709343566650113;  // std dev = 7.581, 244.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26781276366034257;  // std dev = 4.186, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return 0.4152963047110652;  // std dev = 3.596, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12364168380472917;  // std dev = 2.910, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.0325966079543972;  // std dev = 7.602, 382.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019696074912160907;  // std dev = 5.241, 197.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=33 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15531105577247414;  // std dev = 33.113, 4,573.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,825 */
%   | | | else return 0.1415622812809911;  // std dev = 7.582, 244.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5606438427261984;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24738522954130848;  // std dev = 5.492, 130.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=79 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15865841397749197;  // std dev = 2.966, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.06997834875573583;  // std dev = 1.353, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.045113642688542656;  // std dev = 3.153, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.01947043804975796;  // std dev = 8.523, 506.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=88 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1255960662490739;  // std dev = 33.111, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.1144256724518956;  // std dev = 7.589, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14955261189429273;  // std dev = 4.149, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return 0.2578487152966556;  // std dev = 3.589, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1363511794889578;  // std dev = 2.964, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.061298478901824376;  // std dev = 1.353, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.021407883294525774;  // std dev = 7.484, 373.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=69 */
%   | | | else return 0.014974532121326656;  // std dev = 5.155, 193.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09994514335541244;  // std dev = 33.112, 4,573.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,825 */
%   | | | else return 0.09163564520356396;  // std dev = 7.588, 244.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3796368390858924;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1393771458234748;  // std dev = 5.470, 130.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=79 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09568765119737502;  // std dev = 2.895, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.020763416224425294;  // std dev = 7.575, 382.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010892459415032097;  // std dev = 5.246, 197.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=33 */
%   | | | else return -0.10175154768277965;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07860442058065031;  // std dev = 33.110, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.07216369332314486;  // std dev = 7.593, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06937098320511909;  // std dev = 4.209, 77.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=46 */
%   | | | else return 0.17295010088385956;  // std dev = 3.477, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08012193874012474;  // std dev = 2.894, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.01788481868852243;  // std dev = 7.575, 382.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09939001074005882;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.012113002325954568;  // std dev = 5.153, 193.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5863669933279367;  // std dev = 0.338, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.23771341996220918;  // std dev = 1.842, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.059990415171916216;  // std dev = 33.892, 4,799.000 (wgt'ed) examples reached here.  /* #neg=2,894 #pos=1,905 */
%   | | | else return 0.08330437297113655;  // std dev = 5.473, 134.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=83 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11308860390130568;  // std dev = 2.944, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.056236133021769524;  // std dev = 1.353, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.016472957381727254;  // std dev = 3.133, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.009930461691989054;  // std dev = 8.522, 506.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=88 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0475119374501856;  // std dev = 33.100, 4,573.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,825 */
%   | | | else return 0.04258717720309219;  // std dev = 7.591, 244.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.022010981084806716;  // std dev = 4.128, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return 0.11355740618351498;  // std dev = 3.561, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09414765567983058;  // std dev = 2.941, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.04979078894886385;  // std dev = 1.353, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.013846237140772015;  // std dev = 3.133, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.008565373960721722;  // std dev = 8.522, 506.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=88 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0366202922985391;  // std dev = 33.099, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.0328085521728505;  // std dev = 7.595, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.230269328832324;  // std dev = 0.150, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04032583665437419;  // std dev = 5.444, 130.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=79 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008970906436696601;  // std dev = 7.386, 363.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=69 */
%   | | | else return 0.05607877293240794;  // std dev = 3.293, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004960144933406568;  // std dev = 5.247, 197.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=33 */
%   | | | else return -0.09156064784463293;  // std dev = 0.047, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.509', 'seconds']
Refined model CLL: -0.649167


******************************************
Best model found
******************************************
Results 

CLL : -0.623631 

AUC ROC : 0.583115 

AUC PR : 0.417015 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 816.568 

Total Inference Time : 19.971402406692505 

Total revision time: 841.5521648864745
Best scored revision CLL: -0.649167


Results 

CLL : -0.623631 

AUC ROC : 0.583115 

AUC PR : 0.417015 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 862.5224874954223 

Total Inference Time : 19.971402406692505 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.041
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '604', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1070.102
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151715;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03813944049451678;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947587;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1241486430000413;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.033254011027631855;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.154646444444368;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903763;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973598;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1190873305740258;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.027779231969854244;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026371161776164734;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083849;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107564;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.25581663152892176;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10147787156109828;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.024034907228854194;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022843032308261544;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098656;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4136148104086191;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14073340693244188;  // std dev = 6.058, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02176699643772421;  // std dev = 8.384, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.06454509596648145;  // std dev = 3.627, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.07329232943826613;  // std dev = 1.352, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022448355162037154;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245307;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07114248376188397;  // std dev = 4.741, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.169654204209657;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.034570092801970605;  // std dev = 7.642, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.0018416164237756599;  // std dev = 4.998, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10519680523687637;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.018924568371870846;  // std dev = 5.844, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171418;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832296;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2861010628205851;  // std dev = 0.892, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07741194151654103;  // std dev = 6.045, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09288946714600996;  // std dev = 3.335, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013480296902955885;  // std dev = 8.484, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11636236605585384;  // std dev = 0.950, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.015467792020837826;  // std dev = 5.840, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126445;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.043536294977156574;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02861695496320903;  // std dev = 4.724, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11181088946714714;  // std dev = 3.867, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.030273389058201358;  // std dev = 7.637, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.006489443152520319;  // std dev = 4.983, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10012435951735024;  // std dev = 0.950, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013325228790606321;  // std dev = 5.839, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108199;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741386;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.280473121862312;  // std dev = 0.878, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.039115375050621085;  // std dev = 6.020, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08069139152846314;  // std dev = 3.327, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.00915004713627241;  // std dev = 8.476, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10330872225160516;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.010681068093440332;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.623', 'seconds']
Refined model CLL: -0.650424


******************************************
Best model found
******************************************
Results 

CLL : -0.624378 

AUC ROC : 0.582865 

AUC PR : 0.415221 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1070.102 

Total Inference Time : 26.498882293701172 

Total revision time: 1102.979139678955
Best scored revision CLL: -0.650424


Results 

CLL : -0.624378 

AUC ROC : 0.582865 

AUC PR : 0.415221 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1123.9494622879029 

Total Inference Time : 26.498882293701172 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.341
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '664', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 167.888
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22127742671961922;  // std dev = 15.760, 1,074.000 (wgt'ed) examples reached here.  /* #neg=684 #pos=390 */
%   | | | else return 0.20597502205603316;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17633075328133055;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03768439823382101;  // std dev = 2.993, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | | else return 0.021785298735875997;  // std dev = 2.744, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.192152018735437;  // std dev = 15.760, 1,074.000 (wgt'ed) examples reached here.  /* #neg=684 #pos=390 */
%   | | | else return 0.17900772288295236;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1534823605167704;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.3087411357856349;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09446743783575555;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.033158718281444635;  // std dev = 2.993, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | | else return 0.019112641302366888;  // std dev = 2.744, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1631726789065712;  // std dev = 15.760, 1,074.000 (wgt'ed) examples reached here.  /* #neg=684 #pos=390 */
%   | | | else return 0.15238217752655298;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13126760833378437;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.2564123687585864;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.05833067442788703;  // std dev = 1.894, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.016281910874771304;  // std dev = 2.741, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.018719302095235122;  // std dev = 2.756, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return -0.14690283611996904;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1357894512004544;  // std dev = 15.760, 1,074.000 (wgt'ed) examples reached here.  /* #neg=684 #pos=390 */
%   | | | else return 0.12730547512046397;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11049397908378188;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.20613740734453975;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.11394998325746983;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08522578098206653;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.027523605521762418;  // std dev = 2.986, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | | else return 0.01574627158479906;  // std dev = 2.740, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11017392922140393;  // std dev = 15.792, 1,080.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=391 */
%   | | | else return 0.1192193671314921;  // std dev = 3.826, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07703237378524586;  // std dev = 1.856, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1474736794060671;  // std dev = 2.080, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.05058996880621782;  // std dev = 1.885, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.013182116801858577;  // std dev = 2.739, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01834848479586693;  // std dev = 2.755, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return -0.13121498405140722;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.5612014277310747;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.09124027310229489;  // std dev = 2.771, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1213574940306049;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.08597488727065647;  // std dev = 15.977, 1,110.000 (wgt'ed) examples reached here.  /* #neg=711 #pos=399 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.10416485114839791;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07614631482567148;  // std dev = 1.504, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.02316830913118888;  // std dev = 2.981, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | | else return 0.012923632309941818;  // std dev = 2.738, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07158005179762976;  // std dev = 15.740, 1,074.000 (wgt'ed) examples reached here.  /* #neg=684 #pos=390 */
%   | | | else return 0.06406633992038588;  // std dev = 3.966, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05440464531455708;  // std dev = 2.187, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.11312458994029861;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.044410987849372086;  // std dev = 1.879, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.010625500061232638;  // std dev = 2.737, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017596920362318386;  // std dev = 2.756, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return -0.11830814802307477;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05579695301709913;  // std dev = 15.771, 1,080.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=391 */
%   | | | else return 0.06379059118485329;  // std dev = 3.839, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02978576691600788;  // std dev = 1.866, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.08139640176921012;  // std dev = 2.064, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0884362444261218;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.009756537821847957;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.022792669359365293;  // std dev = 3.070, 96.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=11 */
%   | | | else return 0.01343383526318527;  // std dev = 2.758, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.40660369267144675;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.04610322980927412;  // std dev = 2.774, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.04276320589585922;  // std dev = 15.957, 1,105.000 (wgt'ed) examples reached here.  /* #neg=707 #pos=398 */
%   | | | else return 0.0251466740296466;  // std dev = 2.696, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.09449930496235916;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06843064443234681;  // std dev = 1.507, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02018138456828142;  // std dev = 2.972, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | | else return 0.013034152826190953;  // std dev = 2.736, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21542260102507335;  // std dev = 2.075, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.04073495015777416;  // std dev = 1.986, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03342681429391379;  // std dev = 15.957, 1,105.000 (wgt'ed) examples reached here.  /* #neg=707 #pos=398 */
%   | | | else return 0.01961859607577233;  // std dev = 2.696, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.038095556477663065;  // std dev = 1.870, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return 0.010793377884583259;  // std dev = 2.735, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015054919153168433;  // std dev = 2.756, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return -0.10882104680296868;  // std dev = 0.000291, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.962', 'seconds']
Refined model CLL: -0.619658


******************************************
Best model found
******************************************
Results 

CLL : -0.829081 

AUC ROC : 0.508557 

AUC PR : 0.611854 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 167.888 

Total Inference Time : 4.7455408573150635 

Total revision time: 174.95614161872865
Best scored revision CLL: -0.619658


Results 

CLL : -0.829081 

AUC ROC : 0.508557 

AUC PR : 0.611854 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 195.9264642276764 

Total Inference Time : 4.7455408573150635 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.857
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '623', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 345.06600000000003
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21073673546919305;  // std dev = 22.226, 2,164.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=763 */
%   | | | else return 0.2240025936360978;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.4527435296941061;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.013428438205101966;  // std dev = 4.595, 161.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=25 */
%   | | | else return -0.015090501520205985;  // std dev = 2.803, 71.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.07719655414713092;  // std dev = 4.238, 105.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=23 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18310022466885914;  // std dev = 22.226, 2,164.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=763 */
%   | | | else return 0.19449056448208688;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2759736470047991;  // std dev = 2.996, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.4183613715465118;  // std dev = 2.460, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01178592850841478;  // std dev = 4.595, 161.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=25 */
%   | | | else return -0.013263453944473678;  // std dev = 2.803, 71.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.067537204602627;  // std dev = 4.238, 105.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15574784921426368;  // std dev = 22.226, 2,164.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=763 */
%   | | | else return 0.16508655516703968;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20271924980921407;  // std dev = 2.487, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.3273317262782454;  // std dev = 2.964, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.5165683776536735;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.049182207116169815;  // std dev = 2.006, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008172012731100773;  // std dev = 4.922, 208.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=28 */
%   | | | else return 0.05366057780033256;  // std dev = 4.157, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12995952475820052;  // std dev = 22.226, 2,164.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=763 */
%   | | | else return 0.13728663146700815;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1741348314222569;  // std dev = 2.999, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.2848477269290948;  // std dev = 2.432, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09024315068853792;  // std dev = 2.151, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.007733304273444558;  // std dev = 4.902, 206.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=28 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.050589788073268874;  // std dev = 4.225, 105.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=23 */
%   | | | else return -0.1174690462261319;  // std dev = 0.000379, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10666102837999897;  // std dev = 22.226, 2,164.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=763 */
%   | | | else return 0.1121836591648292;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11810650896541658;  // std dev = 2.495, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.20728417014982922;  // std dev = 2.942, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.19358539754331983;  // std dev = 1.943, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.07260472126897817;  // std dev = 0.896, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.007575397918384209;  // std dev = 4.918, 208.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=28 */
%   | | | else return 0.03932088677368949;  // std dev = 4.156, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08634990932756878;  // std dev = 22.226, 2,164.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=763 */
%   | | | else return 0.09036480862064816;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09743929477242465;  // std dev = 3.004, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.17729270449470283;  // std dev = 2.412, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4314423757186983;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.029548333241536686;  // std dev = 1.972, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006654040727131197;  // std dev = 4.918, 208.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=28 */
%   | | | else return 0.033591780082131414;  // std dev = 4.156, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06914438917622714;  // std dev = 22.226, 2,164.000 (wgt'ed) examples reached here.  /* #neg=1,401 #pos=763 */
%   | | | else return 0.07196774713738019;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06179473271460041;  // std dev = 2.502, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.12465683819123215;  // std dev = 2.927, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1562536772363011;  // std dev = 1.916, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.07955716218496524;  // std dev = 0.841, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005848862717119258;  // std dev = 4.918, 208.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=28 */
%   | | | else return 0.028581898956442888;  // std dev = 4.156, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5173933982125908;  // std dev = 1.292, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.0528019861448175;  // std dev = 3.763, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.0530671330519386;  // std dev = 22.478, 2,217.000 (wgt'ed) examples reached here.  /* #neg=1,438 #pos=779 */
%   | | | else return 0.06460928735772713;  // std dev = 3.736, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.08020369463129734;  // std dev = 2.127, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return -0.008145625809879866;  // std dev = 4.873, 206.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025875517781683108;  // std dev = 4.206, 105.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=23 */
%   | | | else return -0.10180621422790614;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04341009015970372;  // std dev = 22.198, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=763 */
%   | | | else return 0.04062405424146803;  // std dev = 5.365, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.035145386141876296;  // std dev = 3.010, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.09285577974251741;  // std dev = 2.400, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.18275141902311728;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.058556019979995884;  // std dev = 2.313, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006501573438526802;  // std dev = 4.872, 205.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=28 */
%   | | | else return 0.023940585183816403;  // std dev = 4.101, 101.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16540424790445005;  // std dev = 3.646, 55.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | | | else return -0.15752507907973942;  // std dev = 1.527, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.032522328036067284;  // std dev = 22.478, 2,217.000 (wgt'ed) examples reached here.  /* #neg=1,438 #pos=779 */
%   | | | else return 0.03417617768999163;  // std dev = 3.730, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.34217875026207284;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.016581380073369376;  // std dev = 1.931, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007227382961397813;  // std dev = 5.200, 203.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=33 */
%   | | | else return 0.018194618265189876;  // std dev = 3.789, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.994', 'seconds']
Refined model CLL: -0.623329


******************************************
Best model found
******************************************
Results 

CLL : -0.828793 

AUC ROC : 0.515358 

AUC PR : 0.61815 

Precision : 1.0 

Recall : 0.006485 

F1 : 0.012887 

Total Learning Time : 345.06600000000003 

Total Inference Time : 8.385819435119629 

Total revision time: 356.40428914833075
Best scored revision CLL: -0.623329


Results 

CLL : -0.828793 

AUC ROC : 0.515358 

AUC PR : 0.61815 

Precision : 1.0 

Recall : 0.006485 

F1 : 0.012887 

Total Learning Time : 377.3746117572785 

Total Inference Time : 8.385819435119629 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.713
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '669', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 622.585
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21141650599963052;  // std dev = 27.224, 3,244.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,146 */
%   | | | else return 0.23580850956759875;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.337315601766178;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.5399671169176932;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.08921948595311938;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.001500187707505861;  // std dev = 5.864, 285.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=40 */
%   | | | else return 0.01886322081379749;  // std dev = 4.760, 168.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1836842881552875;  // std dev = 27.224, 3,244.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,146 */
%   | | | else return 0.20461355655125252;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.29110956985202097;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.46084995018555597;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08859606418774053;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.07870190981914453;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0013176689474145612;  // std dev = 5.864, 285.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=40 */
%   | | | else return 0.01655146407136321;  // std dev = 4.760, 168.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15622773863220185;  // std dev = 27.224, 3,244.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,146 */
%   | | | else return 0.17335066681803987;  // std dev = 6.647, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.24259622205193923;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.3716178572457541;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07099807623509145;  // std dev = 2.337, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.07206555908930844;  // std dev = 0.964, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0022057528286669446;  // std dev = 5.994, 298.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=42 */
%   | | | else return 0.01735473038416167;  // std dev = 4.748, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13031625074757341;  // std dev = 27.234, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,147 */
%   | | | else return 0.14416331752538222;  // std dev = 6.607, 187.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19603468759080514;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.28711026315614635;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.25897070165475006;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.003974779936071311;  // std dev = 2.555, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0018201752232475119;  // std dev = 5.861, 285.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=40 */
%   | | | else return 0.01296916750769655;  // std dev = 4.759, 168.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1069001761405263;  // std dev = 27.225, 3,244.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,146 */
%   | | | else return 0.11782741264447953;  // std dev = 6.645, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14012676012108835;  // std dev = 3.148, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.21997876563884483;  // std dev = 3.400, 51.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07423857883870082;  // std dev = 2.598, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -1.0250504309779081E-4;  // std dev = 6.121, 301.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=44 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14276903774811558;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.007203938012475129;  // std dev = 4.517, 163.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08647938053837759;  // std dev = 27.235, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,147 */
%   | | | else return 0.09526145370880591;  // std dev = 6.603, 187.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.32204664220138424;  // std dev = 0.956, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1323951833071909;  // std dev = 4.526, 88.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19312757558111984;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.004074795066512411;  // std dev = 2.248, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0036453443061123564;  // std dev = 5.987, 298.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=42 */
%   | | | else return 0.012802674802367969;  // std dev = 4.743, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06921822441301183;  // std dev = 27.235, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,147 */
%   | | | else return 0.07570379482871879;  // std dev = 6.603, 187.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0703591792795162;  // std dev = 3.136, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.13565295581822628;  // std dev = 3.397, 51.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.060381786481845036;  // std dev = 2.323, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.06461998475583729;  // std dev = 0.939, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0031955576497214623;  // std dev = 5.987, 298.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=42 */
%   | | | else return 0.011156601983817977;  // std dev = 4.743, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05492015474155212;  // std dev = 27.225, 3,244.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,146 */
%   | | | else return 0.059729897083300634;  // std dev = 6.641, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.052898596665929665;  // std dev = 3.443, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return 0.11067089603485819;  // std dev = 3.082, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0632692104687459;  // std dev = 2.584, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return -0.002010041750838038;  // std dev = 6.113, 301.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=44 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1403372956723048;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.007020961147198621;  // std dev = 4.517, 163.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5019537482277948;  // std dev = 1.306, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.04200649596207738;  // std dev = 27.952, 3,421.000 (wgt'ed) examples reached here.  /* #neg=2,213 #pos=1,208 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2729389014479864;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05129296158042354;  // std dev = 4.534, 88.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.17281051943260392;  // std dev = 1.091, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.001558183310269235;  // std dev = 2.235, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004102916989840781;  // std dev = 5.984, 298.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=42 */
%   | | | else return 0.009669328958445769;  // std dev = 4.743, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03395823044462677;  // std dev = 27.217, 3,245.000 (wgt'ed) examples reached here.  /* #neg=2,098 #pos=1,147 */
%   | | | else return 0.035879969192157406;  // std dev = 6.606, 187.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.016686832064842873;  // std dev = 3.129, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.06980522518640787;  // std dev = 3.386, 51.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2126546005283929;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.011492197708192445;  // std dev = 2.519, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0019358335614660434;  // std dev = 5.857, 285.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=40 */
%   | | | else return 0.00794701935609604;  // std dev = 4.748, 168.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.164', 'seconds']
Refined model CLL: -0.622051


******************************************
Best model found
******************************************
Results 

CLL : -0.8277 

AUC ROC : 0.506545 

AUC PR : 0.609531 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 622.585 

Total Inference Time : 13.604909181594849 

Total revision time: 640.1155077438355
Best scored revision CLL: -0.622051


Results 

CLL : -0.8277 

AUC ROC : 0.506545 

AUC PR : 0.609531 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 661.0858303527832 

Total Inference Time : 13.604909181594849 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.458
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '610', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 780.647
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21444402469690071;  // std dev = 31.393, 4,297.000 (wgt'ed) examples reached here.  /* #neg=2,766 #pos=1,531 */
%   | | | else return 0.20794317378263918;  // std dev = 7.434, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3414822684328445;  // std dev = 3.871, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | else return 0.49877393509951257;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11269438964496692;  // std dev = 3.231, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0028189858609337475;  // std dev = 6.982, 394.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=57 */
%   | | | else return 0.011675906053868288;  // std dev = 5.596, 241.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=37 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18567278592457492;  // std dev = 31.387, 4,299.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,529 */
%   | | | else return 0.19157449984219643;  // std dev = 7.457, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2946391943322442;  // std dev = 3.871, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | else return 0.426666255443127;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09841494724299932;  // std dev = 3.231, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return -0.05154258263854086;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07063592634998773;  // std dev = 3.199, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return -0.0015043981105033028;  // std dev = 8.340, 574.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=81 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1584416633305048;  // std dev = 31.393, 4,297.000 (wgt'ed) examples reached here.  /* #neg=2,766 #pos=1,531 */
%   | | | else return 0.15239309911073276;  // std dev = 7.433, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.24537008412193;  // std dev = 3.871, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | else return 0.3463186128812191;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12657970753960296;  // std dev = 3.057, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.10692319386626152;  // std dev = 0.979, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05062503974912886;  // std dev = 3.422, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return -0.0013205409789213295;  // std dev = 8.340, 574.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=81 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13152346532348064;  // std dev = 31.387, 4,299.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,529 */
%   | | | else return 0.13718605438481202;  // std dev = 7.458, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18471586652595795;  // std dev = 3.741, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | | else return 0.2792640154668462;  // std dev = 3.950, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1097201431791865;  // std dev = 3.056, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.09346633630872919;  // std dev = 0.979, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0015061229737240386;  // std dev = 7.083, 410.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=59 */
%   | | | else return 0.013159963323974287;  // std dev = 5.585, 236.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=37 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.108365648258889;  // std dev = 31.393, 4,297.000 (wgt'ed) examples reached here.  /* #neg=2,766 #pos=1,531 */
%   | | | else return 0.10286980977379198;  // std dev = 7.431, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14289746580266807;  // std dev = 3.738, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | | else return 0.215718203317544;  // std dev = 3.950, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09390916766174187;  // std dev = 3.055, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.08251813387830642;  // std dev = 0.978, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04370980584351705;  // std dev = 3.421, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return -0.0016828097270905659;  // std dev = 8.339, 574.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=81 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08710006939420113;  // std dev = 31.387, 4,299.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,529 */
%   | | | else return 0.09236431399010446;  // std dev = 7.460, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10466570228381719;  // std dev = 3.848, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | else return 0.1697766886657596;  // std dev = 3.837, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2189938282411455;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.011598980468655524;  // std dev = 3.205, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002888314666781029;  // std dev = 6.943, 394.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=57 */
%   | | | else return 0.01085656252234607;  // std dev = 5.591, 241.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=37 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07013643781910299;  // std dev = 31.394, 4,297.000 (wgt'ed) examples reached here.  /* #neg=2,766 #pos=1,531 */
%   | | | else return 0.06519262914083941;  // std dev = 7.430, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07493882873256688;  // std dev = 3.727, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | | else return 0.13025959655599365;  // std dev = 3.950, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07974491481469796;  // std dev = 3.054, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.0757365538404608;  // std dev = 0.980, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03308014807769425;  // std dev = 3.408, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return -0.0017915241520085681;  // std dev = 8.339, 574.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=81 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05513600864312329;  // std dev = 31.386, 4,299.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,529 */
%   | | | else return 0.059934469801591006;  // std dev = 7.461, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3699158054068832;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06390604652049844;  // std dev = 5.319, 118.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06683648454487319;  // std dev = 3.054, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.06778350454680326;  // std dev = 0.980, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.028261514472567584;  // std dev = 3.407, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return -0.0015722399623996077;  // std dev = 8.339, 574.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=81 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04385695754244783;  // std dev = 31.394, 4,297.000 (wgt'ed) examples reached here.  /* #neg=2,766 #pos=1,531 */
%   | | | else return 0.03941639357848577;  // std dev = 7.428, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03316899603676727;  // std dev = 3.821, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | | | else return 0.08387677383120698;  // std dev = 3.825, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.1605207160843427;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03696518711550138;  // std dev = 3.203, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003260933422411002;  // std dev = 7.068, 410.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=59 */
%   | | | else return 0.009650128889338697;  // std dev = 5.585, 236.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=37 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.033944791033345044;  // std dev = 31.386, 4,299.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,529 */
%   | | | else return 0.038277412635675294;  // std dev = 7.463, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.021890073362183536;  // std dev = 3.712, 58.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=30 */
%   | | | else return 0.06491706435623233;  // std dev = 3.930, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06192123588369765;  // std dev = 3.199, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return -0.07321469811820142;  // std dev = 1.325, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0051196921071724345;  // std dev = 6.929, 394.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=57 */
%   | | | else return 0.009510599116369235;  // std dev = 5.589, 241.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.213', 'seconds']
Refined model CLL: -0.622346


******************************************
Best model found
******************************************
Results 

CLL : -0.825551 

AUC ROC : 0.502961 

AUC PR : 0.605795 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 780.647 

Total Inference Time : 17.747138261795044 

Total revision time: 803.070126991272
Best scored revision CLL: -0.622346


Results 

CLL : -0.825551 

AUC ROC : 0.502961 

AUC PR : 0.605795 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 824.0404496002197 

Total Inference Time : 17.747138261795044 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.817
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '577', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 918.323
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43131966680682676;  // std dev = 6.334, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870392;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32707187705684787;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42326701029401664;  // std dev = 4.471, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.0025537210308260354;  // std dev = 8.045, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008795124278655609;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1417678054965376;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4686228361433862;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.15671398474667975;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5076785126518801;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29589051475892836;  // std dev = 6.196, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10439255773233062;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07584464853379072;  // std dev = 1.359, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002802922512606092;  // std dev = 7.985, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.00695743095032179;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13139836867308785;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13298232854065914;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1935132607145861;  // std dev = 4.460, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2902575489050149;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11032461974495764;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06209073001571531;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 8.517081693391301E-6;  // std dev = 8.026, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005673161968500156;  // std dev = 6.047, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10774830178936178;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10896551138401524;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3714214594065994;  // std dev = 1.208, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1753299790862989;  // std dev = 6.173, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08919960212338164;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06817336411528412;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 7.421802371741651E-4;  // std dev = 7.975, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0059875841502859805;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08714618173272756;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.087993414997778;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10207614284756283;  // std dev = 4.442, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.17925398145272267;  // std dev = 4.447, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07562495628903085;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06006180178959622;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0469192221038816;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0026848328335940977;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06970596272300564;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07032943144012935;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06705375187789249;  // std dev = 4.436, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14419120458636517;  // std dev = 4.442, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.192970652852872;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005589876126028942;  // std dev = 3.395, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04052320201705871;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.00235578380955598;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.2966819401774199;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.4991195066349628;  // std dev = 0.494, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.020903711745943833;  // std dev = 5.593, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.055680921528661435;  // std dev = 36.019, 5,657.000 (wgt'ed) examples reached here.  /* #neg=3,615 #pos=2,042 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01294055193255161;  // std dev = 7.429, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.008639018514570392;  // std dev = 4.637, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005777923090092844;  // std dev = 6.185, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12319862402093924;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0434757674139165;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04247305082319326;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.18807448377922337;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05750927032136786;  // std dev = 6.154, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08285220659022355;  // std dev = 3.490, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06739618036850557;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01962310825091762;  // std dev = 3.608, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0027008594498123964;  // std dev = 9.357, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034078395052652186;  // std dev = 34.971, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03317279996563849;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01845536669832592;  // std dev = 4.426, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07857236900320869;  // std dev = 4.436, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.054894795506545906;  // std dev = 3.492, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06095670795663914;  // std dev = 1.335, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02871197250638988;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0023698429954710294;  // std dev = 9.357, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.148', 'seconds']
Refined model CLL: -0.621315


******************************************
Best model found
******************************************
Results 

CLL : -0.825944 

AUC ROC : 0.502576 

AUC PR : 0.607194 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 918.323 

Total Inference Time : 19.251746892929077 

Total revision time: 943.6584445381164
Best scored revision CLL: -0.621315


Results 

CLL : -0.825944 

AUC ROC : 0.502576 

AUC PR : 0.607194 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 964.6287671470642 

Total Inference Time : 19.251746892929077 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.203
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '779', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 126.197
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34978773108612965;  // std dev = 0.500, 897.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=441 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.34201990284144784;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.00966408661466381;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.024204006076958298;  // std dev = 2.301, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30166989621359913;  // std dev = 0.500, 897.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=441 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3087411357856348;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.5463443246618189;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.29509450923344677;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.008483607059122631;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.13743179522704121;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.004997498646106617;  // std dev = 2.279, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2508833706543279;  // std dev = 0.500, 897.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=441 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.251679639836202;  // std dev = 2.045, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.43969267959850306;  // std dev = 1.626, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.24572761349189018;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.007440589065457354;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12193864302117358;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.004402934065582071;  // std dev = 2.279, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.7104681893577046;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20040107526373904;  // std dev = 14.947, 894.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=438 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18467861048083126;  // std dev = 2.104, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.36110900363447046;  // std dev = 1.511, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.19833363740893878;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.006520605182540344;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.015910482720893186;  // std dev = 2.291, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return -0.11615825659825539;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15881392703808975;  // std dev = 0.500, 897.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=441 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12956927828988585;  // std dev = 2.021, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.28961976823753816;  // std dev = 1.596, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.15621904329059622;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.005710365691309378;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10698543533728938;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0015465340324037353;  // std dev = 2.278, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12267326575381232;  // std dev = 0.500, 897.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=441 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0916954479461341;  // std dev = 2.089, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.22839180399414014;  // std dev = 1.494, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12092610815781832;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.0049977244716852215;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.09718901214040292;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0013662116435184076;  // std dev = 2.278, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09368808163194924;  // std dev = 0.500, 897.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=441 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05781841831474991;  // std dev = 2.009, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.18838494290555594;  // std dev = 1.585, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.21497299255346966;  // std dev = 1.219, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.026454121650136532;  // std dev = 3.225, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08899151852852068;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0012070837737861773;  // std dev = 2.278, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.45314179358699364;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06976461237327969;  // std dev = 14.947, 894.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=438 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03728028390243354;  // std dev = 2.080, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.15188808409304175;  // std dev = 1.485, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.07732620786072604;  // std dev = 2.766, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 2.4139260040011704E-4;  // std dev = 2.062, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009687974188447444;  // std dev = 2.284, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return -0.09741756166436233;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.41463644547652845;  // std dev = 0.200, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.06441700992835518;  // std dev = 2.172, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05473781373783082;  // std dev = 14.780, 874.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=430 */
%   | | | else return 0.05945161176803867;  // std dev = 2.474, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.05293946784816496;  // std dev = 2.611, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.015126942181520098;  // std dev = 2.251, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08071791694216218;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 4.278719651793544E-4;  // std dev = 2.277, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3216776844068122;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04868971773209677;  // std dev = 2.172, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.041225837948316184;  // std dev = 14.780, 874.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=430 */
%   | | | else return 0.04560584623953723;  // std dev = 2.475, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.021489597829338958;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15742042188213937;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03871876727039076;  // std dev = 3.352, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return -0.010948769604471479;  // std dev = 2.286, 53.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.579', 'seconds']
Refined model CLL: -0.66264


******************************************
Best model found
******************************************
Results 

CLL : -0.606587 

AUC ROC : 0.560255 

AUC PR : 0.250715 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 126.197 

Total Inference Time : 2.1017284393310547 

Total revision time: 130.42104115486146
Best scored revision CLL: -0.66264


Results 

CLL : -0.606587 

AUC ROC : 0.560255 

AUC PR : 0.250715 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 151.3913637638092 

Total Inference Time : 2.1017284393310547 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.633
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '764', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 240.194
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3402718401274403;  // std dev = 0.500, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4527435296941061;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.6530207299713063;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.3278459047964808;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
%   | | | else return 0.06594114289172016;  // std dev = 3.560, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.010926712877290126;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2936139990543648;  // std dev = 0.500, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.38827532730832737;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.5538305307132918;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2830815468171411;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
%   | | | else return 0.05772306439192216;  // std dev = 3.560, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.009591399008086402;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24456481899211233;  // std dev = 0.500, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3175123612065959;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.43895908099196945;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23627211890833247;  // std dev = 4.055, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
%   | | | else return 0.0502109276015882;  // std dev = 3.560, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.008410655575590975;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19748059459787426;  // std dev = 0.500, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24261761306682664;  // std dev = 3.084, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | | | else return 0.36135508779569664;  // std dev = 2.374, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.3538005227648464;  // std dev = 1.903, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.08121318066387845;  // std dev = 5.022, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.0073686164842880365;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15562525795022011;  // std dev = 0.500, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.18355675717516862;  // std dev = 3.083, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | | | else return 0.2741312161252861;  // std dev = 2.372, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.278909524202981;  // std dev = 1.897, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.06768792985874343;  // std dev = 5.019, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.006450558284042091;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12052684593359492;  // std dev = 0.500, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.12003771714079724;  // std dev = 2.971, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.21176127162669003;  // std dev = 2.497, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.13517273314498707;  // std dev = 3.991, 66.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=31 */
%   | | | else return 0.020849099830106955;  // std dev = 3.566, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.005642943474302205;  // std dev = 3.053, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordauthor(H, D) )
%   | | | then return 0.6101437832149825;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08432244275583053;  // std dev = 3.498, 51.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | else if ( haswordtitle(I, D) )
%   | | | then return 0.09085765771125036;  // std dev = 20.823, 1,737.000 (wgt'ed) examples reached here.  /* #neg=902 #pos=835 */
%   | | | else return 0.11828476950789024;  // std dev = 3.796, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.03994291980941977;  // std dev = 4.932, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
%   | | | else return 0.19062972655285576;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.001013157574241856;  // std dev = 3.050, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | | else return -0.12482182265147053;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06998819559048498;  // std dev = 0.499, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.06776495802395038;  // std dev = 3.078, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | | | else return 0.14220075644138921;  // std dev = 2.368, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17251950793450938;  // std dev = 1.885, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.030177123855414906;  // std dev = 4.990, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07751663252125737;  // std dev = 0.011, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.0056486584641567104;  // std dev = 3.050, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.052938125945057576;  // std dev = 0.499, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03482330315436312;  // std dev = 2.969, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.11521128012886936;  // std dev = 2.494, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0223736458455039;  // std dev = 4.915, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
%   | | | else return 0.1395562834232857;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.001037593696951889;  // std dev = 3.048, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | | else return -0.11073030368333658;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03992677069367452;  // std dev = 0.499, 1,790.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=863 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.18883824738250593;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.050255078779821376;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.12433399773604481;  // std dev = 1.883, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.016477810987255967;  // std dev = 4.979, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 9.146725886008927E-4;  // std dev = 3.048, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | | | else return -0.10038767410931015;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.398', 'seconds']
Refined model CLL: -0.669188


******************************************
Best model found
******************************************
Results 

CLL : -0.602646 

AUC ROC : 0.558129 

AUC PR : 0.252312 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 240.194 

Total Inference Time : 2.4886839389801025 

Total revision time: 245.31825957489013
Best scored revision CLL: -0.669188


Results 

CLL : -0.602646 

AUC ROC : 0.558129 

AUC PR : 0.252312 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 266.2885821838379 

Total Inference Time : 2.4886839389801025 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.178
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '763', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 347.432
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34199594586816673;  // std dev = 0.500, 2,693.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,303 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.45814893509951127;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | | else return 0.5803711573217343;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2956489350995122;  // std dev = 4.861, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return 0.06350607795665476;  // std dev = 4.275, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.047125313052267775;  // std dev = 4.412, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29507422100146324;  // std dev = 0.500, 2,693.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,303 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.646966189642739;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4309159799726262;  // std dev = 4.684, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.25572252559754366;  // std dev = 4.861, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return 0.05559832350069544;  // std dev = 4.275, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08965827780679696;  // std dev = 0.970, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.04854961397253313;  // std dev = 4.296, 118.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2457116838817582;  // std dev = 0.500, 2,693.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,303 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3076548203988074;  // std dev = 3.447, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | | else return 0.4088849358346788;  // std dev = 3.288, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.21456236447869884;  // std dev = 4.861, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return 0.048380229563561014;  // std dev = 4.275, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07888334706703448;  // std dev = 0.970, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.04238037319932994;  // std dev = 4.296, 118.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.7144749455177242;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1965911899290616;  // std dev = 25.887, 2,684.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,294 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23886293479535808;  // std dev = 3.683, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | | | else return 0.3319242573209143;  // std dev = 3.006, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.1752034488690132;  // std dev = 4.861, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return 0.04187107065562429;  // std dev = 4.275, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.033481233332441074;  // std dev = 4.399, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.12961501367209408;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15618357396841182;  // std dev = 0.499, 2,693.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,303 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1714589087790795;  // std dev = 3.434, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | | else return 0.24867040824264486;  // std dev = 3.281, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.13992299045211304;  // std dev = 4.861, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return 0.036063874873749104;  // std dev = 4.275, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02903757513013095;  // std dev = 4.399, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.1156957396162415;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3395738375751133;  // std dev = 3.018, 50.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | | | else return -0.10068159337311623;  // std dev = 2.299, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11973870913792983;  // std dev = 25.582, 2,621.000 (wgt'ed) examples reached here.  /* #neg=1,357 #pos=1,264 */
%   | | | else return 0.14682347913403793;  // std dev = 4.649, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.10987349688258508;  // std dev = 4.861, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | | else return 0.030931445893603866;  // std dev = 4.275, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07391848535439385;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.03032955259272348;  // std dev = 4.287, 118.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0924156936761805;  // std dev = 0.499, 2,693.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,303 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2749562019178939;  // std dev = 0.938, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.11039270308648567;  // std dev = 4.649, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17136605275517092;  // std dev = 2.325, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.039635662029058355;  // std dev = 6.028, 186.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=54 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.022414561316296495;  // std dev = 4.394, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.10545231476990984;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.4048179412706538;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.22363932832437014;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.06898339584920611;  // std dev = 25.843, 2,680.000 (wgt'ed) examples reached here.  /* #neg=1,388 #pos=1,292 */
%   | | | else return 0.08591040042682307;  // std dev = 4.734, 102.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.06223309963655589;  // std dev = 5.411, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   | | | else return -0.0076865672259216035;  // std dev = 3.528, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019285019337725216;  // std dev = 4.394, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.09592653810620703;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05308822413646092;  // std dev = 0.499, 2,693.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,303 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03797086101423873;  // std dev = 3.674, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | | | else return 0.11301497986017743;  // std dev = 2.988, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.019754096105382406;  // std dev = 6.104, 202.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=54 */
%   | | | else return 0.20498145112176475;  // std dev = 2.226, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010790219099095263;  // std dev = 4.271, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | | else return -0.08793599542706033;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.20225661492363595;  // std dev = 3.178, 53.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=37 */
%   | | | else return -0.13621332013184606;  // std dev = 2.364, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03904607794170905;  // std dev = 25.542, 2,618.000 (wgt'ed) examples reached here.  /* #neg=1,356 #pos=1,262 */
%   | | | else return 0.04379636456748637;  // std dev = 4.652, 98.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=64 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.18509804247640965;  // std dev = 2.196, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.013288895918967803;  // std dev = 6.098, 202.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=55 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009093834494534611;  // std dev = 4.271, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | | else return -0.08114379424012391;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.647', 'seconds']
Refined model CLL: -0.67187


******************************************
Best model found
******************************************
Results 

CLL : -0.60118 

AUC ROC : 0.559701 

AUC PR : 0.252967 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 347.432 

Total Inference Time : 3.7117972373962402 

Total revision time: 354.4375113105774
Best scored revision CLL: -0.67187


Results 

CLL : -0.60118 

AUC ROC : 0.559701 

AUC PR : 0.252967 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 375.40783391952516 

Total Inference Time : 3.7117972373962402 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.699
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '707', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 477.689
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.343950716836701;  // std dev = 0.500, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4496982308741606;  // std dev = 4.142, 71.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=42 */
%   | | | else return 0.5648156017661795;  // std dev = 3.943, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.27618172198475927;  // std dev = 5.448, 122.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=51 */
%   | | | else return 0.04115547104722405;  // std dev = 4.783, 153.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.036063045528959455;  // std dev = 4.883, 163.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29672946085643276;  // std dev = 0.500, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6787446743828786;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.4188493052094003;  // std dev = 5.620, 137.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=87 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.239132840327794;  // std dev = 5.448, 122.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=51 */
%   | | | else return 0.03607142249055057;  // std dev = 4.783, 153.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=28 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0942126183166491;  // std dev = 0.973, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.03569258678130505;  // std dev = 4.782, 155.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24701088278018596;  // std dev = 0.500, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5590167137096913;  // std dev = 0.904, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3403346235824514;  // std dev = 5.622, 138.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=88 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.20127907290381336;  // std dev = 5.448, 122.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=51 */
%   | | | else return 0.031492221180853035;  // std dev = 4.783, 153.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.028856927893237627;  // std dev = 4.876, 163.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=29 */
%   | | | else return -0.12708889559644113;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19927419247015252;  // std dev = 0.500, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.22616204731287196;  // std dev = 4.111, 71.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=42 */
%   | | | else return 0.31892904625284973;  // std dev = 3.922, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1651708517093313;  // std dev = 5.448, 122.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=51 */
%   | | | else return 0.027399070437255764;  // std dev = 4.783, 153.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=28 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08480115925956684;  // std dev = 0.972, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.02860240242555036;  // std dev = 4.777, 155.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.156873162607503;  // std dev = 0.500, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3855209404660902;  // std dev = 0.920, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.19609947084801638;  // std dev = 5.594, 137.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=87 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.13271522983615835;  // std dev = 5.448, 122.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=51 */
%   | | | else return 0.023764938491850785;  // std dev = 4.783, 153.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=28 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.022885135945340987;  // std dev = 4.871, 163.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=29 */
%   | | | else return -0.11485109608345583;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1213657224020563;  // std dev = 0.500, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11959695381828479;  // std dev = 4.095, 71.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=42 */
%   | | | else return 0.19119607543206077;  // std dev = 3.918, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04420073120381449;  // std dev = 6.744, 246.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=65 */
%   | | | else return 0.17482319872228083;  // std dev = 2.668, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07660138166531084;  // std dev = 0.972, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.02274744554716181;  // std dev = 4.772, 155.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0928200743592203;  // std dev = 0.500, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2601721890043952;  // std dev = 0.875, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10935015244755131;  // std dev = 5.594, 138.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=88 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.2109321528962146;  // std dev = 2.463, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.03192355215660544;  // std dev = 6.839, 259.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=67 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1586965100393981;  // std dev = 0.094, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.0258110980421851;  // std dev = 4.742, 147.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5846703854093027;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.21183415874192646;  // std dev = 1.101, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.09332122383326283;  // std dev = 4.574, 86.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=45 */
%   | | | else return 0.06908747980058577;  // std dev = 30.080, 3,635.000 (wgt'ed) examples reached here.  /* #neg=1,855 #pos=1,780 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.029865830294063905;  // std dev = 6.706, 246.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=65 */
%   | | | else return 0.12932271168476803;  // std dev = 2.666, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.012964707680104978;  // std dev = 4.865, 163.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=29 */
%   | | | else return -0.10271689384347588;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053100645813787116;  // std dev = 0.499, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0428184929919305;  // std dev = 4.091, 71.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=42 */
%   | | | else return 0.09840190381886918;  // std dev = 3.912, 75.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01571888689277134;  // std dev = 6.726, 256.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=65 */
%   | | | else return 0.18658583161869677;  // std dev = 2.664, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14045382607887696;  // std dev = 0.103, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.01865670876499846;  // std dev = 4.739, 147.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040024634895697145;  // std dev = 0.499, 3,592.000 (wgt'ed) examples reached here.  /* #neg=1,847 #pos=1,745 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1636374934584175;  // std dev = 0.871, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04808035664025417;  // std dev = 5.591, 138.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=88 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.013000216756437095;  // std dev = 6.726, 256.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=65 */
%   | | | else return 0.14426114316490798;  // std dev = 2.662, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007964785742310672;  // std dev = 4.761, 153.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=28 */
%   | | | else return -0.09224726210714383;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.504', 'seconds']
Refined model CLL: -0.672295


******************************************
Best model found
******************************************
Results 

CLL : -0.605491 

AUC ROC : 0.557126 

AUC PR : 0.243437 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 477.689 

Total Inference Time : 3.498936414718628 

Total revision time: 485.0540423278809
Best scored revision CLL: -0.672295


Results 

CLL : -0.605491 

AUC ROC : 0.557126 

AUC PR : 0.243437 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 506.02436493682865 

Total Inference Time : 3.498936414718628 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.4
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '782', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 595.509
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.8108963319220932;  // std dev = 5.16e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2958729622359162;  // std dev = 33.500, 4,493.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,179 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2471230062224043;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5131337382016199;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3361153135855332;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19935826382737082;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23048590135751648;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31038115199810845;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15693489121314158;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16605286691456164;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2453097669842213;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559874;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508106;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2926969457169989;  // std dev = 4.041, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07453000730504383;  // std dev = 2.900, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1207383514387451;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.1442039537423766;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.041621302877510896;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09275892900245143;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08650979523429991;  // std dev = 4.648, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.150111748565218;  // std dev = 4.304, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0347187433283045;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015042597374062692;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08574930983290485;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.19889961170624731;  // std dev = 4.038, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07940060092625213;  // std dev = 2.895, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07001638768715536;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.07912869477995918;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02609926842918682;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1719399697169538;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.08102264567928333;  // std dev = 0.951, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.011464651815794749;  // std dev = 5.331, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3812316601183824;  // std dev = 1.206, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.017700370626224635;  // std dev = 4.729, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05292269634440814;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.059732764303881095;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13923854996331145;  // std dev = 2.860, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021311387426241578;  // std dev = 7.523, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07941684578833579;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013881409009423952;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040034639119441724;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.020482312991771487;  // std dev = 4.634, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.08750353820782723;  // std dev = 4.298, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017117720960073437;  // std dev = 7.485, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12737303997580693;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07124995339777675;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.010318507458026115;  // std dev = 5.240, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.536', 'seconds']
Refined model CLL: -0.672379


******************************************
Best model found
******************************************
Results 

CLL : -0.602731 

AUC ROC : 0.558254 

AUC PR : 0.252076 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 595.509 

Total Inference Time : 4.874830722808838 

Total revision time: 604.9657245483398
Best scored revision CLL: -0.672379


Results 

CLL : -0.602731 

AUC ROC : 0.558254 

AUC PR : 0.252076 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 625.9360471572876 

Total Inference Time : 4.874830722808838 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.237
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '662', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 172.189
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24531041955286761;  // std dev = 15.380, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.033155412726574685;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.043334120284697554;  // std dev = 2.854, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.05259337954395681;  // std dev = 2.375, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21275150568872922;  // std dev = 15.380, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.13508589466673013;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2616318086752123;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.535713873255035;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.2908309587581631;  // std dev = 1.791, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.172665760781892;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.11345834265228848;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -8.460881790125231E-4;  // std dev = 3.699, 112.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17996996091190137;  // std dev = 15.380, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.11591992951201927;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2192721473492705;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4259895211023176;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.029066618078165227;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.03208139486545242;  // std dev = 2.850, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else return 0.08434679850617102;  // std dev = 0.425, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.148851631885701;  // std dev = 15.380, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.098100313113324;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17873524574687283;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.32439725412580084;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.025650186172961723;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.027877585066311886;  // std dev = 2.850, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.1601772929615209;  // std dev = 1.884, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.03343879927587926;  // std dev = 2.373, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12079109114647363;  // std dev = 15.380, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.08201407808222785;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1424392447767628;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.24351636022258336;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.20381419817801022;  // std dev = 1.782, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.18317352763051403;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0021657138760910553;  // std dev = 3.180, 81.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=12 */
%   | | | else return 0.024461041592362093;  // std dev = 2.849, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.26492537395006377;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.12119261232956202;  // std dev = 1.907, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09754931126573904;  // std dev = 15.521, 1,020.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=392 */
%   | | | else return 0.1715018762271688;  // std dev = 2.304, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.15824048072012684;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.17512599924031022;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.020479991980022594;  // std dev = 2.961, 81.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=10 */
%   | | | else return 0.051479141083101976;  // std dev = 2.885, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07638490019422338;  // std dev = 15.358, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.050177974707903;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06235937695943857;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.18053424289309808;  // std dev = 1.797, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1342006155379341;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.15124838872533056;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.017980094120082068;  // std dev = 2.961, 81.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=10 */
%   | | | else return 0.04336089093411719;  // std dev = 2.883, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05979756554838118;  // std dev = 15.358, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.040734978749354375;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.047944053975826476;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.1389085904078825;  // std dev = 1.797, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1119343217971313;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.13283914857050289;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.015815280928475343;  // std dev = 2.961, 81.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=10 */
%   | | | else return 0.036338192185222086;  // std dev = 2.881, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17594876985508565;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.13061628674798825;  // std dev = 1.889, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04809435207373634;  // std dev = 15.519, 1,020.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=392 */
%   | | | else return 0.08074132242559828;  // std dev = 2.290, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13748771815800553;  // std dev = 1.772, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.17552171491180593;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.04632110333634063;  // std dev = 2.044, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.006771569396022024;  // std dev = 3.689, 112.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03590530600897306;  // std dev = 15.342, 997.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=386 */
%   | | | else return 0.023446996507782314;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.019031631960938454;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.09975348428339803;  // std dev = 1.795, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08346005849718144;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.12318590187371432;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.01345351001495465;  // std dev = 2.963, 81.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=10 */
%   | | | else return 0.02519694921983169;  // std dev = 2.857, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.461', 'seconds']
Refined model CLL: -0.634191


******************************************
Best model found
******************************************
Results 

CLL : -0.678021 

AUC ROC : 0.538928 

AUC PR : 0.452523 

Precision : 0.62069 

Recall : 0.024096 

F1 : 0.046392 

Total Learning Time : 172.189 

Total Inference Time : 5.4022698402404785 

Total revision time: 179.7824076423645
Best scored revision CLL: -0.634191


Results 

CLL : -0.678021 

AUC ROC : 0.538928 

AUC PR : 0.452523 

Precision : 0.62069 

Recall : 0.024096 

F1 : 0.046392 

Total Learning Time : 200.75273025131224 

Total Inference Time : 5.4022698402404785 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.792
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '653', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 325.629
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24500292406087207;  // std dev = 21.742, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.16349244654989306;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.5831489350995114;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012910839861416612;  // std dev = 4.688, 168.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=26 */
%   | | | else return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.08891816586874252;  // std dev = 4.297, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2124882823898257;  // std dev = 21.742, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.1424026707133131;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.49650892064252555;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4508139415237074;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.050079653236255975;  // std dev = 2.200, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04778561894349374;  // std dev = 5.584, 197.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=39 */
%   | | | else return -0.01383080995392355;  // std dev = 2.797, 70.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17975619784628968;  // std dev = 21.742, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.12203710523662958;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2564123687585865;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.3976823551160511;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1393789210216138;  // std dev = 2.340, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.05377416218695899;  // std dev = 0.899, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.041585773600373924;  // std dev = 5.584, 197.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=39 */
%   | | | else return -0.012150315221265475;  // std dev = 2.797, 70.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14868650494627217;  // std dev = 21.742, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.10305754015846742;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18235096978424192;  // std dev = 2.302, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.318054866686376;  // std dev = 2.837, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.003657662530216875;  // std dev = 4.671, 168.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=26 */
%   | | | else return 0.09889491911138314;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.06370603784735245;  // std dev = 4.273, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return -0.12764667511307393;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12066912437824617;  // std dev = 21.742, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.08591678123826532;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13792098817173193;  // std dev = 2.303, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.24364482811932242;  // std dev = 2.831, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03321696083078415;  // std dev = 4.585, 141.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=26 */
%   | | | else return -0.036829969820077746;  // std dev = 2.422, 53.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10054699872184109;  // std dev = 2.522, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.023638916871152056;  // std dev = 3.448, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7095906894234613;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2031827535738385;  // std dev = 1.043, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09388733216761923;  // std dev = 22.337, 2,119.000 (wgt'ed) examples reached here.  /* #neg=1,312 #pos=807 */
%   | | | else return 0.15354255046993068;  // std dev = 3.578, 59.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 3.3304949723534163E-4;  // std dev = 4.662, 168.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=26 */
%   | | | else return 0.08994352688399262;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04775682788233742;  // std dev = 4.267, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return -0.11966470863625027;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07648279821690164;  // std dev = 21.732, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.05357571154274911;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044526563588995545;  // std dev = 2.347, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.15739233593287336;  // std dev = 2.776, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.35169368174941174;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.025643395283729078;  // std dev = 2.185, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02083465732853828;  // std dev = 5.563, 197.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=39 */
%   | | | else return -0.013554235038187356;  // std dev = 2.793, 70.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.059882145988487206;  // std dev = 21.731, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.04334952314435055;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02939425325188819;  // std dev = 2.304, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.1216294737657487;  // std dev = 2.810, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2810407330903172;  // std dev = 1.079, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.022034476304120906;  // std dev = 2.185, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01778304036641475;  // std dev = 5.563, 197.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=39 */
%   | | | else return -0.011910843537809423;  // std dev = 2.793, 70.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04657246555821153;  // std dev = 21.731, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.03488171665440684;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.005213486936732807;  // std dev = 2.348, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.10194821039685556;  // std dev = 2.764, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08503867401626485;  // std dev = 2.445, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return -0.18856189521094566;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.038077043169326086;  // std dev = 2.403, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.005340329946380902;  // std dev = 5.717, 230.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=40 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03604256502984596;  // std dev = 21.731, 1,993.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=771 */
%   | | | else return 0.027944285536872684;  // std dev = 5.271, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -1.8995197738482593E-4;  // std dev = 2.305, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.08073039898096242;  // std dev = 2.799, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08478651711138135;  // std dev = 2.280, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.09457078562196264;  // std dev = 0.821, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0020124584918107895;  // std dev = 4.649, 164.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=26 */
%   | | | else return 0.02134533316684196;  // std dev = 4.122, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.785', 'seconds']
Refined model CLL: -0.640081


******************************************
Best model found
******************************************
Results 

CLL : -0.677418 

AUC ROC : 0.537275 

AUC PR : 0.44916 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 325.629 

Total Inference Time : 9.82934832572937 

Total revision time: 338.3238260707855
Best scored revision CLL: -0.640081


Results 

CLL : -0.677418 

AUC ROC : 0.537275 

AUC PR : 0.44916 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 359.29414867973327 

Total Inference Time : 9.82934832572937 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.546
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '625', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 540.183
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24379615173263935;  // std dev = 26.580, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.19325531807823706;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.433906510857088;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.5599033210644246;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.16767274462332188;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.026087866397221746;  // std dev = 6.051, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.06327714022771645;  // std dev = 5.043, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21145517152566679;  // std dev = 26.580, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.16806532063369534;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.37250584045331747;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.47733522815372825;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.14601200958288355;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.062064272658592136;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.022882440030604485;  // std dev = 6.051, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.055398534330777946;  // std dev = 5.043, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17891699161880703;  // std dev = 26.580, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.1433564426358984;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2801882547821461;  // std dev = 2.783, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.39635452241294145;  // std dev = 3.478, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.12504837641143246;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.055047016691192656;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.06903945732954984;  // std dev = 2.918, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.025428635414759364;  // std dev = 7.316, 369.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=65 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14803796360837035;  // std dev = 26.580, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.12015316860591832;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21705498998305717;  // std dev = 2.784, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.30840042245509625;  // std dev = 3.472, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10548932956099023;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.04908944930418291;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.016614348034897062;  // std dev = 6.051, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.04324862279274344;  // std dev = 5.042, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7345426204299955;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19200814648172124;  // std dev = 1.474, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.11743362679411351;  // std dev = 27.290, 3,159.000 (wgt'ed) examples reached here.  /* #neg=1,955 #pos=1,204 */
%   | | | else return 0.21230488609782858;  // std dev = 4.326, 85.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.039853199900798886;  // std dev = 5.926, 215.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=44 */
%   | | | else return -0.02625671188957987;  // std dev = 3.096, 86.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.049388239160972534;  // std dev = 5.174, 163.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=35 */
%   | | | else return -0.16791488611095187;  // std dev = 0.076, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09631960506167608;  // std dev = 26.560, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.07736406085182874;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09986111471668256;  // std dev = 2.845, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.1898761522886925;  // std dev = 3.409, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08928200763363436;  // std dev = 2.686, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.036074703252512205;  // std dev = 1.312, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01153867413659224;  // std dev = 6.099, 258.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=45 */
%   | | | else return 0.030576246188919427;  // std dev = 5.062, 164.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=33 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07612507666017981;  // std dev = 26.559, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.06228841839419235;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06745581572038584;  // std dev = 2.787, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.14576505864107128;  // std dev = 3.452, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3211252943356544;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0024747410558391097;  // std dev = 2.537, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.038685372045896074;  // std dev = 3.066, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.01306968200731181;  // std dev = 7.308, 369.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=65 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.059628321896867446;  // std dev = 26.559, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.04975785707829375;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0403728145906551;  // std dev = 2.848, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.11714949780750265;  // std dev = 3.396, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.26940808241095154;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0021034443277009114;  // std dev = 2.537, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008042418519625677;  // std dev = 6.100, 258.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=45 */
%   | | | else return 0.02318540732728115;  // std dev = 5.059, 164.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=33 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.046395860237511015;  // std dev = 26.559, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.03950359268537011;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02368050281847402;  // std dev = 2.790, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.09182137087322696;  // std dev = 3.441, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.23909312188626233;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.046025952960215534;  // std dev = 3.103, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0036218949592551355;  // std dev = 6.040, 262.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=44 */
%   | | | else return 0.025848988265678045;  // std dev = 5.005, 156.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035921959650785276;  // std dev = 26.559, 2,982.000 (wgt'ed) examples reached here.  /* #neg=1,832 #pos=1,150 */
%   | | | else return 0.03121221438888835;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.009293190769121964;  // std dev = 2.851, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.07606179732133699;  // std dev = 3.387, 57.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.21407341031518415;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0054185663354618975;  // std dev = 2.536, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013710601833073047;  // std dev = 6.683, 300.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=56 */
%   | | | else return 7.951846121222463E-4;  // std dev = 4.247, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.537', 'seconds']
Refined model CLL: -0.640952


******************************************
Best model found
******************************************
Results 

CLL : -0.677421 

AUC ROC : 0.537903 

AUC PR : 0.450035 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 540.183 

Total Inference Time : 13.514299869537354 

Total revision time: 557.4016038455964
Best scored revision CLL: -0.640952


Results 

CLL : -0.677421 

AUC ROC : 0.537903 

AUC PR : 0.450035 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 578.3719264545441 

Total Inference Time : 13.514299869537354 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.221
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '660', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 836.598
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.249684550270645;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,693 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1718744252955908;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.0418510649004878;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.08672036367094095;  // std dev = 3.513, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return 0.03130068607227444;  // std dev = 8.578, 514.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=89 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21649490307849825;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,693 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.14963818967166206;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.036832517440075;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.023568777793519614;  // std dev = 7.060, 354.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=60 */
%   | | | else return 0.048143474410254516;  // std dev = 6.012, 230.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=45 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18300751096431164;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,693 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1323670201174002;  // std dev = 3.351, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06605681860759523;  // std dev = 1.349, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.07520685020330199;  // std dev = 3.441, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | | else return 0.023445636201215307;  // std dev = 8.578, 514.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=89 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15119500507407538;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,693 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11390869258476789;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05732331063365127;  // std dev = 1.349, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01782270074060123;  // std dev = 7.167, 361.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=62 */
%   | | | else return 0.037852304800074586;  // std dev = 5.840, 218.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12251908743368137;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,693 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.005537067384845933;  // std dev = 6.966, 353.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=59 */
%   | | | else return 0.12321316397696225;  // std dev = 3.510, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.04420793493649093;  // std dev = 6.063, 226.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=47 */
%   | | | else return -0.16453538274667015;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.28686585163648753;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.06001307588760022;  // std dev = 3.714, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else return 0.09785748843457713;  // std dev = 0.488, 4,185.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,639 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.03603284160145695;  // std dev = 7.032, 308.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=63 */
%   | | | else return -0.02855705470954729;  // std dev = 3.626, 115.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.041328500387374706;  // std dev = 5.929, 217.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=45 */
%   | | | else return -0.14319081782032628;  // std dev = 0.062, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2240637872207312;  // std dev = 3.885, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return -0.04771783645956923;  // std dev = 3.714, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04144881043677276;  // std dev = 5.201, 118.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=42 */
%   | | | else return 0.07818933879023228;  // std dev = 31.143, 4,067.000 (wgt'ed) examples reached here.  /* #neg=2,470 #pos=1,597 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.10344403180257211;  // std dev = 3.295, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.050005319578798904;  // std dev = 1.340, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return 0.040648553278292865;  // std dev = 3.464, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return 0.010450832745225451;  // std dev = 8.555, 514.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=89 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06012276240801133;  // std dev = 0.487, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,631 #pos=1,693 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21219160238709134;  // std dev = 1.536, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0225780703634726;  // std dev = 3.196, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005949525023590779;  // std dev = 7.040, 354.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=60 */
%   | | | else return 0.02147604962659634;  // std dev = 5.968, 230.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=45 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.43239933761781674;  // std dev = 18.747, 2,013.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=1,548 */
%   | | | else return -0.2999118876098456;  // std dev = 8.378, 2,292.000 (wgt'ed) examples reached here.  /* #neg=2,223 #pos=69 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.10865647070763897;  // std dev = 4.274, 106.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
%   | | | else return 0.048787983436234146;  // std dev = 7.281, 268.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=85 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06172612109443244;  // std dev = 6.448, 235.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=61 */
%   | | | else return -0.0622510488525765;  // std dev = 1.638, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.4470417940594976;  // std dev = 2.362, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return -0.13109134094012367;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.14407351405655888;  // std dev = 3.006, 53.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | | | else return 0.0029663813596181765;  // std dev = 1.617, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.026711946412962453;  // std dev = 27.586, 4,225.000 (wgt'ed) examples reached here.  /* #neg=2,650 #pos=1,575 */
%   | | | else return 0.003977680241109306;  // std dev = 8.438, 374.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=110 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.16884342411103978;  // std dev = 2.830, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.34092412640057146;  // std dev = 2.364, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.027278999870424602;  // std dev = 5.520, 226.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=47 */
%   | | | else return -0.11690356132914376;  // std dev = 0.063, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.846', 'seconds']
Refined model CLL: -0.539371


******************************************
Best model found
******************************************
Results 

CLL : -0.557557 

AUC ROC : 0.88134 

AUC PR : 0.7963 

Precision : 0.882353 

Recall : 0.02008 

F1 : 0.039267 

Total Learning Time : 836.598 

Total Inference Time : 11.245524406433105 

Total revision time: 852.2369012775421
Best scored revision CLL: -0.539371


Results 

CLL : -0.557557 

AUC ROC : 0.88134 

AUC PR : 0.7963 

Precision : 0.882353 

Recall : 0.02008 

F1 : 0.039267 

Total Learning Time : 873.2072238864898 

Total Inference Time : 11.245524406433105 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.37
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '661', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 889.193
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2510675953865885;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21825179463547348;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449203;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05627664105721549;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844298456806199;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1083539852961479;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06961459904338328;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.048772904158197856;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.350357473435276;  // std dev = 4.330, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.036073346067259704;  // std dev = 4.542, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.1515643861664219;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10171042209600768;  // std dev = 3.498, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07646952173303109;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010577323987100226;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029461850022905453;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12328209904133602;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08917407415663434;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0655614944727544;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.008006835384512061;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02686460819771739;  // std dev = 6.425, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09829721816604839;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07535548553482038;  // std dev = 3.494, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.057995228557748656;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006970223255191456;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02330234437863356;  // std dev = 6.425, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.38960241243240845;  // std dev = 2.293, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.04083730896779263;  // std dev = 5.828, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.07691197079092084;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08025444573633993;  // std dev = 3.481, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07443375148783897;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004819493295932502;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02063672149942341;  // std dev = 6.411, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.20316895998690404;  // std dev = 4.284, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.041149386289606855;  // std dev = 4.459, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.06029331885040765;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.19910379609919068;  // std dev = 1.560, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0020044655859983037;  // std dev = 3.393, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004185810221662461;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017825946315726145;  // std dev = 6.411, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04685511287209851;  // std dev = 0.487, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20007407758118623;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0031047883102153276;  // std dev = 3.370, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.002663587272060674;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017114073266226357;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030854520506305452;  // std dev = 34.215, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.0462166624951464;  // std dev = 8.387, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1128698160597517;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036671749598528695;  // std dev = 8.110, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.23056932949581754;  // std dev = 3.237, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45710234527712357;  // std dev = 2.560, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02342487414812846;  // std dev = 6.479, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16499954787027946;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.374', 'seconds']
Refined model CLL: -0.639656


******************************************
Best model found
******************************************
Results 

CLL : -0.677669 

AUC ROC : 0.543578 

AUC PR : 0.458807 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 889.193 

Total Inference Time : 5.914983749389648 

Total revision time: 900.7720773582458
Best scored revision CLL: -0.639656


Results 

CLL : -0.677669 

AUC ROC : 0.543578 

AUC PR : 0.458807 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 921.7423999671936 

Total Inference Time : 5.914983749389648 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.307
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '548', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 233.471
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.222330597481684;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.6228548174524535;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.1123862232351056;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.011995088945666114;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -0.001851064900487679;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19305585763561212;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.16158887109600276;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856348;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.5291399941450576;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.09814737861760939;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.01052865241152266;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -0.0016258853399685053;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16391259617232076;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.1379961362622879;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2564123687585864;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.4212666781024635;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.08477830391525008;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.009231108997431438;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -0.0014283448662647641;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13636854223744374;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.11588141743192369;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20613740734453953;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.3211489039020865;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.07250993622057529;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.008085456367663515;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -0.0012549949497660863;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11149463753123978;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.09589716938050136;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16162857548414683;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.24112079980427287;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06147775929627898;  // std dev = 3.345, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.0070758133716141485;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -0.0011028300537069935;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08986642622374771;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.07838952715340868;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12455597792081981;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.18160129272226394;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026147416033647047;  // std dev = 3.404, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.0844091086549609;  // std dev = 1.726, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return -9.692278616025929E-4;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07161924007561622;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.06343670579410671;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09492800936730669;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.1382288807882301;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06528471401187372;  // std dev = 0.326, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03777803108613382;  // std dev = 3.705, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | | | else return 0.00498143512781193;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05657921669569279;  // std dev = 16.438, 1,167.000 (wgt'ed) examples reached here.  /* #neg=742 #pos=425 */
%   | | | else return 0.05092319947816124;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06832556174804948;  // std dev = 2.188, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.11064747490316346;  // std dev = 1.808, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.042747115860974724;  // std dev = 3.340, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return -0.006853320233850766;  // std dev = 1.838, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -0.0011229739677609029;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04442199583347535;  // std dev = 16.443, 1,169.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=425 */
%   | | | else return 0.04001190744959187;  // std dev = 3.555, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05034259188976299;  // std dev = 2.239, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.08693996266694783;  // std dev = 1.744, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011425907355922693;  // std dev = 3.400, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.06854152018506839;  // std dev = 1.720, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return -9.869191760380398E-4;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034693990265536795;  // std dev = 16.442, 1,169.000 (wgt'ed) examples reached here.  /* #neg=744 #pos=425 */
%   | | | else return 0.031564587276901625;  // std dev = 3.556, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03691588210068676;  // std dev = 2.189, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.06936175243695718;  // std dev = 1.806, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.033398167105494495;  // std dev = 3.338, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return -0.012390762137217156;  // std dev = 1.836, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -8.674387428719754E-4;  // std dev = 0.347, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.647', 'seconds']
Refined model CLL: -0.638522


******************************************
Best model found
******************************************
Results 

CLL : -0.750207 

AUC ROC : 0.640633 

AUC PR : 0.64014 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 233.471 

Total Inference Time : 6.728785991668701 

Total revision time: 242.51585734176635
Best scored revision CLL: -0.638522


Results 

CLL : -0.750207 

AUC ROC : 0.640633 

AUC PR : 0.64014 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 263.48617995071413 

Total Inference Time : 6.728785991668701 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.862
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '646', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 432.383
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22546919653741576;  // std dev = 23.094, 2,295.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=843 */
%   | | | else return 0.2562970832476604;  // std dev = 5.087, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.40814893509951145;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.5654660082702431;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.047622619310038694;  // std dev = 3.820, 95.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | | | else return 0.021414241221961363;  // std dev = 3.659, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | else return -0.013645936695359455;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19574881263592858;  // std dev = 23.094, 2,295.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=843 */
%   | | | else return 0.2221505239014506;  // std dev = 5.087, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35088759069748027;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.4819282167101595;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.04172609253375722;  // std dev = 3.820, 95.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | | | else return 0.01878745403291029;  // std dev = 3.659, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | else return -0.011992930176393395;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1661155728365437;  // std dev = 23.094, 2,295.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=843 */
%   | | | else return 0.18758801643962228;  // std dev = 5.087, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28209739569203984;  // std dev = 3.035, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.3886355489116824;  // std dev = 3.023, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03374590402209606;  // std dev = 4.518, 137.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=25 */
%   | | | else return 0.00797057900122813;  // std dev = 2.750, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else return -0.01055350014524029;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13809066235693693;  // std dev = 23.094, 2,295.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=843 */
%   | | | else return 0.15471791663125206;  // std dev = 5.087, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2163746008365406;  // std dev = 3.145, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.31162475265344397;  // std dev = 2.895, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017787773749925594;  // std dev = 4.730, 158.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=27 */
%   | | | else return 0.04596762523502189;  // std dev = 2.365, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else return -0.009297109055399063;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11278638511384668;  // std dev = 23.094, 2,295.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=843 */
%   | | | else return 0.12510682005345986;  // std dev = 5.087, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1551984459992196;  // std dev = 3.036, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.24227581514615099;  // std dev = 2.999, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.027074811972919756;  // std dev = 4.517, 137.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=25 */
%   | | | else return 0.002329637141505824;  // std dev = 2.749, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else return -0.00819822629767673;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09080018527772757;  // std dev = 23.094, 2,295.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=843 */
%   | | | else return 0.09958295288900197;  // std dev = 5.087, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11602944840946168;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.18705032413836273;  // std dev = 2.880, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.028366079788864327;  // std dev = 3.815, 95.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | | | else return 0.006491317272627975;  // std dev = 3.660, 98.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=16 */
%   | | else return -0.007235371420884415;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07282319015563947;  // std dev = 23.079, 2,289.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=843 */
%   | | | else return 0.06692823700377401;  // std dev = 5.155, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07788528955533662;  // std dev = 3.037, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.14670820068684304;  // std dev = 2.988, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02168964388785802;  // std dev = 4.515, 137.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=25 */
%   | | | else return -0.0016523688497093523;  // std dev = 2.749, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | else return -0.006390368257899321;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0569264600623632;  // std dev = 23.094, 2,295.000 (wgt'ed) examples reached here.  /* #neg=1,452 #pos=843 */
%   | | | else return 0.06312508701475414;  // std dev = 5.088, 108.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05728656985867596;  // std dev = 3.148, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.11468578248937228;  // std dev = 2.871, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007808756530759991;  // std dev = 4.729, 158.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=27 */
%   | | | else return 0.035825204785885474;  // std dev = 2.362, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else return -0.005647757621067911;  // std dev = 0.334, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04509565419350614;  // std dev = 23.080, 2,289.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=843 */
%   | | | else return 0.03897650087859919;  // std dev = 5.153, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03613231757447609;  // std dev = 3.039, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.09145196928780919;  // std dev = 2.983, 43.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.032998807988495936;  // std dev = 0.338, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01318506650135431;  // std dev = 5.124, 180.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=32 */
%   | | | else return -0.0027646761130933005;  // std dev = 3.612, 115.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03515453028484455;  // std dev = 23.080, 2,289.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=843 */
%   | | | else return 0.030205321667554585;  // std dev = 5.152, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.025466245929540367;  // std dev = 3.149, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.07360398167039815;  // std dev = 2.865, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.028478641617429724;  // std dev = 0.338, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.011364337188695756;  // std dev = 5.124, 180.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=32 */
%   | | | else return -0.002445797472812577;  // std dev = 3.612, 115.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.691', 'seconds']
Refined model CLL: -0.634223


******************************************
Best model found
******************************************
Results 

CLL : -0.751405 

AUC ROC : 0.622876 

AUC PR : 0.617893 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 432.383 

Total Inference Time : 12.13891863822937 

Total revision time: 447.4603513431549
Best scored revision CLL: -0.634223


Results 

CLL : -0.751405 

AUC ROC : 0.622876 

AUC PR : 0.617893 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 468.43067395210267 

Total Inference Time : 12.13891863822937 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.504
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '651', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 564.843
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22912135890211968;  // std dev = 28.353, 3,445.000 (wgt'ed) examples reached here.  /* #neg=2,167 #pos=1,278 */
%   | | | else return 0.2096640866146651;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.38542166237223846;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.5081489350995119;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.018454278610962112;  // std dev = 5.939, 262.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=42 */
%   | | | else return 0.1130508958838261;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0027782172183686187;  // std dev = 4.252, 151.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19888125323164094;  // std dev = 28.353, 3,445.000 (wgt'ed) examples reached here.  /* #neg=2,167 #pos=1,278 */
%   | | | else return 0.18217850999194857;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3285438144065431;  // std dev = 3.658, 54.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | | else return 0.43562365072950104;  // std dev = 3.735, 61.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.016192969775918484;  // std dev = 5.939, 262.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=42 */
%   | | | else return 0.09872447668168595;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.002440363056653069;  // std dev = 4.252, 151.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16867509375387535;  // std dev = 28.353, 3,445.000 (wgt'ed) examples reached here.  /* #neg=2,167 #pos=1,278 */
%   | | | else return 0.15499030661627602;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.26133596568418804;  // std dev = 3.698, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.3646536362349132;  // std dev = 3.679, 60.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014184131357925643;  // std dev = 5.939, 262.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=42 */
%   | | | else return 0.08526813473700527;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0021441494143425786;  // std dev = 4.252, 151.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14008769762402212;  // std dev = 28.353, 3,445.000 (wgt'ed) examples reached here.  /* #neg=2,167 #pos=1,278 */
%   | | | else return 0.12936277078436845;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19993723579183317;  // std dev = 3.652, 54.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | | else return 0.2902769672960461;  // std dev = 3.714, 61.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.046111686243670624;  // std dev = 4.949, 151.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
%   | | | else return 3.7884656052817044E-5;  // std dev = 4.523, 162.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0018843181991527226;  // std dev = 4.252, 151.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11428061929903965;  // std dev = 28.353, 3,445.000 (wgt'ed) examples reached here.  /* #neg=2,167 #pos=1,278 */
%   | | | else return 0.10620884932996899;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1484237577070798;  // std dev = 3.693, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.22828577614656176;  // std dev = 3.663, 60.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010125772003454138;  // std dev = 5.937, 262.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=42 */
%   | | | else return 0.0660880482378049;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.001656303749518282;  // std dev = 4.252, 151.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09187718954101148;  // std dev = 28.353, 3,445.000 (wgt'ed) examples reached here.  /* #neg=2,167 #pos=1,278 */
%   | | | else return 0.0860191144319154;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10571183888621337;  // std dev = 3.649, 54.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | | else return 0.17746627725795058;  // std dev = 3.700, 61.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00523119904817804;  // std dev = 5.687, 243.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=39 */
%   | | | else return 0.06570543548671555;  // std dev = 3.182, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else return -0.003322974965766618;  // std dev = 0.351, 166.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07263355402207597;  // std dev = 28.332, 3,443.000 (wgt'ed) examples reached here.  /* #neg=2,168 #pos=1,275 */
%   | | | else return 0.07696733891235737;  // std dev = 6.230, 167.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0755068419862066;  // std dev = 3.692, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   | | | else return 0.1382113195867432;  // std dev = 3.653, 60.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007056252951846311;  // std dev = 5.932, 262.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=42 */
%   | | | else return 0.05494758023284177;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.002188382038907631;  // std dev = 4.252, 151.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
%   | | | else return -0.08492615426032649;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5199702748709565;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.02741654058057402;  // std dev = 3.768, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.055704526251683054;  // std dev = 28.654, 3,529.000 (wgt'ed) examples reached here.  /* #neg=2,229 #pos=1,300 */
%   | | | else return 0.0778935124631584;  // std dev = 5.185, 114.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06843160954262371;  // std dev = 1.354, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.01951952553783289;  // std dev = 6.369, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
%   | | else return -0.003672425868266909;  // std dev = 0.351, 166.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04466875814664074;  // std dev = 28.303, 3,443.000 (wgt'ed) examples reached here.  /* #neg=2,168 #pos=1,275 */
%   | | | else return 0.04904466829886908;  // std dev = 6.230, 167.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03181938185416918;  // std dev = 3.650, 54.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=29 */
%   | | | else return 0.08921534129546081;  // std dev = 3.693, 61.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05949501022193595;  // std dev = 0.289, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016903413468741777;  // std dev = 6.369, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
%   | | | else return -0.003209792956773618;  // std dev = 4.526, 166.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.38806420562201205;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.011707957747008654;  // std dev = 3.768, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0336947585642405;  // std dev = 28.654, 3,529.000 (wgt'ed) examples reached here.  /* #neg=2,229 #pos=1,300 */
%   | | | else return 0.04331616819857694;  // std dev = 5.181, 114.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=67 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.025516046286678463;  // std dev = 4.933, 151.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
%   | | | else return -9.483545405196798E-4;  // std dev = 4.523, 162.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0060099564870314546;  // std dev = 4.251, 151.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=21 */
%   | | | else return -0.07805793806665327;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.539', 'seconds']
Refined model CLL: -0.634584


******************************************
Best model found
******************************************
Results 

CLL : -0.749082 

AUC ROC : 0.627516 

AUC PR : 0.618599 

Precision : 0.633803 

Recall : 0.081818 

F1 : 0.144928 

Total Learning Time : 564.843 

Total Inference Time : 14.841341972351074 

Total revision time: 583.421243068695
Best scored revision CLL: -0.634584


Results 

CLL : -0.749082 

AUC ROC : 0.627516 

AUC PR : 0.618599 

Precision : 0.633803 

Recall : 0.081818 

F1 : 0.144928 

Total Learning Time : 604.3915656776428 

Total Inference Time : 14.841341972351074 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.785
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '668', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 856.204
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22972651006691264;  // std dev = 32.781, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,892 #pos=1,710 */
%   | | | else return 0.2221656715011848;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3357608753980186;  // std dev = 4.089, 67.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.48314893509951296;  // std dev = 4.330, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.04407858334071727;  // std dev = 5.488, 199.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=37 */
%   | | | else return 0.0030764713313957606;  // std dev = 5.065, 207.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=30 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -4.89808355985547E-4;  // std dev = 4.815, 191.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=27 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19940016789065768;  // std dev = 32.781, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,892 #pos=1,710 */
%   | | | else return 0.19291432377823314;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2901860160953839;  // std dev = 4.257, 73.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | | else return 0.4233118824242719;  // std dev = 4.153, 74.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04679429825451038;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0555710513219238;  // std dev = 1.650, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return 0.01998966689497122;  // std dev = 8.575, 539.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=88 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16909879020679258;  // std dev = 32.781, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,892 #pos=1,710 */
%   | | | else return 0.16379674870996336;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22628331618419373;  // std dev = 4.075, 67.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.35027618880964817;  // std dev = 4.311, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04102994220359222;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023897721229580164;  // std dev = 7.282, 376.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=64 */
%   | | | else return -0.005877865381092495;  // std dev = 4.822, 196.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14041788738060718;  // std dev = 32.781, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,892 #pos=1,710 */
%   | | | else return 0.13627789761157869;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1766458001503586;  // std dev = 4.240, 73.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | | else return 0.2877280345356441;  // std dev = 4.129, 74.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0032455657927514267;  // std dev = 6.321, 317.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=47 */
%   | | | else return 0.07752353967159217;  // std dev = 3.615, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else return -0.0047699751345195536;  // std dev = 0.349, 211.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11452989665650304;  // std dev = 32.782, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,893 #pos=1,710 */
%   | | | else return 0.11136314873402121;  // std dev = 7.434, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12771891589952608;  // std dev = 4.062, 67.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.22311895956688024;  // std dev = 4.292, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03259803873856304;  // std dev = 5.473, 199.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=37 */
%   | | | else return -0.0018693314828539102;  // std dev = 5.063, 207.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=30 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0024641324642822302;  // std dev = 4.814, 191.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=27 */
%   | | | else return -0.126473105401816;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09206590997951687;  // std dev = 32.781, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,892 #pos=1,710 */
%   | | | else return 0.08960283597406658;  // std dev = 7.439, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09278570164271313;  // std dev = 4.229, 73.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | | else return 0.1798066442378993;  // std dev = 4.114, 74.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04052684087807946;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017322182137433948;  // std dev = 7.273, 376.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=64 */
%   | | | else return -0.00499227211525569;  // std dev = 4.821, 196.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07316271610760386;  // std dev = 32.782, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,893 #pos=1,710 */
%   | | | else return 0.07124384159210924;  // std dev = 7.435, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06314978484197646;  // std dev = 4.054, 67.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.13675327169398793;  // std dev = 4.281, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0013647055885826513;  // std dev = 6.320, 317.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=47 */
%   | | | else return 0.06074332988972899;  // std dev = 3.613, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else return -0.005652860891158562;  // std dev = 0.349, 211.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3411968573001799;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=19 */
%   | | | else return -5.636392315156524E-4;  // std dev = 4.309, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056781451046753625;  // std dev = 33.202, 4,727.000 (wgt'ed) examples reached here.  /* #neg=2,976 #pos=1,751 */
%   | | | else return 0.08089435612954246;  // std dev = 5.887, 146.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05705727299561181;  // std dev = 0.287, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.036287995040440224;  // std dev = 1.644, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.011425286223970823;  // std dev = 8.558, 539.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=88 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04508058218237243;  // std dev = 32.766, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,893 #pos=1,710 */
%   | | | else return 0.04412999226130232;  // std dev = 7.435, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.023686060397399164;  // std dev = 4.221, 73.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=36 */
%   | | | else return 0.09180229081353244;  // std dev = 4.106, 74.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03207350901990063;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05000899795245449;  // std dev = 1.648, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return 0.009949757630116969;  // std dev = 8.558, 539.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=88 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035093695849998684;  // std dev = 32.766, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,893 #pos=1,710 */
%   | | | else return 0.034430472088597175;  // std dev = 7.435, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012083841614470044;  // std dev = 4.047, 67.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.07024863868723755;  // std dev = 4.275, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 9.47214320124524E-4;  // std dev = 6.315, 317.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=47 */
%   | | | else return 0.04920698576219277;  // std dev = 3.612, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else return -0.007505923529261279;  // std dev = 0.349, 211.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.673', 'seconds']
Refined model CLL: -0.636009


******************************************
Best model found
******************************************
Results 

CLL : -0.75193 

AUC ROC : 0.635451 

AUC PR : 0.628605 

Precision : 0.884615 

Recall : 0.041818 

F1 : 0.079861 

Total Learning Time : 856.204 

Total Inference Time : 20.799716472625732 

Total revision time: 882.0785974636077
Best scored revision CLL: -0.636009


Results 

CLL : -0.75193 

AUC ROC : 0.635451 

AUC PR : 0.628605 

Precision : 0.884615 

Recall : 0.041818 

F1 : 0.079861 

Total Learning Time : 903.0489200725555 

Total Inference Time : 20.799716472625732 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.865
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '618', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 993.003
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533316;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.031530538668756304;  // std dev = 8.067, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return 8.241136034949513E-4;  // std dev = 5.541, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651225;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649644;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01107418579556356;  // std dev = 7.222, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07974346360908241;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.002759826125214896;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1422133576581236;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396752450040657;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788107;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07058556469284331;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.028611634659298994;  // std dev = 8.045, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.002748203027356513;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029172;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708751;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248816;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844116;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06172596556070587;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024950527016918134;  // std dev = 8.045, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0024044850234545773;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611827;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431217;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997696;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766634;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05433573789282497;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02317931772487188;  // std dev = 8.048, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.0053109135855656745;  // std dev = 5.536, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816681;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090487;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158732;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441784;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006820199244364946;  // std dev = 7.214, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.060029722976618086;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0031386030838999714;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12458564731218227;  // std dev = 8.33e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05748051249156739;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05333152949010156;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04401048386508491;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.1147056517394621;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04924470409180562;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0189658744885025;  // std dev = 8.037, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005404664512332727;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.40448748754744557;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.03569350778647791;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04400620229461845;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.06106626491535127;  // std dev = 6.487, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005964292355595262;  // std dev = 7.212, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.04896814351676186;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005037002738671395;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11108615744121833;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.31034411177422416;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.027904265890294763;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.034289196891784175;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.046111770597798814;  // std dev = 6.487, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04468630142137295;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01517598337754656;  // std dev = 8.033, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005169333323290732;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.531', 'seconds']
Refined model CLL: -0.635731


******************************************
Best model found
******************************************
Results 

CLL : -0.751599 

AUC ROC : 0.635531 

AUC PR : 0.628628 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 993.003 

Total Inference Time : 23.931193351745605 

Total revision time: 1023.0766598873139
Best scored revision CLL: -0.635731


Results 

CLL : -0.751599 

AUC ROC : 0.635531 

AUC PR : 0.628628 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1044.0469824962615 

Total Inference Time : 23.931193351745605 

Run: 2
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.297
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '582', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 171.199
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24590403714032377;  // std dev = 16.709, 1,176.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=456 */
%   | | | else return 0.25814893509951126;  // std dev = 3.795, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022532496743347983;  // std dev = 3.167, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2132596310831076;  // std dev = 16.709, 1,176.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=456 */
%   | | | else return 0.22373365448410587;  // std dev = 3.795, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26635594474848884;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.5463443246618189;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.3335621649521725;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0197674337370474;  // std dev = 3.167, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.07342510733062137;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18038254429260078;  // std dev = 16.709, 1,176.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=456 */
%   | | | else return 0.18886832215749785;  // std dev = 3.795, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17000815084762777;  // std dev = 1.864, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.44946780465629993;  // std dev = 1.880, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4698620730724043;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20021153951164183;  // std dev = 2.075, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10041632323379308;  // std dev = 1.505, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.022096602209727235;  // std dev = 3.628, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14917026265615865;  // std dev = 16.709, 1,176.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=456 */
%   | | | else return 0.15570029437174354;  // std dev = 3.795, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1338156717622793;  // std dev = 1.852, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.35662851389418915;  // std dev = 1.882, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.4567344798798118;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.016761536751095832;  // std dev = 1.287, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.1872840864679084;  // std dev = 2.146, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.01923042149122333;  // std dev = 3.628, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12156010388855563;  // std dev = 16.701, 1,174.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=456 */
%   | | | else return 0.11556482347099542;  // std dev = 3.829, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09255447920891482;  // std dev = 2.074, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.3259523972798091;  // std dev = 1.561, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0948380384957926;  // std dev = 3.370, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return -0.0252988864319285;  // std dev = 1.870, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.14252228531732503;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.007204983101338315;  // std dev = 2.194, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.20388773024025883;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6662191801570264;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09552109115071422;  // std dev = 17.082, 1,230.000 (wgt'ed) examples reached here.  /* #neg=754 #pos=476 */
%   | | | else return 0.12983075024550012;  // std dev = 2.602, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.17193069894008003;  // std dev = 2.018, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.006637751933513382;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.007100185846114233;  // std dev = 3.137, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.04139866421212434;  // std dev = 2.346, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07676292049972863;  // std dev = 16.692, 1,174.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=456 */
%   | | | else return 0.07071018079660475;  // std dev = 3.829, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03406519829251714;  // std dev = 2.036, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.2140171582289283;  // std dev = 1.560, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.326793491334107;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06865393985088791;  // std dev = 2.015, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06454909022545599;  // std dev = 1.491, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.008294856727501288;  // std dev = 3.621, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.31515014305317435;  // std dev = 1.948, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return -0.03925776617393075;  // std dev = 2.006, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0579315701824108;  // std dev = 16.858, 1,199.000 (wgt'ed) examples reached here.  /* #neg=736 #pos=463 */
%   | | | else return 0.07258719906743397;  // std dev = 2.572, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.25197757361409073;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05265910797691648;  // std dev = 2.013, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00392545964144549;  // std dev = 3.134, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.03314579736221127;  // std dev = 2.349, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.4550999894264218;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12470624883190584;  // std dev = 0.951, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.0454259022438505;  // std dev = 17.069, 1,230.000 (wgt'ed) examples reached here.  /* #neg=754 #pos=476 */
%   | | | else return 0.05543299309633863;  // std dev = 2.570, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.054578019252609765;  // std dev = 3.310, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return -0.029400337689085936;  // std dev = 1.874, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else return -2.64650086600263E-4;  // std dev = 0.388, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03567229775888697;  // std dev = 16.677, 1,176.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=456 */
%   | | | else return 0.04102227363008281;  // std dev = 3.798, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.046311705099645634;  // std dev = 1.685, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.14275354188854544;  // std dev = 1.871, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.056477940554042226;  // std dev = 1.385, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.10322731405698755;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005053355968387337;  // std dev = 3.415, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return 0.04597560879156744;  // std dev = 2.393, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.475', 'seconds']
Refined model CLL: -0.650274


******************************************
Best model found
******************************************
Results 

CLL : -0.626197 

AUC ROC : 0.602113 

AUC PR : 0.435276 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 171.199 

Total Inference Time : 4.976581573486328 

Total revision time: 178.45918817138673
Best scored revision CLL: -0.650274


Results 

CLL : -0.626197 

AUC ROC : 0.602113 

AUC PR : 0.435276 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 199.4319884262085 

Total Inference Time : 4.976581573486328 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.905
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '611', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 353.338
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.25269202734723356;  // std dev = 23.486, 2,309.000 (wgt'ed) examples reached here.  /* #neg=1,398 #pos=911 */
%   | | | else return 0.29512372501547973;  // std dev = 5.411, 119.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.34463542158599886;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.5478041075133049;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2510060779566552;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.026753586262302342;  // std dev = 4.910, 172.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=29 */
%   | | | else return 0.04862512557570285;  // std dev = 3.599, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21906767155425386;  // std dev = 23.486, 2,309.000 (wgt'ed) examples reached here.  /* #neg=1,398 #pos=911 */
%   | | | else return 0.25527541927737746;  // std dev = 5.411, 119.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.30472297055547787;  // std dev = 3.247, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.4978288683531284;  // std dev = 2.195, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08997471923165397;  // std dev = 4.977, 137.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=33 */
%   | | | else return 0.003229232512229231;  // std dev = 2.919, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019591770534994543;  // std dev = 3.536, 90.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
%   | | | else return -0.14639879712390969;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1850925032327517;  // std dev = 23.486, 2,309.000 (wgt'ed) examples reached here.  /* #neg=1,398 #pos=911 */
%   | | | else return 0.21420554965544972;  // std dev = 5.411, 119.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22911460025089142;  // std dev = 3.009, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.4018872634530505;  // std dev = 2.479, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20742027429829443;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.005583151651014905;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05869979688488446;  // std dev = 2.188, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.019737505691846558;  // std dev = 5.675, 227.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=39 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1528002018516575;  // std dev = 23.486, 2,309.000 (wgt'ed) examples reached here.  /* #neg=1,398 #pos=911 */
%   | | | else return 0.1749353405173308;  // std dev = 5.411, 119.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18299097231883055;  // std dev = 3.207, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.34735263552048745;  // std dev = 2.182, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17403689331316555;  // std dev = 2.574, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.004879136439597386;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05113832195551779;  // std dev = 2.188, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.017175775327714114;  // std dev = 5.675, 227.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=39 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12552754543420866;  // std dev = 23.470, 2,301.000 (wgt'ed) examples reached here.  /* #neg=1,388 #pos=913 */
%   | | | else return 0.10560392995342392;  // std dev = 5.477, 127.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12523611222124534;  // std dev = 2.976, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.2610366764636564;  // std dev = 2.468, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14284600366365155;  // std dev = 2.573, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.00426615594248727;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.014261410486197541;  // std dev = 4.904, 172.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=29 */
%   | | | else return 0.026405080186078386;  // std dev = 3.600, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09828865307915043;  // std dev = 23.484, 2,309.000 (wgt'ed) examples reached here.  /* #neg=1,398 #pos=911 */
%   | | | else return 0.11589496088552807;  // std dev = 5.413, 119.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09435630190894384;  // std dev = 3.180, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | | else return 0.22607012197528906;  // std dev = 2.175, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11512484263592264;  // std dev = 2.572, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.00373191111839051;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.041930489787490414;  // std dev = 2.190, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.01245145375151618;  // std dev = 5.674, 227.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=39 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07904138870131194;  // std dev = 23.470, 2,301.000 (wgt'ed) examples reached here.  /* #neg=1,388 #pos=913 */
%   | | | else return 0.059496897357781416;  // std dev = 5.471, 127.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.35296845641375374;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08576672871892024;  // std dev = 3.739, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.052650764328975135;  // std dev = 4.899, 137.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=33 */
%   | | | else return -0.011822938874719597;  // std dev = 2.923, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0015554383650790908;  // std dev = 3.548, 90.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
%   | | | else return -0.13834013906045725;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.29433215956340625;  // std dev = 2.742, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return -0.05530492002861443;  // std dev = 3.001, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05991168446796341;  // std dev = 23.714, 2,353.000 (wgt'ed) examples reached here.  /* #neg=1,422 #pos=931 */
%   | | | else return 0.07689332673168894;  // std dev = 3.792, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0446055427953156;  // std dev = 4.897, 137.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=33 */
%   | | | else return -0.010238012738339235;  // std dev = 2.923, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0013426964181661952;  // std dev = 3.548, 90.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
%   | | | else return -0.12267170293210586;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0463144564168464;  // std dev = 23.464, 2,309.000 (wgt'ed) examples reached here.  /* #neg=1,398 #pos=911 */
%   | | | else return 0.06232650693062871;  // std dev = 5.410, 119.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.013031888569004255;  // std dev = 2.931, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.12325674015198812;  // std dev = 2.451, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16589936314213038;  // std dev = 1.387, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.020199783338977283;  // std dev = 2.491, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03585809795302541;  // std dev = 2.199, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.005133844548961626;  // std dev = 5.666, 227.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=39 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5084367536560896;  // std dev = 1.731, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.34675219836162474;  // std dev = 0.179, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06727720144500418;  // std dev = 3.615, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
%   | | | else return -0.13721035119307481;  // std dev = 1.412, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.034434180615244;  // std dev = 23.700, 2,356.000 (wgt'ed) examples reached here.  /* #neg=1,426 #pos=930 */
%   | | | else return 0.031580357700059423;  // std dev = 3.726, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.03072410857985237;  // std dev = 2.199, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.004420777528890928;  // std dev = 5.666, 227.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.415', 'seconds']
Refined model CLL: -0.647883


******************************************
Best model found
******************************************
Results 

CLL : -0.622946 

AUC ROC : 0.602712 

AUC PR : 0.430375 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 353.338 

Total Inference Time : 9.870713949203491 

Total revision time: 366.25710245895385
Best scored revision CLL: -0.647883


Results 

CLL : -0.622946 

AUC ROC : 0.602712 

AUC PR : 0.430375 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 387.22990271377563 

Total Inference Time : 9.870713949203491 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.681
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '575', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 563.891
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25657504993483216;  // std dev = 28.677, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.2003949244043265;  // std dev = 6.488, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.39661047356104956;  // std dev = 4.019, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return 0.5831489350995114;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.05239353941605908;  // std dev = 6.596, 278.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=54 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0638226939647597;  // std dev = 4.800, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22238817554516122;  // std dev = 28.677, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.17420917106879444;  // std dev = 6.488, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.34118274280999294;  // std dev = 4.019, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return 0.49650892064252555;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.4481466526160828;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.038446567175506575;  // std dev = 2.550, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07363216407615167;  // std dev = 3.024, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.04553986900168392;  // std dev = 7.561, 366.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=71 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18778026190404207;  // std dev = 28.677, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.14842891985907716;  // std dev = 6.488, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2699185098776272;  // std dev = 3.694, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.3921712844053858;  // std dev = 3.229, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.38110505540608164;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03354547052276084;  // std dev = 2.550, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03913639331500421;  // std dev = 6.581, 276.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=54 */
%   | | | else return 0.049538115462432086;  // std dev = 4.797, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15486549098424487;  // std dev = 28.677, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.1241790371444852;  // std dev = 6.488, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21193463251867584;  // std dev = 4.003, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return 0.3269122421946689;  // std dev = 2.812, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12334190643362265;  // std dev = 2.733, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.03412947316635933;  // std dev = 6.569, 278.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=54 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1771937709670036;  // std dev = 0.178, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0429509617320994;  // std dev = 4.797, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12521495806509447;  // std dev = 28.677, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.10226576776265657;  // std dev = 6.488, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.43294786435309834;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1809613469417172;  // std dev = 4.792, 99.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=59 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.31490079643841884;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02872166428793211;  // std dev = 2.538, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.043630949597716115;  // std dev = 3.015, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.02897290044174159;  // std dev = 7.560, 366.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=71 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09965908442362216;  // std dev = 28.677, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.08312114872598707;  // std dev = 6.488, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09904596273396736;  // std dev = 3.652, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.20579570523086677;  // std dev = 3.207, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05179656050092373;  // std dev = 6.135, 220.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=49 */
%   | | | else return -0.010695638308261611;  // std dev = 3.553, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.16867576570147347;  // std dev = 0.236, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.03274929984625361;  // std dev = 4.797, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07837066275654292;  // std dev = 28.677, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.06684715447770484;  // std dev = 6.488, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.29829610762514547;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10004207109567159;  // std dev = 4.777, 99.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=59 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.25684780638156635;  // std dev = 0.983, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.023133451965681787;  // std dev = 2.523, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.034524144836602946;  // std dev = 3.022, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.020045879072450666;  // std dev = 7.553, 366.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=71 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.606624185014072;  // std dev = 0.251, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1562045699085008;  // std dev = 1.773, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05971380602220295;  // std dev = 29.322, 3,601.000 (wgt'ed) examples reached here.  /* #neg=2,180 #pos=1,421 */
%   | | | else return 0.07867283932612243;  // std dev = 4.853, 103.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=62 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08435262498214709;  // std dev = 2.512, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.06245527508306333;  // std dev = 0.961, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01540937148455253;  // std dev = 6.570, 276.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=54 */
%   | | | else return 0.024875704053659388;  // std dev = 4.797, 142.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.047399245459953096;  // std dev = 28.665, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.04033473756849922;  // std dev = 6.491, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02860349842658545;  // std dev = 3.961, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return 0.12005114580481802;  // std dev = 2.784, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03780377491357236;  // std dev = 6.120, 220.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=49 */
%   | | | else return -0.01578825626159389;  // std dev = 3.537, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02058703451777295;  // std dev = 4.812, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
%   | | | else return -0.14056195994545687;  // std dev = 0.088, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03652765827293096;  // std dev = 28.665, 3,431.000 (wgt'ed) examples reached here.  /* #neg=2,064 #pos=1,367 */
%   | | | else return 0.03176691625478673;  // std dev = 6.491, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.008600547293835513;  // std dev = 3.632, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.09547644069753691;  // std dev = 3.191, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08606178830394691;  // std dev = 2.713, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.009685637479316118;  // std dev = 6.524, 278.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=54 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017472772198040228;  // std dev = 4.812, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
%   | | | else return -0.12450819359141595;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.477', 'seconds']
Refined model CLL: -0.65141


******************************************
Best model found
******************************************
Results 

CLL : -0.625408 

AUC ROC : 0.580989 

AUC PR : 0.415528 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 563.891 

Total Inference Time : 15.307474613189697 

Total revision time: 583.006562921524
Best scored revision CLL: -0.65141


Results 

CLL : -0.625408 

AUC ROC : 0.580989 

AUC PR : 0.415528 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 603.9793631763458 

Total Inference Time : 15.307474613189697 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.618
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '601', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 907.612
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25569440956805856;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.2118074716848771;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4350720120225898;  // std dev = 4.363, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | | else return 0.6041806811312587;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.05558483253541038;  // std dev = 7.861, 390.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=77 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04862512557570173;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2216352343758622;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.1840201890662208;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3734825345357928;  // std dev = 4.363, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | | else return 0.5138119748344604;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07500180823731427;  // std dev = 7.102, 290.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=65 */
%   | | | else return 0.019740250063886165;  // std dev = 4.540, 146.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04260232039124709;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18717111557261007;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.1565036776944253;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2845966104716711;  // std dev = 4.239, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.4323927893028373;  // std dev = 3.551, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11841002004523295;  // std dev = 3.056, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.04097340312795163;  // std dev = 7.854, 390.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=77 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.037153201546615784;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15439781053631446;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.1305545710321083;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5091579665030459;  // std dev = 0.904, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2602701408374721;  // std dev = 5.449, 133.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=85 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05928226476238367;  // std dev = 7.103, 290.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=65 */
%   | | | else return 0.009030947068120151;  // std dev = 4.529, 146.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03226779395029389;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12487218390954195;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.10711155416969267;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15433769824389237;  // std dev = 4.214, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.27168781009908977;  // std dev = 3.535, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09846526789049366;  // std dev = 3.059, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.029198739027247848;  // std dev = 7.848, 390.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=77 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02792287504489787;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09941770868035857;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.08667918219223077;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10756337956713391;  // std dev = 4.311, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | | else return 0.21792711922350483;  // std dev = 3.392, 63.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.046346117980438556;  // std dev = 7.104, 290.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=65 */
%   | | | else return 0.0011408378847136758;  // std dev = 4.519, 146.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02408583634009669;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07820655857766105;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.06937731438966407;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0741389612513969;  // std dev = 4.201, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.16964290456056158;  // std dev = 3.519, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03947181800587732;  // std dev = 7.104, 290.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=65 */
%   | | | else return 9.799802421099181E-4;  // std dev = 4.519, 146.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020718122268235762;  // std dev = 5.398, 189.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=36 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0609727465054207;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.05505279526424019;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04875978057407445;  // std dev = 4.302, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | | else return 0.13968317129690608;  // std dev = 3.381, 63.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11073912082938885;  // std dev = 3.000, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.012727078383669458;  // std dev = 7.627, 383.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=72 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01736542479832716;  // std dev = 5.708, 198.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=41 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04722531988385164;  // std dev = 33.058, 4,563.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,814 */
%   | | | else return 0.04339622221791497;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.031576820504882135;  // std dev = 4.194, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.1109570263615675;  // std dev = 3.510, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0934931886101797;  // std dev = 2.998, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.010881744067574922;  // std dev = 7.627, 383.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=72 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08535330393138223;  // std dev = 1.338, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.020994087024322143;  // std dev = 5.536, 188.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=39 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0364100124233998;  // std dev = 33.066, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,758 #pos=1,814 */
%   | | | else return 0.03379967172376908;  // std dev = 7.464, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01789874382621154;  // std dev = 4.297, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | | else return 0.09471322539482127;  // std dev = 3.375, 63.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07801939985347933;  // std dev = 2.997, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.009291918927765038;  // std dev = 7.627, 383.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=72 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10420634852672482;  // std dev = 0.932, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.01615028320017879;  // std dev = 5.617, 196.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.633', 'seconds']
Refined model CLL: -0.650546


******************************************
Best model found
******************************************
Results 

CLL : -0.625844 

AUC ROC : 0.582799 

AUC PR : 0.414105 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 907.612 

Total Inference Time : 21.99683165550232 

Total revision time: 934.4948248672486
Best scored revision CLL: -0.650546


Results 

CLL : -0.625844 

AUC ROC : 0.582799 

AUC PR : 0.414105 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 955.4676251220703 

Total Inference Time : 21.99683165550232 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.966
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '598', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1076.536
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03813944049451679;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675653;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0371121115470253;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277175;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436815;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903774;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189736;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11884093411175964;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.027928308115416474;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0263808200668972;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083845;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.458764766850876;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19126976018982178;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11443001711808963;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.022647699726884185;  // std dev = 8.492, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10213427468053755;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.02449326071007946;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151814;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0899163307009867;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11011378719134576;  // std dev = 4.742, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2065682212062339;  // std dev = 3.887, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10054879298033811;  // std dev = 3.346, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019796302322363648;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10588961272953495;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.021060951202207533;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245307;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3520381120340898;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10388076509176006;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.034178943055075996;  // std dev = 7.636, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.0027376958602897076;  // std dev = 5.004, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09873198114839131;  // std dev = 0.954, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01869639674660478;  // std dev = 5.845, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171399;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832296;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04147681777623755;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14285615470833968;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08322250292758265;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.014785883483422644;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07677063591725684;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.015732781054475193;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047327940801264436;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.043536294977156595;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.25324709937417805;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05687315354793448;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.030620522702618752;  // std dev = 7.641, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.006809009375787997;  // std dev = 4.975, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011590446825448113;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09166622911142415;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108191;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.033566779947413763;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012760078224073624;  // std dev = 4.714, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09621508805079801;  // std dev = 3.857, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08948808356569414;  // std dev = 3.329, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.007829210670782813;  // std dev = 8.473, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08084210601269233;  // std dev = 1.347, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012729800100286731;  // std dev = 5.763, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.610', 'seconds']
Refined model CLL: -0.650425


******************************************
Best model found
******************************************
Results 

CLL : -0.624361 

AUC ROC : 0.582853 

AUC PR : 0.415218 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1076.536 

Total Inference Time : 27.442159414291382 

Total revision time: 1110.2175740261077
Best scored revision CLL: -0.650425


Results 

CLL : -0.624361 

AUC ROC : 0.582853 

AUC PR : 0.415218 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1131.1903742809295 

Total Inference Time : 27.442159414291382 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.267
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '692', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 173.155
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21059254412206388;  // std dev = 15.583, 1,064.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=375 */
%   | | | else return 0.16800809002908926;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4581489350995123;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.05185106490048767;  // std dev = 2.862, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.10814893509951237;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1829763289501848;  // std dev = 15.583, 1,064.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=375 */
%   | | | else return 0.14630148271319268;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3927941835770489;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.33095332360970464;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2805107770599873;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.04565570724266785;  // std dev = 2.862, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.09446743783575544;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15564603737506452;  // std dev = 15.583, 1,064.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=375 */
%   | | | else return 0.1252897029302459;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32092546969114216;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.27367588493199535;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.23424256206591026;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.1420942428155648;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.04039091886898536;  // std dev = 2.862, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.08165239320886161;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12987934336975143;  // std dev = 15.583, 1,064.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=375 */
%   | | | else return 0.10568397312933334;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25206564481433025;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.21861833752124882;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18987476870468104;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.11914890490746428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.03587899899934591;  // std dev = 2.862, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.06990902274840138;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10660029343576032;  // std dev = 15.583, 1,064.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=375 */
%   | | | else return 0.08797444026627722;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19869545402712108;  // std dev = 2.160, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.1658585735285225;  // std dev = 2.206, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0047429346664670715;  // std dev = 3.585, 110.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=17 */
%   | | | else return -0.12198381129381451;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.14268796869878084;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.04072243500096088;  // std dev = 2.915, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08630549651575364;  // std dev = 15.583, 1,064.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=375 */
%   | | | else return 0.0724148233503403;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15102694102477557;  // std dev = 2.160, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.12605682524672263;  // std dev = 2.205, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004158739057551863;  // std dev = 3.585, 110.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=17 */
%   | | | else return -0.10950956140846758;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.11969533166900954;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.034306301463291916;  // std dev = 2.916, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06911295288664598;  // std dev = 15.583, 1,064.000 (wgt'ed) examples reached here.  /* #neg=689 #pos=375 */
%   | | | else return 0.05905489443226476;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11452731044599603;  // std dev = 2.194, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.09338206244394505;  // std dev = 2.172, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14741169895753684;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.09680970862866563;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.03128407314193626;  // std dev = 2.857, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.0438226185286184;  // std dev = 3.118, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1372673395622979;  // std dev = 2.611, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return -0.13090526832643776;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11166702425783906;  // std dev = 2.102, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.05313795136523423;  // std dev = 15.970, 1,120.000 (wgt'ed) examples reached here.  /* #neg=723 #pos=397 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.11456074598794992;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.07888457190225646;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.027990400697707106;  // std dev = 2.857, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.03656260421211959;  // std dev = 3.118, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.043186224370477505;  // std dev = 15.601, 1,069.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=376 */
%   | | | else return 0.036906441685315206;  // std dev = 3.806, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07189947531537069;  // std dev = 2.151, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.055797696567172816;  // std dev = 2.203, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.17732734870885056;  // std dev = 1.053, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.00724117165755757;  // std dev = 1.349, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.08394466804711313;  // std dev = 2.102, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.014436204677598655;  // std dev = 3.858, 133.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.033899303845995814;  // std dev = 15.601, 1,069.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=376 */
%   | | | else return 0.02939475029595595;  // std dev = 3.806, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05522306673669495;  // std dev = 2.188, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.03998844303928434;  // std dev = 2.166, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0680668423925976;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.046782478899470036;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.024125325878666174;  // std dev = 2.858, 100.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=9 */
%   | | | else return 0.029800786149771188;  // std dev = 3.109, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.249', 'seconds']
Refined model CLL: -0.620802


******************************************
Best model found
******************************************
Results 

CLL : -0.834141 

AUC ROC : 0.518214 

AUC PR : 0.620532 

Precision : 0.722222 

Recall : 0.033722 

F1 : 0.064436 

Total Learning Time : 173.155 

Total Inference Time : 5.085257291793823 

Total revision time: 180.5021157951355
Best scored revision CLL: -0.620802


Results 

CLL : -0.834141 

AUC ROC : 0.518214 

AUC PR : 0.620532 

Precision : 0.722222 

Recall : 0.033722 

F1 : 0.064436 

Total Learning Time : 201.47491604995727 

Total Inference Time : 5.085257291793823 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.847
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '640', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 339.966
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21059648754705973;  // std dev = 22.126, 2,145.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=756 */
%   | | | else return 0.21968739663797426;  // std dev = 5.478, 130.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3716624486130258;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.4463842292171589;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.20189893509951234;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.014578337627761093;  // std dev = 5.527, 275.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=35 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1839656288708913;  // std dev = 22.182, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=761 */
%   | | | else return 0.17390030232831014;  // std dev = 5.247, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3201556683650765;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.38295542794000836;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.15926272485112986;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1532372751488702;  // std dev = 2.620, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.17550281540682036;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.012812974812231691;  // std dev = 5.527, 275.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=35 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1555203100129947;  // std dev = 22.125, 2,145.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=756 */
%   | | | else return 0.16418549273333832;  // std dev = 5.479, 130.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.265303516394226;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.31348639267501893;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.20118894487128397;  // std dev = 2.578, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.013778287265572182;  // std dev = 5.157, 202.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02176605047390333;  // std dev = 3.382, 108.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
%   | | | else return -0.1453857505548785;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4744292309921226;  // std dev = 0.443, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.12934077743011185;  // std dev = 22.752, 2,269.000 (wgt'ed) examples reached here.  /* #neg=1,470 #pos=799 */
%   | | | else return 0.22286091606043432;  // std dev = 4.161, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.16810844061285274;  // std dev = 2.577, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.02420375469668765;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.08657562558823287;  // std dev = 2.556, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.011158387777648377;  // std dev = 5.525, 275.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=35 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10732570506544838;  // std dev = 22.175, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=761 */
%   | | | else return 0.09735635779323908;  // std dev = 5.250, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1637360309360106;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.19333417860013496;  // std dev = 2.862, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750586026986594;  // std dev = 2.577, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.02049369351158654;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07356442898255411;  // std dev = 2.555, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.009832999573884157;  // std dev = 5.525, 275.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=35 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08687486062975494;  // std dev = 22.175, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=761 */
%   | | | else return 0.07881572560637745;  // std dev = 5.250, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12487561734009657;  // std dev = 2.895, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.14594687914352136;  // std dev = 3.009, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.034068964342752056;  // std dev = 4.810, 154.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=29 */
%   | | | else return -1.2299046016601102E-4;  // std dev = 3.180, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.17135462407233018;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.015455673411449;  // std dev = 3.378, 108.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0687101752806031;  // std dev = 22.118, 2,145.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=756 */
%   | | | else return 0.07742007658954;  // std dev = 5.487, 130.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09270074327577177;  // std dev = 3.037, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.11306370117557529;  // std dev = 2.865, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2662700122290888;  // std dev = 1.012, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06373025015054205;  // std dev = 2.527, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.060654060084434996;  // std dev = 2.541, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.00983077715820625;  // std dev = 5.523, 275.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=35 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05533851837745832;  // std dev = 22.175, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=761 */
%   | | | else return 0.04781495568409284;  // std dev = 5.249, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4994466801721493;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05844569682530891;  // std dev = 4.107, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09330544758321889;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.006876921106295077;  // std dev = 5.132, 202.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01516898205406075;  // std dev = 3.378, 108.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
%   | | | else return -0.12566308540129484;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04286802088041106;  // std dev = 22.117, 2,145.000 (wgt'ed) examples reached here.  /* #neg=1,389 #pos=756 */
%   | | | else return 0.0507202284958592;  // std dev = 5.488, 130.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04495890203301603;  // std dev = 2.847, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.07075906939420706;  // std dev = 3.013, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07341033866814686;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.03342750201309219;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.018161903230825727;  // std dev = 4.517, 190.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=24 */
%   | | | else return 0.023967951580932727;  // std dev = 4.062, 119.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03435624545709147;  // std dev = 22.175, 2,153.000 (wgt'ed) examples reached here.  /* #neg=1,392 #pos=761 */
%   | | | else return 0.027377454901057655;  // std dev = 5.247, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03382810478053641;  // std dev = 2.847, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return 0.0531335718394634;  // std dev = 3.013, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07671537219128242;  // std dev = 2.299, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.008133928447739885;  // std dev = 1.240, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01391697587568654;  // std dev = 4.708, 194.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=28 */
%   | | | else return 0.012907655934919583;  // std dev = 3.914, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.462', 'seconds']
Refined model CLL: -0.622287


******************************************
Best model found
******************************************
Results 

CLL : -0.829962 

AUC ROC : 0.503221 

AUC PR : 0.606058 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 339.966 

Total Inference Time : 8.71718955039978 

Total revision time: 351.60853937911986
Best scored revision CLL: -0.622287


Results 

CLL : -0.829962 

AUC ROC : 0.503221 

AUC PR : 0.606058 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 372.58133963394164 

Total Inference Time : 8.71718955039978 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.705
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '672', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 512.468
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21277654494681167;  // std dev = 27.100, 3,209.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=1,138 */
%   | | | else return 0.20206427901485757;  // std dev = 6.530, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3733004502510283;  // std dev = 4.973, 99.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15083186192878065;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.00851773156715447;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.1642713840791042;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.0010059944779522805;  // std dev = 7.180, 426.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=60 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18485271382180052;  // std dev = 27.100, 3,209.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=1,138 */
%   | | | else return 0.17564501981393735;  // std dev = 6.530, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.321538061593102;  // std dev = 4.973, 99.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.21598141663799295;  // std dev = 2.948, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.0295920621961503;  // std dev = 1.316, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0894513563038575;  // std dev = 3.124, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -8.83579549734685E-4;  // std dev = 7.180, 426.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=60 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1571874297419725;  // std dev = 27.100, 3,209.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=1,138 */
%   | | | else return 0.14961261884255608;  // std dev = 6.530, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2591998948192538;  // std dev = 3.486, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return 0.288733064835895;  // std dev = 3.674, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3923066500310651;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.08208298665767365;  // std dev = 2.927, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07732670241017606;  // std dev = 3.123, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -7.761335046993198E-4;  // std dev = 7.180, 426.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=60 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1310925656419158;  // std dev = 27.100, 3,209.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=1,138 */
%   | | | else return 0.1251161906627967;  // std dev = 6.530, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3242275092661205;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2163825114727017;  // std dev = 5.002, 101.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=53 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10617006338277034;  // std dev = 2.894, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.02278537030040283;  // std dev = 6.491, 301.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007693322380067412;  // std dev = 4.636, 181.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=25 */
%   | | | else return -0.1477158996545434;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10753120211531506;  // std dev = 27.101, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,072 #pos=1,138 */
%   | | | else return 0.1027409253213934;  // std dev = 6.528, 188.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15902585539580064;  // std dev = 3.484, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return 0.18146785940873633;  // std dev = 3.670, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08953976337848842;  // std dev = 2.893, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.019868142526419504;  // std dev = 6.490, 301.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006740074197670763;  // std dev = 4.636, 181.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=25 */
%   | | | else return -0.1300844566374508;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08699322764375152;  // std dev = 27.101, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,072 #pos=1,138 */
%   | | | else return 0.0833473365087926;  // std dev = 6.528, 188.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12204849030922763;  // std dev = 3.484, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return 0.13874251742699703;  // std dev = 3.670, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15861290689301025;  // std dev = 2.930, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.05113069545188399;  // std dev = 1.255, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.008552942468199085;  // std dev = 6.164, 316.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=45 */
%   | | | else return 0.023729407691641276;  // std dev = 4.812, 163.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06961503269039065;  // std dev = 27.100, 3,209.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=1,138 */
%   | | | else return 0.06675944026929902;  // std dev = 6.532, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09154400732266467;  // std dev = 3.584, 53.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=28 */
%   | | | else return 0.10726757225243266;  // std dev = 3.572, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3051148241791708;  // std dev = 1.317, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.045125823846505715;  // std dev = 2.887, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04474840599704894;  // std dev = 3.112, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -0.003177378503880426;  // std dev = 7.173, 426.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=60 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05522487694253027;  // std dev = 27.101, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,072 #pos=1,138 */
%   | | | else return 0.053080565036242706;  // std dev = 6.529, 188.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06822572187763644;  // std dev = 3.482, 49.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | else return 0.08080194800330809;  // std dev = 3.671, 55.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11548444976279994;  // std dev = 2.925, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.059940937865013894;  // std dev = 1.199, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00816326559705281;  // std dev = 6.160, 316.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=45 */
%   | | | else return 0.020740225518871575;  // std dev = 4.814, 163.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04351732227449814;  // std dev = 27.100, 3,209.000 (wgt'ed) examples reached here.  /* #neg=2,071 #pos=1,138 */
%   | | | else return 0.041968834817149386;  // std dev = 6.533, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.19680854258977137;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.049234602013247045;  // std dev = 4.970, 99.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09268594899030139;  // std dev = 2.924, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.050866408169476005;  // std dev = 1.203, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007127332055724465;  // std dev = 6.160, 316.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=45 */
%   | | | else return 0.018067442342775186;  // std dev = 4.814, 163.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03412257068317775;  // std dev = 27.101, 3,210.000 (wgt'ed) examples reached here.  /* #neg=2,072 #pos=1,138 */
%   | | | else return 0.03291277331764739;  // std dev = 6.530, 188.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.11320694329488738;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04034204591070651;  // std dev = 4.998, 101.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=53 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06568469138835518;  // std dev = 2.865, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.006946595797625668;  // std dev = 6.429, 301.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006394046212776031;  // std dev = 4.643, 181.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=25 */
%   | | | else return -0.12049273541136325;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.296', 'seconds']
Refined model CLL: -0.623987


******************************************
Best model found
******************************************
Results 

CLL : -0.827945 

AUC ROC : 0.503052 

AUC PR : 0.605817 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 512.468 

Total Inference Time : 13.86873483657837 

Total revision time: 530.1717061023712
Best scored revision CLL: -0.623987


Results 

CLL : -0.827945 

AUC ROC : 0.503052 

AUC PR : 0.605817 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 551.144506357193 

Total Inference Time : 13.86873483657837 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.554
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '696', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 668.269
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2135593828607012;  // std dev = 31.343, 4,288.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,524 */
%   | | | else return 0.21156258971798497;  // std dev = 7.543, 249.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3581489350995111;  // std dev = 3.937, 62.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.455371157321735;  // std dev = 4.162, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06403128804068885;  // std dev = 3.334, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | | else return -0.0017459860913807248;  // std dev = 8.294, 571.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=80 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18552518112422348;  // std dev = 31.343, 4,288.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,524 */
%   | | | else return 0.1838097986712676;  // std dev = 7.543, 249.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856348;  // std dev = 3.937, 62.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.3904723445889836;  // std dev = 4.162, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.04485324549538034;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004127798204111559;  // std dev = 7.001, 411.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=57 */
%   | | | else return 0.020318868797400448;  // std dev = 5.568, 228.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=37 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15773956200609968;  // std dev = 31.343, 4,288.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,524 */
%   | | | else return 0.15633084849594206;  // std dev = 7.543, 249.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25641236875858603;  // std dev = 3.937, 62.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.31917253684021807;  // std dev = 4.162, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.28472396388947296;  // std dev = 1.501, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.03636081710834089;  // std dev = 3.035, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.003623259465872463;  // std dev = 7.001, 411.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=57 */
%   | | | else return 0.017825856054689008;  // std dev = 5.568, 228.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=37 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313934216665765;  // std dev = 31.336, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,523 */
%   | | | else return 0.1327098861315963;  // std dev = 7.572, 250.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19952259865330557;  // std dev = 4.073, 67.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
%   | | | else return 0.26079181380644206;  // std dev = 4.022, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11136776815699669;  // std dev = 3.116, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.04961825355542853;  // std dev = 1.311, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05625926056695291;  // std dev = 3.336, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | | else return -0.002757364212753536;  // std dev = 8.291, 571.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=80 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10786696612657946;  // std dev = 31.343, 4,288.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,524 */
%   | | | else return 0.1066634343367901;  // std dev = 7.543, 249.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3158457167293803;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1716983972330648;  // std dev = 5.603, 128.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08773024353973546;  // std dev = 3.108, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -0.06203637258975029;  // std dev = 1.352, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05169275209726891;  // std dev = 3.320, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return -0.002420070410560486;  // std dev = 8.291, 571.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=80 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08711150819038255;  // std dev = 31.336, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,523 */
%   | | | else return 0.0883976852302506;  // std dev = 7.572, 250.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11192957950217824;  // std dev = 4.064, 67.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
%   | | | else return 0.1595901216411697;  // std dev = 4.022, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2136780966512793;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.018913604079279344;  // std dev = 3.090, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.043800558101209315;  // std dev = 3.318, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return -0.0021245832953684057;  // std dev = 8.291, 571.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=80 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0697906100199882;  // std dev = 31.343, 4,288.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,524 */
%   | | | else return 0.0687373765693523;  // std dev = 7.542, 249.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08063258418405218;  // std dev = 3.928, 62.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=31 */
%   | | | else return 0.12140488873873176;  // std dev = 4.153, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.21842079684968796;  // std dev = 1.511, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.006920911606366965;  // std dev = 3.004, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03635225775404945;  // std dev = 3.316, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | | else return -0.0018655961141668858;  // std dev = 8.291, 571.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=80 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05522993594938586;  // std dev = 31.335, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,523 */
%   | | | else return 0.056427956785637855;  // std dev = 7.573, 250.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05920622023029;  // std dev = 4.062, 67.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
%   | | | else return 0.0950444507641676;  // std dev = 4.020, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06493092473300253;  // std dev = 3.098, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -0.06610204421217449;  // std dev = 1.319, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006007472096058745;  // std dev = 6.925, 397.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=57 */
%   | | | else return 0.014351666649770228;  // std dev = 5.634, 237.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=38 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04350446640252529;  // std dev = 31.335, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,523 */
%   | | | else return 0.04445555827742177;  // std dev = 7.573, 250.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.17691205705837007;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05238930573996823;  // std dev = 5.597, 128.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05516677911298241;  // std dev = 3.097, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return -0.05716182746759833;  // std dev = 1.320, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03119447049948507;  // std dev = 3.311, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return -0.0018813303178415422;  // std dev = 8.289, 571.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=80 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6788035788229235;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3692772182543;  // std dev = 1.854, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.032530404068654616;  // std dev = 32.137, 4,518.000 (wgt'ed) examples reached here.  /* #neg=2,920 #pos=1,598 */
%   | | | else return 0.040781611333609274;  // std dev = 5.701, 133.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=73 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.1753924576474177;  // std dev = 1.398, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0010683795438206796;  // std dev = 3.049, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.005672385736134113;  // std dev = 6.922, 397.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=57 */
%   | | | else return 0.012456202615779004;  // std dev = 5.634, 237.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.199', 'seconds']
Refined model CLL: -0.622458


******************************************
Best model found
******************************************
Results 

CLL : -0.826859 

AUC ROC : 0.503057 

AUC PR : 0.606039 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 668.269 

Total Inference Time : 16.17715859413147 

Total revision time: 689.1813581447601
Best scored revision CLL: -0.622458


Results 

CLL : -0.826859 

AUC ROC : 0.503057 

AUC PR : 0.606039 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 710.1541583995819 

Total Inference Time : 16.17715859413147 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.811
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '633', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 961.983
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703922;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6007717207169575;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36237423287057885;  // std dev = 6.198, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489877;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5160684793061486;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29538891718547616;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09624124323568949;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05295324702984206;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04985386106469921;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894206;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051716;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19097319981969588;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29265314544791804;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10694347510755109;  // std dev = 3.504, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.09274475619634341;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 4.4317220295925333E-4;  // std dev = 7.967, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007723678622506431;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077230198093342;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842085;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14626772772527402;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2254815244772777;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.20536988890863775;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.020028062082081414;  // std dev = 3.412, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03597975306929171;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013094719147721662;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357484;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10164590758703944;  // std dev = 4.439, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.17939367936884953;  // std dev = 4.450, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07609291464491842;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05537351625435217;  // std dev = 1.337, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 2.8671436654382695E-4;  // std dev = 7.969, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005186914151085752;  // std dev = 6.128, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081776;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.274920879104528;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0959241757159395;  // std dev = 6.150, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08601855932904084;  // std dev = 3.491, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08768119401504014;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.026285623558774042;  // std dev = 3.611, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0014115830085553926;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644009;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530427;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23561045207204057;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07030222739954117;  // std dev = 6.146, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07278338219470887;  // std dev = 3.489, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.076157321789098;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.022395698242067965;  // std dev = 3.611, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0012397819863788166;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04352837330557884;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04415110446269604;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028153815075596528;  // std dev = 4.418, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09078970991947674;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.056754908169859744;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.056105909839909096;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01882936952859722;  // std dev = 3.624, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010890337929559534;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0341126349470248;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03459452826638883;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17074794418038747;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0375318836107495;  // std dev = 6.139, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18652092752326813;  // std dev = 1.575, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0034168608966285152;  // std dev = 3.389, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0033770379378512344;  // std dev = 7.953, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007296225193825813;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.214', 'seconds']
Refined model CLL: -0.621829


******************************************
Best model found
******************************************
Results 

CLL : -0.826214 

AUC ROC : 0.505922 

AUC PR : 0.608642 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 961.983 

Total Inference Time : 21.96671724319458 

Total revision time: 990.0807317199707
Best scored revision CLL: -0.621829


Results 

CLL : -0.826214 

AUC ROC : 0.505922 

AUC PR : 0.608642 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 1011.0535319747925 

Total Inference Time : 21.96671724319458 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.176
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '781', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 372.69
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34121891252614417;  // std dev = 0.500, 886.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=428 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5724346493852266;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.14762261931003814;  // std dev = 3.954, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.05094197399139688;  // std dev = 1.651, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2944161519233354;  // std dev = 0.500, 886.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=428 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.48767788391726324;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.361386758207022;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.4035532943707948;  // std dev = 2.880, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.03921210139999743;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.13318291193545126;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04391527296119125;  // std dev = 1.650, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24519491885872594;  // std dev = 0.500, 886.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=428 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.39125696209925326;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.29707588146212427;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.10390817381254919;  // std dev = 3.896, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.5614005077787181;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11854665001819815;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03887471721070712;  // std dev = 1.650, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.197942938128177;  // std dev = 0.500, 886.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=428 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30057115478848934;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.23530262435174626;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.28133793768131543;  // std dev = 2.775, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.018951083822249068;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11256206946582424;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.03383802411634128;  // std dev = 1.649, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1559471483067926;  // std dev = 0.500, 886.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=428 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.22629823971521895;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.18156600992036426;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.22171914058001416;  // std dev = 2.766, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.01612420031285111;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10185282500168408;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.030184949810580758;  // std dev = 1.649, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12074330932195156;  // std dev = 0.500, 886.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=428 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16984358676510142;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.1379248928305776;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.048935793938799474;  // std dev = 3.827, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.3019641156159731;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09767939372719833;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.02643149517546329;  // std dev = 1.648, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09240946163266922;  // std dev = 0.500, 886.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=428 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1281332068824675;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.10392852578813351;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.14336952644420178;  // std dev = 2.738, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.006159510877348562;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08942606982449725;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.023720514368079076;  // std dev = 1.648, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3406727619395121;  // std dev = 1.501, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.2700095428543385;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06925557495748731;  // std dev = 14.713, 867.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=418 */
%   | | | else return 0.08087522531691008;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.028073926868804423;  // std dev = 3.813, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.20214760750510294;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.027938807748596972;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3373575225245819;  // std dev = 10.030, 574.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=438 */
%   | | | else return -0.3771133460382821;  // std dev = 3.940, 388.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=15 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.3202500900474372;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.09258608566733674;  // std dev = 2.003, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05087847873365771;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.06675149460667355;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08422788748859224;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.018110073758460077;  // std dev = 1.648, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2548025760902797;  // std dev = 10.024, 574.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=438 */
%   | | | else return -0.2905601175269054;  // std dev = 3.901, 388.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=15 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.24065646141149388;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07292421416462003;  // std dev = 2.004, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03816573942749706;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.05007647831731078;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.07796141151854935;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.016364447253501828;  // std dev = 1.648, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.333', 'seconds']
Refined model CLL: -0.50547


******************************************
Best model found
******************************************
Results 

CLL : -0.440386 

AUC ROC : 0.901819 

AUC PR : 0.701178 

Precision : 0.569367 

Recall : 0.88296 

F1 : 0.692308 

Total Learning Time : 372.69 

Total Inference Time : 4.035551071166992 

Total revision time: 378.81572109794615
Best scored revision CLL: -0.50547


Results 

CLL : -0.440386 

AUC ROC : 0.901819 

AUC PR : 0.701178 

Precision : 0.569367 

Recall : 0.88296 

F1 : 0.692308 

Total Learning Time : 399.78852135276793 

Total Inference Time : 4.035551071166992 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.542
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '731', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 215.173
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441668321912299;  // std dev = 0.500, 1,788.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=869 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5438632208137972;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.4642095411601179;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2997073766579526;  // std dev = 4.357, 77.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
%   | | | else return 0.019913640981865297;  // std dev = 3.037, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03592671287729016;  // std dev = 3.627, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2969124383184488;  // std dev = 0.500, 1,788.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=869 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.7850785952955569;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40986865041198994;  // std dev = 3.869, 64.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.25917655742961143;  // std dev = 4.357, 77.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
%   | | | else return 0.01747223505334737;  // std dev = 3.037, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03149685479984679;  // std dev = 3.627, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24715444754882931;  // std dev = 0.500, 1,788.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=869 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3806894530874923;  // std dev = 2.730, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.3173413317980834;  // std dev = 2.786, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.21731666350529316;  // std dev = 4.357, 77.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
%   | | | else return 0.015301464433987581;  // std dev = 3.037, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02751945537327557;  // std dev = 3.627, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4843606656531385;  // std dev = 2.320, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | | else return -0.06781408986171077;  // std dev = 1.446, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1967520697501562;  // std dev = 20.881, 1,746.000 (wgt'ed) examples reached here.  /* #neg=902 #pos=844 */
%   | | | else return 0.262698995111014;  // std dev = 3.877, 66.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04539378070656451;  // std dev = 5.141, 148.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=36 */
%   | | | else return 0.4783689652374038;  // std dev = 1.880, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.013378234993611963;  // std dev = 3.037, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15678701472248388;  // std dev = 0.499, 1,788.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=869 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.22933843834863765;  // std dev = 2.722, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.18853253948305534;  // std dev = 2.794, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1464423200083601;  // std dev = 4.240, 77.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
%   | | | else return 0.011679690616179754;  // std dev = 3.037, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05309562023842128;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.0217262493867584;  // std dev = 3.504, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3042157120277839;  // std dev = 2.663, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return -0.16331345323195343;  // std dev = 1.522, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.12071148685468444;  // std dev = 20.828, 1,741.000 (wgt'ed) examples reached here.  /* #neg=896 #pos=845 */
%   | | | else return 0.13974332769080816;  // std dev = 3.856, 64.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.11534318746725399;  // std dev = 4.234, 77.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=34 */
%   | | | else return 0.010183738280722223;  // std dev = 3.037, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0463577526612007;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.01880311638158797;  // std dev = 3.504, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09259657001586324;  // std dev = 0.498, 1,788.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=869 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1353909992129956;  // std dev = 2.717, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.10840495722884629;  // std dev = 2.801, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.18368405049911182;  // std dev = 2.005, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.034283440627167316;  // std dev = 4.796, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.013533281792015872;  // std dev = 3.628, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.09232409580415658;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07031398338828992;  // std dev = 0.498, 1,788.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=869 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.10228579205382786;  // std dev = 2.717, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.08139339089424447;  // std dev = 2.801, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.006991004611232785;  // std dev = 5.116, 148.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=36 */
%   | | | else return 0.3094719616331138;  // std dev = 1.851, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.05257653499946654;  // std dev = 0.946, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.007956487773520987;  // std dev = 2.881, 61.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.34143047988165964;  // std dev = 1.974, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | else return 0.04622385923560228;  // std dev = 2.123, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.444211988576004;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.17766335685612533;  // std dev = 1.276, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.05137742647824866;  // std dev = 20.859, 1,746.000 (wgt'ed) examples reached here.  /* #neg=902 #pos=844 */
%   | | | else return 0.058644331340581536;  // std dev = 3.867, 66.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02388261487090224;  // std dev = 5.103, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
%   | | | else return -0.0014191613406161199;  // std dev = 2.902, 65.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03978196905632442;  // std dev = 0.498, 1,788.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=869 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06398615198736401;  // std dev = 2.719, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.0485108804480669;  // std dev = 2.812, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.3312048467865564;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.002651726587455459;  // std dev = 1.837, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019549811274084904;  // std dev = 5.102, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
%   | | | else return -0.0012333394278301443;  // std dev = 2.902, 65.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.405', 'seconds']
Refined model CLL: -0.66787


******************************************
Best model found
******************************************
Results 

CLL : -0.59929 

AUC ROC : 0.558584 

AUC PR : 0.243233 

Precision : 0.485714 

Recall : 0.02926 

F1 : 0.055195 

Total Learning Time : 215.173 

Total Inference Time : 2.5965304374694824 

Total revision time: 220.31544622421265
Best scored revision CLL: -0.66787


Results 

CLL : -0.59929 

AUC ROC : 0.558584 

AUC PR : 0.243233 

Precision : 0.485714 

Recall : 0.02926 

F1 : 0.055195 

Total Learning Time : 241.28824647903443 

Total Inference Time : 2.5965304374694824 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.106
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '756', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 269.134
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3437779011316088;  // std dev = 0.500, 2,679.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,301 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4600906826723287;  // std dev = 4.968, 103.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=62 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.3004566274072053;  // std dev = 5.065, 104.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=46 */
%   | | | else return 0.06168875810836147;  // std dev = 4.280, 113.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03925129730423638;  // std dev = 4.340, 127.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8109541744869437;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5855260780819973;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.2948372329577087;  // std dev = 25.813, 2,668.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=1,291 */
%   | | | else return 0.40149858873670063;  // std dev = 5.059, 108.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2598140542673528;  // std dev = 5.065, 104.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=46 */
%   | | | else return 0.054012257758747316;  // std dev = 4.280, 113.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07861313111646037;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.03787643591400356;  // std dev = 4.233, 120.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24683427646740796;  // std dev = 0.499, 2,679.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,301 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5095439414184589;  // std dev = 0.914, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.320720267815188;  // std dev = 4.968, 103.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=62 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.21782458699908466;  // std dev = 5.065, 104.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=46 */
%   | | | else return 0.04701277167765135;  // std dev = 4.280, 113.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12808575014691614;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03118541651936434;  // std dev = 4.335, 127.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5983112690867579;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.38962162713491066;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.19781350926442956;  // std dev = 25.813, 2,668.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=1,291 */
%   | | | else return 0.25587895576576414;  // std dev = 5.052, 108.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1776511442557437;  // std dev = 5.065, 104.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=46 */
%   | | | else return 0.04070515657679521;  // std dev = 4.280, 113.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.026234986291465725;  // std dev = 4.334, 129.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=23 */
%   | | | else return -0.14159365540086352;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15672784272184898;  // std dev = 0.499, 2,679.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,301 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.15821652750870452;  // std dev = 3.845, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.2522254908616797;  // std dev = 3.252, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.14166800592920364;  // std dev = 5.065, 104.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=46 */
%   | | | else return 0.035079820971633695;  // std dev = 4.280, 113.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07102542388953989;  // std dev = 0.960, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.027150913697562097;  // std dev = 4.225, 120.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12128161155752702;  // std dev = 0.499, 2,679.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,301 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11388663105101772;  // std dev = 3.641, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.1867357572413244;  // std dev = 3.478, 55.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=36 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.11106847160095697;  // std dev = 5.065, 104.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=46 */
%   | | | else return 0.030108487895573344;  // std dev = 4.280, 113.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.020316400234932308;  // std dev = 4.331, 129.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=23 */
%   | | | else return -0.12299697104710965;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2598582468640333;  // std dev = 3.233, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | | | else return -0.1593102664514791;  // std dev = 2.037, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09222288372006228;  // std dev = 25.512, 2,606.000 (wgt'ed) examples reached here.  /* #neg=1,344 #pos=1,262 */
%   | | | else return 0.10444818073694838;  // std dev = 4.951, 103.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.041438785058879234;  // std dev = 6.076, 189.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
%   | | | else return 0.14371316530872674;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.017598186642733583;  // std dev = 4.331, 129.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=23 */
%   | | | else return -0.11035223060792913;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07038758934232231;  // std dev = 0.499, 2,679.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,301 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05394290130911691;  // std dev = 3.843, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.12835998301631027;  // std dev = 3.248, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.130386595973831;  // std dev = 2.371, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.032983144686672225;  // std dev = 6.182, 193.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=58 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11774171196075243;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.018145683621841997;  // std dev = 4.323, 127.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.3082885035501631;  // std dev = 1.83e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2375042824496064;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05231429572047183;  // std dev = 25.789, 2,668.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=1,291 */
%   | | | else return 0.06024266886401568;  // std dev = 5.027, 108.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=66 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.025118323501022864;  // std dev = 6.066, 189.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
%   | | | else return 0.10224325086613376;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06317135046549577;  // std dev = 0.957, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.017397777543535546;  // std dev = 4.219, 120.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.24667567745662705;  // std dev = 1.29e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.18201102629478944;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.014154120307083682;  // std dev = 3.651, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | | else return 0.04018063976714071;  // std dev = 26.019, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=1,332 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19489187718127765;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.075054380014772;  // std dev = 2.148, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.033359294943625516;  // std dev = 6.273, 206.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=61 */
%   | | | else return 0.008986381332108936;  // std dev = 4.086, 106.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.526', 'seconds']
Refined model CLL: -0.673164


******************************************
Best model found
******************************************
Results 

CLL : -0.603362 

AUC ROC : 0.561645 

AUC PR : 0.249607 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 269.134 

Total Inference Time : 3.3239614963531494 

Total revision time: 275.6946735286713
Best scored revision CLL: -0.673164


Results 

CLL : -0.603362 

AUC ROC : 0.561645 

AUC PR : 0.249607 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 296.66747378349305 

Total Inference Time : 3.3239614963531494 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.621
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '754', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 428.362
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3433361905494792;  // std dev = 0.500, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4239384087837234;  // std dev = 4.321, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   | | | else return 0.5555173561521445;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.28461952333480756;  // std dev = 5.768, 136.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=58 */
%   | | | else return 0.051898935099511434;  // std dev = 4.999, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03695688211937925;  // std dev = 4.709, 151.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.296209138181638;  // std dev = 0.500, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.36414720333735373;  // std dev = 4.321, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   | | | else return 0.47371174041966063;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2463278129905193;  // std dev = 5.768, 136.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=58 */
%   | | | else return 0.045463130646690095;  // std dev = 4.999, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032398326722820656;  // std dev = 4.709, 151.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2466025766154692;  // std dev = 0.500, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.29560873995755443;  // std dev = 4.438, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   | | | else return 0.39366270381692514;  // std dev = 3.860, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.20705112466130218;  // std dev = 5.768, 136.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=58 */
%   | | | else return 0.039628950338883064;  // std dev = 4.999, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02830282455006649;  // std dev = 4.709, 151.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=27 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19897502871039294;  // std dev = 0.500, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.22601815616044885;  // std dev = 4.305, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   | | | else return 0.305033098671205;  // std dev = 4.002, 76.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=53 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07083845897805946;  // std dev = 7.133, 267.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=72 */
%   | | | else return 0.33264418906028054;  // std dev = 2.632, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02464830877216205;  // std dev = 4.709, 151.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=27 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.37580193604827106;  // std dev = 3.672, 66.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | | | else return -0.053012727732302464;  // std dev = 2.584, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.15527487625661396;  // std dev = 29.510, 3,487.000 (wgt'ed) examples reached here.  /* #neg=1,800 #pos=1,687 */
%   | | | else return 0.18924376945032975;  // std dev = 5.730, 142.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=88 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.05948606908964313;  // std dev = 7.130, 267.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=72 */
%   | | | else return 0.26487929154868156;  // std dev = 2.629, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.021406838836524025;  // std dev = 4.709, 151.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=27 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12110147226891439;  // std dev = 0.499, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.42442308488380853;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.14154702525867913;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=90 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04909126990807205;  // std dev = 6.826, 255.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=69 */
%   | | | else return 0.2174153907661437;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1607982562382514;  // std dev = 0.118, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.020855537974294003;  // std dev = 4.978, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0926374835067205;  // std dev = 0.499, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.07834155364563011;  // std dev = 4.404, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   | | | else return 0.16171506128052418;  // std dev = 3.852, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04024002676482011;  // std dev = 7.092, 267.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=72 */
%   | | | else return 0.19332239424137151;  // std dev = 2.625, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01182960816982498;  // std dev = 4.709, 151.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=27 */
%   | | | else return -0.08439449845948067;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07034814928182771;  // std dev = 0.499, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0553128409943292;  // std dev = 4.276, 76.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=43 */
%   | | | else return 0.1196137755755298;  // std dev = 3.993, 76.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.16542385977410495;  // std dev = 2.725, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.03180055540955283;  // std dev = 6.836, 255.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=71 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.007810101485739462;  // std dev = 4.997, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | | else return -0.0780997706256385;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05318052848727837;  // std dev = 0.499, 3,578.000 (wgt'ed) examples reached here.  /* #neg=1,842 #pos=1,736 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.22448866423110098;  // std dev = 1.215, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05501480953518371;  // std dev = 5.708, 142.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=88 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.07482211252577275;  // std dev = 5.646, 136.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=58 */
%   | | | else return 0.006625931559992376;  // std dev = 4.997, 160.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07686277710515683;  // std dev = 0.938, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.005598703325418857;  // std dev = 4.614, 150.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=26 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.27031921694759836;  // std dev = 2.852, 50.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | | | else return 0.09646915443227612;  // std dev = 3.402, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.11472756157422341;  // std dev = 1.783, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.18408768052004004;  // std dev = 2.002, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.03915275483157271;  // std dev = 29.510, 3,487.000 (wgt'ed) examples reached here.  /* #neg=1,800 #pos=1,687 */
%   | | | else return 0.041665593017201664;  // std dev = 5.708, 142.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=88 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.018143354503116885;  // std dev = 7.026, 261.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=75 */
%   | | | else return 0.007119203528915738;  // std dev = 4.515, 143.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.626', 'seconds']
Refined model CLL: -0.672226


******************************************
Best model found
******************************************
Results 

CLL : -0.602024 

AUC ROC : 0.558276 

AUC PR : 0.25139 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 428.362 

Total Inference Time : 3.605708360671997 

Total revision time: 435.74081106948853
Best scored revision CLL: -0.672226


Results 

CLL : -0.602024 

AUC ROC : 0.558276 

AUC PR : 0.25139 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 456.7136113243103 

Total Inference Time : 3.605708360671997 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.401
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '755', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 599.409
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6984459746020693;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34001926937474014;  // std dev = 6.348, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23228051201687597;  // std dev = 4.662, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3084331950271446;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1670534496159236;  // std dev = 4.650, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24425728659686713;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559871;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150809;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6354059656279372;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.36813993844917714;  // std dev = 1.199, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12002477971622676;  // std dev = 33.473, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | | else return 0.14966854698533505;  // std dev = 6.327, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510855;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094524;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455511007;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09283348254849033;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.253199414256593;  // std dev = 1.185, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.10782271020357255;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830448;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960776;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07048246608419276;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05762269937730759;  // std dev = 4.638, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.11854767014744179;  // std dev = 4.291, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955308;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188575;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302802;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053272195584198566;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03629086700939112;  // std dev = 4.636, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09731444446347746;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02242976577421202;  // std dev = 7.498, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13251849744708535;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009773119313054697;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08564686162744155;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21014202661506123;  // std dev = 4.039, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.17518372510686378;  // std dev = 2.771, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.039582414797281855;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04197286526733529;  // std dev = 6.195, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.016371326262339222;  // std dev = 7.487, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12711718680197745;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.007107838771578343;  // std dev = 5.413, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07917581939199703;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.474', 'seconds']
Refined model CLL: -0.672937


******************************************
Best model found
******************************************
Results 

CLL : -0.603963 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 599.409 

Total Inference Time : 4.4176623821258545 

Total revision time: 608.4335256195068
Best scored revision CLL: -0.672937


Results 

CLL : -0.603963 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 629.4063258743286 

Total Inference Time : 4.4176623821258545 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.285
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '618', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 158.786
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24524570929305592;  // std dev = 15.341, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.1368374596896763;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.013645936695359474;  // std dev = 2.953, 78.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=10 */
%   | | | else return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2126961129365642;  // std dev = 15.341, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.11935060438598011;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2958020988065344;  // std dev = 1.568, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5012319813911211;  // std dev = 1.891, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1058893024861437;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0802105878527768;  // std dev = 4.284, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return -0.060573059451295805;  // std dev = 1.663, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1799249784629001;  // std dev = 15.341, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.1027067100135814;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.45937781935274674;  // std dev = 1.273, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2837280711446152;  // std dev = 2.091, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09134084922268758;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.014492161704549731;  // std dev = 2.946, 78.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=10 */
%   | | | else return 0.10160909197004052;  // std dev = 3.519, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14881688635805182;  // std dev = 15.341, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.08731426824689942;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.10693873758226133;  // std dev = 0.985, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.29628501964538995;  // std dev = 2.235, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.249917526079414;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.06485046726568026;  // std dev = 0.936, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.12048611059928278;  // std dev = 1.821, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.016624868190821512;  // std dev = 4.134, 121.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.5336686552835843;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.09852737373840434;  // std dev = 2.322, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.11482309247962791;  // std dev = 0.483, 1,043.000 (wgt'ed) examples reached here.  /* #neg=645 #pos=398 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.2103056924256543;  // std dev = 1.831, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.05566144039930013;  // std dev = 0.936, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.10001576266349278;  // std dev = 1.816, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.014420822547304799;  // std dev = 4.134, 121.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09639462108106649;  // std dev = 15.308, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.05407282975862581;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0920995088063202;  // std dev = 1.536, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.225799417943934;  // std dev = 1.881, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.024129248097511866;  // std dev = 3.110, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | | else return -0.030025757219238208;  // std dev = 1.645, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.08533169220149021;  // std dev = 3.465, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return -0.2139540075633681;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07613841952325465;  // std dev = 15.307, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.04451532699661996;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20626347194437278;  // std dev = 1.258, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09435519435540969;  // std dev = 2.074, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.17756296410003838;  // std dev = 1.725, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.07473826983542459;  // std dev = 0.712, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.04372560388016468;  // std dev = 4.223, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return -0.059076618282785806;  // std dev = 1.671, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.559335474234413;  // std dev = 0.817, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.2966402479572798;  // std dev = 0.176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordauthor(E, H), haswordtitle(I, H) )
%   | | | then return 0.11469767547761106;  // std dev = 2.818, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return -0.10077437657257377;  // std dev = 1.036, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.055413057013394364;  // std dev = 0.483, 1,043.000 (wgt'ed) examples reached here.  /* #neg=645 #pos=398 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.06857823324873871;  // std dev = 1.768, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.003938407213019232;  // std dev = 4.123, 121.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04624715570789934;  // std dev = 15.264, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.026121249415035932;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return -0.040552630585207444;  // std dev = 0.996, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10998990176028169;  // std dev = 2.215, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.016268759322127176;  // std dev = 3.028, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | | else return -0.036952739826684525;  // std dev = 1.666, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05687996446604117;  // std dev = 3.433, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return -0.18703518954146003;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03580415546170687;  // std dev = 15.264, 992.000 (wgt'ed) examples reached here.  /* #neg=608 #pos=384 */
%   | | | else return 0.021158362895285606;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1302102776444208;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0325518622586648;  // std dev = 2.074, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3316134921242725;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.014701297757193003;  // std dev = 1.780, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02775151463127266;  // std dev = 4.190, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | | else return -0.0524944107221158;  // std dev = 1.670, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.485', 'seconds']
Refined model CLL: -0.633123


******************************************
Best model found
******************************************
Results 

CLL : -0.679129 

AUC ROC : 0.539545 

AUC PR : 0.448318 

Precision : 0.575758 

Recall : 0.05087 

F1 : 0.093481 

Total Learning Time : 158.786 

Total Inference Time : 5.207339525222778 

Total revision time: 166.25446118927002
Best scored revision CLL: -0.633123


Results 

CLL : -0.679129 

AUC ROC : 0.539545 

AUC PR : 0.448318 

Precision : 0.575758 

Recall : 0.05087 

F1 : 0.093481 

Total Learning Time : 187.2272614440918 

Total Inference Time : 5.207339525222778 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.766
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '649', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 315.613
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.25006812701869924;  // std dev = 21.723, 1,980.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=776 */
%   | | | else return 0.1696243449355766;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.5248156017661783;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005487428536851644;  // std dev = 4.553, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return 0.09090755578916666;  // std dev = 4.551, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21682308387935353;  // std dev = 21.723, 1,980.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=776 */
%   | | | else return 0.14769650309172838;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.23150070816971172;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.44829560624196213;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(B, K) )
%   | | | then return -0.17504927802714415;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.17067875666748542;  // std dev = 2.748, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004820759370112828;  // std dev = 4.553, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return 0.07947715371442184;  // std dev = 4.551, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18327359193375484;  // std dev = 21.723, 1,980.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=776 */
%   | | | else return 0.1264523196132629;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19513777880289396;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.362363346322623;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.538015590028688;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05624727384895202;  // std dev = 2.473, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0042372461999104286;  // std dev = 4.553, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return 0.06887555130544283;  // std dev = 4.551, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1514000056706427;  // std dev = 21.723, 1,980.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=776 */
%   | | | else return 0.10662118456927581;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16049627291563687;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.28075385369658523;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.03398692050637544;  // std dev = 3.140, 102.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=11 */
%   | | | else return 0.06684564396652252;  // std dev = 4.122, 104.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.07117092587295236;  // std dev = 4.614, 116.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=29 */
%   | | | else return -0.1732642612983482;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12266999930866634;  // std dev = 21.723, 1,980.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=776 */
%   | | | else return 0.08870699929058438;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12932546848487864;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.2124807012182714;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4060145034341315;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04347127014019565;  // std dev = 2.455, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005129372462707049;  // std dev = 4.547, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return 0.050526147478290324;  // std dev = 4.542, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3188471227074581;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return -0.13073198540828482;  // std dev = 2.247, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else return 0.09864088640607405;  // std dev = 0.487, 2,085.000 (wgt'ed) examples reached here.  /* #neg=1,267 #pos=818 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1801879215144346;  // std dev = 2.286, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.1183019818576853;  // std dev = 0.997, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07019791662819767;  // std dev = 2.434, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.007010013046061091;  // std dev = 5.954, 261.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.6357391415816731;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07489449585253308;  // std dev = 22.264, 2,099.000 (wgt'ed) examples reached here.  /* #neg=1,288 #pos=811 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.19924218403852254;  // std dev = 1.202, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.10815688706533141;  // std dev = 3.355, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13569383485156777;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.09913418190372747;  // std dev = 0.881, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005659382592491232;  // std dev = 4.544, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return 0.03889288871724259;  // std dev = 4.527, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06041418461977111;  // std dev = 21.679, 1,980.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=776 */
%   | | | else return 0.04004221342152697;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05972447132786563;  // std dev = 2.296, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1143006424680016;  // std dev = 2.722, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.11184131848273486;  // std dev = 2.369, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.08217012463452907;  // std dev = 0.892, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0049714418644764636;  // std dev = 4.544, 176.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=24 */
%   | | | else return 0.03274987281290445;  // std dev = 4.526, 116.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04700330279196427;  // std dev = 21.634, 1,978.000 (wgt'ed) examples reached here.  /* #neg=1,205 #pos=773 */
%   | | | else return 0.03064802915643662;  // std dev = 5.298, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04603422699891888;  // std dev = 2.295, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.08625707135963943;  // std dev = 2.722, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.4663142997029677;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.012007782133965994;  // std dev = 2.354, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004727002507974734;  // std dev = 5.077, 191.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=32 */
%   | | | else return 0.029590941596710666;  // std dev = 3.908, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6172343961314477;  // std dev = 0.345, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.2954495145363215;  // std dev = 0.262, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.07692600193895292;  // std dev = 1.314, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.03672225413091652;  // std dev = 3.840, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.03274736682296212;  // std dev = 0.485, 2,086.000 (wgt'ed) examples reached here.  /* #neg=1,277 #pos=809 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.004064595061358006;  // std dev = 5.077, 191.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=32 */
%   | | | else return 0.025429686451693616;  // std dev = 3.906, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.274', 'seconds']
Refined model CLL: -0.635588


******************************************
Best model found
******************************************
Results 

CLL : -0.675729 

AUC ROC : 0.54664 

AUC PR : 0.463355 

Precision : 0.7 

Recall : 0.037483 

F1 : 0.071156 

Total Learning Time : 315.613 

Total Inference Time : 8.427451848983765 

Total revision time: 326.88479762458803
Best scored revision CLL: -0.635588


Results 

CLL : -0.675729 

AUC ROC : 0.54664 

AUC PR : 0.463355 

Precision : 0.7 

Recall : 0.037483 

F1 : 0.071156 

Total Learning Time : 347.8575978794098 

Total Inference Time : 8.427451848983765 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.485
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '635', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 477.874
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24856448469736245;  // std dev = 26.649, 2,984.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,165 */
%   | | | else return 0.18573514199606533;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.5803711573217343;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.03658790700575096;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.010000786951363555;  // std dev = 5.897, 270.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=41 */
%   | | | else return 0.05457750652808276;  // std dev = 5.150, 168.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=33 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2155365177459657;  // std dev = 26.649, 2,984.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,165 */
%   | | | else return 0.16158887109600426;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29415244793700734;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.49422044825910033;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.20478223194838088;  // std dev = 2.776, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.045042722926998714;  // std dev = 1.340, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.015310382969514166;  // std dev = 6.142, 279.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=45 */
%   | | | else return 0.028225547217400795;  // std dev = 4.795, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1822302737085821;  // std dev = 26.649, 2,984.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,165 */
%   | | | else return 0.13799613626228602;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24498779946109306;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.3960190909548873;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.4144904510680303;  // std dev = 1.294, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05151506509907872;  // std dev = 2.755, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01339151079007014;  // std dev = 6.142, 279.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=45 */
%   | | | else return 0.02467891273458459;  // std dev = 4.795, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1505959358057725;  // std dev = 26.649, 2,984.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,165 */
%   | | | else return 0.11588141743192369;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19779098606161633;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.30383299977459627;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13293833576955738;  // std dev = 2.730, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return -0.044296830929260074;  // std dev = 1.349, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0032672281699823694;  // std dev = 5.887, 270.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=41 */
%   | | | else return 0.038101116126391485;  // std dev = 5.116, 168.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=33 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12207784591432638;  // std dev = 26.649, 2,984.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,165 */
%   | | | else return 0.09589716938050136;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15222548127521102;  // std dev = 2.726, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | | else return 0.23516030886798003;  // std dev = 3.257, 51.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4076782300099694;  // std dev = 1.288, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.010072281095977409;  // std dev = 2.631, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07890054109207562;  // std dev = 2.921, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.006834364588820736;  // std dev = 7.223, 392.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=62 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09744390471046402;  // std dev = 26.649, 2,984.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,165 */
%   | | | else return 0.07838952715340869;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1048270712093282;  // std dev = 2.692, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.1806859191445465;  // std dev = 3.278, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.14515090137733702;  // std dev = 2.727, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.0770058294663511;  // std dev = 1.284, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.007689297379308081;  // std dev = 6.133, 279.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=45 */
%   | | | else return 0.01626822162384883;  // std dev = 4.767, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07686048830534647;  // std dev = 26.649, 2,984.000 (wgt'ed) examples reached here.  /* #neg=1,819 #pos=1,165 */
%   | | | else return 0.06343670579410703;  // std dev = 6.191, 174.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07256857684563175;  // std dev = 2.727, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | | else return 0.14421113084744291;  // std dev = 3.243, 51.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3404592001465619;  // std dev = 1.268, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.00552413417360986;  // std dev = 2.624, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 2.6427335212392267E-5;  // std dev = 5.885, 270.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=41 */
%   | | | else return 0.02571967845185698;  // std dev = 5.096, 168.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6696694801891079;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06525406304890927;  // std dev = 1.544, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0.05917017590506352;  // std dev = 0.486, 3,224.000 (wgt'ed) examples reached here.  /* #neg=1,961 #pos=1,263 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.023977866127387035;  // std dev = 5.708, 223.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=41 */
%   | | | else return -0.03057364032841256;  // std dev = 3.117, 91.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=11 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.03495699616618963;  // std dev = 5.150, 165.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=35 */
%   | | | else return -0.17607209981302024;  // std dev = 0.098, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5092542103010566;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.045266584282074904;  // std dev = 27.318, 3,152.000 (wgt'ed) examples reached here.  /* #neg=1,936 #pos=1,216 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.012168677251801078;  // std dev = 1.578, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.08881887775838775;  // std dev = 3.928, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.32220955674540935;  // std dev = 1.270, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0027609317530914138;  // std dev = 2.667, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.039987064309622226;  // std dev = 2.797, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.0017645536505513971;  // std dev = 7.217, 392.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=62 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D), haswordtitle(F, D) )
%   | | then return 0.38408782537003777;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03503636310625548;  // std dev = 27.318, 3,152.000 (wgt'ed) examples reached here.  /* #neg=1,936 #pos=1,216 */
%   | | | else return 0.056584813498722304;  // std dev = 4.240, 83.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=53 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1048435283448204;  // std dev = 2.675, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.08702350850585266;  // std dev = 1.227, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03384189111598171;  // std dev = 2.794, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.00153172666053168;  // std dev = 7.217, 392.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=62 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.414', 'seconds']
Refined model CLL: -0.637786


******************************************
Best model found
******************************************
Results 

CLL : -0.67705 

AUC ROC : 0.537072 

AUC PR : 0.450894 

Precision : 0.633333 

Recall : 0.025435 

F1 : 0.048906 

Total Learning Time : 477.874 

Total Inference Time : 13.195994138717651 

Total revision time: 494.72025850677494
Best scored revision CLL: -0.637786


Results 

CLL : -0.67705 

AUC ROC : 0.537072 

AUC PR : 0.450894 

Precision : 0.633333 

Recall : 0.025435 

F1 : 0.048906 

Total Learning Time : 515.6930587615967 

Total Inference Time : 13.195994138717651 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.192
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '671', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1405.055
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4206489350995111;  // std dev = 3.969, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   | | | else return 0.11697246451127709;  // std dev = 4.038, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else return 0.25010873409448203;  // std dev = 0.488, 4,179.000 (wgt'ed) examples reached here.  /* #neg=2,541 #pos=1,638 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1914822684328457;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.05489454316135737;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.08891816586874314;  // std dev = 3.397, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return 0.027080973934463393;  // std dev = 8.503, 515.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=87 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D), haswordauthor(F, D) )
%   | | then return 0.7988867582070222;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2157987328631636;  // std dev = 0.488, 4,321.000 (wgt'ed) examples reached here.  /* #neg=2,632 #pos=1,689 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.16001051908885536;  // std dev = 3.200, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.07083770448928972;  // std dev = 1.356, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.09304776112369584;  // std dev = 3.439, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.023752343812899188;  // std dev = 8.503, 515.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=87 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3947898895895603;  // std dev = 3.598, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return 0.0855545292507138;  // std dev = 4.237, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else return 0.18223903329733118;  // std dev = 0.488, 4,184.000 (wgt'ed) examples reached here.  /* #neg=2,549 #pos=1,635 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.15373906116363503;  // std dev = 3.257, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.06072120665184591;  // std dev = 1.353, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06628436330752566;  // std dev = 3.371, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return 0.02077970425219161;  // std dev = 8.503, 515.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=87 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15126073487284983;  // std dev = 0.487, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,632 #pos=1,696 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1288655500279358;  // std dev = 3.188, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.07128437973011183;  // std dev = 1.358, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06630121815047695;  // std dev = 3.416, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.018138019589129525;  // std dev = 8.503, 515.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=87 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12257217841783914;  // std dev = 0.487, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,632 #pos=1,696 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3303450733674467;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0261915029313629;  // std dev = 3.220, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04666478439942732;  // std dev = 3.349, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return 0.015800611330829013;  // std dev = 8.503, 515.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=87 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09780129849165463;  // std dev = 0.487, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,632 #pos=1,696 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11153459649099028;  // std dev = 3.230, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.07526343302124465;  // std dev = 1.307, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.0395929675707987;  // std dev = 3.348, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return 0.01374030426246224;  // std dev = 8.503, 515.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=87 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07711351326850677;  // std dev = 0.487, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,632 #pos=1,696 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.27799828365794166;  // std dev = 1.350, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.010735443374197842;  // std dev = 3.192, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.010152031664278216;  // std dev = 7.068, 356.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=60 */
%   | | | else return 0.02099602922111937;  // std dev = 5.793, 224.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2433860347575864;  // std dev = 3.285, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | | else return -0.035997162564406514;  // std dev = 4.440, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else return 0.06061815339705896;  // std dev = 0.488, 4,179.000 (wgt'ed) examples reached here.  /* #neg=2,541 #pos=1,638 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08949746094448151;  // std dev = 3.153, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.08076038502244771;  // std dev = 1.371, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017719968125216968;  // std dev = 7.709, 401.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=74 */
%   | | | else return 5.591093441408578E-4;  // std dev = 4.908, 178.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.42917457393305253;  // std dev = 18.845, 2,018.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=1,549 */
%   | | | else return -0.2968648260491939;  // std dev = 8.644, 2,295.000 (wgt'ed) examples reached here.  /* #neg=2,222 #pos=73 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13742926666968003;  // std dev = 3.878, 97.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=19 */
%   | | | else return 0.042077907243162876;  // std dev = 7.252, 263.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=83 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.2652958937959443;  // std dev = 2.867, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.4841506699584882;  // std dev = 2.248, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026623737738865783;  // std dev = 5.829, 219.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=44 */
%   | | | else return -0.17094890954640862;  // std dev = 0.136, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.027497974129135287;  // std dev = 26.861, 3,971.000 (wgt'ed) examples reached here.  /* #neg=2,429 #pos=1,542 */
%   | | | else return 0.04678161976105593;  // std dev = 7.522, 336.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=84 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.13074958070542336;  // std dev = 3.743, 100.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
%   | | | else return 0.029448377485389032;  // std dev = 7.144, 269.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=82 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.062255868463311645;  // std dev = 5.825, 230.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=61 */
%   | | | else return -0.05887285921675053;  // std dev = 1.608, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.36976173929603373;  // std dev = 2.253, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return -0.14820533698000937;  // std dev = 0.122, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.770', 'seconds']
Refined model CLL: -0.538542


******************************************
Best model found
******************************************
Results 

CLL : -0.557906 

AUC ROC : 0.884163 

AUC PR : 0.808852 

Precision : 0.916667 

Recall : 0.029451 

F1 : 0.057069 

Total Learning Time : 1405.055 

Total Inference Time : 11.799668073654175 

Total revision time: 1421.267352602005
Best scored revision CLL: -0.538542


Results 

CLL : -0.557906 

AUC ROC : 0.884163 

AUC PR : 0.808852 

Precision : 0.916667 

Recall : 0.029451 

F1 : 0.057069 

Total Learning Time : 1442.2401528568269 

Total Inference Time : 11.799668073654175 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.226
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '629', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 881.486
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11767149769024587;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08788879413761608;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012866519535122762;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03272964550999362;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.35361695176439173;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.03319004682520159;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15159890319074093;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09553515798730454;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.059531232184166276;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010057372635391115;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03004576049705198;  // std dev = 6.437, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12330619426052544;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09782023613416814;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08101939649353403;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008583226951937492;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025520518758283196;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2561116199148067;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.003392517365932819;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07328169239825068;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.09851331077001026;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.002259824703135471;  // std dev = 7.678, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07804226414748643;  // std dev = 3.730, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.03303835012302985;  // std dev = 6.500, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.15790840973122483;  // std dev = 0.099, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07738349278311535;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08022634453890849;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07112485219111173;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0036020440097442575;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022810564006395435;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21778036884024274;  // std dev = 3.579, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | | else return -0.004505516167983874;  // std dev = 5.115, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | | else return 0.06008279754126086;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.20273654577431427;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009828023768304684;  // std dev = 3.392, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0026639667582359625;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018384978693148608;  // std dev = 6.406, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04685007744736578;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07039857108984177;  // std dev = 3.474, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06393367979063078;  // std dev = 1.337, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0023099806999574363;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01585267656820421;  // std dev = 6.406, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030796347836888876;  // std dev = 34.243, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04423603092993928;  // std dev = 8.392, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11325406058169547;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036913291293857724;  // std dev = 8.109, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.22804359201548036;  // std dev = 3.216, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.46136071606278534;  // std dev = 2.577, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025104073245145058;  // std dev = 6.481, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14339718920036834;  // std dev = 0.119, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.268', 'seconds']
Refined model CLL: -0.640275


******************************************
Best model found
******************************************
Results 

CLL : -0.677863 

AUC ROC : 0.53895 

AUC PR : 0.451637 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 881.486 

Total Inference Time : 5.847228527069092 

Total revision time: 892.847817527771
Best scored revision CLL: -0.640275


Results 

CLL : -0.677863 

AUC ROC : 0.53895 

AUC PR : 0.451637 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 913.8206177825928 

Total Inference Time : 5.847228527069092 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.327
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '550', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 173.27100000000002
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2308683095565014;  // std dev = 16.404, 1,151.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=429 */
%   | | | else return 0.10304689428318584;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.42957750652808374;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.020311097261674526;  // std dev = 3.171, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.006297083247660484;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.20037916309738774;  // std dev = 16.404, 1,151.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=429 */
%   | | | else return 0.09003433310697653;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2734366587491455;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.368876976597706;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0178206096118518;  // std dev = 3.171, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return 0.13270212707734674;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.00552881332259792;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16989790528075188;  // std dev = 16.404, 1,151.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=429 */
%   | | | else return 0.07788111812495957;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22755232214840954;  // std dev = 2.681, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.32028900631623153;  // std dev = 2.364, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.03918293133717443;  // std dev = 0.316, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.042001964810347854;  // std dev = 3.573, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 0.004851418492914656;  // std dev = 2.611, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.141040338924226;  // std dev = 16.404, 1,151.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=429 */
%   | | | else return 0.06676342712955287;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17499827176008953;  // std dev = 2.437, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.2492667505292985;  // std dev = 2.612, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.03425151360469837;  // std dev = 0.316, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03648347617877266;  // std dev = 3.573, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 0.004254813622073693;  // std dev = 2.611, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11499200491049277;  // std dev = 16.404, 1,151.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=429 */
%   | | | else return 0.05677822469739508;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1328490990063431;  // std dev = 2.676, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.21119878232113523;  // std dev = 2.357, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007572526330151403;  // std dev = 3.169, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return 0.10335924220750053;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.003729876884319991;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.6196693917882656;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.11199517283064146;  // std dev = 2.177, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08578361864570337;  // std dev = 16.439, 1,172.000 (wgt'ed) examples reached here.  /* #neg=747 #pos=425 */
%   | | | else return 0.12797265338030203;  // std dev = 3.507, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006580536320705726;  // std dev = 3.169, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | | else return 0.08689521319023237;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else return 0.0032683956847075345;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4800924419744785;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.08856389052138416;  // std dev = 2.177, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06831079070826435;  // std dev = 16.439, 1,172.000 (wgt'ed) examples reached here.  /* #neg=747 #pos=425 */
%   | | | else return 0.09723954882299791;  // std dev = 3.506, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0335268949178501;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.03471865925964822;  // std dev = 0.951, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.018644984036626223;  // std dev = 4.315, 128.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05815034463294135;  // std dev = 16.347, 1,151.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=429 */
%   | | | else return 0.02244034856758545;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04830372934095657;  // std dev = 2.675, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.10713838791881104;  // std dev = 2.357, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.030458382621669628;  // std dev = 0.317, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02197465468092965;  // std dev = 3.561, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 5.323736986095E-4;  // std dev = 2.611, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34643387965381905;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.05587508125526519;  // std dev = 2.174, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.041686713136155705;  // std dev = 16.438, 1,172.000 (wgt'ed) examples reached here.  /* #neg=747 #pos=425 */
%   | | | else return 0.05513418426810926;  // std dev = 3.505, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.026806726249820778;  // std dev = 0.317, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018821596769909178;  // std dev = 3.561, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 4.653750202381541E-4;  // std dev = 2.611, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035597983660351565;  // std dev = 16.334, 1,151.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=429 */
%   | | | else return 0.011151221229135302;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.011425930432956468;  // std dev = 2.432, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.06878694136710968;  // std dev = 2.604, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.02365848163478124;  // std dev = 0.317, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01608538371989006;  // std dev = 3.561, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return 4.0678746472226586E-4;  // std dev = 2.611, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.406', 'seconds']
Refined model CLL: -0.634176


******************************************
Best model found
******************************************
Results 

CLL : -0.753288 

AUC ROC : 0.62068 

AUC PR : 0.597858 

Precision : 0.66 

Recall : 0.06 

F1 : 0.11 

Total Learning Time : 173.27100000000002 

Total Inference Time : 5.174260854721069 

Total revision time: 180.7517654399872
Best scored revision CLL: -0.634176


Results 

CLL : -0.753288 

AUC ROC : 0.62068 

AUC PR : 0.597858 

Precision : 0.66 

Recall : 0.06 

F1 : 0.11 

Total Learning Time : 201.72456569480897 

Total Inference Time : 5.174260854721069 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.988
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '564', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 306.171
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.23013169372019693;  // std dev = 23.280, 2,320.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=863 */
%   | | | else return 0.14527764797079826;  // std dev = 4.547, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3581489350995117;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.443514788758048;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.030739953789376686;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.04672036367093994;  // std dev = 5.175, 175.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00868656950811451;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19981539555597355;  // std dev = 23.281, 2,321.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=863 */
%   | | | else return 0.12435235726923306;  // std dev = 4.540, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856348;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.3805537122526917;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.027039036105351237;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.040937411233417625;  // std dev = 5.175, 175.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007625865862415122;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16959750437252455;  // std dev = 23.278, 2,320.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=863 */
%   | | | else return 0.10415095012576647;  // std dev = 4.549, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.24951196355271235;  // std dev = 3.196, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return 0.31708659110143217;  // std dev = 3.195, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.021166360158795368;  // std dev = 4.725, 157.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=27 */
%   | | | else return 0.06936205707361585;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0066892428575105285;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1409255351481637;  // std dev = 23.279, 2,321.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=863 */
%   | | | else return 0.0855062986199215;  // std dev = 4.543, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19845430338058068;  // std dev = 3.238, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.25389046046476804;  // std dev = 3.149, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08981309081539891;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03599740873254418;  // std dev = 5.238, 178.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=34 */
%   | | | else return 0.0014321265509730993;  // std dev = 3.455, 97.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5045054547334306;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.11291203984590191;  // std dev = 3.141, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10988688658513658;  // std dev = 23.368, 2,358.000 (wgt'ed) examples reached here.  /* #neg=1,497 #pos=861 */
%   | | | else return 0.16965816583074195;  // std dev = 4.499, 82.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.030665079842646478;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.028201245350125546;  // std dev = 5.168, 175.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005686151361016937;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return -0.10172712074714865;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09272381995518059;  // std dev = 23.249, 2,320.000 (wgt'ed) examples reached here.  /* #neg=1,457 #pos=863 */
%   | | | else return 0.05052111120363409;  // std dev = 4.553, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10631524690861321;  // std dev = 3.196, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return 0.16314660914811743;  // std dev = 3.188, 42.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01209906978452583;  // std dev = 4.719, 157.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=27 */
%   | | | else return 0.05220419505983539;  // std dev = 2.492, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004980387120620013;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return -0.0928007759957159;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3754645613819728;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.07172477120625408;  // std dev = 3.138, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06986025320803395;  // std dev = 23.366, 2,358.000 (wgt'ed) examples reached here.  /* #neg=1,497 #pos=861 */
%   | | | else return 0.09655591064232778;  // std dev = 4.494, 82.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08410028612339567;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025363046073758402;  // std dev = 5.235, 178.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=34 */
%   | | | else return 6.634865833207827E-4;  // std dev = 3.453, 97.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.28360013957338465;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.056479411899181695;  // std dev = 3.138, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05512749749840423;  // std dev = 23.366, 2,358.000 (wgt'ed) examples reached here.  /* #neg=1,497 #pos=861 */
%   | | | else return 0.0727131433677875;  // std dev = 4.494, 82.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=44 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.025344118598813123;  // std dev = 4.571, 136.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=26 */
%   | | | else return -0.011678555693286881;  // std dev = 2.743, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004277051550377028;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return -0.08532944481766708;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5085622982345506;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.012313550644002646;  // std dev = 2.786, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04145933258867746;  // std dev = 23.372, 2,370.000 (wgt'ed) examples reached here.  /* #neg=1,504 #pos=866 */
%   | | | else return 0.0607825724834889;  // std dev = 4.467, 81.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07609998461348999;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019861306547783415;  // std dev = 5.234, 178.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=34 */
%   | | | else return 3.3420904034981537E-4;  // std dev = 3.452, 97.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5556112497728584;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.4443887502271415;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.05522313882092636;  // std dev = 2.551, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.24355826288973703;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.07397499247107855;  // std dev = 3.568, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | | else return 0.031762489800820165;  // std dev = 23.524, 2,392.000 (wgt'ed) examples reached here.  /* #neg=1,511 #pos=881 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017307883328726466;  // std dev = 5.034, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return 1.3274793752292502E-4;  // std dev = 3.738, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.520', 'seconds']
Refined model CLL: -0.633207


******************************************
Best model found
******************************************
Results 

CLL : -0.74132 

AUC ROC : 0.654067 

AUC PR : 0.639326 

Precision : 0.683544 

Recall : 0.098182 

F1 : 0.171701 

Total Learning Time : 306.171 

Total Inference Time : 7.37775993347168 

Total revision time: 316.62466772460937
Best scored revision CLL: -0.633207


Results 

CLL : -0.74132 

AUC ROC : 0.654067 

AUC PR : 0.639326 

Precision : 0.683544 

Recall : 0.098182 

F1 : 0.171701 

Total Learning Time : 337.59746797943114 

Total Inference Time : 7.37775993347168 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.642
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '597', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 552.096
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2284659379813516;  // std dev = 28.445, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,285 */
%   | | | else return 0.22285481745245478;  // std dev = 6.276, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951123;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.4945125714631476;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return 0.1273797043302816;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.007808799045090331;  // std dev = 4.325, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19831919386216323;  // std dev = 28.445, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,285 */
%   | | | else return 0.1935057085014595;  // std dev = 6.276, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.42312069605298946;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006066122282089815;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return 0.11115563121567809;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0068555780470159625;  // std dev = 4.325, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1682160702184826;  // std dev = 28.445, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,285 */
%   | | | else return 0.1642807620769384;  // std dev = 6.276, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2564123687585865;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.3436760623951427;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0053224282991176245;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return 0.09579419157416387;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.006014321602229699;  // std dev = 4.325, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13972985084478218;  // std dev = 28.445, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,285 */
%   | | | else return 0.13665655730870918;  // std dev = 6.276, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20613740734453992;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.26787141805972026;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004667254460306609;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return 0.08162919635455555;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.005272904083782681;  // std dev = 4.325, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11401316259015518;  // std dev = 28.445, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,285 */
%   | | | else return 0.11171088269236155;  // std dev = 6.276, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15006177621270828;  // std dev = 3.615, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.2157885710225885;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004090684047881402;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return 0.06887003201680361;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004620270608276932;  // std dev = 4.325, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4813676562911358;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.05328437513265406;  // std dev = 3.899, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08975207869921621;  // std dev = 28.725, 3,547.000 (wgt'ed) examples reached here.  /* #neg=2,241 #pos=1,306 */
%   | | | else return 0.13498005012244826;  // std dev = 5.049, 106.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=60 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.060347758487603036;  // std dev = 0.290, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01805937153410882;  // std dev = 6.180, 268.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=47 */
%   | | | else return 0.0033302719647639568;  // std dev = 4.426, 156.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07280205023691028;  // std dev = 28.418, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,285 */
%   | | | else return 0.07191710584758093;  // std dev = 6.276, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08088175499636685;  // std dev = 3.615, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.13179693136159068;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05278306581153707;  // std dev = 0.290, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.016503649817646786;  // std dev = 6.250, 274.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=48 */
%   | | | else return 8.73025783394842E-4;  // std dev = 4.324, 150.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05736993999484853;  // std dev = 28.417, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,285 */
%   | | | else return 0.05680711202152067;  // std dev = 6.276, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05829251142813557;  // std dev = 3.610, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.10101286296216083;  // std dev = 3.553, 55.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0017148315877526668;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return 0.052806339885214;  // std dev = 3.194, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0018913640788113494;  // std dev = 4.324, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
%   | | | else return -0.08551287891374038;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41246870432112764;  // std dev = 2.268, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return -0.007700186564256508;  // std dev = 3.477, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04290935837913018;  // std dev = 28.745, 3,559.000 (wgt'ed) examples reached here.  /* #neg=2,249 #pos=1,310 */
%   | | | else return 0.06143307712785356;  // std dev = 5.028, 105.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=60 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0014996556248868258;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return 0.043718376260281605;  // std dev = 3.194, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0016530266908125757;  // std dev = 4.324, 147.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=22 */
%   | | | else return -0.07905843906685843;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0348917949806702;  // std dev = 28.390, 3,471.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,285 */
%   | | | else return 0.03573514047468644;  // std dev = 6.270, 169.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02533870514942929;  // std dev = 3.616, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.06540603175115292;  // std dev = 3.544, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04817394957598784;  // std dev = 0.291, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.011139730556351608;  // std dev = 6.172, 268.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=47 */
%   | | | else return 6.934882347858015E-4;  // std dev = 4.426, 156.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.526', 'seconds']
Refined model CLL: -0.635435


******************************************
Best model found
******************************************
Results 

CLL : -0.749652 

AUC ROC : 0.627444 

AUC PR : 0.616055 

Precision : 0.846154 

Recall : 0.04 

F1 : 0.076389 

Total Learning Time : 552.096 

Total Inference Time : 14.11924433708191 

Total revision time: 570.0804816131592
Best scored revision CLL: -0.635435


Results 

CLL : -0.749652 

AUC ROC : 0.627444 

AUC PR : 0.616055 

Precision : 0.846154 

Recall : 0.04 

F1 : 0.076389 

Total Learning Time : 591.053281867981 

Total Inference Time : 14.11924433708191 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.758
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '591', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 756.856
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22926292473681287;  // std dev = 32.879, 4,632.000 (wgt'ed) examples reached here.  /* #neg=2,913 #pos=1,719 */
%   | | | else return 0.2003711573217354;  // std dev = 7.117, 225.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3511066815783843;  // std dev = 4.213, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   | | | else return 0.5346195233348068;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07042249347191638;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.04185106490048778;  // std dev = 1.643, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.027925054502496754;  // std dev = 8.692, 536.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=91 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19900264842458565;  // std dev = 32.879, 4,632.000 (wgt'ed) examples reached here.  /* #neg=2,913 #pos=1,719 */
%   | | | else return 0.17418872660873597;  // std dev = 7.117, 225.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30278580266009086;  // std dev = 4.213, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   | | | else return 0.4564215244401205;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011899568072954761;  // std dev = 6.428, 315.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=49 */
%   | | | else return 0.08945900963928277;  // std dev = 3.387, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.009532750709001482;  // std dev = 5.200, 207.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=32 */
%   | | | else return -0.14528447895018706;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16877422142499193;  // std dev = 32.879, 4,632.000 (wgt'ed) examples reached here.  /* #neg=2,913 #pos=1,719 */
%   | | | else return 0.14841206082551014;  // std dev = 7.117, 225.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2517569672692923;  // std dev = 4.213, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   | | | else return 0.3683582072107511;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010429646515804435;  // std dev = 6.428, 315.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=49 */
%   | | | else return 0.07801827544975529;  // std dev = 3.387, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0083465654561385;  // std dev = 5.200, 207.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=32 */
%   | | | else return -0.1281563142497809;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14016495857957773;  // std dev = 32.879, 4,632.000 (wgt'ed) examples reached here.  /* #neg=2,913 #pos=1,719 */
%   | | | else return 0.12416568325596336;  // std dev = 7.117, 225.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19646481893945622;  // std dev = 3.946, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return 0.28256649399343703;  // std dev = 4.128, 75.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06587830735684695;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025020515746597628;  // std dev = 7.252, 365.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=64 */
%   | | | else return 0.0024899549592072973;  // std dev = 5.045, 201.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.2495277310000223;  // std dev = 1.408, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11355465236263723;  // std dev = 33.610, 4,849.000 (wgt'ed) examples reached here.  /* #neg=3,057 #pos=1,792 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1483990806947299;  // std dev = 4.210, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   | | | else return 0.22780347314613728;  // std dev = 3.844, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.042157555616897345;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023061622044229246;  // std dev = 7.079, 349.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=61 */
%   | | | else return -9.73324138259488E-5;  // std dev = 5.209, 215.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4344436562208756;  // std dev = 2.670, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | | else return 0.04040695385292581;  // std dev = 4.163, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08983708897902923;  // std dev = 33.215, 4,744.000 (wgt'ed) examples reached here.  /* #neg=2,998 #pos=1,746 */
%   | | | else return 0.1430670538491494;  // std dev = 5.676, 137.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=80 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03709367071328082;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02007208048488143;  // std dev = 7.078, 349.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=61 */
%   | | | else return -8.500096005186016E-5;  // std dev = 5.209, 215.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4346258199658887;  // std dev = 2.563, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return -1.439915174317811E-4;  // std dev = 4.256, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07157992318542833;  // std dev = 33.175, 4,737.000 (wgt'ed) examples reached here.  /* #neg=2,991 #pos=1,746 */
%   | | | else return 0.10403603590500342;  // std dev = 5.690, 138.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=80 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.032764331897615864;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017431095767232067;  // std dev = 7.078, 349.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=61 */
%   | | | else return -7.423251886110155E-5;  // std dev = 5.209, 215.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05768730076179467;  // std dev = 32.822, 4,632.000 (wgt'ed) examples reached here.  /* #neg=2,913 #pos=1,719 */
%   | | | else return 0.04856604991521056;  // std dev = 7.117, 225.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=77 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04403651630959755;  // std dev = 3.942, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return 0.11456602611085852;  // std dev = 4.112, 75.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008086486858766468;  // std dev = 6.578, 322.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=52 */
%   | | | else return 0.039059801974150876;  // std dev = 3.348, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -3.709727803227276E-4;  // std dev = 5.032, 193.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=30 */
%   | | | else return -0.11473292432821705;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04514839904250777;  // std dev = 32.821, 4,632.000 (wgt'ed) examples reached here.  /* #neg=2,913 #pos=1,719 */
%   | | | else return 0.038392424585475926;  // std dev = 7.117, 225.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=77 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03329909505252239;  // std dev = 4.208, 71.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=35 */
%   | | | else return 0.09183041220217134;  // std dev = 3.837, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.030060057243415362;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06520912233238323;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.012129238532068003;  // std dev = 8.672, 536.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=91 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3115805762704817;  // std dev = 2.563, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return -0.02209047354939708;  // std dev = 4.254, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03409670121928082;  // std dev = 33.174, 4,737.000 (wgt'ed) examples reached here.  /* #neg=2,991 #pos=1,746 */
%   | | | else return 0.043313457266610296;  // std dev = 5.679, 138.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=80 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05769909193904815;  // std dev = 0.258, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01650601276743173;  // std dev = 7.244, 365.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=64 */
%   | | | else return -0.005922492879787775;  // std dev = 5.039, 201.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.423', 'seconds']
Refined model CLL: -0.634904


******************************************
Best model found
******************************************
Results 

CLL : -0.750605 

AUC ROC : 0.629998 

AUC PR : 0.616381 

Precision : 0.846154 

Recall : 0.04 

F1 : 0.076389 

Total Learning Time : 756.856 

Total Inference Time : 16.46627378463745 

Total revision time: 778.3262886180878
Best scored revision CLL: -0.634904


Results 

CLL : -0.750605 

AUC ROC : 0.629998 

AUC PR : 0.616381 

Precision : 0.846154 

Recall : 0.04 

F1 : 0.076389 

Total Learning Time : 799.2990888729096 

Total Inference Time : 16.46627378463745 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.998
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '601', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1061.636
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533305;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.18214435728312056;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06261940488996087;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02592113819145859;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651222;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496454;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055596679672389133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.030199742210974788;  // std dev = 8.051, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0021842743232441076;  // std dev = 5.547, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406553;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032448;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011279437821364867;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07042836074079038;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -5.054053779759201E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12807200501224172;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029164;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708748;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844132;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03901273910777288;  // std dev = 6.068, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -4.095873076391525E-4;  // std dev = 5.539, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -4.412420899809397E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11443831153001925;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611806;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431215;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.095264613269977;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766654;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06352291986816253;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.023195387060027776;  // std dev = 8.039, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.003679877570071679;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816682;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090483;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158734;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441782;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05584207784578235;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05698356959752691;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.015606898350945845;  // std dev = 9.616, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41697328558963404;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.023141484560311197;  // std dev = 4.595, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056430831411418324;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08083962498766636;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05034285139703794;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019861473110694628;  // std dev = 8.034, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006976332092526191;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04497716189090234;  // std dev = 36.674, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04170703987256327;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02433036996667222;  // std dev = 4.636, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09513564674768647;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.030557338265993095;  // std dev = 6.054, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.003920965730545385;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004142902586660928;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1038022142835482;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035034629888912656;  // std dev = 36.674, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0327040930192223;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.017395381351088254;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07285731388209164;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04750204606613634;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015493238066207239;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005300886720408788;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.559', 'seconds']
Refined model CLL: -0.636079


******************************************
Best model found
******************************************
Results 

CLL : -0.751701 

AUC ROC : 0.635549 

AUC PR : 0.628723 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1061.636 

Total Inference Time : 28.63884687423706 

Total revision time: 1096.5967573490143
Best scored revision CLL: -0.636079


Results 

CLL : -0.751701 

AUC ROC : 0.635549 

AUC PR : 0.628723 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1117.569557603836 

Total Inference Time : 28.63884687423706 

Run: 3
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.278
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '593', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 194.066
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.25744840970546196;  // std dev = 16.551, 1,142.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=456 */
%   | | | else return 0.2679850006732816;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.5248156017661789;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04932540568774767;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return -0.05851773156715445;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05814893509951238;  // std dev = 2.683, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2231348198741603;  // std dev = 16.551, 1,142.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=456 */
%   | | | else return 0.2321370069689051;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.448295606241962;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04321433841444774;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return -0.051542582638540835;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.051972402689467755;  // std dev = 2.680, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.14120019116709434;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18838413055904574;  // std dev = 16.551, 1,142.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=456 */
%   | | | else return 0.19565051421384852;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2475769698044321;  // std dev = 2.174, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.3552214247719957;  // std dev = 2.183, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03768304809742577;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return -0.04564074297764323;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04529857957573549;  // std dev = 2.680, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.12494422737670503;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15532889337903574;  // std dev = 16.551, 1,142.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=456 */
%   | | | else return 0.16088743492845695;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19349490096608102;  // std dev = 2.346, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.2978026511568184;  // std dev = 1.984, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03272258549920551;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return -0.04059971203405119;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.039283066925409345;  // std dev = 2.680, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.11192226218849642;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1255543890748764;  // std dev = 16.551, 1,142.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=456 */
%   | | | else return 0.12960990216284546;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1368652188850442;  // std dev = 2.177, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.2282184548679196;  // std dev = 2.161, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.028310231428221547;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return -0.03625853163527233;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03391453023591146;  // std dev = 2.680, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.10127954776143833;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09989794726608271;  // std dev = 16.551, 1,142.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=456 */
%   | | | else return 0.1027398702100259;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10528538139659091;  // std dev = 2.348, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.1834435097172617;  // std dev = 1.969, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1802664795084425;  // std dev = 1.386, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.1312346707170393;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011691019783935462;  // std dev = 3.333, 95.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=13 */
%   | | | else return 0.03127644086645795;  // std dev = 2.674, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21769501618019335;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.22272662775045485;  // std dev = 1.246, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.11256681105198832;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.08201081298318547;  // std dev = 16.851, 1,181.000 (wgt'ed) examples reached here.  /* #neg=699 #pos=482 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.02377697090347329;  // std dev = 3.226, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return -0.03246627116504666;  // std dev = 1.661, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.024680145520702017;  // std dev = 2.680, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.091193930093827;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06083631666896125;  // std dev = 16.523, 1,142.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=456 */
%   | | | else return 0.06209408693741357;  // std dev = 3.841, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05463296195831642;  // std dev = 2.218, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.12070158171988352;  // std dev = 2.149, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.16844916228695564;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06011636027163357;  // std dev = 1.565, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.08581594509893532;  // std dev = 1.439, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.003196589510756298;  // std dev = 3.962, 122.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.047084806710299146;  // std dev = 16.540, 1,144.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=457 */
%   | | | else return 0.047977833342598065;  // std dev = 3.763, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04246216122624729;  // std dev = 2.385, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.09778340852430986;  // std dev = 1.961, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.019758482393413615;  // std dev = 3.214, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | | else return -0.03165168964527684;  // std dev = 1.662, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0201821450795866;  // std dev = 2.681, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return -0.0874049370464101;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.44644984917302794;  // std dev = 1.186, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.3083263871349495;  // std dev = 0.320, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.07212893820731324;  // std dev = 1.880, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return -0.22610022559604498;  // std dev = 0.215, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.03993636477663983;  // std dev = 16.806, 1,173.000 (wgt'ed) examples reached here.  /* #neg=699 #pos=474 */
%   | | | else return 0.01992292536625619;  // std dev = 2.971, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.07260874979261656;  // std dev = 1.433, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.004248117710486636;  // std dev = 3.958, 122.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.527', 'seconds']
Refined model CLL: -0.644492


******************************************
Best model found
******************************************
Results 

CLL : -0.622249 

AUC ROC : 0.592097 

AUC PR : 0.421435 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 194.066 

Total Inference Time : 5.483574390411377 

Total revision time: 201.79880823516845
Best scored revision CLL: -0.644492


Results 

CLL : -0.622249 

AUC ROC : 0.592097 

AUC PR : 0.421435 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 222.77227892303466 

Total Inference Time : 5.483574390411377 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.908
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '575', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 377.13
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25485032398839613;  // std dev = 23.482, 2,304.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=914 */
%   | | | else return 0.20774243103447138;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.33183314562582816;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.5551186320692085;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2265699877310913;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03749676118646795;  // std dev = 5.204, 184.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=33 */
%   | | | else return 0.10520775862892381;  // std dev = 3.976, 85.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2209134788888481;  // std dev = 23.482, 2,304.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=914 */
%   | | | else return 0.18052698610530193;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.28646280754165054;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.4733822409131974;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.21196703236445086;  // std dev = 2.392, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.06603362025329976;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02719628781379428;  // std dev = 5.040, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return 0.09323369350734267;  // std dev = 3.874, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18658702483182546;  // std dev = 23.482, 2,304.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=914 */
%   | | | else return 0.1536322544318962;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23893826810287477;  // std dev = 3.078, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.3808147927291863;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1832089114061127;  // std dev = 2.391, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.057837423655547095;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0237176803323097;  // std dev = 5.040, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return 0.08071652488111532;  // std dev = 3.873, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1539491516810461;  // std dev = 23.482, 2,304.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=914 */
%   | | | else return 0.1282920678467099;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18712523707489365;  // std dev = 3.113, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.31192113808468014;  // std dev = 2.580, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.18636789545094368;  // std dev = 2.086, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.02131485912452131;  // std dev = 5.174, 185.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06565142074912415;  // std dev = 0.908, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.06923201891040562;  // std dev = 3.873, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12454315295358127;  // std dev = 23.482, 2,304.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=914 */
%   | | | else return 0.10539663933421818;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1394983199738708;  // std dev = 3.065, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.23828018482955152;  // std dev = 2.629, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1530285781338034;  // std dev = 2.377, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.05004097044271983;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015162938462255188;  // std dev = 5.028, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return 0.05889373125159931;  // std dev = 3.873, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09918585862936004;  // std dev = 23.482, 2,304.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=914 */
%   | | | else return 0.08542414571406272;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09728062173480441;  // std dev = 3.100, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.2003507268641257;  // std dev = 2.570, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12682564527515916;  // std dev = 2.376, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.044362373934826595;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013108418190031513;  // std dev = 5.028, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return 0.049740529352005174;  // std dev = 3.872, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07804882839079462;  // std dev = 23.482, 2,304.000 (wgt'ed) examples reached here.  /* #neg=1,390 #pos=914 */
%   | | | else return 0.06848817859202867;  // std dev = 5.288, 123.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07380385213265271;  // std dev = 3.099, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.15182376508243653;  // std dev = 2.570, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10342457949185338;  // std dev = 2.374, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.039501987040121075;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011315334930115634;  // std dev = 5.028, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return 0.04175132438152814;  // std dev = 3.872, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06009925922569158;  // std dev = 23.498, 2,313.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=914 */
%   | | | else return 0.06955218475827224;  // std dev = 5.220, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04381793865299561;  // std dev = 3.049, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return 0.1232954003017657;  // std dev = 2.618, 33.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08323970647064695;  // std dev = 2.373, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.0353088287311255;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009754846830286651;  // std dev = 5.027, 176.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=31 */
%   | | | else return 0.034861949600653475;  // std dev = 3.872, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.28396636330694897;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return -0.07438517044318738;  // std dev = 3.054, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04663738183764299;  // std dev = 23.696, 2,353.000 (wgt'ed) examples reached here.  /* #neg=1,426 #pos=927 */
%   | | | else return 0.052199461613455435;  // std dev = 3.927, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.035835065549408726;  // std dev = 4.918, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | | else return -0.02494127214661488;  // std dev = 3.231, 82.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03811272054857476;  // std dev = 3.458, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | else return -0.17133639286561478;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03568685746766127;  // std dev = 23.475, 2,313.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=914 */
%   | | | else return 0.04476239468893473;  // std dev = 5.223, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.28338091325422804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.039585437950592335;  // std dev = 3.927, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13937490731812718;  // std dev = 2.060, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.1824330927580666;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0037559813219698135;  // std dev = 5.543, 195.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=40 */
%   | | | else return 0.027406548022474168;  // std dev = 3.362, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.421', 'seconds']
Refined model CLL: -0.651962


******************************************
Best model found
******************************************
Results 

CLL : -0.625504 

AUC ROC : 0.578461 

AUC PR : 0.408282 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 377.13 

Total Inference Time : 10.259958028793335 

Total revision time: 390.3745981578827
Best scored revision CLL: -0.651962


Results 

CLL : -0.625504 

AUC ROC : 0.578461 

AUC PR : 0.408282 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 411.3480688457489 

Total Inference Time : 10.259958028793335 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.792
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '559', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 582.229
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.255484585258789;  // std dev = 28.755, 3,453.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,372 */
%   | | | else return 0.19905802600860453;  // std dev = 6.289, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3766674536180297;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.5790791676576509;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.06634006137937624;  // std dev = 6.950, 293.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=61 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06287334454833057;  // std dev = 4.547, 127.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=26 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22145582535274058;  // std dev = 28.755, 3,453.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,372 */
%   | | | else return 0.17305908872800124;  // std dev = 6.289, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3243788415113003;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.4931557907740972;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.23670759519469334;  // std dev = 2.710, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.024703595028665575;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.046195879956064445;  // std dev = 6.701, 284.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=56 */
%   | | | else return 0.06219574052315123;  // std dev = 4.694, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.187025942243104;  // std dev = 28.755, 3,453.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,372 */
%   | | | else return 0.14748032133057357;  // std dev = 6.289, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2685825285923573;  // std dev = 3.672, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.3952448674171944;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20390192991587608;  // std dev = 2.709, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.021587343448776088;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.040178533825213726;  // std dev = 6.701, 284.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=56 */
%   | | | else return 0.054096418948736257;  // std dev = 4.694, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1542863179166183;  // std dev = 28.755, 3,453.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,372 */
%   | | | else return 0.12342738482816645;  // std dev = 6.289, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20472109023954882;  // std dev = 3.626, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.3215862971352678;  // std dev = 2.975, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.32766238152029165;  // std dev = 1.388, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06127527641710575;  // std dev = 2.660, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03478759051487738;  // std dev = 6.701, 284.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=56 */
%   | | | else return 0.04676597131154;  // std dev = 4.694, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12479043719380126;  // std dev = 28.755, 3,453.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,372 */
%   | | | else return 0.10169174563480522;  // std dev = 6.289, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15672605424428035;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.2474128557013251;  // std dev = 2.972, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1559744670885487;  // std dev = 2.695, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.03836733060699647;  // std dev = 1.285, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03000031140827755;  // std dev = 6.701, 284.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=56 */
%   | | | else return 0.040211264124455616;  // std dev = 4.694, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0993601201816267;  // std dev = 28.755, 3,453.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,372 */
%   | | | else return 0.08269726297679826;  // std dev = 6.289, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10671220316690669;  // std dev = 3.649, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.1992949396072061;  // std dev = 2.921, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.26785895062816123;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.032501128369380045;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.025781826883660628;  // std dev = 6.701, 284.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=56 */
%   | | | else return 0.0344120849291589;  // std dev = 4.693, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0768828749536368;  // std dev = 28.741, 3,461.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,368 */
%   | | | else return 0.09245279742433994;  // std dev = 6.351, 168.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3395757497537938;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10163487295560758;  // std dev = 4.583, 93.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11571216011253106;  // std dev = 2.681, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.04965650467337506;  // std dev = 1.249, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03708512471959887;  // std dev = 2.922, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.02265163576756905;  // std dev = 7.641, 366.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=73 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05997320260759806;  // std dev = 28.740, 3,461.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,368 */
%   | | | else return 0.07315313537634688;  // std dev = 6.353, 168.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.050884198438490603;  // std dev = 3.597, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.12950799143148956;  // std dev = 2.965, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2131149772371962;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.01220213483189669;  // std dev = 2.609, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.031479104207825855;  // std dev = 2.922, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.019331172120206394;  // std dev = 7.641, 366.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=73 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04762187052624547;  // std dev = 28.757, 3,453.000 (wgt'ed) examples reached here.  /* #neg=2,081 #pos=1,372 */
%   | | | else return 0.03448876892230302;  // std dev = 6.277, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.028044306283619973;  // std dev = 3.627, 54.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=28 */
%   | | | else return 0.10824755409167156;  // std dev = 2.917, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0803556166389586;  // std dev = 2.747, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.11288279868267252;  // std dev = 0.965, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013815497928124598;  // std dev = 6.667, 276.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=57 */
%   | | | else return 0.02786442280332891;  // std dev = 4.737, 134.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035638598622665406;  // std dev = 28.739, 3,461.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,368 */
%   | | | else return 0.04884968415754026;  // std dev = 6.360, 168.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02105091440896421;  // std dev = 3.590, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.08602980863355848;  // std dev = 2.961, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06726915499172681;  // std dev = 2.746, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.01100080781865934;  // std dev = 6.880, 293.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=61 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12395176255846006;  // std dev = 0.779, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.021572553566197996;  // std dev = 4.462, 124.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.640', 'seconds']
Refined model CLL: -0.65309


******************************************
Best model found
******************************************
Results 

CLL : -0.625667 

AUC ROC : 0.577153 

AUC PR : 0.407515 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 582.229 

Total Inference Time : 15.90857458114624 

Total revision time: 602.1244741401673
Best scored revision CLL: -0.65309


Results 

CLL : -0.625667 

AUC ROC : 0.577153 

AUC PR : 0.407515 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 623.0979448280335 

Total Inference Time : 15.90857458114624 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.712
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '594', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 710.474
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2565353284706367;  // std dev = 33.153, 4,586.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,827 */
%   | | | else return 0.19564893509951242;  // std dev = 7.325, 240.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.42605016966741416;  // std dev = 4.458, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | | | else return 0.5696873966379727;  // std dev = 3.267, 52.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15814893509951236;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05402522375930684;  // std dev = 7.818, 388.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=76 */
%   | | | else return 0.07163208116692686;  // std dev = 5.467, 178.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=38 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22235421554891976;  // std dev = 33.153, 4,586.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,827 */
%   | | | else return 0.17012562826155914;  // std dev = 7.325, 240.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35538986496538494;  // std dev = 4.188, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.48020922384911596;  // std dev = 3.598, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2966434777678514;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.03807658751306231;  // std dev = 2.815, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07327534779116475;  // std dev = 3.301, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.049507563087853125;  // std dev = 8.950, 503.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=100 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.187752791502906;  // std dev = 33.153, 4,586.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,827 */
%   | | | else return 0.14505883409290168;  // std dev = 7.325, 240.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2886874020470608;  // std dev = 4.446, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | | | else return 0.40913275036014274;  // std dev = 3.247, 52.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06836449083147592;  // std dev = 6.971, 279.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=63 */
%   | | | else return 0.013482042341748943;  // std dev = 4.635, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.055888932404200654;  // std dev = 5.542, 184.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=39 */
%   | | | else return -0.15483627200023026;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15484440513891337;  // std dev = 33.153, 4,586.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,827 */
%   | | | else return 0.12150609460790983;  // std dev = 7.325, 240.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2140265079803746;  // std dev = 4.173, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.3189727887349472;  // std dev = 3.572, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.059083823190548404;  // std dev = 6.970, 279.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=63 */
%   | | | else return 0.011694860891552143;  // std dev = 4.635, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04838839058258704;  // std dev = 5.542, 184.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=39 */
%   | | | else return -0.13564435401919098;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12519950828078388;  // std dev = 33.153, 4,586.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,827 */
%   | | | else return 0.10022188123996191;  // std dev = 7.325, 240.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1634440249810498;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | | | else return 0.25657626961360963;  // std dev = 3.227, 52.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09548021970807088;  // std dev = 3.094, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return -0.05992561521133291;  // std dev = 1.334, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05440112315478346;  // std dev = 3.111, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return 0.030413480006335675;  // std dev = 8.933, 503.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=100 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09964820841815025;  // std dev = 33.153, 4,586.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,827 */
%   | | | else return 0.08160950835433328;  // std dev = 7.325, 240.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11244281869919802;  // std dev = 4.166, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.19580161167153953;  // std dev = 3.556, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10486053012604828;  // std dev = 2.878, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return -0.07252491653445747;  // std dev = 1.297, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.049067645290048534;  // std dev = 3.295, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.02611347378401202;  // std dev = 8.933, 503.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=100 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0783632708101479;  // std dev = 33.153, 4,586.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,827 */
%   | | | else return 0.06576330840526903;  // std dev = 7.325, 240.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08427886131727709;  // std dev = 4.429, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | | | else return 0.15866300624835375;  // std dev = 3.215, 52.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07542503288125126;  // std dev = 3.087, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return -0.05894027213865175;  // std dev = 1.335, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018217307563351232;  // std dev = 7.681, 377.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=74 */
%   | | | else return 0.03574771784175072;  // std dev = 5.508, 182.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=39 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0599621376086159;  // std dev = 33.107, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,819 */
%   | | | else return 0.07401138812374788;  // std dev = 7.529, 237.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3412569058879347;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0734267860935258;  // std dev = 5.373, 127.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=78 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06381715377393456;  // std dev = 3.087, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return -0.050808349759722815;  // std dev = 1.335, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015538434224056168;  // std dev = 7.681, 377.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=74 */
%   | | | else return 0.030452098159048275;  // std dev = 5.508, 182.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=39 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25386527740355125;  // std dev = 3.884, 64.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=39 */
%   | | | else return -0.07282472679352167;  // std dev = 4.094, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04661113507646998;  // std dev = 33.436, 4,682.000 (wgt'ed) examples reached here.  /* #neg=2,833 #pos=1,849 */
%   | | | else return 0.05674846433803647;  // std dev = 5.382, 128.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=79 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.22156057914653518;  // std dev = 1.463, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.004284515473900808;  // std dev = 2.777, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012405134928568673;  // std dev = 7.778, 381.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=76 */
%   | | | else return 0.027455354824401586;  // std dev = 5.478, 185.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=38 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035551800013940156;  // std dev = 33.081, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,819 */
%   | | | else return 0.04861988080473555;  // std dev = 7.533, 237.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01918120040106354;  // std dev = 4.148, 72.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | else return 0.08956495429144785;  // std dev = 3.544, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05080435389020847;  // std dev = 3.076, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return -0.049267378274543944;  // std dev = 1.339, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010343509402440202;  // std dev = 7.679, 377.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=74 */
%   | | | else return 0.02321436285507524;  // std dev = 5.500, 182.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.429', 'seconds']
Refined model CLL: -0.651705


******************************************
Best model found
******************************************
Results 

CLL : -0.62547 

AUC ROC : 0.578362 

AUC PR : 0.40772 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 710.474 

Total Inference Time : 19.368581295013428 

Total revision time: 734.789621006012
Best scored revision CLL: -0.651705


Results 

CLL : -0.62547 

AUC ROC : 0.578362 

AUC PR : 0.40772 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 755.7630916938782 

Total Inference Time : 19.368581295013428 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.923
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '615', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1066.066
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03813944049451678;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267566;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03711211154702525;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277176;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436806;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903766;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973599;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03171176966373872;  // std dev = 8.409, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07208194380010913;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02638082006689719;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1130107964508382;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1611617916810754;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.25581663152892165;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11427650035411346;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02278863954706989;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02285095309600837;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098663;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4109643820675696;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1408634893050086;  // std dev = 6.059, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11030317670505337;  // std dev = 3.357, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08662428248408634;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03313636887186728;  // std dev = 3.512, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.019305431954633075;  // std dev = 9.636, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245296;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3544559898943897;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10377734671010973;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09232217255366006;  // std dev = 3.352, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016233670991288265;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.016509667575438598;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08521683110397515;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171405;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05571808877883232;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.041476758485668334;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14287455798802987;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07722519634103804;  // std dev = 3.351, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013928512707861157;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1034577567400258;  // std dev = 0.954, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.016700138412000246;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126438;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715656;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028983518980276877;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11133447213879598;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09092371245478297;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0784563103355397;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010393411050529378;  // std dev = 8.469, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.015145513772363724;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0364945985510819;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.033566779947413854;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012728960228838562;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09638171863298217;  // std dev = 3.851, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02702950040519352;  // std dev = 7.631, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.010639863401060119;  // std dev = 4.979, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010950351335844932;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.0782489230141781;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.556', 'seconds']
Refined model CLL: -0.650446


******************************************
Best model found
******************************************
Results 

CLL : -0.624397 

AUC ROC : 0.582485 

AUC PR : 0.415122 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1066.066 

Total Inference Time : 25.85939931869507 

Total revision time: 1098.1329123153687
Best scored revision CLL: -0.650446


Results 

CLL : -0.624397 

AUC ROC : 0.582485 

AUC PR : 0.415122 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1119.106383003235 

Total Inference Time : 25.85939931869507 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.482
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '600', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 138.228
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21307851256429622;  // std dev = 15.615, 1,065.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=378 */
%   | | | else return 0.1624967611864685;  // std dev = 3.822, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.42957750652808374;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.06648226843284567;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.016769624754684433;  // std dev = 4.399, 145.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=23 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1851121144423048;  // std dev = 15.615, 1,065.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=378 */
%   | | | else return 0.14154274242296505;  // std dev = 3.822, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.368876976597706;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16501576230595214;  // std dev = 2.022, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.15013817616499373;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 5.16989032638427E-4;  // std dev = 3.328, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | | else return 0.04042900689809018;  // std dev = 3.129, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15740042921211714;  // std dev = 15.615, 1,065.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=378 */
%   | | | else return 0.12131905159335991;  // std dev = 3.822, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3027909085849407;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05191963836102554;  // std dev = 3.675, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return -0.0023062079871646046;  // std dev = 2.224, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1319695125181858;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.015565505744081864;  // std dev = 2.594, 50.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1312600997065677;  // std dev = 15.615, 1,065.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=378 */
%   | | | else return 0.10247683991352245;  // std dev = 3.822, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1991118436284451;  // std dev = 1.900, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.31788506092645397;  // std dev = 1.796, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14129966884631417;  // std dev = 2.023, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.11757208994499461;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002209724475791564;  // std dev = 3.325, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | | else return 0.029373737534360473;  // std dev = 3.127, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5027156871334721;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.16144317440918707;  // std dev = 2.503, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09972211740561283;  // std dev = 15.708, 1,092.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=377 */
%   | | | else return 0.17965766440505573;  // std dev = 2.609, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.12629109058034654;  // std dev = 0.451, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.03589986840475431;  // std dev = 1.946, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.0069288286831078625;  // std dev = 4.392, 145.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34248633524126937;  // std dev = 1.737, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.03757067598499909;  // std dev = 2.086, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.2021467588884315;  // std dev = 3.014, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.08135846105298329;  // std dev = 15.703, 1,089.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=381 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.11344880654190063;  // std dev = 2.017, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.10935975369551755;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.00437005353374553;  // std dev = 3.322, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | | else return 0.02427154009975232;  // std dev = 3.128, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06936937754874366;  // std dev = 15.523, 1,061.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=376 */
%   | | | else return 0.0529602140977381;  // std dev = 3.986, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08954075196229128;  // std dev = 1.901, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.17900618219317627;  // std dev = 1.795, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.10545732630400062;  // std dev = 0.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -6.740097965201682E-4;  // std dev = 3.633, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return 0.01879055721341632;  // std dev = 3.132, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3317745825529023;  // std dev = 1.727, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.07507784541618981;  // std dev = 2.512, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05018750114157834;  // std dev = 15.698, 1,092.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=377 */
%   | | | else return 0.08341413411346231;  // std dev = 2.606, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.08845838237547014;  // std dev = 0.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -5.858754476438454E-4;  // std dev = 3.633, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | | else return 0.016212787145393343;  // std dev = 3.132, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.5143807933722905;  // std dev = 0.197, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.3874986481775633;  // std dev = 0.395, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.076686598606174;  // std dev = 2.903, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return -0.05281037944688216;  // std dev = 1.185, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.03964804095115134;  // std dev = 15.697, 1,092.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=377 */
%   | | | else return 0.0626242498392632;  // std dev = 2.606, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.00646256211730698;  // std dev = 3.318, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | | else return 0.01570934942767433;  // std dev = 3.130, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2189303237404003;  // std dev = 1.713, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.005492856595203589;  // std dev = 2.073, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03259977989741387;  // std dev = 15.732, 1,101.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=386 */
%   | | | else return 0.03399579432686286;  // std dev = 2.541, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07746268749705883;  // std dev = 1.965, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.09078692031240533;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005631676180044832;  // std dev = 3.318, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
%   | | | else return 0.013493831741140404;  // std dev = 3.130, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.834', 'seconds']
Refined model CLL: -0.616351


******************************************
Best model found
******************************************
Results 

CLL : -0.82025 

AUC ROC : 0.518971 

AUC PR : 0.62973 

Precision : 0.816667 

Recall : 0.063554 

F1 : 0.11793 

Total Learning Time : 138.228 

Total Inference Time : 3.642971992492676 

Total revision time: 144.36889024734498
Best scored revision CLL: -0.616351


Results 

CLL : -0.82025 

AUC ROC : 0.518971 

AUC PR : 0.62973 

Precision : 0.816667 

Recall : 0.063554 

F1 : 0.11793 

Total Learning Time : 165.3423609352112 

Total Inference Time : 3.642971992492676 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.901
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '634', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 257.89
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21089670400509677;  // std dev = 22.047, 2,129.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=751 */
%   | | | else return 0.19386322081379828;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.5438632208137972;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05560116439887447;  // std dev = 4.988, 157.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=31 */
%   | | | else return -0.015090501520205985;  // std dev = 2.803, 71.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03028008264049576;  // std dev = 4.170, 122.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=21 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1832376745971823;  // std dev = 22.047, 2,129.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=751 */
%   | | | else return 0.16858862366726537;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.798614210197571;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37272587110849664;  // std dev = 3.862, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04891961414976092;  // std dev = 4.987, 157.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=31 */
%   | | | else return -0.013755343793871118;  // std dev = 2.805, 71.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.026553984136178103;  // std dev = 4.170, 122.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1558607934403992;  // std dev = 22.047, 2,129.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=751 */
%   | | | else return 0.14378896781680958;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2385008011335918;  // std dev = 2.709, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.39052562466529994;  // std dev = 2.737, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13855111954524588;  // std dev = 2.522, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.009041413928244207;  // std dev = 5.198, 205.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022081102106464603;  // std dev = 4.053, 114.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13004846582167645;  // std dev = 22.047, 2,129.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=751 */
%   | | | else return 0.1204970767368549;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5721310007250421;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2356186244234674;  // std dev = 3.833, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11984775265768048;  // std dev = 2.522, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.052334115269165225;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005692430476801464;  // std dev = 5.021, 191.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=30 */
%   | | | else return 0.022247018147949032;  // std dev = 4.166, 123.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4061545350269516;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.1431623481102134;  // std dev = 3.313, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.10276538561870348;  // std dev = 22.345, 2,200.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=766 */
%   | | | else return 0.18098621405180143;  // std dev = 3.830, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0727069758699163;  // std dev = 1.974, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.0038538667802084253;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04710464693402443;  // std dev = 2.612, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.008834542640639374;  // std dev = 6.198, 285.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=46 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3234145927843562;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.11528326074058115;  // std dev = 3.311, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08324153646713606;  // std dev = 22.345, 2,200.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=766 */
%   | | | else return 0.13718558003670284;  // std dev = 3.829, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06348117678188224;  // std dev = 1.974, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.0033732714488510784;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00756618256706232;  // std dev = 5.376, 211.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=35 */
%   | | | else return 0.01930101500076926;  // std dev = 4.045, 114.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.35554566978300745;  // std dev = 1.584, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.09898578178104353;  // std dev = 3.660, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06671724584611916;  // std dev = 22.345, 2,200.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=766 */
%   | | | else return 0.1033552001274765;  // std dev = 3.829, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0550376366425605;  // std dev = 1.974, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.0029536771095443337;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03861347466182064;  // std dev = 2.611, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.006132737188043915;  // std dev = 6.198, 285.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=46 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2189800938329572;  // std dev = 2.266, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.058714466264331244;  // std dev = 3.276, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05303017012756217;  // std dev = 22.345, 2,200.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=766 */
%   | | | else return 0.07771343709520176;  // std dev = 3.828, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08708185932723202;  // std dev = 2.517, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.05924660080266827;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0013534048677522458;  // std dev = 5.018, 191.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=30 */
%   | | | else return 0.01666965264685076;  // std dev = 4.166, 123.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.16470591505446508;  // std dev = 2.266, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.04564001028110947;  // std dev = 3.275, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04187978836863634;  // std dev = 22.345, 2,200.000 (wgt'ed) examples reached here.  /* #neg=1,434 #pos=766 */
%   | | | else return 0.05843621953246431;  // std dev = 3.828, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.20869137825048206;  // std dev = 1.106, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.019246378300692105;  // std dev = 2.441, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0011731597788063983;  // std dev = 5.018, 191.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=30 */
%   | | | else return 0.014485938979575865;  // std dev = 4.166, 123.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03380916961643309;  // std dev = 21.995, 2,129.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=751 */
%   | | | else return 0.028754777520342525;  // std dev = 5.595, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3236291566672204;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04398097313152541;  // std dev = 3.829, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.04550810206133913;  // std dev = 1.954, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return -0.005848063436073152;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 1.3104021765327256E-5;  // std dev = 5.370, 211.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=35 */
%   | | | else return 0.015758100560199734;  // std dev = 4.040, 114.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.806', 'seconds']
Refined model CLL: -0.622224


******************************************
Best model found
******************************************
Results 

CLL : -0.824084 

AUC ROC : 0.506625 

AUC PR : 0.61065 

Precision : 0.765625 

Recall : 0.063554 

F1 : 0.117365 

Total Learning Time : 257.89 

Total Inference Time : 7.046236276626587 

Total revision time: 267.8908373031616
Best scored revision CLL: -0.622224


Results 

CLL : -0.824084 

AUC ROC : 0.506625 

AUC PR : 0.61065 

Precision : 0.765625 

Recall : 0.063554 

F1 : 0.117365 

Total Learning Time : 288.86430799102783 

Total Inference Time : 7.046236276626587 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.559
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '626', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 570.308
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.20788585865258674;  // std dev = 27.107, 3,231.000 (wgt'ed) examples reached here.  /* #neg=2,101 #pos=1,130 */
%   | | | else return 0.23048936063142855;  // std dev = 6.628, 188.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3819584589090352;  // std dev = 3.237, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | | else return 0.49276431971489587;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.07001334187917312;  // std dev = 6.277, 236.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=50 */
%   | | | else return 0.011302088252665526;  // std dev = 3.794, 111.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009664086614663427;  // std dev = 4.606, 165.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1806502636213456;  // std dev = 27.107, 3,231.000 (wgt'ed) examples reached here.  /* #neg=2,101 #pos=1,130 */
%   | | | else return 0.2000542603804957;  // std dev = 6.628, 188.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7990375446596657;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3516329180547544;  // std dev = 4.649, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1439124930261877;  // std dev = 2.908, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.030153045896394625;  // std dev = 1.324, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01103816909519929;  // std dev = 6.235, 296.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=46 */
%   | | | else return 0.04399552671300515;  // std dev = 5.073, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15373365646595805;  // std dev = 27.107, 3,231.000 (wgt'ed) examples reached here.  /* #neg=2,101 #pos=1,130 */
%   | | | else return 0.1696327347489922;  // std dev = 6.628, 188.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5607127215390002;  // std dev = 0.915, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2908560999838303;  // std dev = 4.580, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1247540266818567;  // std dev = 2.908, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.026396445943482744;  // std dev = 1.325, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009669403915717283;  // std dev = 6.235, 296.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=46 */
%   | | | else return 0.03833868602615323;  // std dev = 5.073, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1299821664667892;  // std dev = 27.107, 3,223.000 (wgt'ed) examples reached here.  /* #neg=2,090 #pos=1,133 */
%   | | | else return 0.11384870035226786;  // std dev = 6.628, 196.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5498305655477739;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.22417247832010548;  // std dev = 4.631, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10214771251635507;  // std dev = 2.593, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.027555162929117197;  // std dev = 6.838, 311.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=58 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004964252775241915;  // std dev = 4.611, 165.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=25 */
%   | | | else return -0.1328358240684665;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10675680429723687;  // std dev = 27.107, 3,223.000 (wgt'ed) examples reached here.  /* #neg=2,090 #pos=1,133 */
%   | | | else return 0.09319578487665758;  // std dev = 6.628, 196.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4144725713885331;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17277115102972743;  // std dev = 4.629, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10251644283274079;  // std dev = 2.903, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.027076033128093313;  // std dev = 1.326, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005544450854240242;  // std dev = 6.231, 296.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=46 */
%   | | | else return 0.030109759905890994;  // std dev = 5.069, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08502338567863948;  // std dev = 27.105, 3,231.000 (wgt'ed) examples reached here.  /* #neg=2,101 #pos=1,130 */
%   | | | else return 0.10009474511791644;  // std dev = 6.632, 188.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08904196498698486;  // std dev = 3.093, 42.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=22 */
%   | | | else return 0.18701606533312923;  // std dev = 3.440, 52.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04094049069276565;  // std dev = 6.245, 236.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=50 */
%   | | | else return -0.0031801485044079783;  // std dev = 3.785, 111.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.17358370794831052;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.004700166697568054;  // std dev = 4.603, 166.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=25 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.34263798742469814;  // std dev = 1.809, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.09247327941843766;  // std dev = 4.326, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0672798714536853;  // std dev = 27.492, 3,325.000 (wgt'ed) examples reached here.  /* #neg=2,163 #pos=1,162 */
%   | | | else return 0.09551816434917022;  // std dev = 4.615, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.26197924383698373;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.02324025937350573;  // std dev = 2.859, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04582044088836195;  // std dev = 2.679, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return 0.006139373789102383;  // std dev = 7.569, 418.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=69 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.055403375925462926;  // std dev = 27.098, 3,223.000 (wgt'ed) examples reached here.  /* #neg=2,090 #pos=1,133 */
%   | | | else return 0.041254869143207494;  // std dev = 6.627, 196.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=67 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2361461341844401;  // std dev = 0.936, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07173426514683691;  // std dev = 4.525, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07988012746293108;  // std dev = 2.580, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.013910997461836749;  // std dev = 6.814, 311.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=58 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0017732285798267456;  // std dev = 4.614, 165.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=25 */
%   | | | else return -0.12124820753871053;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.1743092854947403;  // std dev = 1.656, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.042661018471537714;  // std dev = 27.844, 3,408.000 (wgt'ed) examples reached here.  /* #neg=2,214 #pos=1,194 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2421485129973505;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05165062270141414;  // std dev = 4.607, 88.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07422308338760146;  // std dev = 2.882, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.03704087327369447;  // std dev = 1.283, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 3.3369810160402397E-4;  // std dev = 6.226, 296.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=46 */
%   | | | else return 0.018306534230427135;  // std dev = 5.065, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2210513021151396;  // std dev = 2.841, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return -4.0534514348097264E-5;  // std dev = 3.692, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0328626955973753;  // std dev = 27.499, 3,326.000 (wgt'ed) examples reached here.  /* #neg=2,163 #pos=1,163 */
%   | | | else return 0.03952628391392336;  // std dev = 4.519, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.027691198224745278;  // std dev = 6.231, 236.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=50 */
%   | | | else return -0.010780956241761218;  // std dev = 3.760, 111.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.17546926703046953;  // std dev = 0.142, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0032501369980225425;  // std dev = 4.602, 166.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.998', 'seconds']
Refined model CLL: -0.624296


******************************************
Best model found
******************************************
Results 

CLL : -0.826998 

AUC ROC : 0.520935 

AUC PR : 0.621635 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 570.308 

Total Inference Time : 11.269466400146484 

Total revision time: 585.3884495658874
Best scored revision CLL: -0.624296


Results 

CLL : -0.826998 

AUC ROC : 0.520935 

AUC PR : 0.621635 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 606.3619202537536 

Total Inference Time : 11.269466400146484 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.526
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '703', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 653.542
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21058512999509882;  // std dev = 31.363, 4,310.000 (wgt'ed) examples reached here.  /* #neg=2,791 #pos=1,519 */
%   | | | else return 0.24727027401164378;  // std dev = 7.537, 239.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=93 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4201324061738935;  // std dev = 5.458, 121.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=68 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1273797043302816;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07481560176617903;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return -0.0017801429146718855;  // std dev = 8.242, 564.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=79 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1829699583450644;  // std dev = 31.363, 4,310.000 (wgt'ed) examples reached here.  /* #neg=2,791 #pos=1,519 */
%   | | | else return 0.21442897837354358;  // std dev = 7.537, 239.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=93 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6613598492231557;  // std dev = 0.921, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.3623240543048837;  // std dev = 5.399, 120.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10501063743311367;  // std dev = 2.984, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.04047517127231119;  // std dev = 1.334, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0032484801592786256;  // std dev = 6.986, 406.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=57 */
%   | | | else return 0.020527814993051226;  // std dev = 5.568, 229.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=37 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15564080216798368;  // std dev = 31.363, 4,310.000 (wgt'ed) examples reached here.  /* #neg=2,791 #pos=1,519 */
%   | | | else return 0.1813317000312893;  // std dev = 7.537, 239.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=93 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6142240955956798;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.29339223925321145;  // std dev = 5.441, 121.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.15154296487973;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07338982725880143;  // std dev = 3.264, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002849444091320754;  // std dev = 6.987, 406.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=57 */
%   | | | else return 0.018022558246288272;  // std dev = 5.568, 229.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=37 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12987522023430695;  // std dev = 31.363, 4,310.000 (wgt'ed) examples reached here.  /* #neg=2,791 #pos=1,519 */
%   | | | else return 0.1499028777457745;  // std dev = 7.537, 239.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=93 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.46357886210501387;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2320917218169975;  // std dev = 5.439, 121.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02707170190906375;  // std dev = 6.730, 317.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=55 */
%   | | | else return -0.01446624419082287;  // std dev = 4.106, 146.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004522687798767017;  // std dev = 5.309, 225.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=33 */
%   | | | else return -0.1461643830128165;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10659717011093411;  // std dev = 31.363, 4,310.000 (wgt'ed) examples reached here.  /* #neg=2,791 #pos=1,519 */
%   | | | else return 0.12156694049209413;  // std dev = 7.537, 239.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=93 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1330394795109709;  // std dev = 3.729, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.24062920588375536;  // std dev = 3.942, 68.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10939422632312223;  // std dev = 3.188, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.057178488104684226;  // std dev = 1.351, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.049392600377482075;  // std dev = 3.178, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return -0.004035329420895866;  // std dev = 8.233, 564.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=79 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.5835291665788896;  // std dev = 0.368, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.377567782766132;  // std dev = 2.030, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.08537721572938625;  // std dev = 32.154, 4,529.000 (wgt'ed) examples reached here.  /* #neg=2,931 #pos=1,598 */
%   | | | else return 0.14128891587287773;  // std dev = 5.442, 126.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=73 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.07659357362103099;  // std dev = 2.977, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0.0032407017718212973;  // std dev = 7.276, 416.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=63 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0036604377528457665;  // std dev = 5.312, 225.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=33 */
%   | | | else return -0.12807369782256403;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0700955326391118;  // std dev = 31.369, 4,306.000 (wgt'ed) examples reached here.  /* #neg=2,782 #pos=1,524 */
%   | | | else return 0.05920268897466431;  // std dev = 7.456, 243.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05722772631779713;  // std dev = 3.693, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | | else return 0.15177711980252195;  // std dev = 3.964, 70.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09344975022209917;  // std dev = 3.184, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.050320492594086975;  // std dev = 1.352, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03445240870639855;  // std dev = 3.171, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return -0.003781553980246462;  // std dev = 8.232, 564.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=79 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.055636049668406184;  // std dev = 31.368, 4,306.000 (wgt'ed) examples reached here.  /* #neg=2,782 #pos=1,524 */
%   | | | else return 0.04657649936917016;  // std dev = 7.455, 243.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24785955089615433;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.06947455200738052;  // std dev = 5.326, 120.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=68 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06019476747162717;  // std dev = 2.971, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.04967098280347179;  // std dev = 1.324, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.040632130683040356;  // std dev = 3.396, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -0.003316549468132367;  // std dev = 8.232, 564.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=79 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.042958655188573606;  // std dev = 31.348, 4,310.000 (wgt'ed) examples reached here.  /* #neg=2,791 #pos=1,519 */
%   | | | else return 0.05263735783587852;  // std dev = 7.540, 239.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=93 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.020067802459046213;  // std dev = 3.709, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.1002637140246575;  // std dev = 3.933, 68.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.17343641814088395;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.009510405091813556;  // std dev = 3.036, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006940460104691045;  // std dev = 6.960, 406.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=57 */
%   | | | else return 0.015941160182377203;  // std dev = 5.556, 229.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=37 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03456137011450655;  // std dev = 31.369, 4,306.000 (wgt'ed) examples reached here.  /* #neg=2,782 #pos=1,524 */
%   | | | else return 0.025497521278449533;  // std dev = 7.452, 243.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.18448083773726148;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.036815966346978944;  // std dev = 5.317, 120.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=68 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07433903047849265;  // std dev = 3.181, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.052007199205043673;  // std dev = 1.353, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007333916946418108;  // std dev = 6.955, 407.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=57 */
%   | | | else return 0.011345761649935652;  // std dev = 5.416, 217.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.250', 'seconds']
Refined model CLL: -0.621272


******************************************
Best model found
******************************************
Results 

CLL : -0.828263 

AUC ROC : 0.506251 

AUC PR : 0.608847 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 653.542 

Total Inference Time : 17.033049821853638 

Total revision time: 675.3037795238495
Best scored revision CLL: -0.621272


Results 

CLL : -0.828263 

AUC ROC : 0.506251 

AUC PR : 0.608847 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 696.2772502117157 

Total Inference Time : 17.033049821853638 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.607
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '645', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 919.618
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.003742804831313513;  // std dev = 8.058, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870394;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3264250864723836;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42395395073938497;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06692289645994642;  // std dev = 1.358, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004128167708242497;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006548489374625736;  // std dev = 6.045, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.160423054174899;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2682111369967124;  // std dev = 4.483, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3466498455281027;  // std dev = 4.475, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.019452076381404726;  // std dev = 6.288, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.007188447269933216;  // std dev = 6.182, 299.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=45 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0077237155288558896;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12468731840704979;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313659802989419;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051716;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20388110071937005;  // std dev = 4.476, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.28037528886046725;  // std dev = 4.469, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12416004300865241;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06984660360871052;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0011852489533612667;  // std dev = 8.031, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005687030219388509;  // std dev = 6.042, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4183443841317315;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.10683594804882249;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1576224345989124;  // std dev = 4.475, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.21453388346116928;  // std dev = 4.468, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1080227971185359;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06146708983035701;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0011850699760574553;  // std dev = 7.976, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005061350888340218;  // std dev = 6.114, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08716328008135366;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08760503851479634;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3792577843881505;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12647687041278427;  // std dev = 6.156, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09363441602476835;  // std dev = 3.504, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0014368944092031683;  // std dev = 8.034, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006023774843564043;  // std dev = 6.180, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1102262006020851;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06972212787326937;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06997336076946777;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.32527989737708174;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09273586683819521;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09235608285954552;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0547359364539032;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.034378027454446375;  // std dev = 3.629, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.003898717593783976;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.2966359392310786;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.054527734224937736;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24519417343612968;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.06968936362412041;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.20014332547301014;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.018060068400007984;  // std dev = 3.403, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.029432132718531324;  // std dev = 3.628, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.003417812126164198;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0436016495316933;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0424257548110526;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.027881605617327502;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09099712340213095;  // std dev = 4.442, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07274561006902547;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05461204939040075;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.025110828996590482;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0029973226382969294;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.21459616640214846;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.03354514714610402;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.020963341287985535;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.0685845653314061;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.1803224993746808;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.04299673135068133;  // std dev = 3.735, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02136025634562847;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0026294075225859136;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.914', 'seconds']
Refined model CLL: -0.621407


******************************************
Best model found
******************************************
Results 

CLL : -0.82587 

AUC ROC : 0.506802 

AUC PR : 0.609594 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 919.618 

Total Inference Time : 18.624447107315063 

Total revision time: 944.0960334300995
Best scored revision CLL: -0.621407


Results 

CLL : -0.82587 

AUC ROC : 0.506802 

AUC PR : 0.609594 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 965.0695041179657 

Total Inference Time : 18.624447107315063 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.223
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '761', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 125.952
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3381043916696635;  // std dev = 0.500, 898.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=431 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.42064893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.37427796735757685;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.12130682983635446;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else return 0.007085105312278284;  // std dev = 0.356, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2917778885066471;  // std dev = 0.500, 898.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=431 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.361386758207022;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.5772066794120977;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.32236291589852395;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.1058893024861437;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14271572056253118;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.016375188528377813;  // std dev = 2.426, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24312175004934483;  // std dev = 0.500, 898.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=431 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.29707588146212427;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.45560116266536577;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2670180059017884;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.09134084922268788;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.18860239694157696;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.007098963333932423;  // std dev = 2.273, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19642089223154094;  // std dev = 0.500, 898.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=431 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23530262435174626;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.3448948463549135;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.11753178994977712;  // std dev = 3.709, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.3643607191935177;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.16365903232013088;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.006228995884069845;  // std dev = 2.273, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1548869132724579;  // std dev = 0.500, 898.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=431 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.18156600992036426;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.25904528127845544;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.14623301298523683;  // std dev = 3.453, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return -0.008648645956185997;  // std dev = 1.748, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.13934157255977428;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.005469267761321761;  // std dev = 2.273, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12003010724525846;  // std dev = 0.500, 898.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=431 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1379248928305776;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.19674969883689405;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16033652581905541;  // std dev = 2.738, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.03550397254079007;  // std dev = 2.712, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12407134915970759;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.011605939942830212;  // std dev = 2.413, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.6119836425120911;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09019593301488059;  // std dev = 14.944, 895.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=428 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10392852578813351;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.1519855521716933;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.08525423434172195;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15832160499544462;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.09173194588044603;  // std dev = 3.664, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return 0.010144827070096734;  // std dev = 2.413, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06988529701567947;  // std dev = 0.499, 898.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=431 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.07803658977375333;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.1193746755553675;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.08501595856797806;  // std dev = 3.414, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return -0.04421019245434307;  // std dev = 1.725, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return 0.0016351007909075432;  // std dev = 0.353, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.48075947981745953;  // std dev = 0.960, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.3561938443333241;  // std dev = 0.893, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.051024111257923256;  // std dev = 14.759, 873.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=417 */
%   | | | else return 0.08263227792618076;  // std dev = 2.430, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.057836278274114306;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12472376808093193;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.05928403265200928;  // std dev = 3.448, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.0011196420342012264;  // std dev = 2.696, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.32972813862317074;  // std dev = 1.248, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.34259063159501385;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03849851786759313;  // std dev = 14.759, 873.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=417 */
%   | | | else return 0.06451809179034965;  // std dev = 2.430, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.04716891063640096;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10307158910437492;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0534750199157332;  // std dev = 3.648, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return 0.0013361948022802663;  // std dev = 2.411, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.570', 'seconds']
Refined model CLL: -0.66542


******************************************
Best model found
******************************************
Results 

CLL : -0.600987 

AUC ROC : 0.557819 

AUC PR : 0.248495 

Precision : 0.5 

Recall : 0.030981 

F1 : 0.058347 

Total Learning Time : 125.952 

Total Inference Time : 2.029086112976074 

Total revision time: 130.16740899086
Best scored revision CLL: -0.66542


Results 

CLL : -0.600987 

AUC ROC : 0.557819 

AUC PR : 0.248495 

Precision : 0.5 

Recall : 0.030981 

F1 : 0.058347 

Total Learning Time : 151.1408796787262 

Total Inference Time : 2.029086112976074 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.586
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '759', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 246.051
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3439269607548336;  // std dev = 0.500, 1,793.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=871 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.5152917922423687;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return 0.6273797043302807;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.24877393509951115;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.026980103930681208;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004490398514146492;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.8109313214693408;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29555960542683446;  // std dev = 21.138, 1,789.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=867 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4403930088464086;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return 0.5328490890947376;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.21571574316023506;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.023663991585890606;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003942905690172599;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24696863693027354;  // std dev = 0.500, 1,793.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=871 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3509207154992784;  // std dev = 2.938, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return 0.44042951758172083;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1823756459025628;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.020702713113433347;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0034607140222230703;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19924539951845266;  // std dev = 0.500, 1,793.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=871 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.27008044833517564;  // std dev = 2.936, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return 0.33788273317500533;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.15070801243464865;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.018071236418078448;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.003036370752495087;  // std dev = 3.201, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15685681516450772;  // std dev = 0.500, 1,793.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=871 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.19486489536733373;  // std dev = 2.790, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return 0.25579744580513397;  // std dev = 2.632, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12216042201225376;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.0157429200610258;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05184710267048486;  // std dev = 0.951, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.006348407486715712;  // std dev = 3.056, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.47509710670317856;  // std dev = 1.827, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.1330753340406305;  // std dev = 1.945, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11925120400749906;  // std dev = 20.881, 1,746.000 (wgt'ed) examples reached here.  /* #neg=902 #pos=844 */
%   | | | else return 0.16817131838538513;  // std dev = 3.751, 70.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.09750238981281556;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.013690649367091853;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0027394685854059742;  // std dev = 3.200, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.09082431247859632;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0925770425220613;  // std dev = 0.498, 1,793.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=871 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11157615173779527;  // std dev = 2.932, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   | | | else return 0.15958874509121068;  // std dev = 2.481, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.06447364565306474;  // std dev = 4.490, 110.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   | | | else return -0.0404876423848072;  // std dev = 2.400, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0024022530335570083;  // std dev = 3.200, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.08359845944247493;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.33659938832653136;  // std dev = 1.827, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.12495114067766794;  // std dev = 1.939, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06894427139518872;  // std dev = 20.881, 1,746.000 (wgt'ed) examples reached here.  /* #neg=902 #pos=844 */
%   | | | else return 0.09531611925900774;  // std dev = 3.749, 70.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.054010547048016215;  // std dev = 4.486, 110.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   | | | else return -0.03216292569616895;  // std dev = 2.400, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.044245061455073335;  // std dev = 0.950, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.0053240536959210365;  // std dev = 3.055, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.052939628235884016;  // std dev = 0.498, 1,793.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=871 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2477896420504133;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07324376407253029;  // std dev = 3.749, 70.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=50 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.003441180325375527;  // std dev = 4.088, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | | else return 0.15094896134295138;  // std dev = 2.844, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.00343237311533762;  // std dev = 3.283, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | | else return -0.07609612739202917;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.039931944036033964;  // std dev = 0.498, 1,793.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=871 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1867767077466711;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.056671627362544275;  // std dev = 3.749, 70.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=50 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.18946448809487004;  // std dev = 1.948, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.005190602506925776;  // std dev = 4.573, 131.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.16037901551846337;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.015400939975485422;  // std dev = 3.243, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.435', 'seconds']
Refined model CLL: -0.664787


******************************************
Best model found
******************************************
Results 

CLL : -0.600789 

AUC ROC : 0.558303 

AUC PR : 0.251237 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 246.051 

Total Inference Time : 2.923705577850342 

Total revision time: 251.5819417591095
Best scored revision CLL: -0.664787


Results 

CLL : -0.600789 

AUC ROC : 0.558303 

AUC PR : 0.251237 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 272.5554124469757 

Total Inference Time : 2.923705577850342 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.047
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '747', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 396.5
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3450153797905912;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4543027812533574;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.5854216623722397;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08395538671241468;  // std dev = 5.702, 186.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=42 */
%   | | | else return 0.37988806553429494;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03514008554199012;  // std dev = 4.057, 113.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.8107643867197842;  // std dev = 5.96e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.29629851134888396;  // std dev = 25.951, 2,696.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,309 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3895791319644489;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.49838075774401963;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.07836156929134626;  // std dev = 5.625, 181.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=42 */
%   | | | else return 0.37426068888660124;  // std dev = 2.175, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.08880427856100685;  // std dev = 0.966, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.032876178019535636;  // std dev = 4.134, 114.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2476874142180593;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6886274024324281;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35041638706673595;  // std dev = 4.824, 104.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=68 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.18460365195082468;  // std dev = 4.430, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | | | else return 0.02506650091193257;  // std dev = 4.243, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.020373056794423885;  // std dev = 4.059, 113.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=20 */
%   | | | else return -0.12473793894861733;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19977220378782806;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2415657771611254;  // std dev = 3.530, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.3146738260471522;  // std dev = 3.291, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051852176643684376;  // std dev = 5.627, 186.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=42 */
%   | | | else return 0.2840877043299881;  // std dev = 2.388, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0865103985712254;  // std dev = 0.962, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.021382177829625197;  // std dev = 3.942, 107.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15722354441561;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3891531513504309;  // std dev = 0.881, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.19908964203891436;  // std dev = 4.728, 100.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=65 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.045799154440308194;  // std dev = 5.547, 181.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=42 */
%   | | | else return 0.2798193865110606;  // std dev = 2.166, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.014372395657679435;  // std dev = 4.246, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
%   | | | else return -0.11149502685198986;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12160606756139243;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.13115511372711253;  // std dev = 3.518, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.18576363167058738;  // std dev = 3.287, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.035749154071974786;  // std dev = 5.585, 186.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=42 */
%   | | | else return 0.21958494641783824;  // std dev = 2.386, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.13502509702672477;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.00991323305281408;  // std dev = 4.052, 115.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09298355166377044;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2595486562089925;  // std dev = 0.881, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.11016644817395538;  // std dev = 4.723, 100.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=65 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03100895620182187;  // std dev = 5.509, 181.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=42 */
%   | | | else return 0.21697659433231475;  // std dev = 2.164, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08573000830494848;  // std dev = 0.964, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.012570117787505159;  // std dev = 4.131, 114.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07058374483375351;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.2704686128959632;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08564661611612497;  // std dev = 4.804, 104.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=68 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.1919338578944181;  // std dev = 2.181, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.02336173083385658;  // std dev = 5.625, 189.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=46 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.08306797127647021;  // std dev = 0.960, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.008118623059131308;  // std dev = 3.939, 107.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053340746796821215;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.042548708013006954;  // std dev = 3.542, 56.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=36 */
%   | | | else return 0.09868425380756803;  // std dev = 3.244, 51.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02185830661218488;  // std dev = 5.487, 181.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=42 */
%   | | | else return 0.16364352009921282;  // std dev = 2.162, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07803540276606467;  // std dev = 0.964, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.006712212784553729;  // std dev = 4.129, 114.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04020003855192853;  // std dev = 0.500, 2,703.000 (wgt'ed) examples reached here.  /* #neg=1,387 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.027569107115644104;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.076841952896729;  // std dev = 3.280, 55.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01257408095905952;  // std dev = 5.513, 186.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=42 */
%   | | | else return 0.1541885777341019;  // std dev = 2.383, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11820935945124487;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 9.472842148302591E-4;  // std dev = 4.053, 115.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.302', 'seconds']
Refined model CLL: -0.670727


******************************************
Best model found
******************************************
Results 

CLL : -0.606396 

AUC ROC : 0.557645 

AUC PR : 0.24619 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 396.5 

Total Inference Time : 2.8140616416931152 

Total revision time: 402.5091584415436
Best scored revision CLL: -0.670727


Results 

CLL : -0.606396 

AUC ROC : 0.557645 

AUC PR : 0.24619 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 423.4826291294098 

Total Inference Time : 2.8140616416931152 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.594
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '747', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 486.171
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441483806221021;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.505207758628922;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=88 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2288385902719259;  // std dev = 5.202, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
%   | | | else return 0.04524570929305995;  // std dev = 4.855, 155.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04524570929305995;  // std dev = 4.855, 155.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29689681618130764;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6045267906174348;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.43201604470553145;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=88 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08118173827817297;  // std dev = 6.624, 244.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=58 */
%   | | | else return 0.34737882970419587;  // std dev = 2.591, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09668608291847197;  // std dev = 0.973, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.045688681292665394;  // std dev = 4.750, 146.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24714219078677796;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3223063519485543;  // std dev = 4.094, 72.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | | | else return 0.39097416776642213;  // std dev = 3.885, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07179871349878686;  // std dev = 6.613, 246.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=59 */
%   | | | else return 0.3373008145107157;  // std dev = 2.492, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.028898651514319605;  // std dev = 4.857, 155.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=29 */
%   | | | else return -0.1267115184759027;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937038158705794;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5279870201792242;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.271337179515051;  // std dev = 5.634, 140.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=91 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | | then return 0.15629483999449403;  // std dev = 5.134, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
%   | | | else return 0.02615186712155018;  // std dev = 4.849, 155.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=29 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.09877320863218286;  // std dev = 0.967, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.028823400443584776;  // std dev = 4.755, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694002431476167;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.17792540656396721;  // std dev = 4.170, 75.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.24503343552671453;  // std dev = 3.781, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04790657028963321;  // std dev = 6.550, 244.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=58 */
%   | | | else return 0.25109395389333045;  // std dev = 2.584, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14484161827407713;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.02288573525034419;  // std dev = 4.842, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12141064582681435;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.34560943482239476;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15371363291908394;  // std dev = 5.628, 140.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=91 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.04019088271908917;  // std dev = 6.549, 246.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=59 */
%   | | | else return 0.24356192539664426;  // std dev = 2.485, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08930771286110184;  // std dev = 0.966, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.018216078022838852;  // std dev = 4.755, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28560185739727595;  // std dev = 3.731, 65.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | | | else return -0.13612723359194315;  // std dev = 2.453, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0917677438921643;  // std dev = 29.626, 3,514.000 (wgt'ed) examples reached here.  /* #neg=1,810 #pos=1,704 */
%   | | | else return 0.11476445481726584;  // std dev = 5.561, 136.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=88 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.033797014313864455;  // std dev = 6.547, 246.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=59 */
%   | | | else return 0.19235907531735258;  // std dev = 2.483, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.014506587151509731;  // std dev = 4.849, 155.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=29 */
%   | | | else return -0.11115567733514849;  // std dev = 0.053, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07042724007880259;  // std dev = 0.499, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.29988810194751964;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08591606747218204;  // std dev = 5.628, 140.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=91 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.025405233769570774;  // std dev = 6.485, 244.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=58 */
%   | | | else return 0.1832007796753802;  // std dev = 2.581, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.00943232715775278;  // std dev = 4.846, 155.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=29 */
%   | | | else return -0.10066193807836481;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05323187723140841;  // std dev = 0.499, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,753 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.040976059681971405;  // std dev = 4.080, 72.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | | | else return 0.09671681727828974;  // std dev = 3.874, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02122436311085869;  // std dev = 6.484, 244.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=58 */
%   | | | else return 0.1412683263400124;  // std dev = 2.580, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12842788248329845;  // std dev = 0.120, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.009102904954666867;  // std dev = 4.838, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5062073275652446;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.25999018721074013;  // std dev = 1.157, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 1.1812008698539239E-4;  // std dev = 4.602, 86.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | | | else return 0.039850212528925365;  // std dev = 30.097, 3,646.000 (wgt'ed) examples reached here.  /* #neg=1,854 #pos=1,792 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0167399906204233;  // std dev = 6.503, 246.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=59 */
%   | | | else return 0.1380179061914938;  // std dev = 2.481, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.08114036677390943;  // std dev = 0.967, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.007960427022004845;  // std dev = 4.752, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.437', 'seconds']
Refined model CLL: -0.671682


******************************************
Best model found
******************************************
Results 

CLL : -0.604747 

AUC ROC : 0.559772 

AUC PR : 0.247065 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 486.171 

Total Inference Time : 3.110137462615967 

Total revision time: 493.011547460556
Best scored revision CLL: -0.671682


Results 

CLL : -0.604747 

AUC ROC : 0.559772 

AUC PR : 0.247065 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 513.9850181484222 

Total Inference Time : 3.110137462615967 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.249
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '738', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 583.518
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8108963319220932;  // std dev = 5.16e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6025509023827293;  // std dev = 1.252, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.2955151460103693;  // std dev = 33.473, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | | else return 0.42029455348224065;  // std dev = 6.362, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24709438650201168;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2984918964673913;  // std dev = 4.668, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3972033524724963;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19933355799653127;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2326150479205863;  // std dev = 4.665, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30929190276967594;  // std dev = 4.304, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15691518768479298;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.508413761390811;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20003702008716093;  // std dev = 6.336, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.051424342215598655;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508096;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12139620088742327;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11703447170955414;  // std dev = 4.647, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1935685050452689;  // std dev = 4.294, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510855;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094525;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455511007;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09284305468505016;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2588049499939247;  // std dev = 1.189, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.10751148305262394;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304505;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960773;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0704901754232648;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.057862350813625556;  // std dev = 4.639, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.11828190586927922;  // std dev = 4.292, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955363;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011338247714681978;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08580970317158733;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21991371678648355;  // std dev = 4.045, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.16325952419797407;  // std dev = 2.764, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.052730069060147045;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.059253130196393645;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.022019914608413554;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13234583032842065;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.06834364951326545;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01309719430531901;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1656629598882527;  // std dev = 4.045, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.12395570220002188;  // std dev = 2.763, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03974554261427577;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04487258395712898;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13281356280496484;  // std dev = 2.863, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015785635898073518;  // std dev = 7.508, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07108457236734562;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.010056467293581091;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.522', 'seconds']
Refined model CLL: -0.672558


******************************************
Best model found
******************************************
Results 

CLL : -0.602928 

AUC ROC : 0.558127 

AUC PR : 0.246395 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 583.518 

Total Inference Time : 4.193257808685303 

Total revision time: 592.1239648265839
Best scored revision CLL: -0.672558


Results 

CLL : -0.602928 

AUC ROC : 0.558127 

AUC PR : 0.246395 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 613.0974355144501 

Total Inference Time : 4.193257808685303 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.304
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '699', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 344.42
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.25220097970917293;  // std dev = 0.489, 1,076.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=424 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03206197857777325;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.016043671941617616;  // std dev = 2.753, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordauthor(H, D) )
%   | | | then return 0.8245956146221431;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.279141069167598;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else return 0.21439349720154102;  // std dev = 0.488, 1,039.000 (wgt'ed) examples reached here.  /* #neg=634 #pos=405 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.028114099916792146;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return 0.1665388245648817;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.014079441960181707;  // std dev = 2.753, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1846824323365459;  // std dev = 0.488, 1,076.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=424 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.024577742325650197;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return 0.14209424281556463;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012337096821794557;  // std dev = 2.753, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15248551191502727;  // std dev = 0.488, 1,076.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=424 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.060848833662160186;  // std dev = 3.548, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return -0.025156341274936624;  // std dev = 1.980, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.010796005198893064;  // std dev = 2.753, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12347154024787757;  // std dev = 0.488, 1,076.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=424 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.006166534019851014;  // std dev = 3.406, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return 0.16131720968791685;  // std dev = 2.326, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.12660339862823283;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.009914964710794325;  // std dev = 2.572, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09843418487638933;  // std dev = 0.488, 1,076.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=424 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.005342539472514703;  // std dev = 3.406, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return 0.1385815722696884;  // std dev = 2.325, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.11337927488955588;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.00860181880403463;  // std dev = 2.572, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07754183572499115;  // std dev = 0.488, 1,076.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=424 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.004631424729288255;  // std dev = 3.406, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return 0.11709027037593053;  // std dev = 2.325, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.005935141768881609;  // std dev = 2.575, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.08432310678762123;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060540158283731355;  // std dev = 0.488, 1,076.000 (wgt'ed) examples reached here.  /* #neg=652 #pos=424 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.004017043734902784;  // std dev = 3.406, 91.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=14 */
%   | | | else return 0.09749644657460717;  // std dev = 2.324, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0051331889723192385;  // std dev = 2.575, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.07804386417257309;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4737052843814888;  // std dev = 8.487, 480.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=391 */
%   | | | else return -0.30269439276059124;  // std dev = 4.174, 589.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=17 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06749852228646376;  // std dev = 3.761, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return 0.09712864733303356;  // std dev = 1.882, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.2539052450028024;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.550946145580628;  // std dev = 0.946, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.050795087376713344;  // std dev = 1.260, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.004939413024932431;  // std dev = 2.454, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3616113336995467;  // std dev = 8.489, 480.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=391 */
%   | | | else return -0.23990411428463335;  // std dev = 4.136, 589.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=17 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.05365492927692548;  // std dev = 3.764, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return 0.08038072237970019;  // std dev = 1.884, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.19443847079666413;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4180781757388895;  // std dev = 0.945, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01006978712744749;  // std dev = 2.757, 57.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=9 */
%   | | | else return -0.07398650038738723;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.824', 'seconds']
Refined model CLL: -0.455447


******************************************
Best model found
******************************************
Results 

CLL : -0.472455 

AUC ROC : 0.898094 

AUC PR : 0.803376 

Precision : 0.813174 

Recall : 0.908969 

F1 : 0.858407 

Total Learning Time : 344.42 

Total Inference Time : 4.6381165981292725 

Total revision time: 351.3310487499237
Best scored revision CLL: -0.455447


Results 

CLL : -0.472455 

AUC ROC : 0.898094 

AUC PR : 0.803376 

Precision : 0.813174 

Recall : 0.908969 

F1 : 0.858407 

Total Learning Time : 372.3045194377899 

Total Inference Time : 4.6381165981292725 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.779
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '659', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 384.612
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2523531669302341;  // std dev = 0.489, 2,174.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=857 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.016685520465365495;  // std dev = 4.677, 164.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=26 */
%   | | | else return 0.12644161802634163;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.045648935099512344;  // std dev = 2.208, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return -0.03928696233638512;  // std dev = 2.679, 78.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2187778333578691;  // std dev = 0.489, 2,174.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=857 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.01464224002938952;  // std dev = 4.677, 164.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=26 */
%   | | | else return 0.11034235232659871;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.002928859049550628;  // std dev = 3.470, 102.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=14 */
%   | | | else return -0.13972654347502253;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4083005513628782;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.017926219812076205;  // std dev = 2.780, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else return 0.18473746200502159;  // std dev = 0.489, 2,096.000 (wgt'ed) examples reached here.  /* #neg=1,270 #pos=826 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.10652199452673786;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0942290857655182;  // std dev = 0.974, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03655524211470502;  // std dev = 5.315, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return -0.005622019566096215;  // std dev = 3.475, 105.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15255641663930783;  // std dev = 0.488, 2,174.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=857 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.009511096339069875;  // std dev = 4.672, 164.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=26 */
%   | | | else return 0.09025813725887334;  // std dev = 2.835, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04239385862540859;  // std dev = 2.205, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return -0.03218655634200155;  // std dev = 2.676, 78.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12351930337865884;  // std dev = 0.488, 2,174.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=857 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.008301120269202359;  // std dev = 4.672, 164.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=26 */
%   | | | else return 0.0766648961027985;  // std dev = 2.835, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -7.812634587020582E-4;  // std dev = 3.466, 102.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=14 */
%   | | | else return -0.1194784162040254;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27341539949015864;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return -0.034868884450470775;  // std dev = 2.780, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else return 0.09842496259491118;  // std dev = 0.489, 2,096.000 (wgt'ed) examples reached here.  /* #neg=1,270 #pos=826 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | | then return -0.12846914741019003;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.04435599594138303;  // std dev = 1.333, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02445256893215623;  // std dev = 5.305, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return -0.003136738766731517;  // std dev = 3.468, 105.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5917192733898516;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3445466964977146;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.0758805119882775;  // std dev = 0.488, 2,165.000 (wgt'ed) examples reached here.  /* #neg=1,315 #pos=850 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.09797079769103798;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07789149491620033;  // std dev = 0.974, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.02108833606049686;  // std dev = 5.304, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return -0.002767899315543077;  // std dev = 3.469, 105.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06045325518744425;  // std dev = 0.488, 2,174.000 (wgt'ed) examples reached here.  /* #neg=1,317 #pos=857 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03048930090642513;  // std dev = 4.579, 140.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=26 */
%   | | | else return -0.021393257115289176;  // std dev = 2.970, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03928350988635991;  // std dev = 2.201, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return -0.026496319044039984;  // std dev = 2.673, 78.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2456648747732661;  // std dev = 2.145, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return -0.045319580556966485;  // std dev = 2.848, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 4.059779227506163E-4;  // std dev = 3.730, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.04834671495609847;  // std dev = 22.108, 2,045.000 (wgt'ed) examples reached here.  /* #neg=1,237 #pos=808 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.0825109304041606;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07159980834487703;  // std dev = 0.972, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.016566084208966443;  // std dev = 5.301, 186.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=35 */
%   | | | else return -0.0018536486829699027;  // std dev = 3.465, 105.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4313427626567487;  // std dev = 12.912, 996.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=780 */
%   | | | else return -0.3079065641777496;  // std dev = 6.147, 1,176.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=36 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.1167711800725205;  // std dev = 2.750, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.04493051498259647;  // std dev = 5.222, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03829939529914124;  // std dev = 4.019, 104.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=22 */
%   | | | else return -0.05322167869542234;  // std dev = 0.983, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.5870760304038534;  // std dev = 0.979, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1009717868951187;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.523', 'seconds']
Refined model CLL: -0.532239


******************************************
Best model found
******************************************
Results 

CLL : -0.555725 

AUC ROC : 0.885678 

AUC PR : 0.806889 

Precision : 0.916667 

Recall : 0.029451 

F1 : 0.057069 

Total Learning Time : 384.612 

Total Inference Time : 5.031112432479858 

Total revision time: 392.4724745426178
Best scored revision CLL: -0.532239


Results 

CLL : -0.555725 

AUC ROC : 0.885678 

AUC PR : 0.806889 

Precision : 0.916667 

Recall : 0.029451 

F1 : 0.057069 

Total Learning Time : 413.445945230484 

Total Inference Time : 5.031112432479858 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.444
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '675', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 602.834
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.49644680743993685;  // std dev = 3.294, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return 0.0954370706927327;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else return 0.2522722183955788;  // std dev = 0.489, 3,131.000 (wgt'ed) examples reached here.  /* #neg=1,897 #pos=1,234 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0010060779566545303;  // std dev = 5.855, 280.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=40 */
%   | | | else return 0.09070707463439608;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.06673789215472595;  // std dev = 5.187, 163.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.42473024451948965;  // std dev = 3.294, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return 0.08341787615188087;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.19415052797635826;  // std dev = 4.630, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return 0.21945204306280716;  // std dev = 26.947, 3,039.000 (wgt'ed) examples reached here.  /* #neg=1,839 #pos=1,200 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1422715346646615;  // std dev = 2.523, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.03449072999657111;  // std dev = 1.327, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.012532407599030711;  // std dev = 6.425, 314.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=49 */
%   | | | else return 0.03040987028082872;  // std dev = 4.431, 134.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18507339202155135;  // std dev = 0.488, 3,237.000 (wgt'ed) examples reached here.  /* #neg=1,959 #pos=1,278 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.0293901155539263;  // std dev = 5.750, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
%   | | | else return -0.04013117140573077;  // std dev = 2.966, 92.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.05278091537291941;  // std dev = 5.179, 163.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | | else return -0.12871574276954514;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15278366020171186;  // std dev = 0.488, 3,237.000 (wgt'ed) examples reached here.  /* #neg=1,959 #pos=1,278 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0030319639749176127;  // std dev = 5.844, 280.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=40 */
%   | | | else return 0.08284996125492798;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.04571383632358997;  // std dev = 5.179, 163.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | | else return -0.11495980558172604;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2703349534400209;  // std dev = 3.294, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return 0.02029708271518274;  // std dev = 3.268, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | | else return 0.12343985892957075;  // std dev = 0.489, 3,131.000 (wgt'ed) examples reached here.  /* #neg=1,897 #pos=1,234 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1195123608025191;  // std dev = 2.409, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.050701254597581284;  // std dev = 1.346, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06267042364231097;  // std dev = 2.749, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.005993751339589145;  // std dev = 7.308, 403.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=64 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09846316220680112;  // std dev = 0.488, 3,237.000 (wgt'ed) examples reached here.  /* #neg=1,959 #pos=1,278 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.024135774531435377;  // std dev = 5.742, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
%   | | | else return -0.04124169439544696;  // std dev = 2.949, 92.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03658812167106627;  // std dev = 5.174, 163.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | | else return -0.10477288413037966;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07756715145361966;  // std dev = 0.488, 3,237.000 (wgt'ed) examples reached here.  /* #neg=1,959 #pos=1,278 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.006205826055300673;  // std dev = 5.827, 280.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=40 */
%   | | | else return 0.0763277925827896;  // std dev = 2.772, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03131781871364348;  // std dev = 5.173, 163.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | | else return -0.09534532512150502;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0605653093242749;  // std dev = 0.488, 3,237.000 (wgt'ed) examples reached here.  /* #neg=1,959 #pos=1,278 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.21159918843676562;  // std dev = 1.365, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.009404941757586776;  // std dev = 2.392, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.014350783831812684;  // std dev = 6.792, 316.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=57 */
%   | | | else return -0.014772485399014244;  // std dev = 3.823, 130.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4356288443835715;  // std dev = 16.009, 1,497.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=1,162 */
%   | | | else return -0.2994376144004111;  // std dev = 7.270, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,684 #pos=50 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12445996719136074;  // std dev = 3.412, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | | | else return 0.0496343573547549;  // std dev = 6.379, 210.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.22066097957108494;  // std dev = 1.960, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.5577902201813112;  // std dev = 1.666, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.023956870066555603;  // std dev = 5.171, 163.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | | | else return -0.08679214976849474;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.024886650443774576;  // std dev = 23.105, 2,960.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=1,152 */
%   | | | else return 0.038687452147304145;  // std dev = 6.804, 205.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=77 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 9.366650592671587E-4;  // std dev = 6.324, 283.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=53 */
%   | | | else return 0.07790239193682685;  // std dev = 3.126, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05303101418038194;  // std dev = 4.784, 172.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=39 */
%   | | | else return -0.13518291530798668;  // std dev = 0.889, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.4252931622218415;  // std dev = 1.672, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return -0.0801557870502163;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.840', 'seconds']
Refined model CLL: -0.533763


******************************************
Best model found
******************************************
Results 

CLL : -0.556255 

AUC ROC : 0.882444 

AUC PR : 0.805696 

Precision : 0.882353 

Recall : 0.02008 

F1 : 0.039267 

Total Learning Time : 602.834 

Total Inference Time : 8.739437818527222 

Total revision time: 615.1155623226165
Best scored revision CLL: -0.533763


Results 

CLL : -0.556255 

AUC ROC : 0.882444 

AUC PR : 0.805696 

Precision : 0.882353 

Recall : 0.02008 

F1 : 0.039267 

Total Learning Time : 636.0890330104827 

Total Inference Time : 8.739437818527222 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.182
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '650', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 737.811
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2538273737612172;  // std dev = 0.489, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,601 #pos=1,703 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.030123457392505958;  // std dev = 6.687, 314.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=54 */
%   | | | else return -0.024204006076958252;  // std dev = 3.515, 119.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.059041792242368926;  // std dev = 5.997, 224.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2200386912095486;  // std dev = 0.489, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,601 #pos=1,703 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.002961485022443861;  // std dev = 6.841, 373.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=55 */
%   | | | else return 0.07762601863685935;  // std dev = 3.190, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05170159190878414;  // std dev = 5.997, 224.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18587886191021485;  // std dev = 0.489, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,601 #pos=1,703 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1376874756405777;  // std dev = 3.025, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.07387296290184826;  // std dev = 1.351, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04533780113246685;  // std dev = 3.114, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return 0.011216949406549336;  // std dev = 8.487, 540.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=86 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3450280549587939;  // std dev = 3.908, 63.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=37 */
%   | | | else return 0.03620748031543358;  // std dev = 3.984, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else return 0.1527288703482335;  // std dev = 0.489, 4,162.000 (wgt'ed) examples reached here.  /* #neg=2,518 #pos=1,644 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11917548878910311;  // std dev = 3.023, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.06481657189027737;  // std dev = 1.352, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010395629752392903;  // std dev = 7.137, 377.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=61 */
%   | | | else return 0.01711334476945283;  // std dev = 5.552, 226.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=37 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1241086319314975;  // std dev = 0.489, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,601 #pos=1,703 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10173577621054838;  // std dev = 3.022, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.05725697937413957;  // std dev = 1.352, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03753105264955957;  // std dev = 3.114, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return 0.008204640829857997;  // std dev = 8.487, 540.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=86 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09887881865111176;  // std dev = 0.489, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,601 #pos=1,703 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.003566552634351088;  // std dev = 6.836, 373.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=55 */
%   | | | else return 0.06381042820230029;  // std dev = 3.191, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03584793516346796;  // std dev = 5.954, 224.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=45 */
%   | | | else return -0.11812806087732147;  // std dev = 0.078, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07783993468928731;  // std dev = 0.489, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,601 #pos=1,703 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.01989606696232644;  // std dev = 6.682, 314.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=54 */
%   | | | else return -0.03433291531385286;  // std dev = 3.491, 119.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.030863565397164894;  // std dev = 5.953, 224.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=45 */
%   | | | else return -0.10640133710074104;  // std dev = 0.071, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06073201357404422;  // std dev = 0.489, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,601 #pos=1,703 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08560630126194145;  // std dev = 2.856, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return -0.07509797970211829;  // std dev = 1.355, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.0018651103683663608;  // std dev = 6.885, 374.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=56 */
%   | | | else return 0.020294877274077753;  // std dev = 5.904, 232.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D), haswordauthor(F, D) )
%   | | then return 0.606749121135036;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.03335991365807175;  // std dev = 5.562, 135.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=52 */
%   | | | else return 0.04657678836902258;  // std dev = 31.538, 4,162.000 (wgt'ed) examples reached here.  /* #neg=2,518 #pos=1,644 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.07620811821526065;  // std dev = 3.002, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.0568069990446173;  // std dev = 1.349, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.026727205785443478;  // std dev = 3.098, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return 0.002986269535304477;  // std dev = 8.475, 540.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=86 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4291844788225493;  // std dev = 18.336, 1,993.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=1,553 */
%   | | | else return -0.30925104088841626;  // std dev = 8.637, 2,311.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=71 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.14230042615337288;  // std dev = 4.056, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | | else return 0.033828770623738895;  // std dev = 7.116, 266.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.19025869736951553;  // std dev = 2.765, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.5205022674993584;  // std dev = 1.882, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02176225593095655;  // std dev = 5.941, 224.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=45 */
%   | | | else return -0.09818375676357127;  // std dev = 0.078, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.414', 'seconds']
Refined model CLL: -0.53478


******************************************
Best model found
******************************************
Results 

CLL : -0.555678 

AUC ROC : 0.882105 

AUC PR : 0.800148 

Precision : 1.0 

Recall : 0.013387 

F1 : 0.02642 

Total Learning Time : 737.811 

Total Inference Time : 9.046271800994873 

Total revision time: 751.2816583805085
Best scored revision CLL: -0.53478


Results 

CLL : -0.555678 

AUC ROC : 0.882105 

AUC PR : 0.800148 

Precision : 1.0 

Recall : 0.013387 

F1 : 0.02642 

Total Learning Time : 772.2551290683747 

Total Inference Time : 9.046271800994873 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.178
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '688', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 842.329
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4195923898729339;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.09916548493374269;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.21757434129930542;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12470259009449201;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015535706605315773;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.036705573117142516;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844231320381672;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11129760586668029;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06725634746791309;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.012251745206846253;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03330421130868611;  // std dev = 6.439, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15228415029563788;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09554836336105997;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05941673656792602;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.010699396093765617;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029022333452580196;  // std dev = 6.439, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12332080585712266;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20953596438411476;  // std dev = 1.581, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.01575397458292515;  // std dev = 3.406, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.009332792530468072;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025209637453317973;  // std dev = 6.438, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.29599408506923675;  // std dev = 4.326, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.017470171608538226;  // std dev = 4.547, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.0975963683001295;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07604626797305696;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.059404449921907285;  // std dev = 1.338, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008132379437462645;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021835793210668187;  // std dev = 6.438, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07742595358671354;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09416937750526652;  // std dev = 3.473, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08651531317840822;  // std dev = 1.371, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0034394160769377815;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021336457798115622;  // std dev = 6.409, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060458957981491174;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07987581920810781;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07536641517358321;  // std dev = 1.371, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.002984245671881677;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018438398705811005;  // std dev = 6.409, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04689995359062316;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17499810659083595;  // std dev = 1.561, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 8.782209625697125E-4;  // std dev = 3.378, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0038417574366759566;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015001580078003602;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03085208026382536;  // std dev = 34.247, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04534346795040655;  // std dev = 8.390, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11322103106320099;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.037010984858101496;  // std dev = 8.108, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.23106172238095227;  // std dev = 3.225, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45990846594596424;  // std dev = 2.570, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02455831196995319;  // std dev = 6.476, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16637183066288685;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.313', 'seconds']
Refined model CLL: -0.640423


******************************************
Best model found
******************************************
Results 

CLL : -0.677898 

AUC ROC : 0.543573 

AUC PR : 0.457842 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 842.329 

Total Inference Time : 5.733454704284668 

Total revision time: 853.4745869941711
Best scored revision CLL: -0.640423


Results 

CLL : -0.677898 

AUC ROC : 0.543573 

AUC PR : 0.457842 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 874.4480576820373 

Total Inference Time : 5.733454704284668 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.323
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '666', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 52.061
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.23274957407714322;  // std dev = 0.484, 1,252.000 (wgt'ed) examples reached here.  /* #neg=783 #pos=469 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03996711691769419;  // std dev = 3.133, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return -0.07518439823382113;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return 0.06223056775257359;  // std dev = 0.403, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6273912813994499;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.16072461473278324;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.19931246366546557;  // std dev = 0.483, 1,218.000 (wgt'ed) examples reached here.  /* #neg=765 #pos=453 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.13467338810001303;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.015922806675658194;  // std dev = 3.425, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | | else return 0.054485152888597635;  // std dev = 2.821, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.0976638558951752;  // std dev = 2.051, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.29858944566298673;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.1715105673346341;  // std dev = 0.484, 1,224.000 (wgt'ed) examples reached here.  /* #neg=765 #pos=459 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03330053362072929;  // std dev = 3.132, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return -0.06424509528709439;  // std dev = 1.361, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return 0.04742056687522131;  // std dev = 0.403, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14199979654595912;  // std dev = 0.483, 1,252.000 (wgt'ed) examples reached here.  /* #neg=783 #pos=469 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.029040035837268253;  // std dev = 3.132, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return -0.057110339452683956;  // std dev = 1.361, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return 0.041052958665558394;  // std dev = 0.403, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11570867706206488;  // std dev = 0.483, 1,252.000 (wgt'ed) examples reached here.  /* #neg=783 #pos=469 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.02524331611312422;  // std dev = 3.132, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return -0.0510506630789395;  // std dev = 1.362, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return 0.03537349895608982;  // std dev = 0.403, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09290601957831696;  // std dev = 0.483, 1,252.000 (wgt'ed) examples reached here.  /* #neg=783 #pos=469 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.10630850910222395;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01044331680973873;  // std dev = 3.415, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | | else return 0.0303542205401001;  // std dev = 2.821, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07373976895723361;  // std dev = 0.483, 1,252.000 (wgt'ed) examples reached here.  /* #neg=783 #pos=469 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.02067977244184257;  // std dev = 3.132, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return -0.04451143510020614;  // std dev = 1.359, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return 0.02595374422895528;  // std dev = 0.403, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05801156667043171;  // std dev = 0.483, 1,252.000 (wgt'ed) examples reached here.  /* #neg=783 #pos=469 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.09373370075782593;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.008217897114990928;  // std dev = 3.413, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | | else return 0.022122367621189274;  // std dev = 2.821, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.011794826751471444;  // std dev = 2.051, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.14487550571759789;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1101745994631888;  // std dev = 2.612, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.0439948129388216;  // std dev = 16.708, 1,194.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=445 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.01690602650843373;  // std dev = 3.131, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return -0.03912789251174307;  // std dev = 1.357, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else return 0.018806254877969462;  // std dev = 0.403, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03522385143957272;  // std dev = 0.483, 1,252.000 (wgt'ed) examples reached here.  /* #neg=783 #pos=469 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.08379951476662754;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.006443137190262422;  // std dev = 3.411, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | else return 0.015950663075157603;  // std dev = 0.403, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '983', 'milliseconds']
Refined model CLL: -0.638119


******************************************
Best model found
******************************************
Results 

CLL : -0.758458 

AUC ROC : 0.590576 

AUC PR : 0.556734 

Precision : 0.666667 

Recall : 0.003636 

F1 : 0.007233 

Total Learning Time : 52.061 

Total Inference Time : 1.4934191703796387 

Total revision time: 55.893013414382935
Best scored revision CLL: -0.638119


Results 

CLL : -0.758458 

AUC ROC : 0.590576 

AUC PR : 0.556734 

Precision : 0.666667 

Recall : 0.003636 

F1 : 0.007233 

Total Learning Time : 76.86648410224915 

Total Inference Time : 1.4934191703796387 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.91
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '591', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 341.153
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22858297033801178;  // std dev = 23.296, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=862 */
%   | | | else return 0.24276431971489715;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26991364098186527;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.5248156017661783;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.017912248708979235;  // std dev = 4.763, 169.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02836170105695919;  // std dev = 3.644, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1984195584671588;  // std dev = 23.296, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=862 */
%   | | | else return 0.21057171779917389;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2337836550996707;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.44829560624196213;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01994530034389917;  // std dev = 4.836, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return 0.012785747377516898;  // std dev = 3.555, 96.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.168298043708717;  // std dev = 23.296, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=862 */
%   | | | else return 0.17819907632636564;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19697678246055098;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.362363346322623;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.013732546477184977;  // std dev = 4.763, 169.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022378977315155476;  // std dev = 3.644, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return -0.12685407142857205;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13979376559481824;  // std dev = 23.296, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=862 */
%   | | | else return 0.14748280921895496;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16189848815690908;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.28075385369658523;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0773394700590293;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10159632948783631;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.018289197487779518;  // std dev = 5.913, 252.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5769602403264716;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.04257757452253772;  // std dev = 2.894, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11230170744382606;  // std dev = 23.575, 2,387.000 (wgt'ed) examples reached here.  /* #neg=1,506 #pos=881 */
%   | | | else return 0.1624999066562395;  // std dev = 3.921, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.013751033446361794;  // std dev = 4.833, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return 0.0076647302396096835;  // std dev = 3.554, 96.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09150268544708924;  // std dev = 23.262, 2,327.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=862 */
%   | | | else return 0.09758580128059063;  // std dev = 5.260, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09709479699550606;  // std dev = 2.875, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.1719843874817186;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.08518475138839685;  // std dev = 1.18e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06946545167737019;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.014490769367169807;  // std dev = 5.913, 252.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07329344977170386;  // std dev = 23.262, 2,325.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=863 */
%   | | | else return 0.06632553955611276;  // std dev = 5.255, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06266999952816567;  // std dev = 2.623, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.1302849061889163;  // std dev = 2.948, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06126507154538114;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.002594145607653666;  // std dev = 4.674, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | | else return 0.0147345986750133;  // std dev = 3.639, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05774745223903327;  // std dev = 23.261, 2,325.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=863 */
%   | | | else return 0.05212915423857318;  // std dev = 5.255, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.050252655467892364;  // std dev = 2.877, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.10646029062243968;  // std dev = 2.698, 33.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05437164421811217;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.002271707600193062;  // std dev = 4.674, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | | else return 0.012790748815008688;  // std dev = 3.639, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3992970489054637;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.0114832724800971;  // std dev = 2.890, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.058717930222571074;  // std dev = 3.513, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.04336016188590015;  // std dev = 23.637, 2,401.000 (wgt'ed) examples reached here.  /* #neg=1,505 #pos=896 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return -0.0791305990002349;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009757815739057993;  // std dev = 4.828, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return 0.004140367552670041;  // std dev = 3.554, 96.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=15 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2999094498025115;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.009026378715577283;  // std dev = 2.891, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.033839329159645104;  // std dev = 23.575, 2,387.000 (wgt'ed) examples reached here.  /* #neg=1,506 #pos=881 */
%   | | | else return 0.0398532980821038;  // std dev = 3.904, 66.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07355309678219112;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.04954664326382542;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.009844805202724079;  // std dev = 5.913, 252.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.420', 'seconds']
Refined model CLL: -0.634082


******************************************
Best model found
******************************************
Results 

CLL : -0.760038 

AUC ROC : 0.602876 

AUC PR : 0.584442 

Precision : 0.612903 

Recall : 0.069091 

F1 : 0.124183 

Total Learning Time : 341.153 

Total Inference Time : 9.184851884841919 

Total revision time: 353.3072598342896
Best scored revision CLL: -0.634082


Results 

CLL : -0.760038 

AUC ROC : 0.602876 

AUC PR : 0.584442 

Precision : 0.612903 

Recall : 0.069091 

F1 : 0.124183 

Total Learning Time : 374.2807305221558 

Total Inference Time : 9.184851884841919 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.644
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '603', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 600.812
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22807460691197146;  // std dev = 28.554, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,294 */
%   | | | else return 0.20520775862892535;  // std dev = 6.207, 170.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.37737970433028045;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.49080199632400107;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.09639651944594235;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.032628101766179425;  // std dev = 7.437, 384.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=67 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19798358688263307;  // std dev = 28.554, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,294 */
%   | | | else return 0.17834809352544595;  // std dev = 6.207, 170.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3249796367064403;  // std dev = 3.603, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.42003198315147666;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.08289781350284589;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.03370613754812611;  // std dev = 6.209, 263.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=47 */
%   | | else return 0.004434865688335374;  // std dev = 0.357, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16794193699220433;  // std dev = 28.554, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,294 */
%   | | | else return 0.15183918919290867;  // std dev = 6.207, 170.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2657971064226612;  // std dev = 3.446, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0.3388574922202075;  // std dev = 3.534, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07653025031115547;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.030103046426150984;  // std dev = 6.207, 262.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=47 */
%   | | | else return 0.003882426521380032;  // std dev = 4.223, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13953477721959603;  // std dev = 28.544, 3,497.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,293 */
%   | | | else return 0.12656815437009256;  // std dev = 6.251, 171.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2057393337146776;  // std dev = 3.602, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.2771319842169505;  // std dev = 3.365, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008019039138486346;  // std dev = 5.490, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
%   | | | else return 0.064181291451592;  // std dev = 3.063, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.1326212723327509;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0063758882722119775;  // std dev = 4.217, 137.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11389833572345176;  // std dev = 28.553, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,294 */
%   | | | else return 0.1034214190788523;  // std dev = 6.209, 170.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15208422714380265;  // std dev = 3.445, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0.21460735375909082;  // std dev = 3.521, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08087609912025488;  // std dev = 0.228, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06938082192696725;  // std dev = 0.978, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return 0.02097478577680585;  // std dev = 7.432, 384.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=67 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09164224811640481;  // std dev = 28.543, 3,497.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,293 */
%   | | | else return 0.0832066866727469;  // std dev = 6.255, 171.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11429979254434573;  // std dev = 3.601, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.1679533153351418;  // std dev = 3.357, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06251504900272142;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02153215946546849;  // std dev = 6.201, 262.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=47 */
%   | | | else return 4.968487495986036E-4;  // std dev = 4.221, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4336230051659208;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.01680633850756417;  // std dev = 3.609, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07142324760579127;  // std dev = 28.845, 3,579.000 (wgt'ed) examples reached here.  /* #neg=2,263 #pos=1,316 */
%   | | | else return 0.11087188777373236;  // std dev = 4.900, 100.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=58 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07369169020737329;  // std dev = 0.228, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017236709186660187;  // std dev = 6.204, 269.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=47 */
%   | | | else return 0.0028514258496684305;  // std dev = 4.217, 137.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.335998339272011;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.013305744272338068;  // std dev = 3.608, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056319317025699325;  // std dev = 28.845, 3,579.000 (wgt'ed) examples reached here.  /* #neg=2,263 #pos=1,316 */
%   | | | else return 0.08337232508844901;  // std dev = 4.900, 100.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=58 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06562740085937357;  // std dev = 0.228, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014941135947428547;  // std dev = 6.204, 269.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=47 */
%   | | | else return 0.002486641474840503;  // std dev = 4.217, 137.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04498069142492558;  // std dev = 28.498, 3,497.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,293 */
%   | | | else return 0.04047257771920294;  // std dev = 6.256, 171.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.032094504764212696;  // std dev = 3.438, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0.0815624771610905;  // std dev = 3.513, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05962794155386913;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01535258400284168;  // std dev = 6.198, 262.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=47 */
%   | | | else return 4.1563463573350756E-5;  // std dev = 4.220, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03504909427233772;  // std dev = 28.498, 3,497.000 (wgt'ed) examples reached here.  /* #neg=2,204 #pos=1,293 */
%   | | | else return 0.03174671189097536;  // std dev = 6.257, 171.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02337361029981239;  // std dev = 3.595, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.0652363450354972;  // std dev = 3.351, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -3.836614606133011E-4;  // std dev = 5.477, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
%   | | | else return 0.04300079003995509;  // std dev = 3.063, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | else return 3.626780091444879E-5;  // std dev = 0.357, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.575', 'seconds']
Refined model CLL: -0.636649


******************************************
Best model found
******************************************
Results 

CLL : -0.755907 

AUC ROC : 0.634613 

AUC PR : 0.625705 

Precision : 0.884615 

Recall : 0.041818 

F1 : 0.079861 

Total Learning Time : 600.812 

Total Inference Time : 14.40254020690918 

Total revision time: 619.0254608688355
Best scored revision CLL: -0.636649


Results 

CLL : -0.755907 

AUC ROC : 0.634613 

AUC PR : 0.625705 

Precision : 0.884615 

Recall : 0.041818 

F1 : 0.079861 

Total Learning Time : 639.9989315567017 

Total Inference Time : 14.40254020690918 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.738
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '614', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 897.409
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2281768860777914;  // std dev = 32.927, 4,651.000 (wgt'ed) examples reached here.  /* #neg=2,930 #pos=1,721 */
%   | | | else return 0.19581127276185067;  // std dev = 7.188, 231.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=78 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.37166244861302483;  // std dev = 4.300, 74.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | | else return 0.5199136409818657;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01986510671667382;  // std dev = 6.409, 303.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=49 */
%   | | | else return 0.10100607795665523;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.007442462749950422;  // std dev = 4.652, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19807130325625916;  // std dev = 32.927, 4,651.000 (wgt'ed) examples reached here.  /* #neg=2,930 #pos=1,721 */
%   | | | else return 0.17026534129456755;  // std dev = 7.188, 231.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=78 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32015566836507636;  // std dev = 4.300, 74.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | | else return 0.44422918216237206;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017429693314950756;  // std dev = 6.409, 303.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=49 */
%   | | | else return 0.08826043252670712;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006538909270886585;  // std dev = 4.652, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680135897449295;  // std dev = 32.927, 4,651.000 (wgt'ed) examples reached here.  /* #neg=2,930 #pos=1,721 */
%   | | | else return 0.14517422643181338;  // std dev = 7.188, 231.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.25646716904841504;  // std dev = 4.175, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.36421894877556926;  // std dev = 4.022, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01526431537373355;  // std dev = 6.409, 303.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=49 */
%   | | | else return 0.07637033975107863;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005749026877003813;  // std dev = 4.652, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396529669871803;  // std dev = 32.909, 4,648.000 (wgt'ed) examples reached here.  /* #neg=2,929 #pos=1,719 */
%   | | | else return 0.12021908704582786;  // std dev = 7.269, 234.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=80 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20103766325945188;  // std dev = 4.290, 74.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | | else return 0.2923335504782611;  // std dev = 3.887, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.0683702680838798;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.029707274033047848;  // std dev = 7.214, 348.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=64 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005057623949725634;  // std dev = 4.652, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398156282277724;  // std dev = 32.909, 4,648.000 (wgt'ed) examples reached here.  /* #neg=2,929 #pos=1,719 */
%   | | | else return 0.0987931435013401;  // std dev = 7.270, 234.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=80 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1439868686693394;  // std dev = 4.165, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.23167555826342268;  // std dev = 4.005, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06348441706353108;  // std dev = 0.267, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026309828662300697;  // std dev = 7.211, 347.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=64 */
%   | | | else return -0.007652135075022159;  // std dev = 4.658, 193.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=25 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170105764522946;  // std dev = 32.925, 4,651.000 (wgt'ed) examples reached here.  /* #neg=2,930 #pos=1,721 */
%   | | | else return 0.07967946428291485;  // std dev = 7.194, 231.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=78 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11032594122926125;  // std dev = 4.283, 74.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | | else return 0.17737864815205487;  // std dev = 3.875, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008072721803212763;  // std dev = 6.402, 303.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=49 */
%   | | | else return 0.05717977375758476;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0035392353114607946;  // std dev = 4.652, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | | else return -0.0920497373302779;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07294973239946517;  // std dev = 32.908, 4,648.000 (wgt'ed) examples reached here.  /* #neg=2,929 #pos=1,719 */
%   | | | else return 0.06352336229955513;  // std dev = 7.274, 234.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=80 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07308692102528355;  // std dev = 4.160, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.14157019348545435;  // std dev = 3.997, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007020362253717681;  // std dev = 6.402, 303.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=49 */
%   | | | else return 0.04837832902027319;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13752749691555724;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.004000063329301782;  // std dev = 4.651, 190.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=25 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05750030430461919;  // std dev = 32.907, 4,648.000 (wgt'ed) examples reached here.  /* #neg=2,929 #pos=1,719 */
%   | | | else return 0.050591117524822364;  // std dev = 7.274, 234.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=80 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05569823002942934;  // std dev = 4.279, 74.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=38 */
%   | | | else return 0.10819547019639175;  // std dev = 3.869, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05421396957541089;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.017390483223872637;  // std dev = 7.209, 348.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=64 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002402523120844113;  // std dev = 4.651, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | | else return -0.08433061908740246;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04503963700528004;  // std dev = 32.924, 4,651.000 (wgt'ed) examples reached here.  /* #neg=2,930 #pos=1,721 */
%   | | | else return 0.039571794279755775;  // std dev = 7.198, 231.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0339978904284462;  // std dev = 4.158, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.08796563497076278;  // std dev = 3.993, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004479677653518113;  // std dev = 6.400, 303.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=49 */
%   | | | else return 0.03786778908390333;  // std dev = 3.588, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12175557270480188;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.003027250133939578;  // std dev = 4.650, 190.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40676981940892515;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return -0.07560071205167593;  // std dev = 3.953, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03426000060208679;  // std dev = 33.305, 4,771.000 (wgt'ed) examples reached here.  /* #neg=3,016 #pos=1,755 */
%   | | | else return 0.0495463397921843;  // std dev = 5.750, 141.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=83 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.04853922131026687;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.01323193969126299;  // std dev = 7.208, 348.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=64 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0015672888514631413;  // std dev = 4.650, 186.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=25 */
%   | | | else return -0.07782529266606945;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.572', 'seconds']
Refined model CLL: -0.636213


******************************************
Best model found
******************************************
Results 

CLL : -0.748319 

AUC ROC : 0.637296 

AUC PR : 0.629177 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 897.409 

Total Inference Time : 21.14616584777832 

Total revision time: 923.4874026031493
Best scored revision CLL: -0.636213


Results 

CLL : -0.748319 

AUC ROC : 0.637296 

AUC PR : 0.629177 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 944.4608732910156 

Total Inference Time : 21.14616584777832 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.954
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '650', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 971.782
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.22710819619137584;  // std dev = 37.572, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19824447642459914;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1803421586468047;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688666;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06261940488996087;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02592113819145842;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16823049603213028;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15203964224960703;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.36538039098940883;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055596679672389133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.055084618573868996;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02269140971171113;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13976813892818157;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12655794032952677;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04916827147944293;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027977075559519636;  // std dev = 8.048, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004858141929855256;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11410639824176579;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10285917319625686;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488163;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844166;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.051421888799154464;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02659759925639638;  // std dev = 8.044, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007038988836347631;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09177791872787606;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08309995322850433;  // std dev = 8.214, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997698;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766667;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04613759631090428;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02387509773157799;  // std dev = 8.042, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007336249131648556;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.18203338648155243;  // std dev = 1.724, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.41710604382630334;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.0720429895812512;  // std dev = 37.540, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.10691262244843319;  // std dev = 6.532, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.038566009930942245;  // std dev = 6.058, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.003399880437436265;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.00498845589702846;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1287034020005375;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05762708201301874;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05033612502127402;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04482297757575442;  // std dev = 4.643, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11393988704989019;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005982036952729049;  // std dev = 7.210, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05607986610633709;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004340663828144433;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11494710974678714;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04511644227360106;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03962021081281016;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024127418607919508;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09493281461918286;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.045543228150321254;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017212797076773628;  // std dev = 8.034, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00597460874248715;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.39179404597569706;  // std dev = 2.691, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.05631728458068175;  // std dev = 4.533, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03429754050129161;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.04620277415618886;  // std dev = 6.487, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04059281611626729;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01557609676751747;  // std dev = 8.038, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.006894031741009159;  // std dev = 5.532, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.562', 'seconds']
Refined model CLL: -0.635945


******************************************
Best model found
******************************************
Results 

CLL : -0.750924 

AUC ROC : 0.640125 

AUC PR : 0.634018 

Precision : 0.875 

Recall : 0.050909 

F1 : 0.09622 

Total Learning Time : 971.782 

Total Inference Time : 21.467524528503418 

Total revision time: 999.5480477199554
Best scored revision CLL: -0.635945


Results 

CLL : -0.750924 

AUC ROC : 0.640125 

AUC PR : 0.634018 

Precision : 0.875 

Recall : 0.050909 

F1 : 0.09622 

Total Learning Time : 1020.5215184078216 

Total Inference Time : 21.467524528503418 

Run: 4
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.322
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '608', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 168.25900000000001
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2546091120906579;  // std dev = 16.443, 1,130.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=448 */
%   | | | else return 0.22178529873587502;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.44148226843284566;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.05595113290171018;  // std dev = 3.800, 91.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1340110040650296;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21751990102892654;  // std dev = 16.505, 1,142.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=449 */
%   | | | else return 0.25374489058025956;  // std dev = 3.636, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.37885201797682083;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.5728505077589573;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2451044371195234;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1828405669908634;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0790010253929245;  // std dev = 0.962, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.05497963649129017;  // std dev = 4.614, 131.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18687868334858548;  // std dev = 16.444, 1,130.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=448 */
%   | | | else return 0.15581387213850395;  // std dev = 3.902, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3103752149084655;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.45250734201965837;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04142050405602935;  // std dev = 3.789, 91.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | | else return -0.130276990956659;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.1170309116631603;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.10732335649292749;  // std dev = 3.398, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15128406938889555;  // std dev = 16.503, 1,142.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=449 */
%   | | | else return 0.18599928030220897;  // std dev = 3.639, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2407488720829226;  // std dev = 2.335, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.3513116720293825;  // std dev = 1.414, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19732654765815658;  // std dev = 1.079, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.15014263388852692;  // std dev = 1.642, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004328375480114193;  // std dev = 3.708, 101.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return 0.07958659517304822;  // std dev = 2.886, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1253266516388136;  // std dev = 16.444, 1,130.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=448 */
%   | | | else return 0.09651002176579081;  // std dev = 3.894, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17996077837422506;  // std dev = 2.412, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.2751692014338566;  // std dev = 1.268, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.029008494307441356;  // std dev = 0.934, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.14614521253199983;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021179290948013633;  // std dev = 3.670, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return 0.088488987264431;  // std dev = 3.391, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09716028070439356;  // std dev = 16.501, 1,142.000 (wgt'ed) examples reached here.  /* #neg=693 #pos=449 */
%   | | | else return 0.12931990528632795;  // std dev = 3.642, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13191464333700606;  // std dev = 2.332, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.21713004861636742;  // std dev = 1.404, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02541820372315163;  // std dev = 3.771, 91.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | | else return -0.11843434825806777;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.10057685790712108;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07466583254401374;  // std dev = 3.391, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07911813592180653;  // std dev = 16.445, 1,130.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=448 */
%   | | | else return 0.05262685747152241;  // std dev = 3.886, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09616644563229525;  // std dev = 2.411, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | | else return 0.17212208228281828;  // std dev = 1.262, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.023942564204992727;  // std dev = 0.930, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.13003306116887184;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.12295898014793372;  // std dev = 1.964, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.0228294097814289;  // std dev = 4.581, 131.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3322115004700129;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.14415379448535004;  // std dev = 2.094, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06459378954626666;  // std dev = 16.700, 1,164.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=464 */
%   | | | else return 0.08405187417987131;  // std dev = 2.598, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1172292454626647;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09361921945566642;  // std dev = 1.654, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.012466928439838303;  // std dev = 3.679, 101.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return 0.06284704419966566;  // std dev = 2.871, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.651016280069341;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2762454116020046;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.29683194062737944;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.10359974267483073;  // std dev = 1.914, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.04805414762055693;  // std dev = 16.655, 1,164.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=461 */
%   | | | else return 0.06953236725219122;  // std dev = 2.606, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.0045301190017852065;  // std dev = 3.645, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return 0.05673440111204971;  // std dev = 3.385, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5763573361851335;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3302189416555918;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.13928440342840706;  // std dev = 1.247, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.014176029716693989;  // std dev = 2.590, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.027842877139515585;  // std dev = 2.209, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.041124201901109304;  // std dev = 16.709, 1,167.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=475 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.014433573676168775;  // std dev = 3.671, 101.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return 0.05416481860820098;  // std dev = 2.867, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.491', 'seconds']
Refined model CLL: -0.643817


******************************************
Best model found
******************************************
Results 

CLL : -0.626667 

AUC ROC : 0.581075 

AUC PR : 0.408459 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 168.25900000000001 

Total Inference Time : 4.808053970336914 

Total revision time: 175.37137547111513
Best scored revision CLL: -0.643817


Results 

CLL : -0.626667 

AUC ROC : 0.581075 

AUC PR : 0.408459 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 196.343841463089 

Total Inference Time : 4.808053970336914 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.908
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '555', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 370.685
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25762674188801904;  // std dev = 23.479, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=918 */
%   | | | else return 0.2353419175556525;  // std dev = 5.175, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3947343009531699;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.5678263544543504;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0803711573217346;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.009311725797186277;  // std dev = 4.698, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06569610491083275;  // std dev = 4.175, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2232872690930608;  // std dev = 23.479, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=918 */
%   | | | else return 0.2042137241808098;  // std dev = 5.175, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.342719722501054;  // std dev = 3.394, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return 0.5126431766696901;  // std dev = 2.226, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07030324498182232;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.008174430915680462;  // std dev = 4.698, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.04757856654377947;  // std dev = 0.946, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.06258015364340816;  // std dev = 4.065, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18850740550824155;  // std dev = 23.479, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=918 */
%   | | | else return 0.17302489054128542;  // std dev = 5.175, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.266593091722573;  // std dev = 3.180, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.40792376908988975;  // std dev = 2.506, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007637899415261055;  // std dev = 4.773, 175.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=27 */
%   | | | else return 0.06434033048507204;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.05055185305521243;  // std dev = 4.173, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
%   | | | else return -0.12842083300471638;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15409358432518971;  // std dev = 23.441, 2,294.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=913 */
%   | | | else return 0.16973112432478682;  // std dev = 5.343, 118.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2090660299023282;  // std dev = 3.379, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return 0.34483656649702055;  // std dev = 2.201, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.23607979128442777;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.037784019241408805;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005225380288151446;  // std dev = 4.696, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
%   | | | else return 0.035629629475637754;  // std dev = 3.996, 101.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12457023260502466;  // std dev = 23.441, 2,294.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=913 */
%   | | | else return 0.1376850917279424;  // std dev = 5.344, 118.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15082150051493134;  // std dev = 3.169, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.2553093560228249;  // std dev = 2.486, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2011134493879713;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03258356444241619;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004160976119202417;  // std dev = 4.991, 184.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=30 */
%   | | | else return 0.03510617979872794;  // std dev = 3.619, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10034622817868181;  // std dev = 23.480, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=918 */
%   | | | else return 0.08578225731157539;  // std dev = 5.168, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11228459657505613;  // std dev = 3.371, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return 0.21504007296957134;  // std dev = 2.188, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0015934949075086173;  // std dev = 4.773, 175.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=27 */
%   | | | else return 0.05501224000047008;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.05185643955586257;  // std dev = 0.946, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.04031460734429671;  // std dev = 4.044, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07774260728871166;  // std dev = 23.440, 2,294.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=913 */
%   | | | else return 0.09052182615934827;  // std dev = 5.347, 118.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3302453744570324;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09873763797841371;  // std dev = 3.911, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.04561839627387501;  // std dev = 2.174, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 9.111646495309363E-4;  // std dev = 4.692, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03144822383438169;  // std dev = 4.152, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
%   | | | else return -0.12339167669589274;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06168251633414755;  // std dev = 23.481, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=918 */
%   | | | else return 0.04892374030285443;  // std dev = 5.165, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04727987387869705;  // std dev = 3.147, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.13294774832331488;  // std dev = 2.476, 31.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2717510035309955;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08097178858576606;  // std dev = 1.371, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006675792225611696;  // std dev = 4.838, 173.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=28 */
%   | | | else return 0.03021742132288505;  // std dev = 4.042, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13414387450233828;  // std dev = 2.957, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | | else return -0.08937702921407044;  // std dev = 3.106, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.030590054990247223;  // std dev = 3.855, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.04994223131559492;  // std dev = 23.657, 2,334.000 (wgt'ed) examples reached here.  /* #neg=1,385 #pos=949 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.1519718765679814;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.017655313744683036;  // std dev = 2.179, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004843155637370532;  // std dev = 4.977, 184.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=30 */
%   | | | else return 0.030528107385204617;  // std dev = 3.605, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035676995576499254;  // std dev = 23.427, 2,294.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=913 */
%   | | | else return 0.04780297325905681;  // std dev = 5.351, 118.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2554422275870878;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.042039983459489075;  // std dev = 3.913, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.23133515606860505;  // std dev = 1.296, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.07187895800100615;  // std dev = 1.373, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0036300503143356705;  // std dev = 4.838, 173.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=28 */
%   | | | else return 0.025269066972181967;  // std dev = 4.034, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.491', 'seconds']
Refined model CLL: -0.6485


******************************************
Best model found
******************************************
Results 

CLL : -0.623475 

AUC ROC : 0.581174 

AUC PR : 0.41083 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 370.685 

Total Inference Time : 10.73514723777771 

Total revision time: 384.4532538108826
Best scored revision CLL: -0.6485


Results 

CLL : -0.623475 

AUC ROC : 0.581174 

AUC PR : 0.41083 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 405.42571980285646 

Total Inference Time : 10.73514723777771 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.676
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '606', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 532.19
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2573354545649343;  // std dev = 28.732, 3,442.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,374 */
%   | | | else return 0.21529179224237072;  // std dev = 6.211, 168.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4226650641317692;  // std dev = 3.904, 62.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | | | else return 0.5602765946739794;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11455919150976876;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0023161811795574592;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.0426409137091385;  // std dev = 7.501, 374.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=69 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22303825738906993;  // std dev = 28.732, 3,442.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,374 */
%   | | | else return 0.1870131390108053;  // std dev = 6.211, 168.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3648041459169085;  // std dev = 3.941, 64.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   | | | else return 0.4802814199580985;  // std dev = 3.089, 45.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.1527756642326772;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09234274568552417;  // std dev = 3.005, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0020344677904384025;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.037370574398520054;  // std dev = 7.501, 374.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=69 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1883060433378165;  // std dev = 28.732, 3,442.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,374 */
%   | | | else return 0.15896073315130654;  // std dev = 6.211, 168.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2864455089440126;  // std dev = 3.896, 62.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | | | else return 0.400587417426587;  // std dev = 3.119, 47.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08989918145573673;  // std dev = 2.718, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return -0.008653003447578118;  // std dev = 1.306, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.023938853786250363;  // std dev = 6.294, 275.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=48 */
%   | | | else return 0.039011184439449446;  // std dev = 4.674, 142.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1552689827404088;  // std dev = 28.732, 3,442.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,374 */
%   | | | else return 0.1324864873687848;  // std dev = 6.211, 168.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.49337842080003863;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.24860847841092135;  // std dev = 4.892, 103.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.18314730329941004;  // std dev = 1.399, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.043375003829339856;  // std dev = 1.899, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0282896376468977;  // std dev = 6.494, 279.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=52 */
%   | | | else return 0.03918341272055391;  // std dev = 4.745, 143.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12551051760844537;  // std dev = 28.732, 3,442.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,374 */
%   | | | else return 0.1085717899422899;  // std dev = 6.211, 168.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4200064134342478;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18707376614667268;  // std dev = 4.881, 103.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.1436018951231911;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06583574618244928;  // std dev = 2.994, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.004679033544180497;  // std dev = 2.260, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.024534315345857396;  // std dev = 7.501, 374.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=69 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09986708310536262;  // std dev = 28.732, 3,442.000 (wgt'ed) examples reached here.  /* #neg=2,068 #pos=1,374 */
%   | | | else return 0.08774427582551951;  // std dev = 6.211, 168.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10787977095188048;  // std dev = 3.891, 64.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   | | | else return 0.2116086542585351;  // std dev = 3.058, 45.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1564552977861687;  // std dev = 1.395, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0376720886883927;  // std dev = 1.900, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020577515218679086;  // std dev = 6.490, 279.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=52 */
%   | | | else return 0.030146744499765978;  // std dev = 4.745, 143.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07753806781761213;  // std dev = 28.693, 3,440.000 (wgt'ed) examples reached here.  /* #neg=2,072 #pos=1,368 */
%   | | | else return 0.08993525105448093;  // std dev = 6.385, 170.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=66 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07401590753643766;  // std dev = 3.860, 62.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=35 */
%   | | | else return 0.1649510559178329;  // std dev = 3.087, 47.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.12779282508099127;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.051900487280988006;  // std dev = 2.988, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.004148608670195093;  // std dev = 2.251, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.0179047637327416;  // std dev = 7.500, 374.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=69 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19281715997850088;  // std dev = 3.493, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return -0.06710904735030121;  // std dev = 3.710, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06210160542643477;  // std dev = 28.933, 3,494.000 (wgt'ed) examples reached here.  /* #neg=2,102 #pos=1,392 */
%   | | | else return 0.07464145949609872;  // std dev = 4.854, 103.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.046760392607844516;  // std dev = 2.159, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return -0.09132249924428056;  // std dev = 0.934, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.033973690832944846;  // std dev = 2.888, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.015404180014742273;  // std dev = 7.500, 374.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=69 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.046513570413795384;  // std dev = 28.677, 3,440.000 (wgt'ed) examples reached here.  /* #neg=2,072 #pos=1,368 */
%   | | | else return 0.05785600091150823;  // std dev = 6.389, 170.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2522558949633639;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.05812664025906362;  // std dev = 4.864, 103.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.130352425789376;  // std dev = 1.391, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.03251357756569014;  // std dev = 1.888, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.028599605341946388;  // std dev = 2.887, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.013228981437704066;  // std dev = 7.500, 374.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=69 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03584593194364408;  // std dev = 28.676, 3,440.000 (wgt'ed) examples reached here.  /* #neg=2,072 #pos=1,368 */
%   | | | else return 0.04495207481332772;  // std dev = 6.390, 170.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=66 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.26279786469018857;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0398431058531981;  // std dev = 4.848, 103.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=63 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.029939196966874804;  // std dev = 6.111, 228.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=48 */
%   | | | else return -0.025961409865858633;  // std dev = 3.494, 100.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012101035934089035;  // std dev = 4.511, 138.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=25 */
%   | | | else return -0.16269381320334703;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.464', 'seconds']
Refined model CLL: -0.649732


******************************************
Best model found
******************************************
Results 

CLL : -0.623961 

AUC ROC : 0.578465 

AUC PR : 0.409396 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 532.19 

Total Inference Time : 15.166410446166992 

Total revision time: 551.2126348648072
Best scored revision CLL: -0.649732


Results 

CLL : -0.623961 

AUC ROC : 0.578465 

AUC PR : 0.409396 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 572.1851008567811 

Total Inference Time : 15.166410446166992 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.646
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '597', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 757.777
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25505727387590604;  // std dev = 33.158, 4,593.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,823 */
%   | | | else return 0.2395048673029003;  // std dev = 7.462, 236.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4555515325021103;  // std dev = 4.303, 77.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=46 */
%   | | | else return 0.5958538531322994;  // std dev = 3.436, 61.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15602127552504427;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.05489454316135737;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03526065172076611;  // std dev = 7.314, 367.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=65 */
%   | | | else return 0.04496212191269816;  // std dev = 5.258, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22109044251544516;  // std dev = 33.158, 4,593.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,823 */
%   | | | else return 0.20778032202244257;  // std dev = 7.462, 236.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3828836411433699;  // std dev = 4.308, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return 0.5189668552070842;  // std dev = 3.405, 60.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04974684475786211;  // std dev = 6.705, 284.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=56 */
%   | | | else return 0.029559039340606826;  // std dev = 4.509, 139.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=25 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03563880512358724;  // std dev = 5.275, 188.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=34 */
%   | | | else return -0.14287027965739754;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1867302509158025;  // std dev = 33.158, 4,593.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,823 */
%   | | | else return 0.17592904432632805;  // std dev = 7.462, 236.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3059091746011885;  // std dev = 4.289, 77.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=46 */
%   | | | else return 0.4229862167579673;  // std dev = 3.411, 61.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1312379754197273;  // std dev = 3.136, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.050168896767862126;  // std dev = 1.348, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026145963514788702;  // std dev = 7.312, 367.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=65 */
%   | | | else return 0.03372438216111973;  // std dev = 5.255, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15405918773617433;  // std dev = 33.158, 4,593.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,823 */
%   | | | else return 0.14572531611584832;  // std dev = 7.462, 236.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2285346447214595;  // std dev = 4.293, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return 0.34078816987828325;  // std dev = 3.377, 60.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2804306643609357;  // std dev = 1.501, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.028361266453822448;  // std dev = 3.047, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02276405757071204;  // std dev = 7.312, 367.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=65 */
%   | | | else return 0.029301105819604004;  // std dev = 5.255, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.691087901354581;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.28926180134853613;  // std dev = 1.813, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12342890458420043;  // std dev = 33.914, 4,812.000 (wgt'ed) examples reached here.  /* #neg=2,910 #pos=1,902 */
%   | | | else return 0.20538487367589953;  // std dev = 5.461, 136.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=89 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0409926922558213;  // std dev = 6.774, 289.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=58 */
%   | | | else return 0.0044375281263416165;  // std dev = 4.276, 134.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1108940501561698;  // std dev = 0.922, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.025374124368089945;  // std dev = 5.255, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09931689287500099;  // std dev = 33.147, 4,593.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,823 */
%   | | | else return 0.09312699210327664;  // std dev = 7.462, 236.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11813184315616358;  // std dev = 4.267, 77.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=46 */
%   | | | else return 0.2092612925797187;  // std dev = 3.387, 61.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10236549392457443;  // std dev = 3.117, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.054234275888539074;  // std dev = 1.303, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01595534794342978;  // std dev = 7.311, 367.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=65 */
%   | | | else return 0.021909906002568848;  // std dev = 5.255, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07815022384654996;  // std dev = 33.147, 4,593.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,823 */
%   | | | else return 0.07365421188318638;  // std dev = 7.462, 236.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08144029804772682;  // std dev = 4.283, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return 0.16843473915575854;  // std dev = 3.354, 60.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.24012406526309427;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.012637183999538493;  // std dev = 3.009, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013786802606298637;  // std dev = 7.311, 367.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=65 */
%   | | | else return 0.018870868796952264;  // std dev = 5.255, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0606090882603669;  // std dev = 33.149, 4,597.000 (wgt'ed) examples reached here.  /* #neg=2,775 #pos=1,822 */
%   | | | else return 0.06437470279887934;  // std dev = 7.455, 232.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.30720278977065535;  // std dev = 0.884, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07864954198038457;  // std dev = 5.351, 131.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=85 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07899395755498899;  // std dev = 3.111, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return -0.05514327890641889;  // std dev = 1.264, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011894131982023362;  // std dev = 7.311, 367.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=65 */
%   | | | else return 0.01621767892332794;  // std dev = 5.255, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20640324547958205;  // std dev = 3.919, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return -0.10254988898170303;  // std dev = 3.977, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04802291939722627;  // std dev = 33.476, 4,682.000 (wgt'ed) examples reached here.  /* #neg=2,824 #pos=1,858 */
%   | | | else return 0.059692235122603236;  // std dev = 5.352, 131.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=85 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10000556724045816;  // std dev = 2.776, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.008870417319267583;  // std dev = 7.472, 382.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=69 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.12711597387602105;  // std dev = 0.901, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.013911013234082127;  // std dev = 5.255, 182.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03602704338967463;  // std dev = 33.125, 4,597.000 (wgt'ed) examples reached here.  /* #neg=2,775 #pos=1,822 */
%   | | | else return 0.03990610664809255;  // std dev = 7.455, 232.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=91 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2607689524054694;  // std dev = 0.879, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04482783799263787;  // std dev = 5.350, 131.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=85 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.203971628327745;  // std dev = 1.471, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.003753026236273495;  // std dev = 2.979, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007518901719200837;  // std dev = 7.405, 373.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=67 */
%   | | | else return 0.01250035568045705;  // std dev = 5.114, 176.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.493', 'seconds']
Refined model CLL: -0.648796


******************************************
Best model found
******************************************
Results 

CLL : -0.623917 

AUC ROC : 0.580688 

AUC PR : 0.41176 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 757.777 

Total Inference Time : 17.588712453842163 

Total revision time: 780.2797113876343
Best scored revision CLL: -0.648796


Results 

CLL : -0.623917 

AUC ROC : 0.580688 

AUC PR : 0.41176 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 801.2521773796082 

Total Inference Time : 17.588712453842163 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.9
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '571', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 956.934
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04368829719016263;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690137;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675667;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12384505424974898;  // std dev = 3.369, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.033378962430163826;  // std dev = 8.506, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.031124381371230057;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436812;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973599;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13269453761182265;  // std dev = 3.357, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08202341810862211;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03994878304808888;  // std dev = 3.516, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.026635568284448474;  // std dev = 9.640, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6940002417232962;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3317163407222325;  // std dev = 2.161, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12348371480823803;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.1978087020390193;  // std dev = 6.156, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11421480974920775;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07169804484579134;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02477781406374097;  // std dev = 8.431, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.023275691389751295;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0997099385197471;  // std dev = 37.047, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08770734189916306;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11237654050848597;  // std dev = 4.760, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20463445802135358;  // std dev = 3.886, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0965782867042984;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02050096047201286;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09990639529971625;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.02016173032565282;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07848150275857436;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06868870051772819;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.35151048006659125;  // std dev = 0.885, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1042134338273647;  // std dev = 6.060, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03516943659075959;  // std dev = 7.640, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.001229246970707239;  // std dev = 4.994, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017467975470754894;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10255686450082606;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06118839616904475;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.053972637742927855;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04216403017976693;  // std dev = 4.732, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14251894222003705;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09220016652951755;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06673424196683651;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.017842038821501406;  // std dev = 3.508, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.013989398541907254;  // std dev = 9.637, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04741502222812191;  // std dev = 37.044, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.041712188122295143;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2901629264104256;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.055233672702981754;  // std dev = 6.036, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.077126580349141;  // std dev = 3.334, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05901826084608849;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.015034032217907469;  // std dev = 3.508, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.012013971218123245;  // std dev = 9.636, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03654864141075399;  // std dev = 37.044, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03241663131517477;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013556870329385323;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09550125404663808;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07419985905610706;  // std dev = 3.335, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.008741475038222172;  // std dev = 8.471, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08534809761390671;  // std dev = 1.351, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014278797086065899;  // std dev = 5.765, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.498', 'seconds']
Refined model CLL: -0.650178


******************************************
Best model found
******************************************
Results 

CLL : -0.624123 

AUC ROC : 0.583536 

AUC PR : 0.416871 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 956.934 

Total Inference Time : 23.757405519485474 

Total revision time: 986.9159025039672
Best scored revision CLL: -0.650178


Results 

CLL : -0.624123 

AUC ROC : 0.583536 

AUC PR : 0.416871 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1007.8883684959411 

Total Inference Time : 23.757405519485474 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.298
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '674', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 44.202
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22720684348325854;  // std dev = 0.483, 1,157.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=427 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.010047669276727542;  // std dev = 3.190, 79.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return -0.02756535061477346;  // std dev = 1.882, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.054894543161357265;  // std dev = 2.341, 69.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19723933870944743;  // std dev = 0.483, 1,157.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=427 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5287743139336105;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011986032160401748;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.006007693365212732;  // std dev = 3.476, 103.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=14 */
%   | | | else return -0.07330595557887967;  // std dev = 1.937, 65.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.5982759745524818;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12327597455248171;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03160930788581508;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.17073438490369525;  // std dev = 15.903, 1,082.000 (wgt'ed) examples reached here.  /* #neg=679 #pos=403 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.008571638024147265;  // std dev = 3.195, 79.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return -0.02334519128483425;  // std dev = 1.883, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.09834316801871032;  // std dev = 1.130, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.06498085164577133;  // std dev = 1.937, 65.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1389780694824358;  // std dev = 0.482, 1,157.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=427 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return -0.13634607396444892;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13536768989640288;  // std dev = 1.465, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.037356193477301965;  // std dev = 3.106, 118.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=11 */
%   | | | else return 0.0021038822653919177;  // std dev = 2.616, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11344951973588702;  // std dev = 0.482, 1,157.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=427 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.12219568381282862;  // std dev = 1.457, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.13449145889082617;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08578804357613166;  // std dev = 1.695, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.0337977221461585;  // std dev = 3.668, 156.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.15235368505860533;  // std dev = 2.976, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return -0.1568143541147301;  // std dev = 0.839, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.09103131988509058;  // std dev = 0.482, 1,112.000 (wgt'ed) examples reached here.  /* #neg=702 #pos=410 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0095885923678002;  // std dev = 3.169, 79.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return -0.01954547531858671;  // std dev = 1.884, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.07905218383398913;  // std dev = 1.120, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.050996814655020144;  // std dev = 1.937, 65.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07258404838746342;  // std dev = 0.482, 1,157.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=427 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.008416556097521028;  // std dev = 3.169, 79.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return -0.017298593304790538;  // std dev = 1.884, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06767315139901965;  // std dev = 1.115, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.046003514055446296;  // std dev = 1.937, 65.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27220491766934907;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.08593945263395482;  // std dev = 2.011, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else return 0.05895332632074162;  // std dev = 0.483, 1,121.000 (wgt'ed) examples reached here.  /* #neg=705 #pos=416 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.12891197772601176;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10862692144928757;  // std dev = 1.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.06735276465356002;  // std dev = 1.686, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.026637182697453285;  // std dev = 3.664, 156.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.40964354331830843;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.06333321118500972;  // std dev = 2.241, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else return 0.04615881724551021;  // std dev = 0.483, 1,121.000 (wgt'ed) examples reached here.  /* #neg=705 #pos=416 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.008825531263201864;  // std dev = 3.159, 79.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return -0.01699933547308511;  // std dev = 1.884, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.05018479814266433;  // std dev = 1.101, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.03928135947438894;  // std dev = 1.937, 65.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03481787511042778;  // std dev = 0.481, 1,157.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=427 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09401233360239693;  // std dev = 1.440, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.1175902611716626;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.055267412718431365;  // std dev = 1.682, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.02259688198287175;  // std dev = 3.664, 156.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.054', 'seconds']
Refined model CLL: -0.61339


******************************************
Best model found
******************************************
Results 

CLL : -0.822142 

AUC ROC : 0.502073 

AUC PR : 0.599232 

Precision : 1.0 

Recall : 0.001297 

F1 : 0.002591 

Total Learning Time : 44.202 

Total Inference Time : 1.490544319152832 

Total revision time: 47.90955853462219
Best scored revision CLL: -0.61339


Results 

CLL : -0.822142 

AUC ROC : 0.502073 

AUC PR : 0.599232 

Precision : 1.0 

Recall : 0.001297 

F1 : 0.002591 

Total Learning Time : 68.88202452659607 

Total Inference Time : 1.490544319152832 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.809
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '641', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 351.64300000000003
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21839444973595676;  // std dev = 22.094, 2,118.000 (wgt'ed) examples reached here.  /* #neg=1,355 #pos=763 */
%   | | | else return 0.19386322081379828;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.5052077586289233;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.04319635638030845;  // std dev = 4.453, 223.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=22 */
%   | | | else return 0.03996711691769406;  // std dev = 4.045, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1896772975126637;  // std dev = 22.094, 2,118.000 (wgt'ed) examples reached here.  /* #neg=1,355 #pos=763 */
%   | | | else return 0.16858862366726537;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5468491784808776;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.34816324891864475;  // std dev = 3.773, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03633302028385125;  // std dev = 4.927, 165.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=30 */
%   | | | else return -0.026529645346370128;  // std dev = 2.669, 71.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03874891246148973;  // std dev = 3.291, 122.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
%   | | | else return -0.14373742391157993;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16114541393666057;  // std dev = 22.094, 2,118.000 (wgt'ed) examples reached here.  /* #neg=1,355 #pos=763 */
%   | | | else return 0.14378896781680958;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24418124781534858;  // std dev = 2.816, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.36258892455025865;  // std dev = 2.781, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.35540451204767926;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.01917556392802232;  // std dev = 1.842, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.03481614634578134;  // std dev = 4.511, 223.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=23 */
%   | | | else return 0.033171033958909454;  // std dev = 4.034, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13420107463712283;  // std dev = 22.094, 2,118.000 (wgt'ed) examples reached here.  /* #neg=1,355 #pos=763 */
%   | | | else return 0.1204970767368549;  // std dev = 5.588, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19520342511654484;  // std dev = 3.084, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.30627331202854;  // std dev = 2.465, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12939678100443952;  // std dev = 1.891, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.004956671104662996;  // std dev = 5.254, 218.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=33 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.031924388443329975;  // std dev = 3.268, 122.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
%   | | | else return -0.13020313310374562;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5580881241955364;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10822261840362163;  // std dev = 22.750, 2,253.000 (wgt'ed) examples reached here.  /* #neg=1,447 #pos=806 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13952117641187342;  // std dev = 2.814, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.22860630624524267;  // std dev = 2.763, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14218928370380665;  // std dev = 2.324, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.1293591351890656;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.032311546261646625;  // std dev = 4.427, 223.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=22 */
%   | | | else return 0.02710388300449471;  // std dev = 4.041, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0889173349478054;  // std dev = 22.089, 2,118.000 (wgt'ed) examples reached here.  /* #neg=1,355 #pos=763 */
%   | | | else return 0.07734101470427929;  // std dev = 5.573, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2843799096487881;  // std dev = 1.231, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.12067280742909757;  // std dev = 3.730, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.025547722977483794;  // std dev = 4.897, 165.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=30 */
%   | | | else return -0.023358222226830167;  // std dev = 2.654, 71.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.025206156464408203;  // std dev = 3.270, 122.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=12 */
%   | | | else return -0.11701520978239562;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.46368873412490613;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.04848253812280898;  // std dev = 3.234, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07243622312515956;  // std dev = 22.503, 2,197.000 (wgt'ed) examples reached here.  /* #neg=1,405 #pos=792 */
%   | | | else return 0.10213176572392696;  // std dev = 3.863, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11913472748906438;  // std dev = 2.317, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.11535759360448407;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.027205330293460027;  // std dev = 4.431, 223.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=22 */
%   | | | else return 0.02153327361908551;  // std dev = 4.037, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23256560559140813;  // std dev = 2.729, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.02674302736727542;  // std dev = 3.071, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.054270176569794513;  // std dev = 22.405, 2,189.000 (wgt'ed) examples reached here.  /* #neg=1,408 #pos=781 */
%   | | | else return 0.06710380100510657;  // std dev = 3.729, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2889703349349166;  // std dev = 1.236, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.017566807590443788;  // std dev = 1.831, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02673483539325738;  // std dev = 4.474, 223.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=23 */
%   | | | else return 0.021775214088611623;  // std dev = 4.021, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13407415380157953;  // std dev = 3.831, 64.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=32 */
%   | | | else return -0.1538524467298816;  // std dev = 1.332, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0426998979697174;  // std dev = 22.405, 2,189.000 (wgt'ed) examples reached here.  /* #neg=1,408 #pos=781 */
%   | | | else return 0.050467818470277655;  // std dev = 3.729, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10167282723094667;  // std dev = 2.299, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.10609569581928997;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0518593232690268;  // std dev = 2.170, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.01614444493208653;  // std dev = 5.577, 304.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03475395275447527;  // std dev = 22.056, 2,118.000 (wgt'ed) examples reached here.  /* #neg=1,355 #pos=763 */
%   | | | else return 0.024969517618189357;  // std dev = 5.561, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.007880903466734411;  // std dev = 3.055, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.11233108422739811;  // std dev = 2.443, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08466597076694672;  // std dev = 2.296, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.0964648405266933;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02172836976976017;  // std dev = 4.407, 223.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=22 */
%   | | | else return 0.016449373376856435;  // std dev = 4.047, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.892', 'seconds']
Refined model CLL: -0.615731


******************************************
Best model found
******************************************
Results 

CLL : -0.823231 

AUC ROC : 0.510903 

AUC PR : 0.6169 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 351.64300000000003 

Total Inference Time : 7.103885173797607 

Total revision time: 361.64759669494634
Best scored revision CLL: -0.615731


Results 

CLL : -0.823231 

AUC ROC : 0.510903 

AUC PR : 0.6169 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 382.6200626869202 

Total Inference Time : 7.103885173797607 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.638
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '619', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 549.428
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21495497093729407;  // std dev = 27.019, 3,181.000 (wgt'ed) examples reached here.  /* #neg=2,046 #pos=1,135 */
%   | | | else return 0.22870731073403144;  // std dev = 6.779, 197.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=73 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.39386322081379693;  // std dev = 3.732, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | | else return 0.5399671169176932;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14762261931003867;  // std dev = 2.796, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.07518439823382113;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.020733052478128032;  // std dev = 5.855, 322.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=39 */
%   | | | else return 0.013704490655067304;  // std dev = 4.863, 180.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18672386673932304;  // std dev = 27.019, 3,181.000 (wgt'ed) examples reached here.  /* #neg=2,046 #pos=1,135 */
%   | | | else return 0.1985261888982772;  // std dev = 6.779, 197.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=73 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.7870731446304716;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3803392640726449;  // std dev = 4.833, 97.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=57 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1324860670698652;  // std dev = 2.552, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.030355282536869335;  // std dev = 1.337, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.07108932381801403;  // std dev = 2.904, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.015642745524145157;  // std dev = 7.058, 455.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=57 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1587233830531955;  // std dev = 27.019, 3,181.000 (wgt'ed) examples reached here.  /* #neg=2,046 #pos=1,135 */
%   | | | else return 0.1683851312523729;  // std dev = 6.779, 197.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=73 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2510894905701816;  // std dev = 3.478, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return 0.38721910151248545;  // std dev = 3.327, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03512754435254411;  // std dev = 6.115, 256.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=46 */
%   | | | else return -0.035565347286151267;  // std dev = 3.255, 111.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.020535414489330356;  // std dev = 4.308, 179.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=21 */
%   | | | else return -0.14119083285361667;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13329349601013304;  // std dev = 27.055, 3,185.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,140 */
%   | | | else return 0.1236236181717023;  // std dev = 6.631, 193.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4335815996125675;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2315185141790164;  // std dev = 4.641, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11835507789432693;  // std dev = 2.551, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.0014773544587083685;  // std dev = 6.432, 334.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.018113169511632367;  // std dev = 4.308, 179.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=21 */
%   | | | else return -0.12492187938262472;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.46366713668274684;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.10802774954795627;  // std dev = 27.815, 3,371.000 (wgt'ed) examples reached here.  /* #neg=2,168 #pos=1,203 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14226684612817272;  // std dev = 3.696, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | | else return 0.25714364001085954;  // std dev = 3.038, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11514839872547591;  // std dev = 2.780, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.07818026896818171;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.057043198659023804;  // std dev = 2.788, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return -0.013074619745388144;  // std dev = 7.048, 455.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=57 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08840796488428829;  // std dev = 27.052, 3,185.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,140 */
%   | | | else return 0.07904608055714564;  // std dev = 6.621, 193.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=68 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09239849730714277;  // std dev = 3.457, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return 0.19696673384769822;  // std dev = 3.292, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02942606740007731;  // std dev = 6.099, 256.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=46 */
%   | | | else return -0.036142475688830854;  // std dev = 3.228, 111.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.015351776433598628;  // std dev = 4.309, 179.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=21 */
%   | | | else return -0.11146765592998863;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.3477910243995033;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4384502053032583;  // std dev = 0.320, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.010973448541440459;  // std dev = 4.097, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.07239323742214655;  // std dev = 27.906, 3,383.000 (wgt'ed) examples reached here.  /* #neg=2,148 #pos=1,235 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.025639851308258972;  // std dev = 6.098, 256.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=46 */
%   | | | else return -0.03175058752244345;  // std dev = 3.229, 111.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.013595763802410813;  // std dev = 4.309, 179.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=21 */
%   | | | else return -0.10089748439687157;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05592490980217598;  // std dev = 27.043, 3,185.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,140 */
%   | | | else return 0.046939149805634704;  // std dev = 6.614, 193.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05316084897159134;  // std dev = 3.691, 56.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=30 */
%   | | | else return 0.13814506821551661;  // std dev = 3.011, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10049593895309918;  // std dev = 2.544, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.002154571253439582;  // std dev = 6.405, 334.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14575993085233002;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.012340909525871706;  // std dev = 4.305, 183.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.13675236596561657;  // std dev = 2.622, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return -0.040140665444200405;  // std dev = 3.421, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0447712518653315;  // std dev = 27.516, 3,291.000 (wgt'ed) examples reached here.  /* #neg=2,110 #pos=1,181 */
%   | | | else return 0.05950057053943237;  // std dev = 4.631, 92.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09357046871561081;  // std dev = 2.758, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.07083385678418992;  // std dev = 0.964, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04573564377803854;  // std dev = 2.788, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | | else return -0.011197936605744913;  // std dev = 7.036, 455.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=57 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03358968177478849;  // std dev = 26.999, 3,181.000 (wgt'ed) examples reached here.  /* #neg=2,046 #pos=1,135 */
%   | | | else return 0.04123729052765829;  // std dev = 6.768, 197.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=73 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.18789094577187446;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04055132349445369;  // std dev = 4.602, 90.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.021487112759262295;  // std dev = 6.086, 256.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=46 */
%   | | | else return -0.03206366062936732;  // std dev = 3.209, 111.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009738503028571552;  // std dev = 4.307, 179.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=21 */
%   | | | else return -0.08973388131621028;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.161', 'seconds']
Refined model CLL: -0.617671


******************************************
Best model found
******************************************
Results 

CLL : -0.823336 

AUC ROC : 0.515111 

AUC PR : 0.617525 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 549.428 

Total Inference Time : 11.02386999130249 

Total revision time: 564.2116420421601
Best scored revision CLL: -0.617671


Results 

CLL : -0.823336 

AUC ROC : 0.515111 

AUC PR : 0.617525 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 585.1841080341339 

Total Inference Time : 11.02386999130249 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.407
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '709', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 685.894
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21400584414790558;  // std dev = 31.311, 4,277.000 (wgt'ed) examples reached here.  /* #neg=2,755 #pos=1,522 */
%   | | | else return 0.21557865397501288;  // std dev = 7.562, 249.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3991325416568882;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.5199136409818657;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0826387310178797;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.05489454316135737;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05814893509951237;  // std dev = 3.225, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return -0.003625808927791377;  // std dev = 8.355, 586.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=81 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1860710518447014;  // std dev = 31.307, 4,275.000 (wgt'ed) examples reached here.  /* #neg=2,753 #pos=1,522 */
%   | | | else return 0.18448308716461106;  // std dev = 7.579, 251.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5983500992676382;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.379543657144974;  // std dev = 5.354, 119.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09659964013436752;  // std dev = 3.006, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return -0.06253014927323694;  // std dev = 1.352, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03760775145223701;  // std dev = 3.120, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return -0.00318501448858244;  // std dev = 8.355, 586.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=81 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15803336526181266;  // std dev = 31.311, 4,277.000 (wgt'ed) examples reached here.  /* #neg=2,755 #pos=1,522 */
%   | | | else return 0.15952382114714364;  // std dev = 7.563, 249.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.26937180814239636;  // std dev = 4.114, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | | | else return 0.38604893766822257;  // std dev = 3.625, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0679833788740872;  // std dev = 2.916, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.05374813740146789;  // std dev = 1.353, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0021756830450869176;  // std dev = 7.046, 411.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=58 */
%   | | | else return 0.00895389872698235;  // std dev = 5.532, 240.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13190631971483613;  // std dev = 31.307, 4,275.000 (wgt'ed) examples reached here.  /* #neg=2,753 #pos=1,522 */
%   | | | else return 0.1303897040278533;  // std dev = 7.579, 251.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.44543607236810745;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.23780718152643895;  // std dev = 5.325, 119.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.21155020613409306;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008316559846853179;  // std dev = 2.872, 61.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.028401918827729692;  // std dev = 3.113, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return -0.003047398413475028;  // std dev = 8.354, 586.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=81 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3949864640698162;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.1071798672328383;  // std dev = 32.143, 4,512.000 (wgt'ed) examples reached here.  /* #neg=2,910 #pos=1,602 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14207687394087526;  // std dev = 3.852, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.24099528283557703;  // std dev = 3.865, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.1515855302998897;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03621738722893598;  // std dev = 3.204, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.039466289557534125;  // std dev = 3.204, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return -0.0026781095089188356;  // std dev = 8.354, 586.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=81 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08750922445210418;  // std dev = 31.300, 4,275.000 (wgt'ed) examples reached here.  /* #neg=2,753 #pos=1,522 */
%   | | | else return 0.08495643425937037;  // std dev = 7.581, 251.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10311861977775574;  // std dev = 4.090, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | | | else return 0.19663544124018914;  // std dev = 3.596, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07471398343173749;  // std dev = 2.995, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return -0.0675937963533087;  // std dev = 1.321, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02115004019359678;  // std dev = 3.107, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return -0.0023542382096506443;  // std dev = 8.354, 586.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=81 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06997782181006845;  // std dev = 31.299, 4,275.000 (wgt'ed) examples reached here.  /* #neg=2,753 #pos=1,522 */
%   | | | else return 0.06791026076209897;  // std dev = 7.581, 251.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2615908571439369;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09750890295839369;  // std dev = 5.296, 119.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=70 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.04820709266434103;  // std dev = 2.897, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.056591764258178405;  // std dev = 1.352, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.029241168532685147;  // std dev = 3.194, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | | | else return -0.002070048051230155;  // std dev = 8.354, 586.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=81 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05547601934290073;  // std dev = 31.299, 4,275.000 (wgt'ed) examples reached here.  /* #neg=2,753 #pos=1,522 */
%   | | | else return 0.053830977625363235;  // std dev = 7.581, 251.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.22533816540680637;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07099101297937352;  // std dev = 5.291, 119.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.17053713316030455;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.006165265764632832;  // std dev = 2.850, 61.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005563604170562258;  // std dev = 7.044, 416.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=58 */
%   | | | else return 0.009560204525761982;  // std dev = 5.458, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.31342778381144204;  // std dev = 1.877, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.041400238049051144;  // std dev = 4.652, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.04488571409214042;  // std dev = 31.803, 4,406.000 (wgt'ed) examples reached here.  /* #neg=2,833 #pos=1,573 */
%   | | | else return 0.053397819080363326;  // std dev = 5.292, 119.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=70 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.0573111363768482;  // std dev = 2.987, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return -0.06790899879178787;  // std dev = 1.294, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.004876357523963037;  // std dev = 7.044, 416.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=58 */
%   | | | else return 0.00840950236346118;  // std dev = 5.458, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03426651719920135;  // std dev = 31.284, 4,275.000 (wgt'ed) examples reached here.  /* #neg=2,753 #pos=1,522 */
%   | | | else return 0.031121781910833722;  // std dev = 7.587, 251.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.009371539159763345;  // std dev = 3.830, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.08574590244839952;  // std dev = 3.840, 68.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.14164654450699968;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.008964858617931977;  // std dev = 2.836, 61.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00465897245620614;  // std dev = 7.100, 422.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=59 */
%   | | | else return 0.008401745239806581;  // std dev = 5.384, 229.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.196', 'seconds']
Refined model CLL: -0.620042


******************************************
Best model found
******************************************
Results 

CLL : -0.825313 

AUC ROC : 0.499458 

AUC PR : 0.604366 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 685.894 

Total Inference Time : 14.975920677185059 

Total revision time: 705.5363537082673
Best scored revision CLL: -0.620042


Results 

CLL : -0.825313 

AUC ROC : 0.499458 

AUC PR : 0.604366 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 726.5088197002411 

Total Inference Time : 14.975920677185059 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.087
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '633', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 925.669
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43131966680682676;  // std dev = 6.334, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870393;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5738588241704818;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36404583875914304;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248211;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489885;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2573673546891605;  // std dev = 4.468, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3565968211842242;  // std dev = 4.463, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1045962743970368;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003804;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.131365980298942;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051693;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19352357429218903;  // std dev = 4.460, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29028758412556716;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09797266390427661;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07410552729615988;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04066377358700955;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.186139961084003E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933431;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842099;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14753019315673127;  // std dev = 4.455, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2243493030497965;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08401745024449463;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06487206449610225;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.034586041271615874;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -8.071159032256147E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357497;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32680438869413353;  // std dev = 1.211, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12994900664492795;  // std dev = 6.162, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07862627315344224;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06992498305089324;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -7.852103139157629E-4;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007289839157213859;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081794;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06707453373652233;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14424046543139654;  // std dev = 4.441, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01398102361211721;  // std dev = 7.436, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.01118776078803259;  // std dev = 4.627, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00843797486655032;  // std dev = 6.183, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1382894648196452;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644011;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.056130481945304234;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2263172288345709;  // std dev = 1.211, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07098121812013138;  // std dev = 6.152, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1920027459820185;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.003857676346020425;  // std dev = 3.397, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.028762508231461432;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016993231781075259;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.3828654183434857;  // std dev = 2.088, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.00873919041180747;  // std dev = 5.591, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.04328923537091871;  // std dev = 35.490, 5,500.000 (wgt'ed) examples reached here.  /* #neg=3,547 #pos=1,953 */
%   | | | else return 0.0514637164850373;  // std dev = 6.147, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.06718449817407023;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.062298241161042496;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.018491577020142827;  // std dev = 3.612, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0014921815823296344;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.2660343494420924;  // std dev = 2.004, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.033351290598101054;  // std dev = 35.920, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1814212716192856;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.03867659640888904;  // std dev = 6.147, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05798523600083781;  // std dev = 3.489, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0028054619283236484;  // std dev = 8.011, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007229217727294033;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12220765450163329;  // std dev = 0.021, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.175', 'seconds']
Refined model CLL: -0.621315


******************************************
Best model found
******************************************
Results 

CLL : -0.826248 

AUC ROC : 0.502576 

AUC PR : 0.607194 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 925.669 

Total Inference Time : 18.86403751373291 

Total revision time: 950.8707966384887
Best scored revision CLL: -0.621315


Results 

CLL : -0.826248 

AUC ROC : 0.502576 

AUC PR : 0.607194 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 971.8432626304626 

Total Inference Time : 18.86403751373291 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.195
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '746', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 119.75200000000001
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.35368464938522187;  // std dev = 0.500, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4581489350995123;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.6228548174524535;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.003982268432845658;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0023161811795574592;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30496642932603735;  // std dev = 0.500, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3927941835770486;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.5291399941450576;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16653882456488167;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.00349681779356734;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.10843064848863138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.023790308443184655;  // std dev = 2.099, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.25346293076875676;  // std dev = 0.500, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.32092546969114216;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.4212666781024635;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1420942428155646;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.0030694032306089144;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -7.085949897884234E-4;  // std dev = 2.269, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return -0.12285781730051482;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20398943693384508;  // std dev = 0.500, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2520656448143302;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.3211489039020865;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.11914890490746421;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.0026933502788516806;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.09482737736185953;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.019697338510222883;  // std dev = 2.096, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1601435264688717;  // std dev = 0.500, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.18968516289011125;  // std dev = 1.775, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.24397847759089306;  // std dev = 1.872, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.09841340278401871;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.0023626907537050343;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 3.002344294469857E-4;  // std dev = 2.267, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return -0.10830271077888082;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12356064425843194;  // std dev = 0.500, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.13836863038277977;  // std dev = 1.893, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.18792099931791106;  // std dev = 1.750, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.08026654944252264;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.0020721025595285976;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13474282037712962;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0036562934401862903;  // std dev = 2.259, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09426959556960719;  // std dev = 0.500, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10195037979433479;  // std dev = 1.771, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.14452298409945974;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.08770772961724176;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.010247631498037089;  // std dev = 0.915, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03953154668127817;  // std dev = 3.097, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return -0.010619957565123786;  // std dev = 2.278, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.10509500683202523;  // std dev = 1.660, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.2812531080757491;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.0762841639763702;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.0784603182634577;  // std dev = 14.846, 887.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=451 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.06210822602632431;  // std dev = 2.303, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.0028531599634624154;  // std dev = 2.445, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11537033305729544;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.00117246517274481;  // std dev = 2.258, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05373379965886542;  // std dev = 0.499, 896.000 (wgt'ed) examples reached here.  /* #neg=452 #pos=444 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0516564696975201;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.0970463296514377;  // std dev = 1.751, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.07783347150349706;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.01176758476568472;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029796802004591796;  // std dev = 3.091, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return -0.00965938238229232;  // std dev = 2.278, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.21381596384514526;  // std dev = 1.451, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.14980164666118265;  // std dev = 0.998, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.37475599729858305;  // std dev = 0.284, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.023325470480784188;  // std dev = 1.609, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.04270655006212152;  // std dev = 14.748, 872.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=435 */
%   | | | else return 0.05854974574034906;  // std dev = 2.579, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025300894115951943;  // std dev = 3.091, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return -0.00850098436525359;  // std dev = 2.278, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.601', 'seconds']
Refined model CLL: -0.661017


******************************************
Best model found
******************************************
Results 

CLL : -0.609628 

AUC ROC : 0.559693 

AUC PR : 0.251671 

Precision : 0.5 

Recall : 0.030981 

F1 : 0.058347 

Total Learning Time : 119.75200000000001 

Total Inference Time : 1.825469970703125 

Total revision time: 123.68936822128296
Best scored revision CLL: -0.661017


Results 

CLL : -0.609628 

AUC ROC : 0.559693 

AUC PR : 0.251671 

Precision : 0.5 

Recall : 0.030981 

F1 : 0.058347 

Total Learning Time : 144.66183421325684 

Total Inference Time : 1.825469970703125 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.616
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '791', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 228.062
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3548266759632947;  // std dev = 0.500, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.45814893509951155;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.572434649385226;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.14116780302404067;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.00814893509951235;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.03719990210979;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30593223304379497;  // std dev = 0.500, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.39279418357704904;  // std dev = 2.898, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.48767788391726324;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12310004502626207;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.007154072572586247;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.032731629105728646;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2542180160136504;  // std dev = 0.500, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3083068892460823;  // std dev = 2.683, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return 0.3946897753543912;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10586231690733508;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.00627588087099222;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.028898482350066822;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20453978406389067;  // std dev = 0.500, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24249311628144943;  // std dev = 2.887, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.3131087170413677;  // std dev = 2.392, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.08989990167309866;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.005501795651305102;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.02558978825684682;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6638465543920804;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3922205694758257;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.1594021099476358;  // std dev = 21.212, 1,800.000 (wgt'ed) examples reached here.  /* #neg=908 #pos=892 */
%   | | | else return 0.20184524741347362;  // std dev = 3.735, 62.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=40 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07550386487498519;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.004820340935424076;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.022718348351453956;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12378082813833796;  // std dev = 0.500, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1213332415496539;  // std dev = 2.668, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return 0.19167557878189712;  // std dev = 2.619, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.06281282639169541;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.0042211006975703125;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.020214586426370938;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0944145990632377;  // std dev = 0.500, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09279694287876881;  // std dev = 2.870, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.1495769129374749;  // std dev = 2.395, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.09609781307004418;  // std dev = 1.621, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.014947468343345422;  // std dev = 4.280, 120.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01802235054634008;  // std dev = 2.839, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07152155593536354;  // std dev = 0.500, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06014868659399446;  // std dev = 2.661, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return 0.11705780705033003;  // std dev = 2.621, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.04636801854638254;  // std dev = 3.274, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.0014226607340078;  // std dev = 3.195, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11283021744950444;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.013334179157470392;  // std dev = 2.832, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09733448016689074;  // std dev = 2.402, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.19765871448569325;  // std dev = 1.822, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.0578067813731749;  // std dev = 2.921, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.05874818923265782;  // std dev = 21.112, 1,789.000 (wgt'ed) examples reached here.  /* #neg=884 #pos=905 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.010386909567730177;  // std dev = 4.350, 124.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=24 */
%   | | | else return 0.09107497920344428;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.014102046420329872;  // std dev = 2.837, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | | else return -0.07127958475880179;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04046056654594694;  // std dev = 0.499, 1,806.000 (wgt'ed) examples reached here.  /* #neg=909 #pos=897 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03470615451936271;  // std dev = 2.869, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.08060599447858986;  // std dev = 2.397, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.07111800013514556;  // std dev = 1.615, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.006988583620613751;  // std dev = 4.277, 120.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10020350834294682;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.010297012379342581;  // std dev = 2.832, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.519', 'seconds']
Refined model CLL: -0.6627


******************************************
Best model found
******************************************
Results 

CLL : -0.609439 

AUC ROC : 0.559758 

AUC PR : 0.252032 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 228.062 

Total Inference Time : 2.575685501098633 

Total revision time: 233.2458029060364
Best scored revision CLL: -0.6627


Results 

CLL : -0.609439 

AUC ROC : 0.559758 

AUC PR : 0.252032 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 254.21826889801028 

Total Inference Time : 2.575685501098633 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.063
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '723', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 379.753
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3468818497651888;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.46926004621062234;  // std dev = 3.582, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   | | | else return 0.5781489350995113;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=36 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.20338703033760624;  // std dev = 4.358, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.054870246574921684;  // std dev = 4.391, 122.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.00272063011787895;  // std dev = 3.711, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29921077119035416;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.6401456338753749;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4314478327725012;  // std dev = 4.690, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.17678256367568;  // std dev = 4.358, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.04805877949099275;  // std dev = 4.391, 122.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0023897721974509307;  // std dev = 3.711, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24895680648594165;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6496728620510699;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3516049430740572;  // std dev = 4.768, 101.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=66 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | | then return 0.15054992327889954;  // std dev = 4.358, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.0418731114675535;  // std dev = 4.391, 122.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=24 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.002099682078805906;  // std dev = 3.711, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20069869807423957;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23275578134434213;  // std dev = 3.395, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | | | else return 0.32226357531592814;  // std dev = 3.335, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05793713163654259;  // std dev = 5.813, 188.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=45 */
%   | | | else return 0.22834026275776076;  // std dev = 2.096, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13605323532530844;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -3.2880072376716737E-4;  // std dev = 3.704, 116.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1578627070722601;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1709829421434597;  // std dev = 3.555, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   | | | else return 0.25548105239935226;  // std dev = 3.153, 50.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=36 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10939860179035373;  // std dev = 4.344, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.028149743875981834;  // std dev = 4.392, 122.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -8.530336856797731E-4;  // std dev = 3.707, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.10026271421666991;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12203035987979638;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.12225989653797942;  // std dev = 3.381, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | | | else return 0.19307923281806721;  // std dev = 3.335, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.16217919363535457;  // std dev = 2.152, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.03866825884415871;  // std dev = 5.784, 186.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=45 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -7.503820444592234E-4;  // std dev = 3.707, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.0915747403227883;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09325871698139819;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08767521596248215;  // std dev = 3.545, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   | | | else return 0.15407647314002337;  // std dev = 3.155, 50.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=36 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.030871972253523405;  // std dev = 5.796, 188.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=45 */
%   | | | else return 0.158720741197959;  // std dev = 2.092, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -6.601353217781707E-4;  // std dev = 3.707, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.08423728446435771;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07075993638494256;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.29932448728413474;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08418803177904711;  // std dev = 4.739, 101.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=66 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.025784829025212473;  // std dev = 5.796, 188.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=45 */
%   | | | else return 0.12532939838579527;  // std dev = 2.090, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11812067518939333;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0015215989825478708;  // std dev = 3.699, 116.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053452822057826886;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03975109472222015;  // std dev = 3.370, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | | | else return 0.09584125858056297;  // std dev = 3.333, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.055419719799126084;  // std dev = 4.314, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return 0.009318453219395324;  // std dev = 4.397, 122.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -1.1793885644926033E-6;  // std dev = 3.705, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.07725313805500238;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040271049180755976;  // std dev = 0.500, 2,707.000 (wgt'ed) examples reached here.  /* #neg=1,384 #pos=1,323 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.026730322557418047;  // std dev = 3.536, 54.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=33 */
%   | | | else return 0.080583308981395;  // std dev = 3.154, 50.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=36 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.11038323669697361;  // std dev = 2.143, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.013155265674605829;  // std dev = 5.766, 186.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=45 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -1.0381820116126104E-6;  // std dev = 3.705, 115.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=16 */
%   | | | else return -0.07192480097520466;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.351', 'seconds']
Refined model CLL: -0.670704


******************************************
Best model found
******************************************
Results 

CLL : -0.607203 

AUC ROC : 0.557648 

AUC PR : 0.246191 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 379.753 

Total Inference Time : 3.1481919288635254 

Total revision time: 386.0591581020355
Best scored revision CLL: -0.670704


Results 

CLL : -0.607203 

AUC ROC : 0.557648 

AUC PR : 0.246191 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 407.0316240940094 

Total Inference Time : 3.1481919288635254 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.655
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '756', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 582.628
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3439822684328405;  // std dev = 29.988, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,749 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.45235183365023707;  // std dev = 4.079, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.5482897801699353;  // std dev = 3.897, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.26332134889261644;  // std dev = 5.287, 116.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=47 */
%   | | | else return 0.04682818038253037;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02048659743717422;  // std dev = 4.576, 154.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29757652983792177;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.381546781144712;  // std dev = 4.151, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | | else return 0.47803422138366153;  // std dev = 3.806, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.22815379379480138;  // std dev = 5.287, 116.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=47 */
%   | | | else return 0.041031659967106504;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14092348561786563;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.018147647415901753;  // std dev = 4.573, 155.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=25 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24767610793289274;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.30742320709942056;  // std dev = 4.066, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.38656195118430714;  // std dev = 3.892, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.19243862022849118;  // std dev = 5.287, 116.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=47 */
%   | | | else return 0.035792912049292476;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016817373298777347;  // std dev = 4.571, 154.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=25 */
%   | | | else return -0.12467135526840134;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19976412741311025;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5127442205958538;  // std dev = 0.914, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2557690876855355;  // std dev = 5.519, 132.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=83 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.15843444597390582;  // std dev = 5.287, 116.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=47 */
%   | | | else return 0.031099485715739544;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.014714073801636213;  // std dev = 4.570, 154.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=25 */
%   | | | else return -0.11169455943615299;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15721752946037038;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16820329073336654;  // std dev = 4.127, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | | else return 0.24500328513849468;  // std dev = 3.784, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.053029801646047654;  // std dev = 6.773, 249.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=64 */
%   | | | else return 0.2270974209832479;  // std dev = 2.529, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.12376582845701566;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.013727660749464677;  // std dev = 4.565, 155.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=25 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12160129523005285;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3370384626526526;  // std dev = 0.904, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14352944955076974;  // std dev = 5.510, 132.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=83 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10910281788598923;  // std dev = 5.270, 116.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=47 */
%   | | | else return 0.019444405987096743;  // std dev = 4.935, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11098436660488781;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.01199439418184964;  // std dev = 4.565, 155.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=25 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09297955385319004;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08289197590641516;  // std dev = 4.021, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.14858701243060649;  // std dev = 3.876, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0343478154991066;  // std dev = 6.761, 249.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=64 */
%   | | | else return 0.1563728344499555;  // std dev = 2.524, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.011161909137729704;  // std dev = 4.563, 154.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=25 */
%   | | | else return -0.10019675358390372;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07058028942294578;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05823401162832684;  // std dev = 4.114, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | | | else return 0.1186293925448642;  // std dev = 3.772, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.14798780533363398;  // std dev = 2.626, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.023630082447971254;  // std dev = 6.705, 245.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=64 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009725390766558968;  // std dev = 4.563, 154.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=25 */
%   | | | else return -0.09153211241829046;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05333772760447383;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21273000920179622;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05741784721506164;  // std dev = 5.500, 132.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=83 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.016403541780600953;  // std dev = 6.484, 246.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=60 */
%   | | | else return 0.18341101372290958;  // std dev = 2.421, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10012437017850014;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.010597438916418392;  // std dev = 4.834, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040197404952376774;  // std dev = 0.500, 3,607.000 (wgt'ed) examples reached here.  /* #neg=1,851 #pos=1,756 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.02262581004209285;  // std dev = 4.009, 69.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=41 */
%   | | | else return 0.07770899756248217;  // std dev = 3.873, 71.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=49 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.11534318716375865;  // std dev = 2.617, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.014269149190226654;  // std dev = 6.680, 245.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=64 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0061656533871547285;  // std dev = 4.564, 154.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=25 */
%   | | | else return -0.08402454711089269;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.566', 'seconds']
Refined model CLL: -0.672476


******************************************
Best model found
******************************************
Results 

CLL : -0.605432 

AUC ROC : 0.557646 

AUC PR : 0.24619 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 582.628 

Total Inference Time : 4.220139980316162 

Total revision time: 590.6712915973663
Best scored revision CLL: -0.672476


Results 

CLL : -0.605432 

AUC ROC : 0.557646 

AUC PR : 0.24619 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 611.6437575893402 

Total Inference Time : 4.220139980316162 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.358
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '752', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 610.404
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3073171177232837;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.38658450978812636;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6176437836000427;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.263447906124053;  // std dev = 6.337, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16700851790614246;  // std dev = 4.649, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24433870625504572;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559878;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12578658860931616;  // std dev = 4.649, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1836978293372978;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041033921494960136;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07342398208298014;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021515757896624955;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08643490497900833;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14647052475968952;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03444964905968145;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971410384811948;  // std dev = 2.936, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01549504975385874;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08532461712318504;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.24502460495031256;  // std dev = 1.188, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07784498644727071;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026395161011138108;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17211129695474153;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06729373266459869;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014206603161461395;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.23794546338342817;  // std dev = 4.116, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.14966103527531233;  // std dev = 2.851, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.052353867865729015;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.05707431042979018;  // std dev = 6.194, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.022206507586874473;  // std dev = 7.499, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13256997091587291;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.08084135850451839;  // std dev = 0.954, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.00954917962521271;  // std dev = 5.335, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.40882939391280493;  // std dev = 1.265, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.01275260035671935;  // std dev = 4.829, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.034537445128585816;  // std dev = 4.962, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.03971312884359578;  // std dev = 33.325, 4,459.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=2,187 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.13480214354526046;  // std dev = 2.861, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015462850649593978;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.08426010513112095;  // std dev = 0.949, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.007083742838935022;  // std dev = 5.328, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.430', 'seconds']
Refined model CLL: -0.672947


******************************************
Best model found
******************************************
Results 

CLL : -0.604116 

AUC ROC : 0.561731 

AUC PR : 0.249263 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 610.404 

Total Inference Time : 4.095717430114746 

Total revision time: 619.0624484176635
Best scored revision CLL: -0.672947


Results 

CLL : -0.604116 

AUC ROC : 0.561731 

AUC PR : 0.249263 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 640.0349144096374 

Total Inference Time : 4.095717430114746 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.281
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '657', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 159.502
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2540038573793003;  // std dev = 15.192, 965.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=382 */
%   | | | else return 0.17633075328133013;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5381489350995123;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.023097388707759806;  // std dev = 3.655, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return 0.051131391239863246;  // std dev = 2.979, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2201896202264607;  // std dev = 15.192, 965.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=382 */
%   | | | else return 0.15348236051677044;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.36337168316910756;  // std dev = 1.846, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.4852269466478886;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.01947080763610207;  // std dev = 0.932, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.0058655307738599205;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03143178278863944;  // std dev = 3.626, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return 0.024644224169225678;  // std dev = 3.277, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18600106068811093;  // std dev = 15.192, 965.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=382 */
%   | | | else return 0.13126760833378437;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.20537008984334196;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.38297187158358403;  // std dev = 2.337, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.06722152406200504;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.12776447270801766;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.016918834532419755;  // std dev = 3.655, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return 0.0418775816369873;  // std dev = 2.979, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1534988420281454;  // std dev = 15.192, 965.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=382 */
%   | | | else return 0.11049397908378251;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1611657451286356;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2976255204250792;  // std dev = 2.339, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.019263330318587252;  // std dev = 0.929, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.010965060999493221;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.0067715443320896926;  // std dev = 1.806, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.024609769288390426;  // std dev = 4.534, 141.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12421271592290328;  // std dev = 15.192, 965.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=382 */
%   | | | else return 0.09172466407655455;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15488741991018587;  // std dev = 1.802, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.24801667378697068;  // std dev = 1.891, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.05741334071620249;  // std dev = 1.763, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.11462333731450584;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.011716458005101703;  // std dev = 3.654, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return 0.03413167159778368;  // std dev = 2.979, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09590934436496917;  // std dev = 15.170, 968.000 (wgt'ed) examples reached here.  /* #neg=589 #pos=379 */
%   | | | else return 0.12089068633521839;  // std dev = 3.868, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.07220999967584073;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.17498939292084897;  // std dev = 2.341, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.01867170219105465;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.014462166669152291;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.004520531123011817;  // std dev = 1.795, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.018847924298526803;  // std dev = 4.534, 141.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=25 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07843721803080811;  // std dev = 15.192, 965.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=382 */
%   | | | else return 0.05402656050605799;  // std dev = 3.780, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07728616340116101;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.14920507596617896;  // std dev = 1.897, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.01639558462195168;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.012554599033865414;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.013938895233848527;  // std dev = 4.056, 117.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=20 */
%   | | | else return 0.015456305637353784;  // std dev = 2.706, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.36546562441237346;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.021115701873816853;  // std dev = 2.346, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return 0.05999693332216831;  // std dev = 0.487, 1,026.000 (wgt'ed) examples reached here.  /* #neg=619 #pos=407 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.04703969440295651;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.10479467521081447;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00602444178236597;  // std dev = 3.654, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return 0.026413424508069678;  // std dev = 2.979, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04466984101378467;  // std dev = 15.153, 968.000 (wgt'ed) examples reached here.  /* #neg=589 #pos=379 */
%   | | | else return 0.07162539798059672;  // std dev = 3.872, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0461338878854098;  // std dev = 1.776, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.10351584477981887;  // std dev = 1.902, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.040139050359755596;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.09536391083688024;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.005217567012457136;  // std dev = 3.654, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | | else return 0.02271593215619254;  // std dev = 2.979, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.034489182016344475;  // std dev = 15.152, 968.000 (wgt'ed) examples reached here.  /* #neg=589 #pos=379 */
%   | | | else return 0.05618607269352019;  // std dev = 3.873, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.00791087280292263;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07148987663413339;  // std dev = 2.346, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.034085157594019116;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.08744916352680211;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.015751588367527512;  // std dev = 3.830, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 8.928515789409508E-5;  // std dev = 2.749, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.700', 'seconds']
Refined model CLL: -0.635968


******************************************
Best model found
******************************************
Results 

CLL : -0.676281 

AUC ROC : 0.536639 

AUC PR : 0.447796 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 159.502 

Total Inference Time : 5.307790279388428 

Total revision time: 167.0442147331238
Best scored revision CLL: -0.635968


Results 

CLL : -0.676281 

AUC ROC : 0.536639 

AUC PR : 0.447796 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 188.01668072509767 

Total Inference Time : 5.307790279388428 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.835
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '673', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 321.344
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24462984325224207;  // std dev = 21.437, 1,938.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=749 */
%   | | | else return 0.2767535862623041;  // std dev = 5.603, 129.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=54 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5672398441904211;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.052743529694105826;  // std dev = 5.385, 185.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=36 */
%   | | | else return -0.06185106490048773;  // std dev = 1.918, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05473013168070851;  // std dev = 4.299, 117.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21558724102031418;  // std dev = 21.489, 1,941.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=757 */
%   | | | else return 0.1876156409413848;  // std dev = 5.397, 126.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.30874113578563506;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4833922100400563;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.048313766266495;  // std dev = 5.302, 178.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */
%   | | | else return -0.04871988048283553;  // std dev = 2.134, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04793639694276867;  // std dev = 4.299, 117.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=23 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17903167941001943;  // std dev = 21.435, 1,938.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=749 */
%   | | | else return 0.2087893425603044;  // std dev = 5.606, 129.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=54 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3137123879573138;  // std dev = 2.346, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.4150440491526167;  // std dev = 2.699, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04052143173782284;  // std dev = 5.384, 185.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=36 */
%   | | | else return -0.049142611620502395;  // std dev = 1.919, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.041767346562952216;  // std dev = 4.299, 117.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=23 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15121544618280724;  // std dev = 21.490, 1,941.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=757 */
%   | | | else return 0.12399789592339908;  // std dev = 5.388, 126.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.24308398768621697;  // std dev = 2.344, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.31978701145257754;  // std dev = 2.699, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13167844406396004;  // std dev = 2.372, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.1522415491749217;  // std dev = 0.077, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.013182116649836121;  // std dev = 5.230, 201.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=33 */
%   | | | else return 0.03068952145710341;  // std dev = 4.213, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1196357889317538;  // std dev = 21.432, 1,938.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=749 */
%   | | | else return 0.14647884050470134;  // std dev = 5.610, 129.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=54 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.11924639213781328;  // std dev = 1.209, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.22966271492203633;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=39 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0010164432099521615;  // std dev = 4.845, 179.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=28 */
%   | | | else return 0.09365616475973539;  // std dev = 2.433, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13556336660255036;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.030556377534553765;  // std dev = 4.639, 143.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D), haswordtitle(F, D) )
%   | | then return 0.7088695358937107;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09511352088433617;  // std dev = 22.105, 2,061.000 (wgt'ed) examples reached here.  /* #neg=1,264 #pos=797 */
%   | | | else return 0.1644036955646316;  // std dev = 3.576, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.029792892302332948;  // std dev = 5.274, 178.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */
%   | | | else return -0.0428478873373371;  // std dev = 2.139, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03182107869200776;  // std dev = 4.296, 117.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=23 */
%   | | | else return -0.09971149488071145;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07798089519401005;  // std dev = 21.469, 1,941.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=757 */
%   | | | else return 0.052866627373234325;  // std dev = 5.377, 126.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09015253699112673;  // std dev = 2.334, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.145893251805034;  // std dev = 2.700, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.024528750176619287;  // std dev = 5.355, 185.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=36 */
%   | | | else return -0.04296636470056139;  // std dev = 1.924, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0273957509843292;  // std dev = 4.296, 117.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=23 */
%   | | | else return -0.09111571618778432;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05830080980359205;  // std dev = 21.408, 1,938.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=749 */
%   | | | else return 0.08251267710699182;  // std dev = 5.615, 129.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=54 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06795746048393085;  // std dev = 2.334, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.11109314612402285;  // std dev = 2.700, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.021041485947594148;  // std dev = 5.355, 185.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=36 */
%   | | | else return -0.038408573898905424;  // std dev = 1.924, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023510471492796663;  // std dev = 4.296, 117.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=23 */
%   | | | else return -0.08384974723243803;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.17763977060808006;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.573217024108084;  // std dev = 0.217, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04423428185118867;  // std dev = 22.077, 2,058.000 (wgt'ed) examples reached here.  /* #neg=1,264 #pos=794 */
%   | | | else return 0.0799515318871919;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01915046422833352;  // std dev = 5.272, 178.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */
%   | | | else return -0.03159212496857496;  // std dev = 2.138, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020120244753775707;  // std dev = 4.296, 117.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=23 */
%   | | | else return -0.07763222008389715;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.30341349333581374;  // std dev = 2.650, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return -0.12423860572849803;  // std dev = 2.807, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else return 0.03567959223718775;  // std dev = 0.486, 2,045.000 (wgt'ed) examples reached here.  /* #neg=1,238 #pos=807 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10109778782375294;  // std dev = 2.354, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.14257806145765803;  // std dev = 0.118, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0015463016232284783;  // std dev = 5.209, 201.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=33 */
%   | | | else return 0.014110629017362037;  // std dev = 4.206, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.228', 'seconds']
Refined model CLL: -0.633528


******************************************
Best model found
******************************************
Results 

CLL : -0.677627 

AUC ROC : 0.541411 

AUC PR : 0.452109 

Precision : 0.55 

Recall : 0.058902 

F1 : 0.106409 

Total Learning Time : 321.344 

Total Inference Time : 8.55801248550415 

Total revision time: 332.80782089614866
Best scored revision CLL: -0.633528


Results 

CLL : -0.677627 

AUC ROC : 0.541411 

AUC PR : 0.452109 

Precision : 0.55 

Recall : 0.058902 

F1 : 0.106409 

Total Learning Time : 353.78028688812253 

Total Inference Time : 8.55801248550415 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.45
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '696', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 591.189
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24435817422994202;  // std dev = 26.417, 2,944.000 (wgt'ed) examples reached here.  /* #neg=1,807 #pos=1,137 */
%   | | | else return 0.26229401281972003;  // std dev = 6.817, 193.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=78 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.5410757643678057;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.007755234312109936;  // std dev = 5.685, 254.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=38 */
%   | | | else return 0.11814893509951237;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04985877965909669;  // std dev = 5.469, 193.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=37 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21193633274509208;  // std dev = 26.417, 2,944.000 (wgt'ed) examples reached here.  /* #neg=1,807 #pos=1,137 */
%   | | | else return 0.22727607349472057;  // std dev = 6.817, 193.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3991261833286642;  // std dev = 2.825, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.484205695188032;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04333874264472837;  // std dev = 6.281, 255.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=49 */
%   | | | else return -0.046219327161251315;  // std dev = 2.688, 81.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0497488547513263;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18090149350216386;  // std dev = 26.463, 2,949.000 (wgt'ed) examples reached here.  /* #neg=1,805 #pos=1,144 */
%   | | | else return 0.16706296356402897;  // std dev = 6.638, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3235087809777111;  // std dev = 2.823, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.3903616162315891;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03776567608902793;  // std dev = 6.280, 255.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=49 */
%   | | | else return -0.04058423558309845;  // std dev = 2.688, 81.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04355039897808888;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14810376803238282;  // std dev = 26.416, 2,944.000 (wgt'ed) examples reached here.  /* #neg=1,807 #pos=1,137 */
%   | | | else return 0.16155871370240338;  // std dev = 6.820, 193.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2522563380807108;  // std dev = 2.822, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.30102791643237975;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03277120508469056;  // std dev = 6.280, 255.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=49 */
%   | | | else return -0.03578857585963019;  // std dev = 2.688, 81.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03794354638277792;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12165752202116184;  // std dev = 26.464, 2,949.000 (wgt'ed) examples reached here.  /* #neg=1,805 #pos=1,144 */
%   | | | else return 0.10814914931272525;  // std dev = 6.632, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.09041870476093739;  // std dev = 1.206, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.22254152868149793;  // std dev = 4.206, 82.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.028331851952584395;  // std dev = 6.280, 255.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=49 */
%   | | | else return -0.03167592810749646;  // std dev = 2.688, 81.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032919043015442045;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09584493567951792;  // std dev = 26.415, 2,944.000 (wgt'ed) examples reached here.  /* #neg=1,807 #pos=1,137 */
%   | | | else return 0.10766812797049813;  // std dev = 6.824, 193.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=78 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12954724601345716;  // std dev = 2.675, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return 0.17802593997040086;  // std dev = 3.463, 56.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02441421868429673;  // std dev = 6.280, 255.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=49 */
%   | | | else return -0.0281254704107582;  // std dev = 2.688, 81.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02845343296121929;  // std dev = 5.003, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07701486913346133;  // std dev = 26.465, 2,949.000 (wgt'ed) examples reached here.  /* #neg=1,805 #pos=1,144 */
%   | | | else return 0.06445049324313529;  // std dev = 6.626, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0961901170119253;  // std dev = 2.812, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.13599153819295673;  // std dev = 3.352, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.07437845864254591;  // std dev = 2.733, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return -0.09923699931635124;  // std dev = 0.967, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004976430159060378;  // std dev = 6.234, 287.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=47 */
%   | | | else return 0.021628333350741463;  // std dev = 4.925, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.31970611617782874;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=33 */
%   | | | else return -0.10013959282229327;  // std dev = 3.253, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05852860464047083;  // std dev = 26.820, 3,035.000 (wgt'ed) examples reached here.  /* #neg=1,863 #pos=1,172 */
%   | | | else return 0.09531958851657517;  // std dev = 4.112, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.0417469432416887;  // std dev = 2.346, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.09228429800671756;  // std dev = 0.962, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.004691182236045186;  // std dev = 5.947, 263.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=43 */
%   | | | else return 0.021853441030118978;  // std dev = 5.458, 197.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=37 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.045575513861340726;  // std dev = 26.375, 2,944.000 (wgt'ed) examples reached here.  /* #neg=1,807 #pos=1,137 */
%   | | | else return 0.05643087929412976;  // std dev = 6.828, 193.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=78 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04961098940062278;  // std dev = 2.673, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | | else return 0.087411626516118;  // std dev = 3.461, 56.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01782076773700719;  // std dev = 6.201, 250.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=48 */
%   | | | else return -0.02564362254179901;  // std dev = 2.846, 86.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020873685851161092;  // std dev = 4.997, 161.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=31 */
%   | | | else return -0.07876417519876942;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03643679921892815;  // std dev = 26.427, 2,949.000 (wgt'ed) examples reached here.  /* #neg=1,805 #pos=1,144 */
%   | | | else return 0.025443487485943238;  // std dev = 6.621, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03242822633019122;  // std dev = 2.801, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.0711438697237331;  // std dev = 3.356, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.03280872066643334;  // std dev = 2.346, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return -0.08193540049078615;  // std dev = 0.962, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0027701250256816686;  // std dev = 5.945, 263.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=43 */
%   | | | else return 0.017020737154618402;  // std dev = 5.456, 197.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.656', 'seconds']
Refined model CLL: -0.637383


******************************************
Best model found
******************************************
Results 

CLL : -0.677423 

AUC ROC : 0.541457 

AUC PR : 0.453923 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 591.189 

Total Inference Time : 14.95432734489441 

Total revision time: 609.71792370224
Best scored revision CLL: -0.637383


Results 

CLL : -0.677423 

AUC ROC : 0.541457 

AUC PR : 0.453923 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 630.6903896942139 

Total Inference Time : 14.95432734489441 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.217
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '728', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 767.952
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.24566157412882975;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.2164166516349436;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.443514788758048;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.6010060779566556;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.09029179224236951;  // std dev = 3.159, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.0418510649004878;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.07689893509951237;  // std dev = 3.307, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return 0.026102603053179893;  // std dev = 8.508, 518.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=87 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2130520913364915;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.1879791255240912;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3805537122526917;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.5112029023313442;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004669479630573721;  // std dev = 6.576, 338.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=51 */
%   | | | else return 0.12331121074572267;  // std dev = 3.630, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.05045736294930939;  // std dev = 6.139, 239.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=47 */
%   | | | else return -0.14641502283516972;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18021403812537415;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.15975313496988539;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3116660449770904;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.40833249092334817;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10249114154467681;  // std dev = 2.991, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.059693882004732475;  // std dev = 1.347, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.011810796840791053;  // std dev = 6.841, 349.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=56 */
%   | | | else return 0.040273790758951086;  // std dev = 6.085, 240.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=46 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14904014111562308;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.13310872703044277;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22622380317833485;  // std dev = 2.992, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return 0.3222383824415823;  // std dev = 3.775, 71.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.001701120877112233;  // std dev = 6.566, 338.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=51 */
%   | | | else return 0.10512060903255079;  // std dev = 3.633, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03871742932392091;  // std dev = 6.138, 239.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=47 */
%   | | | else return -0.13171588238493157;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12093029596113812;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.10904130522387925;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.11048338548587122;  // std dev = 1.668, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.23085807182311066;  // std dev = 4.514, 99.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=69 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08715591980380336;  // std dev = 2.995, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.05115742502910515;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.007416582008633398;  // std dev = 6.826, 349.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=56 */
%   | | | else return 0.030631578404095118;  // std dev = 6.079, 240.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=46 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09663014433413719;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.08808604654459386;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11705971868189317;  // std dev = 3.142, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.19124453001392253;  // std dev = 3.638, 70.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03457081820271339;  // std dev = 7.174, 322.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=65 */
%   | | | else return -0.05483261113253836;  // std dev = 3.159, 111.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.036693563770942454;  // std dev = 5.673, 211.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=40 */
%   | | | else return -0.11931196778449973;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07630332614523846;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.07036973708410313;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07248365964573109;  // std dev = 2.981, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return 0.1524553523386356;  // std dev = 3.760, 71.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.029702915846655974;  // std dev = 7.173, 322.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=65 */
%   | | | else return -0.04783224172173458;  // std dev = 3.158, 111.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.031886627286345566;  // std dev = 5.672, 211.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=40 */
%   | | | else return -0.10734125516181282;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05971619539437052;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.05573058789106003;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.051271081140102905;  // std dev = 3.138, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.1186306355582403;  // std dev = 3.629, 70.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.17148767048052474;  // std dev = 1.406, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.010091687285006536;  // std dev = 3.086, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 7.791431565453584E-4;  // std dev = 7.142, 372.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=62 */
%   | | | else return 0.026118689596198487;  // std dev = 5.600, 210.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=39 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04642524855182873;  // std dev = 30.642, 3,956.000 (wgt'ed) examples reached here.  /* #neg=2,423 #pos=1,533 */
%   | | | else return 0.043843224360773723;  // std dev = 7.642, 254.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=91 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return -0.07207236919865234;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08004092609479463;  // std dev = 4.644, 105.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=73 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.0558548851373371;  // std dev = 3.122, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.06123679755818297;  // std dev = 1.304, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.039392282416612995;  // std dev = 3.281, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return 0.004774563785612017;  // std dev = 8.461, 518.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=87 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.035651307077323204;  // std dev = 30.600, 3,952.000 (wgt'ed) examples reached here.  /* #neg=2,424 #pos=1,528 */
%   | | | else return 0.038390668432147126;  // std dev = 7.809, 258.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=96 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01137557852772672;  // std dev = 2.976, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return 0.07993368201414806;  // std dev = 3.750, 71.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.24703325753440275;  // std dev = 1.331, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.005857080012374259;  // std dev = 2.960, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03358768921323765;  // std dev = 3.379, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return 0.004122844250314532;  // std dev = 8.461, 518.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.715', 'seconds']
Refined model CLL: -0.639037


******************************************
Best model found
******************************************
Results 

CLL : -0.67739 

AUC ROC : 0.536859 

AUC PR : 0.448275 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 767.952 

Total Inference Time : 19.4511399269104 

Total revision time: 791.8552411499023
Best scored revision CLL: -0.639037


Results 

CLL : -0.67739 

AUC ROC : 0.536859 

AUC PR : 0.448275 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 812.8277071418762 

Total Inference Time : 19.4511399269104 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.304
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '663', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 838.741
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12800246769009244;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697814;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01474033747508544;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03695236799168645;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11125506497562064;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06731420093509295;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012913281013131678;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.0322966447252757;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15231694286666383;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1074858184233996;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07185133298228205;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.04336032505634241;  // std dev = 3.632, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013871120972154316;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12334450536867779;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08947483528565216;  // std dev = 3.494, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06535308966442148;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03999423922558662;  // std dev = 3.630, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.012091930830042409;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09833997009753306;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08637421906056632;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06870809215251164;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006233125094103294;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023148582863749437;  // std dev = 6.419, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2787725098335683;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.04165439510562171;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.07675446125985838;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.20345243892648224;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.007356842864396792;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.005419097700186666;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020027450230211158;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.372464473187122;  // std dev = 2.328, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.023665797212015838;  // std dev = 5.821, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.05993068054688612;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06901526903409691;  // std dev = 3.477, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0665799471337469;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0047085306403663995;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01728774958326245;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0468841609799467;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19993840031842988;  // std dev = 1.558, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0010594960261198908;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0021738781764578784;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01667405924520041;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.03106609910047775;  // std dev = 34.264, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.045654323786551286;  // std dev = 8.381, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1130962825562619;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036670567232485754;  // std dev = 8.111, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06346437881362592;  // std dev = 7.113, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10500442196336329;  // std dev = 1.680, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.44970352362116134;  // std dev = 2.538, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.16596990053068375;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.175', 'seconds']
Refined model CLL: -0.640816


******************************************
Best model found
******************************************
Results 

CLL : -0.678394 

AUC ROC : 0.542617 

AUC PR : 0.45758 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 838.741 

Total Inference Time : 5.712362051010132 

Total revision time: 849.9574956130981
Best scored revision CLL: -0.640816


Results 

CLL : -0.678394 

AUC ROC : 0.542617 

AUC PR : 0.45758 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 870.929961605072 

Total Inference Time : 5.712362051010132 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.334
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '629', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 150.57999999999998
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.23153949303942162;  // std dev = 16.510, 1,165.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=435 */
%   | | | else return 0.20143251718906383;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.07436515131572859;  // std dev = 2.504, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.011995088945666187;  // std dev = 2.602, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | else return 0.0010060779566551672;  // std dev = 0.350, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6053418083796228;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2398292123971953;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.19595251562830718;  // std dev = 16.749, 1,206.000 (wgt'ed) examples reached here.  /* #neg=762 #pos=444 */
%   | | | else return 0.20814060388699634;  // std dev = 2.817, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1480150700576722;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04398969433553981;  // std dev = 3.596, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return 8.835646163368949E-4;  // std dev = 2.268, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.501523563613322;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.20296007559822432;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.16620369107907412;  // std dev = 16.749, 1,206.000 (wgt'ed) examples reached here.  /* #neg=762 #pos=444 */
%   | | | else return 0.1761969566903593;  // std dev = 2.815, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.019836395934115687;  // std dev = 3.021, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return 0.11584952652072357;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 4.3488404582722224E-4;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.6446443844295003;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0999115545671583;  // std dev = 1.986, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13810618414200493;  // std dev = 16.741, 1,207.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=446 */
%   | | | else return 0.12770547255506345;  // std dev = 2.746, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01733518183650071;  // std dev = 3.021, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return 0.09991068824379128;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 3.801348688935323E-4;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11553095750080804;  // std dev = 16.457, 1,165.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=435 */
%   | | | else return 0.09298590266152564;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028569715242151246;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.19632083931545094;  // std dev = 2.178, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.13295123052073807;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.032960475247426256;  // std dev = 3.589, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return -0.0036017469453262377;  // std dev = 2.267, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09284699120975096;  // std dev = 16.455, 1,165.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=435 */
%   | | | else return 0.07513579796031428;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.023348260460522963;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.15531117582705883;  // std dev = 2.178, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014500565924245945;  // std dev = 3.017, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return 0.0800838449828298;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return -0.003047709037844453;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07376100874874383;  // std dev = 16.454, 1,165.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=435 */
%   | | | else return 0.06013673187030969;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.025606561327997285;  // std dev = 2.126, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.15699428625590542;  // std dev = 1.762, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.11918106261758239;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.026552972598757767;  // std dev = 3.587, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | | else return -0.004867366839652697;  // std dev = 2.267, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05808182490176871;  // std dev = 16.453, 1,165.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=435 */
%   | | | else return 0.04777312479359875;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.020195303025019228;  // std dev = 2.126, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.12323830082151742;  // std dev = 1.760, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01224910489737357;  // std dev = 3.015, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | | | else return 0.06295317773990247;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return -0.005427530935291262;  // std dev = 0.354, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04543013398104547;  // std dev = 16.452, 1,165.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=435 */
%   | | | else return 0.03773144665175235;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.00847243262837644;  // std dev = 1.704, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.08961759511508866;  // std dev = 2.164, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.033438780003486095;  // std dev = 2.483, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.0010243944790719731;  // std dev = 2.258, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else return -0.004723958672946888;  // std dev = 0.354, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.12064037172353845;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5438890045913584;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.33656314241138796;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.047733223277003564;  // std dev = 1.923, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.03346957725519885;  // std dev = 16.737, 1,207.000 (wgt'ed) examples reached here.  /* #neg=761 #pos=446 */
%   | | | else return 0.017384805862986477;  // std dev = 2.698, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.018276596770571505;  // std dev = 3.229, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | | else return -0.004113740569895106;  // std dev = 2.604, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.530', 'seconds']
Refined model CLL: -0.636761


******************************************
Best model found
******************************************
Results 

CLL : -0.762215 

AUC ROC : 0.612489 

AUC PR : 0.573411 

Precision : 0.424242 

Recall : 0.050909 

F1 : 0.090909 

Total Learning Time : 150.57999999999998 

Total Inference Time : 4.976147651672363 

Total revision time: 157.86162921333312
Best scored revision CLL: -0.636761


Results 

CLL : -0.762215 

AUC ROC : 0.612489 

AUC PR : 0.573411 

Precision : 0.424242 

Recall : 0.050909 

F1 : 0.090909 

Total Learning Time : 178.834095205307 

Total Inference Time : 4.976147651672363 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.911
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '669', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 423.195
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22770477813529855;  // std dev = 23.244, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=857 */
%   | | | else return 0.19905802600860323;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.4527435296941061;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.12644161802634116;  // std dev = 4.012, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.007574222455834193;  // std dev = 3.325, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008148935099512361;  // std dev = 3.571, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19766640720084871;  // std dev = 23.244, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=857 */
%   | | | else return 0.17305908872800288;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1718069530822753;  // std dev = 2.742, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.39295496493114196;  // std dev = 3.007, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.11034235232659871;  // std dev = 4.012, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.006649713858725584;  // std dev = 3.325, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00715407257258613;  // std dev = 3.571, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16768282189907274;  // std dev = 23.244, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=857 */
%   | | | else return 0.14748032133057357;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13492301513791236;  // std dev = 2.767, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.33935737160597607;  // std dev = 2.948, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03077781283458768;  // std dev = 4.670, 145.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | | | else return 0.16014768138883312;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.006275880870992231;  // std dev = 3.571, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13931397466823828;  // std dev = 23.244, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=857 */
%   | | | else return 0.12342738482816652;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09483329758320862;  // std dev = 2.720, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.2798630047443911;  // std dev = 2.959, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08070285810868015;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.047974547337310505;  // std dev = 5.295, 172.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=36 */
%   | | | else return 1.9408151008127198E-4;  // std dev = 3.327, 89.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1121486023263155;  // std dev = 23.220, 2,320.000 (wgt'ed) examples reached here.  /* #neg=1,467 #pos=853 */
%   | | | else return 0.12911368834673806;  // std dev = 5.544, 131.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=49 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06958917473403747;  // std dev = 2.750, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.2285497142595714;  // std dev = 2.908, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.0796431385937348;  // std dev = 3.999, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.0019128059981297792;  // std dev = 3.326, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -2.1596271063706042E-4;  // std dev = 3.569, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | | else return -0.10161404555340196;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5222165990337447;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.14402104599037957;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14558111540175853;  // std dev = 3.106, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.08738147471768973;  // std dev = 23.704, 2,429.000 (wgt'ed) examples reached here.  /* #neg=1,538 #pos=891 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.01994875242976882;  // std dev = 4.659, 145.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | | | else return 0.1150077168247835;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -1.8839795609639108E-4;  // std dev = 3.569, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | | else return -0.09270610951873366;  // std dev = 3.23e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07136743335309913;  // std dev = 23.194, 2,320.000 (wgt'ed) examples reached here.  /* #neg=1,467 #pos=853 */
%   | | | else return 0.08674809586484503;  // std dev = 5.545, 131.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.019714362895210613;  // std dev = 2.703, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.1646319206805044;  // std dev = 2.922, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.05901266071308595;  // std dev = 3.994, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return -8.575692673650754E-4;  // std dev = 3.326, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -1.6435487504652845E-4;  // std dev = 3.569, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | | else return -0.08519734015655063;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05765396940545359;  // std dev = 23.218, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=857 */
%   | | | else return 0.04442226131958141;  // std dev = 5.440, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.011486543538707691;  // std dev = 2.740, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.13160691318265938;  // std dev = 2.879, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.08847428211919423;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02915735058894099;  // std dev = 5.111, 160.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=34 */
%   | | | else return 1.8590877547640123E-4;  // std dev = 3.567, 101.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04384393422283511;  // std dev = 23.192, 2,320.000 (wgt'ed) examples reached here.  /* #neg=1,467 #pos=853 */
%   | | | else return 0.0581673826826873;  // std dev = 5.546, 131.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=49 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.004932000124962081;  // std dev = 2.697, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.10904431236213556;  // std dev = 2.904, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.0758535368029782;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.025883781249048117;  // std dev = 5.270, 172.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002697066477579658;  // std dev = 3.322, 86.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=13 */
%   | | | else return -0.07880105870476593;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035410815718883146;  // std dev = 23.218, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,462 #pos=857 */
%   | | | else return 0.02366008942952461;  // std dev = 5.437, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.006889543665636485;  // std dev = 2.734, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.08784916037388164;  // std dev = 2.864, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.043133443045823845;  // std dev = 3.985, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return -0.00420086978145705;  // std dev = 3.326, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0030781149999953373;  // std dev = 3.568, 100.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=15 */
%   | | | else return -0.0732673089432847;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.621', 'seconds']
Refined model CLL: -0.638924


******************************************
Best model found
******************************************
Results 

CLL : -0.753787 

AUC ROC : 0.605478 

AUC PR : 0.595221 

Precision : 1.0 

Recall : 0.021818 

F1 : 0.042705 

Total Learning Time : 423.195 

Total Inference Time : 11.629929780960083 

Total revision time: 437.80899100875854
Best scored revision CLL: -0.638924


Results 

CLL : -0.753787 

AUC ROC : 0.605478 

AUC PR : 0.595221 

Precision : 1.0 

Recall : 0.021818 

F1 : 0.042705 

Total Learning Time : 458.7814570007324 

Total Inference Time : 11.629929780960083 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.796
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '559', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 597.263
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2294460302965161;  // std dev = 28.490, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,291 */
%   | | | else return 0.18261702020589662;  // std dev = 6.419, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3071285269362462;  // std dev = 3.482, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.48972788246793225;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02554981615678013;  // std dev = 5.625, 227.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=38 */
%   | | | else return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.016851064900487652;  // std dev = 3.969, 144.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19915966188470197;  // std dev = 28.490, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,291 */
%   | | | else return 0.15890197955078503;  // std dev = 6.419, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.260788570405647;  // std dev = 3.575, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.432199524832349;  // std dev = 3.529, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.022411103405150384;  // std dev = 5.625, 227.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=38 */
%   | | | else return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13981214937855657;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0151787869354475;  // std dev = 3.968, 145.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16890242676613598;  // std dev = 28.490, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,291 */
%   | | | else return 0.13576832289181567;  // std dev = 6.419, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20524023572440298;  // std dev = 3.461, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.35663045922816744;  // std dev = 3.620, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.019610686131410596;  // std dev = 5.625, 227.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=38 */
%   | | | else return 0.12131905159335965;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.012603081492486564;  // std dev = 3.967, 144.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.12378884536788384;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1402648738306428;  // std dev = 28.490, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,291 */
%   | | | else return 0.1141007564103473;  // std dev = 6.419, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15628866123099322;  // std dev = 3.551, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.29559920593722977;  // std dev = 3.504, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.06412482357702763;  // std dev = 4.849, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 5.955542520548284E-5;  // std dev = 4.227, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.011114379817556938;  // std dev = 3.967, 144.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.11097516857765163;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11441299440485747;  // std dev = 28.490, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,291 */
%   | | | else return 0.09452133741170712;  // std dev = 6.419, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11472788105719371;  // std dev = 3.442, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.22847666060521757;  // std dev = 3.600, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013799270347666863;  // std dev = 5.622, 227.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=38 */
%   | | | else return 0.09240480227297053;  // std dev = 3.119, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.009812806485210258;  // std dev = 3.967, 144.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.10048982687946877;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09041647207258674;  // std dev = 28.486, 3,487.000 (wgt'ed) examples reached here.  /* #neg=2,200 #pos=1,287 */
%   | | | else return 0.10701930111929536;  // std dev = 6.433, 178.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.079968375704191;  // std dev = 3.535, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.18607725858760873;  // std dev = 3.490, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.048590061854512506;  // std dev = 4.842, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return -0.0019134084723695577;  // std dev = 4.228, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.008672404064582744;  // std dev = 3.967, 144.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.09176404168946928;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.073352610492545;  // std dev = 28.490, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,291 */
%   | | | else return 0.05813870224266736;  // std dev = 6.416, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.055555223174530585;  // std dev = 3.429, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.14100533529395853;  // std dev = 3.589, 57.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009506935283772977;  // std dev = 5.621, 227.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=38 */
%   | | | else return 0.06827972126270239;  // std dev = 3.117, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.007671335235886847;  // std dev = 3.967, 144.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.08439725302032854;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4865512335638578;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.03684975638699733;  // std dev = 3.262, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05625286021360829;  // std dev = 28.900, 3,593.000 (wgt'ed) examples reached here.  /* #neg=2,271 #pos=1,322 */
%   | | | else return 0.07648222756330747;  // std dev = 4.936, 104.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=57 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06555178070979814;  // std dev = 0.301, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02051211162183326;  // std dev = 6.286, 257.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=50 */
%   | | | else return -0.00616792394445531;  // std dev = 3.964, 145.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04389071120188341;  // std dev = 28.455, 3,487.000 (wgt'ed) examples reached here.  /* #neg=2,200 #pos=1,287 */
%   | | | else return 0.06174470069510264;  // std dev = 6.435, 178.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.017756212356612202;  // std dev = 3.528, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.0978363029895501;  // std dev = 3.483, 54.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04824505475620635;  // std dev = 0.324, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.056754974410077465;  // std dev = 1.344, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.013071748980301513;  // std dev = 7.250, 377.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=65 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4061467362548192;  // std dev = 2.102, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return -0.003560621678768484;  // std dev = 3.484, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03288068527579791;  // std dev = 28.832, 3,587.000 (wgt'ed) examples reached here.  /* #neg=2,271 #pos=1,316 */
%   | | | else return 0.04824682629992146;  // std dev = 4.950, 105.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=58 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03468984454969669;  // std dev = 4.831, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return -0.006993391754083812;  // std dev = 4.226, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007224251583442536;  // std dev = 3.966, 144.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=18 */
%   | | | else return -0.07859865228940019;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.641', 'seconds']
Refined model CLL: -0.635882


******************************************
Best model found
******************************************
Results 

CLL : -0.750848 

AUC ROC : 0.626615 

AUC PR : 0.615098 

Precision : 0.83871 

Recall : 0.047273 

F1 : 0.089501 

Total Learning Time : 597.263 

Total Inference Time : 14.909934043884277 

Total revision time: 616.1118085231782
Best scored revision CLL: -0.635882


Results 

CLL : -0.750848 

AUC ROC : 0.626615 

AUC PR : 0.615098 

Precision : 0.83871 

Recall : 0.047273 

F1 : 0.089501 

Total Learning Time : 637.0842745151521 

Total Inference Time : 14.909934043884277 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.767
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '611', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 838.026
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22915152801221245;  // std dev = 32.863, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.20089087058338262;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3438632208137968;  // std dev = 4.182, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | | else return 0.5010060779566556;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.018920639279576462;  // std dev = 6.478, 311.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=50 */
%   | | | else return 0.09252393509951237;  // std dev = 3.389, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.001954691843493342;  // std dev = 4.819, 193.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19890712393117327;  // std dev = 32.863, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.17463577233561314;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2887658140573142;  // std dev = 4.082, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return 0.4303446568919434;  // std dev = 4.099, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.05270614439485749;  // std dev = 5.436, 185.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=37 */
%   | | | else return 0.0031003943243013915;  // std dev = 4.887, 190.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=28 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.001716915031231867;  // std dev = 4.819, 193.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16869621939417823;  // std dev = 32.863, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.14878067542354506;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23244165521492438;  // std dev = 4.173, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | | else return 0.3632561157868874;  // std dev = 3.982, 70.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0137497725717256;  // std dev = 6.476, 311.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=50 */
%   | | | else return 0.0741150109765869;  // std dev = 3.388, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.001508337010882114;  // std dev = 4.819, 193.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=27 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14010416364284242;  // std dev = 32.863, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.12445761906764832;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17466959680331784;  // std dev = 4.073, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return 0.29115911011130635;  // std dev = 4.063, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.044296505567004825;  // std dev = 0.309, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026128226369823482;  // std dev = 7.124, 347.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=62 */
%   | | | else return -0.0043485565502263575;  // std dev = 4.825, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.114292923012865;  // std dev = 32.863, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.10247836934939086;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13206283469442448;  // std dev = 4.166, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | | else return 0.23107437686182228;  // std dev = 3.953, 70.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03896461178004327;  // std dev = 5.431, 185.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=37 */
%   | | | else return -0.002143842074380742;  // std dev = 4.886, 190.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=28 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -7.987473194499119E-4;  // std dev = 4.819, 193.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=27 */
%   | | | else return -0.1012001041735308;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09188604387871444;  // std dev = 32.863, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.08327801418016419;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09102817602267929;  // std dev = 4.069, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return 0.1809872860030785;  // std dev = 4.040, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.033634603402438575;  // std dev = 5.431, 185.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=37 */
%   | | | else return -0.0018714509152208047;  // std dev = 4.886, 190.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=28 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -7.022064775062604E-4;  // std dev = 4.819, 193.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=27 */
%   | | | else return -0.09235942135758934;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4712563073757489;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return 9.592445527105221E-4;  // std dev = 4.021, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07161389400287962;  // std dev = 33.328, 4,774.000 (wgt'ed) examples reached here.  /* #neg=3,015 #pos=1,759 */
%   | | | else return 0.1075881087348778;  // std dev = 5.727, 139.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=79 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005955241231657385;  // std dev = 6.471, 311.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=50 */
%   | | | else return 0.04981011581629433;  // std dev = 3.386, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.1405137529027036;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -3.411154957525521E-4;  // std dev = 4.815, 195.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057552944572088816;  // std dev = 32.836, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.05266028859931513;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.040609266018933644;  // std dev = 4.161, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | | else return 0.11523798035442441;  // std dev = 3.937, 70.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.047047827206936864;  // std dev = 0.308, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.016216847556610958;  // std dev = 7.117, 347.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=62 */
%   | | | else return -0.002794543226095791;  // std dev = 4.822, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045039670487616576;  // std dev = 32.835, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.04169724935798302;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.022486211037718334;  // std dev = 4.066, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return 0.09201398384853111;  // std dev = 4.028, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04101304606319845;  // std dev = 0.308, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014002396703397955;  // std dev = 7.117, 347.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=62 */
%   | | | else return -0.002461758958351526;  // std dev = 4.822, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03506986822055878;  // std dev = 32.835, 4,628.000 (wgt'ed) examples reached here.  /* #neg=2,911 #pos=1,717 */
%   | | | else return 0.03285149111513463;  // std dev = 7.474, 248.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0146636313818333;  // std dev = 4.161, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | | else return 0.07407101821652658;  // std dev = 3.927, 70.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04952838773803406;  // std dev = 0.318, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.015176555495114371;  // std dev = 7.072, 354.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=61 */
%   | | | else return -0.006873029918988115;  // std dev = 4.884, 194.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.722', 'seconds']
Refined model CLL: -0.636588


******************************************
Best model found
******************************************
Results 

CLL : -0.749599 

AUC ROC : 0.632238 

AUC PR : 0.626272 

Precision : 0.884615 

Recall : 0.041818 

F1 : 0.079861 

Total Learning Time : 838.026 

Total Inference Time : 21.61564302444458 

Total revision time: 864.605403678894
Best scored revision CLL: -0.636588


Results 

CLL : -0.749599 

AUC ROC : 0.632238 

AUC PR : 0.626272 

Precision : 0.884615 

Recall : 0.041818 

F1 : 0.079861 

Total Learning Time : 885.5778696708679 

Total Inference Time : 21.61564302444458 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.782
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '564', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1011.892
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533305;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03266670217789279;  // std dev = 8.054, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 8.100339195512117E-4;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496415;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01246221539186876;  // std dev = 7.227, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07321657215811017;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.002262857817667594;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12553353292333844;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406578;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06772151070917078;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.027694506235033604;  // std dev = 8.046, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0016800768678850763;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.113983410700292;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708748;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844113;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.060411263046265644;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025392423310183803;  // std dev = 8.042, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0035525856685169935;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.091703854916118;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0845360523843122;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0952646132699769;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766648;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06197297239022702;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02352361328491358;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004363987989271037;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090493;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158736;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0034065889990130944;  // std dev = 7.201, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07155753880182988;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0023007066538875166;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11143451741298557;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4169732855896338;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.023294078975374916;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056430831411418574;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.0809269429029528;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.055525176633776305;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.055968197810139154;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.014254140103726083;  // std dev = 9.612, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4002065185000649;  // std dev = 2.687, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.03270956782668858;  // std dev = 4.611, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0439448451599736;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.061198677642633814;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0494841712321966;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.04910810125139756;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012370668585048511;  // std dev = 9.612, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03500570066857419;  // std dev = 36.644, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.032540287373456815;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.009723647342858036;  // std dev = 4.636, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08017187153431228;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04397018413358492;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.016881425587796185;  // std dev = 8.028, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008290786581224549;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.585', 'seconds']
Refined model CLL: -0.635414


******************************************
Best model found
******************************************
Results 

CLL : -0.751324 

AUC ROC : 0.633851 

AUC PR : 0.623054 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1011.892 

Total Inference Time : 23.904730796813965 

Total revision time: 1041.8296587219238
Best scored revision CLL: -0.635414


Results 

CLL : -0.751324 

AUC ROC : 0.633851 

AUC PR : 0.623054 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1062.8021247138977 

Total Inference Time : 23.904730796813965 

Run: 5
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.363
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '613', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 170.502
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.25367773991464077;  // std dev = 16.675, 1,163.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=460 */
%   | | | else return 0.265556342506919;  // std dev = 3.611, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.1273797043302816;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.020939632773930943;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else return -0.035468086177083476;  // std dev = 0.308, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.219910721859859;  // std dev = 16.675, 1,163.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=460 */
%   | | | else return 0.23006295169886493;  // std dev = 3.611, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.31881118832917904;  // std dev = 2.286, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.4623369674335399;  // std dev = 1.813, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.11115563121567809;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.018371499190655702;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.13758815617044495;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.021309086403003136;  // std dev = 2.102, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1865718910508666;  // std dev = 16.682, 1,163.000 (wgt'ed) examples reached here.  /* #neg=702 #pos=461 */
%   | | | else return 0.17682136848517147;  // std dev = 3.577, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2619875770870359;  // std dev = 2.286, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.3771900880510481;  // std dev = 1.810, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.08843733116655654;  // std dev = 3.560, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return -0.01650590541968737;  // std dev = 1.834, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.11492085883900971;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04084489500324357;  // std dev = 1.902, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15320971280862686;  // std dev = 16.675, 1,163.000 (wgt'ed) examples reached here.  /* #neg=703 #pos=460 */
%   | | | else return 0.16212666360417152;  // std dev = 3.613, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19726310146175885;  // std dev = 2.285, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.3096321458680927;  // std dev = 1.796, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.08955931755355034;  // std dev = 3.188, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.005606547455491883;  // std dev = 2.418, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11775110038571822;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.01583826063963392;  // std dev = 2.098, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.018948687096415003;  // std dev = 2.332, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.07157824239018158;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.007827284058084628;  // std dev = 3.045, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.1349178097219302;  // std dev = 16.793, 1,170.000 (wgt'ed) examples reached here.  /* #neg=690 #pos=480 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.07002890684065922;  // std dev = 3.550, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return -0.025835457875877557;  // std dev = 1.831, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10605824120506618;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.01403322551822086;  // std dev = 2.098, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09900960703991263;  // std dev = 16.667, 1,163.000 (wgt'ed) examples reached here.  /* #neg=702 #pos=461 */
%   | | | else return 0.0886477630378037;  // std dev = 3.569, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12614249663296379;  // std dev = 2.298, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.20296029364753732;  // std dev = 1.794, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.07129649291896811;  // std dev = 3.179, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.0038302028687787165;  // std dev = 2.416, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.10467240827745228;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.03115724709858564;  // std dev = 1.900, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.11096172297158247;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04610849802777763;  // std dev = 2.394, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08168324369717805;  // std dev = 16.841, 1,182.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=474 */
%   | | | else return 0.08987044654981446;  // std dev = 2.828, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.054860807122260144;  // std dev = 3.542, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return -0.03154385918544284;  // std dev = 1.829, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09373435266422141;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.010608859821232358;  // std dev = 2.094, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2609985752327467;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.12620368957716172;  // std dev = 2.364, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0637734155765269;  // std dev = 16.729, 1,168.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=468 */
%   | | | else return 0.09883837919941722;  // std dev = 2.846, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.05648828770022293;  // std dev = 3.170, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.010295512542955645;  // std dev = 2.414, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.09259499172512477;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.02605920665676213;  // std dev = 1.899, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20256873080815657;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.09965589167353349;  // std dev = 2.365, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.049387083236791224;  // std dev = 16.729, 1,168.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=468 */
%   | | | else return 0.07444702728437107;  // std dev = 2.846, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.042812091376331504;  // std dev = 3.535, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return -0.034402649396996075;  // std dev = 1.828, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07992125113350612;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.02335539365540299;  // std dev = 1.899, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03595709646614686;  // std dev = 16.625, 1,163.000 (wgt'ed) examples reached here.  /* #neg=702 #pos=461 */
%   | | | else return 0.02839940154251744;  // std dev = 3.555, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03510767390895833;  // std dev = 2.322, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.09873075838324395;  // std dev = 1.787, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16830608231328784;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 9.73116282238051E-4;  // std dev = 3.440, 88.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.18048442766937622;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.010491022233463378;  // std dev = 2.373, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.470', 'seconds']
Refined model CLL: -0.647117


******************************************
Best model found
******************************************
Results 

CLL : -0.62344 

AUC ROC : 0.601859 

AUC PR : 0.430793 

Precision : 0.567568 

Recall : 0.057065 

F1 : 0.103704 

Total Learning Time : 170.502 

Total Inference Time : 4.773516893386841 

Total revision time: 177.6535046005249
Best scored revision CLL: -0.647117


Results 

CLL : -0.62344 

AUC ROC : 0.601859 

AUC PR : 0.430793 

Precision : 0.567568 

Recall : 0.057065 

F1 : 0.103704 

Total Learning Time : 198.62607335090638 

Total Inference Time : 4.773516893386841 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.922
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '597', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 365.088
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25537957118778076;  // std dev = 23.523, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=918 */
%   | | | else return 0.19961234973365818;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3875606998053947;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.6157246926752692;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.050920019436860794;  // std dev = 5.082, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | | else return -0.0020661186639285146;  // std dev = 3.344, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22136603214497433;  // std dev = 23.523, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=918 */
%   | | | else return 0.17353597226618042;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.33356216495217195;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.52329140204601;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.24324434330575614;  // std dev = 2.303, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.024640806568153407;  // std dev = 1.215, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04460780738836887;  // std dev = 5.082, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | | else return -0.001814797463627382;  // std dev = 3.344, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1869532798484106;  // std dev = 23.523, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=918 */
%   | | | else return 0.14787371133938806;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.25843695919453574;  // std dev = 2.964, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.4462168884506095;  // std dev = 2.344, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.37322989752809055;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10723900772383974;  // std dev = 2.345, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03888900860251757;  // std dev = 5.082, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | | else return -0.0015943536240560078;  // std dev = 3.344, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1542305085590705;  // std dev = 23.523, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=918 */
%   | | | else return 0.12373916815108085;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20237015878147005;  // std dev = 2.963, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.34683140615689545;  // std dev = 2.332, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18398485015258118;  // std dev = 2.302, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.010305471468388883;  // std dev = 1.158, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03375713786157177;  // std dev = 5.082, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | | else return -0.0014009237728944252;  // std dev = 3.344, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12474951310685076;  // std dev = 23.523, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=918 */
%   | | | else return 0.1019299181964409;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14210662135428734;  // std dev = 2.905, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.2697962625456334;  // std dev = 2.383, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.28604023245589877;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06646294851474417;  // std dev = 2.317, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02919071693618882;  // std dev = 5.082, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | | else return -0.0012311437463334535;  // std dev = 3.344, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09932623788534573;  // std dev = 23.539, 2,318.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=919 */
%   | | | else return 0.08198093308615664;  // std dev = 5.186, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10525375317466071;  // std dev = 2.964, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.21248006597175745;  // std dev = 2.302, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.07155606658692601;  // std dev = 4.292, 101.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=26 */
%   | | | else return 0.0029556133724350088;  // std dev = 3.510, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -6.643890827877207E-4;  // std dev = 3.559, 87.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | | else return -0.16005914176642794;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07821064537045944;  // std dev = 23.522, 2,311.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=918 */
%   | | | else return 0.06557848735327432;  // std dev = 5.263, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06983602565301997;  // std dev = 2.908, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.16609438294028808;  // std dev = 2.366, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12117295850016291;  // std dev = 2.293, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.029568308326940733;  // std dev = 1.101, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020092696309332796;  // std dev = 5.081, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | | else return -8.388963400028956E-4;  // std dev = 3.342, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06102407980988035;  // std dev = 23.538, 2,318.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=919 */
%   | | | else return 0.05097454433856434;  // std dev = 5.192, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05067081442011485;  // std dev = 2.966, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.13419038657187288;  // std dev = 2.290, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05229538501795488;  // std dev = 4.740, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | | else return -0.024828615065803698;  // std dev = 2.833, 61.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.25697176173451924;  // std dev = 0.262, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.005745879933464457;  // std dev = 3.513, 86.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04728934939975908;  // std dev = 23.538, 2,318.000 (wgt'ed) examples reached here.  /* #neg=1,399 #pos=919 */
%   | | | else return 0.04013571258617519;  // std dev = 5.193, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03833023668310366;  // std dev = 2.966, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.10343202766671643;  // std dev = 2.294, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.21691323616607777;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.030206301754503624;  // std dev = 2.243, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016816355091630108;  // std dev = 5.075, 166.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=32 */
%   | | | else return -0.006906006183780927;  // std dev = 3.341, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.10969071656209248;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return -0.0884129509466725;  // std dev = 2.919, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.014485207096139433;  // std dev = 3.989, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.03950356159781491;  // std dev = 23.689, 2,352.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=950 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.008577475405545121;  // std dev = 4.869, 167.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=32 */
%   | | | else return 0.0938224953397914;  // std dev = 2.567, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.005685234262992573;  // std dev = 3.555, 87.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=15 */
%   | | | else return -0.126658629324421;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.573', 'seconds']
Refined model CLL: -0.649244


******************************************
Best model found
******************************************
Results 

CLL : -0.625737 

AUC ROC : 0.58589 

AUC PR : 0.41468 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 365.088 

Total Inference Time : 10.778019666671753 

Total revision time: 378.9050271606446
Best scored revision CLL: -0.649244


Results 

CLL : -0.625737 

AUC ROC : 0.58589 

AUC PR : 0.41468 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 399.87759591102605 

Total Inference Time : 10.778019666671753 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.627
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '610', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 648.431
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2550932994696427;  // std dev = 28.817, 3,469.000 (wgt'ed) examples reached here.  /* #neg=2,092 #pos=1,377 */
%   | | | else return 0.21075009116887777;  // std dev = 6.284, 173.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4463842292171583;  // std dev = 3.515, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.5981489350995113;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.058148935099512376;  // std dev = 2.530, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04491936311507621;  // std dev = 6.248, 257.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=48 */
%   | | | else return 0.02836170105695873;  // std dev = 4.463, 141.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=24 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2211200208128348;  // std dev = 28.817, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,377 */
%   | | | else return 0.18291546688594654;  // std dev = 6.282, 172.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.37198459612826656;  // std dev = 3.597, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.5294947730253804;  // std dev = 2.968, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15814942042256425;  // std dev = 2.611, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.0370263496383362;  // std dev = 6.258, 260.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=48 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03162063865112952;  // std dev = 4.610, 146.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=26 */
%   | | | else return -0.14674093078483857;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18686567667900586;  // std dev = 28.815, 3,469.000 (wgt'ed) examples reached here.  /* #neg=2,092 #pos=1,377 */
%   | | | else return 0.15359883949853814;  // std dev = 6.292, 173.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7115751553771613;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34550932490126984;  // std dev = 4.645, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.29333401444477086;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.03646407439864114;  // std dev = 2.509, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.001559701102917157;  // std dev = 2.258, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.033577038822098275;  // std dev = 7.334, 358.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=66 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15419374460482166;  // std dev = 28.815, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,377 */
%   | | | else return 0.12756449185929658;  // std dev = 6.291, 172.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21622755410456207;  // std dev = 3.468, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.34338914459623576;  // std dev = 3.065, 50.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12509516009794125;  // std dev = 2.601, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.028309081909291805;  // std dev = 6.259, 260.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=48 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022587365989685623;  // std dev = 4.597, 146.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=26 */
%   | | | else return -0.13325762875758898;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12481596225798182;  // std dev = 28.812, 3,469.000 (wgt'ed) examples reached here.  /* #neg=2,092 #pos=1,377 */
%   | | | else return 0.1031785401530032;  // std dev = 6.300, 173.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1505689852779619;  // std dev = 3.551, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.2814018773889805;  // std dev = 2.930, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01995150074272797;  // std dev = 6.143, 258.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=47 */
%   | | | else return 0.11021260078815454;  // std dev = 2.964, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12030173207216395;  // std dev = 0.884, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.023593100163731548;  // std dev = 4.422, 132.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09941726898941607;  // std dev = 28.812, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,377 */
%   | | | else return 0.08300400165151448;  // std dev = 6.299, 172.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10905870113291087;  // std dev = 3.454, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.2100369622415087;  // std dev = 3.042, 50.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10613024227656356;  // std dev = 2.593, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.048611932136723074;  // std dev = 1.210, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022159248312274844;  // std dev = 6.238, 257.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=48 */
%   | | | else return 0.012548266285119571;  // std dev = 4.456, 141.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07827673177022196;  // std dev = 28.811, 3,469.000 (wgt'ed) examples reached here.  /* #neg=2,092 #pos=1,377 */
%   | | | else return 0.06550907875680623;  // std dev = 6.306, 173.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4085003714110714;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10794774708728849;  // std dev = 4.581, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.22977743655288113;  // std dev = 1.398, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.007945672523960477;  // std dev = 2.467, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01908991290539091;  // std dev = 6.238, 257.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=48 */
%   | | | else return 0.010875308535615939;  // std dev = 4.456, 141.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.061055333038029784;  // std dev = 28.811, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,377 */
%   | | | else return 0.051680503518363834;  // std dev = 6.305, 172.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.041063864042959336;  // std dev = 3.526, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.14801508177225325;  // std dev = 2.914, 47.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04547897600565894;  // std dev = 5.809, 204.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=44 */
%   | | | else return -0.024908699999880535;  // std dev = 3.522, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1269105715551619;  // std dev = 0.864, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.014841852398197776;  // std dev = 4.422, 132.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047329699993130796;  // std dev = 28.810, 3,469.000 (wgt'ed) examples reached here.  /* #neg=2,092 #pos=1,377 */
%   | | | else return 0.04021124521998911;  // std dev = 6.310, 173.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=61 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.30118167754075054;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05974927295133716;  // std dev = 4.569, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03282964849729377;  // std dev = 5.805, 207.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=43 */
%   | | | else return -0.008478308110613843;  // std dev = 3.450, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007420269704234924;  // std dev = 4.584, 146.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=26 */
%   | | | else return -0.11243479720992984;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649817113585604;  // std dev = 28.810, 3,470.000 (wgt'ed) examples reached here.  /* #neg=2,093 #pos=1,377 */
%   | | | else return 0.03137770080811843;  // std dev = 6.308, 172.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=61 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.009054268644619175;  // std dev = 3.418, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.0985502086460304;  // std dev = 3.026, 50.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03850159368287325;  // std dev = 5.807, 204.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=44 */
%   | | | else return -0.02448683872816937;  // std dev = 3.516, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10792787709758274;  // std dev = 0.865, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.008733786811287347;  // std dev = 4.419, 132.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.711', 'seconds']
Refined model CLL: -0.64958


******************************************
Best model found
******************************************
Results 

CLL : -0.625551 

AUC ROC : 0.582584 

AUC PR : 0.414041 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 648.431 

Total Inference Time : 16.80383014678955 

Total revision time: 669.0556058006287
Best scored revision CLL: -0.64958


Results 

CLL : -0.625551 

AUC ROC : 0.582584 

AUC PR : 0.414041 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 690.0281745510101 

Total Inference Time : 16.80383014678955 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.769
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '620', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 866.308
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25480547005391446;  // std dev = 33.201, 4,606.000 (wgt'ed) examples reached here.  /* #neg=2,779 #pos=1,827 */
%   | | | else return 0.22611430306487942;  // std dev = 7.330, 231.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4314822684328462;  // std dev = 4.283, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | | | else return 0.5812258581764357;  // std dev = 3.608, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.05760985154156171;  // std dev = 7.697, 371.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.030191945852199673;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22087512359046296;  // std dev = 33.201, 4,606.000 (wgt'ed) examples reached here.  /* #neg=2,779 #pos=1,827 */
%   | | | else return 0.19630220772130222;  // std dev = 7.330, 231.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3611119241706245;  // std dev = 4.288, 76.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=44 */
%   | | | else return 0.507986560230173;  // std dev = 3.573, 64.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.07085747274097881;  // std dev = 7.010, 286.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=63 */
%   | | | else return 0.02478739352688087;  // std dev = 4.249, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026476809851625618;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1866172331284761;  // std dev = 33.200, 4,607.000 (wgt'ed) examples reached here.  /* #neg=2,780 #pos=1,827 */
%   | | | else return 0.16525416434862034;  // std dev = 7.332, 230.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28839770730238307;  // std dev = 4.266, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | | | else return 0.415526814818323;  // std dev = 3.578, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11090818896375013;  // std dev = 2.827, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.042820099131232386;  // std dev = 7.692, 371.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023152712024767628;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15399143072802438;  // std dev = 33.200, 4,607.000 (wgt'ed) examples reached here.  /* #neg=2,780 #pos=1,827 */
%   | | | else return 0.13707954515947185;  // std dev = 7.333, 230.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21366570269725726;  // std dev = 4.269, 76.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=44 */
%   | | | else return 0.33738914314274515;  // std dev = 3.538, 64.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.055406328716674086;  // std dev = 7.011, 286.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=63 */
%   | | | else return 0.013724117251342732;  // std dev = 4.240, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020194841750484648;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12462605895306798;  // std dev = 33.198, 4,606.000 (wgt'ed) examples reached here.  /* #neg=2,779 #pos=1,827 */
%   | | | else return 0.11108493358301832;  // std dev = 7.339, 231.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5839173142348656;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.19136661555988355;  // std dev = 5.502, 135.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=85 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09116733928645307;  // std dev = 2.830, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.03088565582475487;  // std dev = 7.687, 371.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01757561554545117;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09927297799304488;  // std dev = 33.199, 4,607.000 (wgt'ed) examples reached here.  /* #neg=2,780 #pos=1,827 */
%   | | | else return 0.08898438484421684;  // std dev = 7.338, 230.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4396879510587663;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14415301426527483;  // std dev = 5.500, 135.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=85 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04277138536866251;  // std dev = 7.012, 286.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=63 */
%   | | | else return 0.005501369792276676;  // std dev = 4.231, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015266147445907529;  // std dev = 5.147, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07814408799872229;  // std dev = 33.198, 4,606.000 (wgt'ed) examples reached here.  /* #neg=2,779 #pos=1,827 */
%   | | | else return 0.07034932359479722;  // std dev = 7.343, 231.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06939701669739765;  // std dev = 4.206, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | | | else return 0.17086662946440084;  // std dev = 3.530, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11135170065551837;  // std dev = 3.013, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return -0.07943194440269047;  // std dev = 1.338, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013784578981585537;  // std dev = 7.281, 358.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=65 */
%   | | | else return 0.02410320544677326;  // std dev = 5.413, 183.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06095943400007076;  // std dev = 33.198, 4,607.000 (wgt'ed) examples reached here.  /* #neg=2,780 #pos=1,827 */
%   | | | else return 0.05516511538235611;  // std dev = 7.342, 230.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03979808794986768;  // std dev = 4.204, 76.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=44 */
%   | | | else return 0.14526460445792858;  // std dev = 3.509, 64.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07132607995730006;  // std dev = 2.825, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.01815822944426724;  // std dev = 7.675, 371.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08222058813179088;  // std dev = 0.952, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.012683126540619668;  // std dev = 5.056, 183.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=31 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.047241036036815155;  // std dev = 33.197, 4,606.000 (wgt'ed) examples reached here.  /* #neg=2,779 #pos=1,827 */
%   | | | else return 0.04303311511555897;  // std dev = 7.346, 231.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.288349893662633;  // std dev = 0.878, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05514854720852199;  // std dev = 5.395, 133.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=84 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02933787405498409;  // std dev = 7.003, 286.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=63 */
%   | | | else return -0.002224637825965746;  // std dev = 4.222, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07221440913083635;  // std dev = 0.952, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.011003528762616382;  // std dev = 5.055, 183.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.036437330875334656;  // std dev = 33.197, 4,607.000 (wgt'ed) examples reached here.  /* #neg=2,780 #pos=1,827 */
%   | | | else return 0.03330948402876832;  // std dev = 7.344, 230.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.009342080421651796;  // std dev = 4.180, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | | | else return 0.09893694006949946;  // std dev = 3.515, 65.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05819896668708565;  // std dev = 2.828, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.012178376810950561;  // std dev = 7.672, 371.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=74 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009233727368589113;  // std dev = 5.143, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return -0.0775842455730391;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.599', 'seconds']
Refined model CLL: -0.650699


******************************************
Best model found
******************************************
Results 

CLL : -0.624957 

AUC ROC : 0.582578 

AUC PR : 0.415156 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 866.308 

Total Inference Time : 21.649902820587158 

Total revision time: 892.9915045280457
Best scored revision CLL: -0.650699


Results 

CLL : -0.624957 

AUC ROC : 0.582578 

AUC PR : 0.415156 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 913.9640732784271 

Total Inference Time : 21.649902820587158 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.02
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '648', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1106.954
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151715;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14309509431928658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.0381394404945166;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267566;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03711211154702516;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277194;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436804;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03171176966373864;  // std dev = 8.409, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07208194380010913;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.026380820066897286;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083838;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1912549421052729;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.041977338625974234;  // std dev = 7.651, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.01188108533766332;  // std dev = 5.025, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0696806403523731;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.025543663063719867;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098659;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.38728310945207584;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.142074600143166;  // std dev = 6.062, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10950211150842215;  // std dev = 3.358, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019928190843851425;  // std dev = 8.493, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07479823991935326;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.0202420056602915;  // std dev = 5.769, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.078357571362453;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012979;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07166823130219986;  // std dev = 4.729, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1690071242872591;  // std dev = 3.878, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10848997515835591;  // std dev = 3.357, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08043331492066653;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016160028583347315;  // std dev = 8.474, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.01904306169800623;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171407;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0557180887788322;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04140296866891442;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14294307240156945;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09022582544233222;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013886207783913699;  // std dev = 8.484, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.012911014228502398;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09313237859390482;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0473279408012645;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0435362949771565;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2534916147048486;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.056859819261271025;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08905101510533571;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07246411081589765;  // std dev = 1.369, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0188250164735088;  // std dev = 3.493, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.011144736669348622;  // std dev = 9.633, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108185;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741377;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012444898700237711;  // std dev = 4.711, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09659824991700566;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07242859914770743;  // std dev = 3.337, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.009521429955911683;  // std dev = 8.477, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008988118859380877;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08534519298813284;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.620', 'seconds']
Refined model CLL: -0.650455


******************************************
Best model found
******************************************
Results 

CLL : -0.624264 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1106.954 

Total Inference Time : 26.530936002731323 

Total revision time: 1139.7826800575256
Best scored revision CLL: -0.650455


Results 

CLL : -0.624264 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1160.755248807907 

Total Inference Time : 26.530936002731323 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.307
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '607', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 45.244
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22070212658886915;  // std dev = 0.481, 1,175.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=426 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.002593379543956794;  // std dev = 3.335, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.02420400607695828;  // std dev = 2.657, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19165824823469604;  // std dev = 0.481, 1,175.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=426 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -5.828117921966828E-4;  // std dev = 3.204, 84.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=12 */
%   | | | else return 0.07211866569057555;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.020688180198814448;  // std dev = 2.655, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | | else return -0.13893018981437247;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.8002151553843577;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05021515538435753;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else return 0.16409180736674295;  // std dev = 0.481, 1,135.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=413 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19053217073650477;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.009199393400576236;  // std dev = 1.285, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 9.336323979428351E-4;  // std dev = 3.332, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | | else return -0.024517325949713488;  // std dev = 2.492, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.6427739815145338;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.04206607737034293;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.13656394872814023;  // std dev = 16.209, 1,135.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=413 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0010328964544539544;  // std dev = 3.205, 84.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=12 */
%   | | | else return 0.06297456504897561;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.016464817387496694;  // std dev = 2.649, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | | else return -0.12171200831600397;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3683861050393722;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.043359602304299034;  // std dev = 1.773, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return 0.11168999109732071;  // std dev = 0.481, 1,135.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=413 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.16712775917437236;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.009838926089955366;  // std dev = 1.283, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -3.6057202001657334E-4;  // std dev = 3.330, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | | else return -0.019448689331701127;  // std dev = 2.491, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4970025585542055;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.025849661592199702;  // std dev = 2.511, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return 0.0894334512913251;  // std dev = 0.480, 1,141.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=413 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.1426833337709568;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.008624057770062216;  // std dev = 1.282, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -3.1594024110307426E-4;  // std dev = 3.330, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | | else return -0.017257219120923265;  // std dev = 2.492, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.375429744242305;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.020675950255200963;  // std dev = 2.511, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return 0.07135542200324943;  // std dev = 0.480, 1,141.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=413 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.08180108618686949;  // std dev = 1.242, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -2.768423966111692E-4;  // std dev = 3.330, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.012363427002803299;  // std dev = 2.638, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | | else return -0.10757556245505595;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.056218966719370315;  // std dev = 0.479, 1,175.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=426 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.002723519535821111;  // std dev = 3.205, 84.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=12 */
%   | | | else return 0.05483666130275227;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.01097357434481542;  // std dev = 2.638, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | | else return -0.09767702744081713;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04418248474329141;  // std dev = 0.479, 1,175.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=426 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07049603466853109;  // std dev = 1.243, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.01962366614365267;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0011274227606147774;  // std dev = 3.329, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | | else return -0.012289740113517552;  // std dev = 2.491, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.03454833703455656;  // std dev = 0.479, 1,175.000 (wgt'ed) examples reached here.  /* #neg=749 #pos=426 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.11505400050942559;  // std dev = 0.844, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -2.797531347923782E-4;  // std dev = 1.265, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -9.873438414319791E-4;  // std dev = 3.329, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | | else return -0.01096704608444066;  // std dev = 2.491, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.001', 'seconds']
Refined model CLL: -0.619253


******************************************
Best model found
******************************************
Results 

CLL : -0.825641 

AUC ROC : 0.502246 

AUC PR : 0.599275 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 45.244 

Total Inference Time : 1.363983154296875 

Total revision time: 48.902962566375734
Best scored revision CLL: -0.619253


Results 

CLL : -0.825641 

AUC ROC : 0.502246 

AUC PR : 0.599275 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 69.8755313167572 

Total Inference Time : 1.363983154296875 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.863
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '623', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 77.211
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.12130682983635448;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else return 0.22270478382422143;  // std dev = 0.481, 2,274.000 (wgt'ed) examples reached here.  /* #neg=1,445 #pos=829 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01940208530865124;  // std dev = 4.589, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return -0.038402789038418705;  // std dev = 3.280, 116.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19315120563793475;  // std dev = 0.481, 2,341.000 (wgt'ed) examples reached here.  /* #neg=1,488 #pos=853 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.16653882456488167;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.05154258263854086;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.017056653858682037;  // std dev = 4.589, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return -0.03379202556530217;  // std dev = 3.280, 116.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6002943371835308;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.07856609752004401;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else return 0.16421157066868095;  // std dev = 0.481, 2,274.000 (wgt'ed) examples reached here.  /* #neg=1,445 #pos=829 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1420942428155646;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.0456407429776432;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.041548923201629076;  // std dev = 2.026, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.026651484316178777;  // std dev = 5.255, 284.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=31 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1362882359202868;  // std dev = 0.480, 2,341.000 (wgt'ed) examples reached here.  /* #neg=1,488 #pos=853 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11914890490746421;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.04059971203405114;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.03656144498112757;  // std dev = 2.025, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.023553943861412997;  // std dev = 5.255, 284.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=31 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11144091261012172;  // std dev = 0.480, 2,341.000 (wgt'ed) examples reached here.  /* #neg=1,488 #pos=853 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.07347515563564343;  // std dev = 2.126, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.00876934229710223;  // std dev = 4.785, 210.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.18216636143867765;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.022012545994176774;  // std dev = 3.250, 106.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.3573119505235643;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.500169093380707;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.024353707456806536;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.09011429131805554;  // std dev = 22.952, 2,274.000 (wgt'ed) examples reached here.  /* #neg=1,445 #pos=829 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1022177703019238;  // std dev = 2.297, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.03584820027834896;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.010250575277921377;  // std dev = 4.577, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return -0.023798766810050363;  // std dev = 3.283, 116.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07152811808644341;  // std dev = 0.480, 2,341.000 (wgt'ed) examples reached here.  /* #neg=1,488 #pos=853 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordvenue(B, G) )
%   | | | then return -0.18844095273735698;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.06622006256828553;  // std dev = 2.472, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0274306473287881;  // std dev = 2.017, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.017618938580629417;  // std dev = 5.255, 284.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.284495828126211;  // std dev = 0.939, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.01009748735909247;  // std dev = 3.651, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else return 0.057408467821412686;  // std dev = 0.481, 2,267.000 (wgt'ed) examples reached here.  /* #neg=1,442 #pos=825 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(B, J) )
%   | | | then return -0.16162452788381074;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05545503629676909;  // std dev = 2.470, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.007818040569617681;  // std dev = 4.575, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return -0.019418359186980566;  // std dev = 3.283, 116.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04437231994108262;  // std dev = 0.480, 2,341.000 (wgt'ed) examples reached here.  /* #neg=1,488 #pos=853 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.15057327019928438;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.006530576161850762;  // std dev = 2.190, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.007115912923027728;  // std dev = 4.679, 209.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=25 */
%   | | | else return -0.018288878851047616;  // std dev = 3.134, 103.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3023856094359601;  // std dev = 2.149, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return -0.09991786339600733;  // std dev = 2.338, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else return 0.035095971819483526;  // std dev = 0.481, 2,274.000 (wgt'ed) examples reached here.  /* #neg=1,445 #pos=829 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.06370999337576634;  // std dev = 2.106, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return -0.006416404287040987;  // std dev = 4.765, 210.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=27 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14593516935445558;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.016192608996588982;  // std dev = 3.246, 106.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '909', 'milliseconds']
Refined model CLL: -0.617319


******************************************
Best model found
******************************************
Results 

CLL : -0.827819 

AUC ROC : 0.502253 

AUC PR : 0.599276 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 77.211 

Total Inference Time : 1.8202061653137207 

Total revision time: 81.9750009765625
Best scored revision CLL: -0.617319


Results 

CLL : -0.827819 

AUC ROC : 0.502253 

AUC PR : 0.599276 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 102.94756972694397 

Total Inference Time : 1.8202061653137207 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.574
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '692', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 109.118
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22207117638023904;  // std dev = 0.481, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,273 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.13721870254137283;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04780410751330547;  // std dev = 2.986, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.023367652578212918;  // std dev = 6.639, 422.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=50 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.7519879119376155;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.08733795515282657;  // std dev = 4.130, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | else return 0.19345751418459597;  // std dev = 0.481, 3,396.000 (wgt'ed) examples reached here.  /* #neg=2,158 #pos=1,238 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.2796880394017887;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.053540541408386176;  // std dev = 2.798, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.04188472660074241;  // std dev = 2.986, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return -0.020546859500842077;  // std dev = 6.639, 422.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=50 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.12207023435803208;  // std dev = 4.435, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | | else return 0.5678985546904546;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.164254677519104;  // std dev = 0.481, 3,396.000 (wgt'ed) examples reached here.  /* #neg=2,158 #pos=1,238 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1092297982760173;  // std dev = 2.932, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.06534169478937013;  // std dev = 0.935, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0036882271398754073;  // std dev = 5.870, 296.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=40 */
%   | | | else return -0.024076045776510863;  // std dev = 4.318, 184.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.5759853313570441;  // std dev = 0.954, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.08446810831354744;  // std dev = 4.464, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | else return 0.13587931562092515;  // std dev = 0.481, 3,392.000 (wgt'ed) examples reached here.  /* #neg=2,160 #pos=1,232 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(A, J) )
%   | | | then return -0.17009080925234477;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.08348595354266948;  // std dev = 3.063, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0032479987516755714;  // std dev = 5.870, 296.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=40 */
%   | | | else return -0.021233922308373284;  // std dev = 4.318, 184.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11123814370253086;  // std dev = 0.480, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,273 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.11937521199133597;  // std dev = 2.918, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.10285085549001663;  // std dev = 0.980, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.04127692699585313;  // std dev = 2.882, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return -0.015543040747909943;  // std dev = 6.639, 422.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=50 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4103401945326692;  // std dev = 0.954, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.009802979331736985;  // std dev = 4.104, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | else return 0.09055432478788304;  // std dev = 0.481, 3,396.000 (wgt'ed) examples reached here.  /* #neg=2,158 #pos=1,238 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10326093615206147;  // std dev = 2.916, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.0901791333333948;  // std dev = 0.980, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.006564856540439436;  // std dev = 5.836, 295.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=40 */
%   | | | else return -0.012512307128906176;  // std dev = 4.292, 175.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07142937750441512;  // std dev = 0.480, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,273 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22132768262155614;  // std dev = 1.259, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.020102014614074442;  // std dev = 2.763, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.004825546521703009;  // std dev = 5.850, 296.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=40 */
%   | | | else return -0.013695835762893231;  // std dev = 4.312, 184.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=21 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05646403128700261;  // std dev = 0.480, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,273 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07144317061601238;  // std dev = 2.885, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return -0.0811413673703993;  // std dev = 0.910, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.004247100477648379;  // std dev = 5.850, 296.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=40 */
%   | | | else return -0.012176713447013723;  // std dev = 4.312, 184.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.044338118962764045;  // std dev = 0.480, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,273 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.002152699805953127;  // std dev = 6.205, 311.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=47 */
%   | | | else return 0.03737351904529108;  // std dev = 2.043, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.00876486979689685;  // std dev = 4.390, 183.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=22 */
%   | | | else return -0.12801217416040728;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.034640959189288785;  // std dev = 0.480, 3,498.000 (wgt'ed) examples reached here.  /* #neg=2,225 #pos=1,273 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.08770439233072316;  // std dev = 2.895, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.07792089845863251;  // std dev = 0.985, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.02285502605108712;  // std dev = 2.863, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return -0.010844978235053109;  // std dev = 6.638, 422.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=50 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '980', 'milliseconds']
Refined model CLL: -0.619561


******************************************
Best model found
******************************************
Results 

CLL : -0.828716 

AUC ROC : 0.48755 

AUC PR : 0.58035 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 109.118 

Total Inference Time : 1.7952332496643066 

Total revision time: 114.63421901893615
Best scored revision CLL: -0.619561


Results 

CLL : -0.828716 

AUC ROC : 0.48755 

AUC PR : 0.58035 

Precision : 0.6 

Recall : 0.003891 

F1 : 0.007732 

Total Learning Time : 135.60678776931763 

Total Inference Time : 1.7952332496643066 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.566
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '694', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 678.293
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21504186721987106;  // std dev = 31.368, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,757 #pos=1,530 */
%   | | | else return 0.1836391311779435;  // std dev = 7.482, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38195845890903496;  // std dev = 3.964, 63.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=33 */
%   | | | else return 0.4642095411601182;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13592671287729013;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.05851773156715447;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01026863584764223;  // std dev = 7.192, 401.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=61 */
%   | | | else return -0.0015001877075058914;  // std dev = 5.245, 228.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18679849689281883;  // std dev = 31.368, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,757 #pos=1,530 */
%   | | | else return 0.1597828335606471;  // std dev = 7.482, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5754565545288949;  // std dev = 1.246, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.3483037334266447;  // std dev = 5.444, 120.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=66 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11164862477862997;  // std dev = 3.103, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.0881425434723116;  // std dev = 0.974, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010148354012120818;  // std dev = 7.344, 414.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=64 */
%   | | | else return 7.615368725163828E-4;  // std dev = 5.237, 224.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15878462026989065;  // std dev = 31.368, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,757 #pos=1,530 */
%   | | | else return 0.1364989322449795;  // std dev = 7.482, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.6872872706198487;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28979084964905083;  // std dev = 5.567, 126.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=70 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.11731223641431195;  // std dev = 3.283, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.05409511199498448;  // std dev = 1.356, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 1.0764334995514791E-5;  // std dev = 6.977, 396.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=57 */
%   | | | else return 0.010124801959946821;  // std dev = 5.515, 233.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13234814007615398;  // std dev = 31.368, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,757 #pos=1,530 */
%   | | | else return 0.11468506298019047;  // std dev = 7.482, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.5250845578218345;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22963190361513;  // std dev = 5.566, 126.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=70 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.2886914763282714;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.02466062655583411;  // std dev = 3.195, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.04269693906255097;  // std dev = 3.095, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return -0.001017384481494255;  // std dev = 8.332, 567.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=81 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10850609886778392;  // std dev = 31.372, 4,291.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,530 */
%   | | | else return 0.09409560571453131;  // std dev = 7.467, 251.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=83 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14696701238641913;  // std dev = 3.890, 62.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return 0.21527242062790852;  // std dev = 3.978, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.24708795015554047;  // std dev = 1.490, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.021266814059812934;  // std dev = 3.194, 69.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -6.125585999713965E-4;  // std dev = 6.975, 396.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=57 */
%   | | | else return 0.008755944380303655;  // std dev = 5.516, 233.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08772007976025292;  // std dev = 31.371, 4,291.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,530 */
%   | | | else return 0.07668941297216239;  // std dev = 7.468, 251.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=83 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.3504800109072675;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1337106308222183;  // std dev = 5.560, 126.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=70 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08624371281166858;  // std dev = 3.270, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.0644713657825952;  // std dev = 1.276, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.037035253466939824;  // std dev = 3.095, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return -0.0012758790503196312;  // std dev = 8.332, 567.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=81 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07015953930115908;  // std dev = 31.367, 4,287.000 (wgt'ed) examples reached here.  /* #neg=2,757 #pos=1,530 */
%   | | | else return 0.06157060202676594;  // std dev = 7.486, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07451306082689634;  // std dev = 3.929, 63.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=33 */
%   | | | else return 0.13390474407472425;  // std dev = 3.930, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08451512086065334;  // std dev = 3.065, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.09492130135781725;  // std dev = 0.990, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -6.12788970008027E-4;  // std dev = 7.048, 395.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=59 */
%   | | | else return 0.006410652780778778;  // std dev = 5.581, 243.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=37 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05561743314409914;  // std dev = 31.371, 4,291.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,530 */
%   | | | else return 0.04902127007106353;  // std dev = 7.470, 251.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=83 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1836524532793949;  // std dev = 1.109, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07202622538063634;  // std dev = 5.443, 121.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07266335689011806;  // std dev = 3.259, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.058519378709263735;  // std dev = 1.280, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02592780350484785;  // std dev = 3.082, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return -0.0013888118541542128;  // std dev = 8.332, 567.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=81 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.4114397194538227;  // std dev = 1.681, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.40683217088362655;  // std dev = 0.511, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.042102713492415414;  // std dev = 32.162, 4,526.000 (wgt'ed) examples reached here.  /* #neg=2,925 #pos=1,601 */
%   | | | else return 0.05572654441342401;  // std dev = 5.554, 126.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=70 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.022320584904248267;  // std dev = 6.787, 323.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=57 */
%   | | | else return -0.01918912045242568;  // std dev = 4.085, 143.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=20 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 8.125303918141999E-4;  // std dev = 5.314, 227.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=33 */
%   | | | else return -0.13732449552848444;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034451457637677416;  // std dev = 31.358, 4,291.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,530 */
%   | | | else return 0.028604140125417454;  // std dev = 7.458, 251.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=83 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.017651531932782773;  // std dev = 3.876, 62.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=33 */
%   | | | else return 0.06940523864653551;  // std dev = 3.971, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07040990823905055;  // std dev = 3.057, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.08492945835014658;  // std dev = 0.989, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.019120849192090002;  // std dev = 3.359, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -0.0019035031937199552;  // std dev = 8.327, 567.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=81 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.189', 'seconds']
Refined model CLL: -0.622163


******************************************
Best model found
******************************************
Results 

CLL : -0.824776 

AUC ROC : 0.5033 

AUC PR : 0.606099 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 678.293 

Total Inference Time : 16.252703428268433 

Total revision time: 699.297266992569
Best scored revision CLL: -0.622163


Results 

CLL : -0.824776 

AUC ROC : 0.5033 

AUC PR : 0.606099 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 720.2698357429505 

Total Inference Time : 16.252703428268433 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.836
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '609', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 875.762
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377488;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703933;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3250797676554728;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25823475432072773;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.35605565351313834;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11331510605281292;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08518211742079719;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0019283839831688368;  // std dev = 7.975, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007181037715835194;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.131365980298942;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051704;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20248800519733207;  // std dev = 4.464, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2819162254289217;  // std dev = 4.465, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0960169341414725;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0550758579783343;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04201536487722272;  // std dev = 3.651, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015235202657690626;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933423;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842096;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14822984872832495;  // std dev = 4.459, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22350122053196297;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.20524231671636226;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.01990150088588594;  // std dev = 3.412, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03614281999875309;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013379808763708146;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357491;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11143490063547921;  // std dev = 4.455, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1700872405570915;  // std dev = 4.459, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0863082872442234;  // std dev = 3.497, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08591579590907325;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -1.9224797084985113E-4;  // std dev = 7.965, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006559089469546069;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081776;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07771781775386163;  // std dev = 4.454, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.13382963452488192;  // std dev = 4.454, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07303651899769684;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07471287650391864;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -1.68163102090683E-4;  // std dev = 7.965, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005762472208521466;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877643989;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530425;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.057506535899231416;  // std dev = 4.451, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10143428292165728;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07608398453908106;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05849696626762982;  // std dev = 1.341, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.019010294541434086;  // std dev = 3.624, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017215363727676083;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.40205016152812606;  // std dev = 2.075, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.008705906461318084;  // std dev = 5.592, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.01574870948391903;  // std dev = 5.586, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
%   | | | else return 0.04414619955151467;  // std dev = 35.580, 5,514.000 (wgt'ed) examples reached here.  /* #neg=3,520 #pos=1,994 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1868967664243942;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0030689035312470516;  // std dev = 3.391, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02602232140524625;  // std dev = 3.611, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015116546427583596;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034119549558414994;  // std dev = 34.977, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03269232927276517;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.25441251746503807;  // std dev = 1.214, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.03543637679669233;  // std dev = 6.138, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05561233933469705;  // std dev = 3.484, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07281301801298591;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.001653681212953415;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005695446038120631;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.312', 'seconds']
Refined model CLL: -0.621465


******************************************
Best model found
******************************************
Results 

CLL : -0.826016 

AUC ROC : 0.499232 

AUC PR : 0.605571 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 875.762 

Total Inference Time : 19.7464280128479 

Total revision time: 901.598517129898
Best scored revision CLL: -0.621465


Results 

CLL : -0.826016 

AUC ROC : 0.499232 

AUC PR : 0.605571 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 922.5710858802795 

Total Inference Time : 19.7464280128479 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.242
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '773', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 128.436
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3360738799118696;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.17064893509951212;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04733812428870155;  // std dev = 2.382, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29005737508865015;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.448295606241962;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.5580193346218546;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.38668655935689783;  // std dev = 2.532, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.05559291690188031;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.039428640165142456;  // std dev = 2.382, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return -0.14771177215401904;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24176854232748174;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.34444732311211784;  // std dev = 1.624, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.44062841488114135;  // std dev = 1.754, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.3223320219937053;  // std dev = 2.517, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.04783089730754641;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12983454928365049;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03889611256112602;  // std dev = 2.376, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19542612157472847;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2654034642515135;  // std dev = 1.624, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.33671180374973264;  // std dev = 1.753, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09570815222374626;  // std dev = 3.620, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.5579465787721463;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03188864418719686;  // std dev = 2.375, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return -0.13453092611992354;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1541930864440435;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.20127148789702637;  // std dev = 1.820, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.2628992280988601;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2173979384136286;  // std dev = 2.447, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.0277320267603969;  // std dev = 2.375, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.17837616783515348;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03744359428068704;  // std dev = 2.625, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.11956302796183886;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.14538393481037282;  // std dev = 1.622, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.19451194538775268;  // std dev = 1.752, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16878919682453924;  // std dev = 2.445, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.0240426510113877;  // std dev = 2.374, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.15384187845063169;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03168566098171289;  // std dev = 2.625, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09163111506766847;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10941318534338018;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.15620022940874925;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12956958232842514;  // std dev = 2.446, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.020787503645818974;  // std dev = 2.374, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.20406323130120252;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02394779444987857;  // std dev = 2.619, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06969483533028654;  // std dev = 0.500, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08268888005893583;  // std dev = 1.819, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.12130857105702221;  // std dev = 1.545, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.017328292037224625;  // std dev = 3.247, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.20079199115684887;  // std dev = 1.443, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12699360520549297;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.022600642208208385;  // std dev = 2.368, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.288466380092211;  // std dev = 1.884, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.22516834777313116;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.049944774398809365;  // std dev = 14.848, 884.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=420 */
%   | | | else return 0.06738946324700684;  // std dev = 2.363, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.07652028949504812;  // std dev = 2.422, 28.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | | else return 0.016877976506038377;  // std dev = 2.369, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1399076950760683;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.021893199067802637;  // std dev = 2.618, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03975918346291353;  // std dev = 0.499, 906.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=433 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.036459038175285174;  // std dev = 1.610, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.07992510252440985;  // std dev = 1.751, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.02290752751828459;  // std dev = 1.253, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.1329649291416129;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04230938903894254;  // std dev = 3.335, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.011290786199455607;  // std dev = 2.372, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.464', 'seconds']
Refined model CLL: -0.669648


******************************************
Best model found
******************************************
Results 

CLL : -0.59927 

AUC ROC : 0.558189 

AUC PR : 0.251215 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 128.436 

Total Inference Time : 1.8202495574951172 

Total revision time: 132.43433788108825
Best scored revision CLL: -0.669648


Results 

CLL : -0.59927 

AUC ROC : 0.558189 

AUC PR : 0.251215 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 153.40690663146972 

Total Inference Time : 1.8202495574951172 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.576
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '755', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 232.862
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3423943745688274;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.6359267128772893;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.30814893509951113;  // std dev = 3.854, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.05295412990470718;  // std dev = 3.475, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.048022352821031365;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29541162771171586;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3087411357856347;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.539849842074168;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.08436542078123906;  // std dev = 4.412, 107.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   | | | else return 0.350863407000903;  // std dev = 2.726, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04207548521656871;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2459765865270496;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.25641236875858664;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.428956272535085;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23137346328728522;  // std dev = 3.823, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.03669701148306433;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14594932704409805;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.03795347462013519;  // std dev = 3.466, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19851619011548907;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2061374073445397;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.3264400476801379;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07149289894171834;  // std dev = 4.822, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | | else return 0.35577835140667385;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03187610094121225;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return -0.11113098763076537;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1563460490338212;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16162857548414683;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.24503149911444577;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16077091906091592;  // std dev = 3.785, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.02758911801517435;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.13237616976365396;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.024149017973401625;  // std dev = 3.462, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12101148239276815;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.12455597792081982;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.18482045881522163;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12702762029305223;  // std dev = 3.783, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.023803397191529338;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019018463702213356;  // std dev = 3.467, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | | else return -0.09935625757594098;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09258636153182843;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0949280093673066;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.1410881440687914;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.09898711878699401;  // std dev = 3.781, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.020480591425313888;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.15539055997705614;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.017624294317370406;  // std dev = 3.456, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3360736313917395;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return -0.15266903193448134;  // std dev = 1.816, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06824680626440684;  // std dev = 21.004, 1,767.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=852 */
%   | | | else return 0.09913513176342728;  // std dev = 3.451, 58.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03295483160828829;  // std dev = 4.886, 129.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=37 */
%   | | | else return 0.172129787983279;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.11665444040206842;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.017261556223172814;  // std dev = 3.455, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5029208909544968;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3084179985146532;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05141113938447548;  // std dev = 21.183, 1,801.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=869 */
%   | | | else return 0.06981715551643496;  // std dev = 3.554, 61.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.23022324787581394;  // std dev = 1.556, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.09674987967544929;  // std dev = 0.978, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.022336347748067607;  // std dev = 4.813, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | | | else return 0.011591450743904747;  // std dev = 3.363, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.039997737502398455;  // std dev = 0.499, 1,809.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=876 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.037232861266575795;  // std dev = 2.539, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.07288695624562387;  // std dev = 2.495, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.021189927559570196;  // std dev = 4.854, 129.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=37 */
%   | | | else return 0.12793485988664344;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14054592136102428;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.010436659421369801;  // std dev = 3.452, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.443', 'seconds']
Refined model CLL: -0.671555


******************************************
Best model found
******************************************
Results 

CLL : -0.602863 

AUC ROC : 0.56013 

AUC PR : 0.250017 

Precision : 0.555556 

Recall : 0.025818 

F1 : 0.049342 

Total Learning Time : 232.862 

Total Inference Time : 2.596921920776367 

Total revision time: 238.03497914123534
Best scored revision CLL: -0.671555


Results 

CLL : -0.602863 

AUC ROC : 0.56013 

AUC PR : 0.250017 

Precision : 0.555556 

Recall : 0.025818 

F1 : 0.049342 

Total Learning Time : 259.0075478916168 

Total Inference Time : 2.596921920776367 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.069
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '783', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 338.89
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34530933703475103;  // std dev = 0.500, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.415525984279839;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2643989350995114;  // std dev = 4.812, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   | | | else return 0.07001334187917274;  // std dev = 4.439, 118.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=25 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.03996711691769386;  // std dev = 4.243, 121.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2978796839990351;  // std dev = 0.500, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.357085634854424;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2290743393386804;  // std dev = 4.812, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   | | | else return 0.061275120453280506;  // std dev = 4.439, 118.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=25 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.034941095439116145;  // std dev = 4.240, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
%   | | | else return -0.14204364748721063;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.760752770267689;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5993081729500511;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.24598641512749933;  // std dev = 25.849, 2,675.000 (wgt'ed) examples reached here.  /* #neg=1,377 #pos=1,298 */
%   | | | else return 0.3170374997992786;  // std dev = 5.056, 107.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=64 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1931813709902744;  // std dev = 4.812, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   | | | else return 0.0532683668457743;  // std dev = 4.439, 118.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=25 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1255971298979329;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.03183642030734073;  // std dev = 4.237, 121.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19988472890394265;  // std dev = 0.499, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2278557362421415;  // std dev = 3.879, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | | else return 0.28859991502338417;  // std dev = 3.253, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1590022627553442;  // std dev = 4.812, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   | | | else return 0.04603013502753948;  // std dev = 4.439, 118.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=25 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027570894207516475;  // std dev = 4.234, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
%   | | | else return -0.1258222552600535;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15729923852819677;  // std dev = 0.499, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2944548975200937;  // std dev = 1.141, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.18785223509214366;  // std dev = 4.930, 102.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=61 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.12823776952905477;  // std dev = 4.812, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
%   | | | else return 0.03956432255782164;  // std dev = 4.439, 118.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=25 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.08433286726739501;  // std dev = 0.960, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.027376408207716335;  // std dev = 4.123, 116.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12165560667452062;  // std dev = 0.499, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1206010157717175;  // std dev = 3.467, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return 0.16962525480238289;  // std dev = 3.683, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.052637007124126334;  // std dev = 6.132, 193.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */
%   | | | else return 0.1717212676828391;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1130699010687252;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.022994461969628843;  // std dev = 4.228, 121.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09301571731940636;  // std dev = 0.499, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09200789093681015;  // std dev = 3.877, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | | else return 0.13431710427921045;  // std dev = 3.247, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.15024675675276947;  // std dev = 2.378, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.03942808947443898;  // std dev = 6.087, 189.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=53 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019772982637530145;  // std dev = 4.226, 122.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=22 */
%   | | | else return -0.11406885150736452;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07060477838153431;  // std dev = 0.499, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1642690070062913;  // std dev = 1.133, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.07761846706159045;  // std dev = 4.926, 102.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=61 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0334212036113226;  // std dev = 6.119, 193.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */
%   | | | else return 0.12526097032677863;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10212960064676721;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.01800990433499874;  // std dev = 4.224, 121.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05335473941685023;  // std dev = 0.499, 2,687.000 (wgt'ed) examples reached here.  /* #neg=1,378 #pos=1,309 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0418964353362054;  // std dev = 3.467, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | | | else return 0.08024901200179965;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.020687072369816175;  // std dev = 6.009, 201.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=52 */
%   | | | else return 0.19773676774567164;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10966563193511199;  // std dev = 0.963, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.019973870461917415;  // std dev = 4.327, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2811586813417557;  // std dev = 2.673, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | | | else return -0.15834672798362992;  // std dev = 2.526, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03922787168393301;  // std dev = 25.578, 2,619.000 (wgt'ed) examples reached here.  /* #neg=1,347 #pos=1,272 */
%   | | | else return 0.04461985276414464;  // std dev = 4.943, 103.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10882463828606852;  // std dev = 2.364, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.017450201504489157;  // std dev = 6.059, 189.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0798391275433325;  // std dev = 0.958, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.015473775090849321;  // std dev = 4.112, 116.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.510', 'seconds']
Refined model CLL: -0.673773


******************************************
Best model found
******************************************
Results 

CLL : -0.605069 

AUC ROC : 0.560171 

AUC PR : 0.250554 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 338.89 

Total Inference Time : 3.282480239868164 

Total revision time: 345.3675705280304
Best scored revision CLL: -0.673773


Results 

CLL : -0.605069 

AUC ROC : 0.560171 

AUC PR : 0.250554 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 366.34013927841187 

Total Inference Time : 3.282480239868164 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.557
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '700', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 420.568
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34604206062135523;  // std dev = 0.500, 3,593.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=1,753 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3914822684328453;  // std dev = 4.320, 75.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=40 */
%   | | | else return 0.5447160992786172;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2914822684328467;  // std dev = 5.428, 120.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=52 */
%   | | | else return 0.03939893509951159;  // std dev = 4.873, 160.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03206197857777254;  // std dev = 4.809, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2984999429664012;  // std dev = 0.500, 3,593.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=1,753 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.33686537905126684;  // std dev = 4.320, 75.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=40 */
%   | | | else return 0.46478035350649527;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.25217476417968127;  // std dev = 5.428, 120.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=52 */
%   | | | else return 0.034534923350668274;  // std dev = 4.873, 160.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028114099916791823;  // std dev = 4.809, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24839955528069288;  // std dev = 0.500, 3,593.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=1,753 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.26531979748251744;  // std dev = 4.155, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return 0.3820079368388294;  // std dev = 3.957, 71.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=47 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2117292609760101;  // std dev = 5.428, 120.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=52 */
%   | | | else return 0.03015854469422905;  // std dev = 4.873, 160.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024577742325650003;  // std dev = 4.809, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20029097740014884;  // std dev = 0.500, 3,593.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=1,753 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.21109297812298317;  // std dev = 4.306, 75.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=40 */
%   | | | else return 0.3021413083959972;  // std dev = 3.786, 67.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.17307257568071197;  // std dev = 5.428, 120.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=52 */
%   | | | else return 0.026249487417861945;  // std dev = 4.873, 160.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02142854380708852;  // std dev = 4.809, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.34980140011734606;  // std dev = 3.696, 63.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | | else return -0.021294528142014813;  // std dev = 2.809, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.15639698313544106;  // std dev = 29.566, 3,499.000 (wgt'ed) examples reached here.  /* #neg=1,796 #pos=1,703 */
%   | | | else return 0.18741378695657146;  // std dev = 5.620, 135.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.13839960736169202;  // std dev = 5.428, 120.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=52 */
%   | | | else return 0.022780232944742452;  // std dev = 4.873, 160.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=29 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018638600037517505;  // std dev = 4.809, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.32281334932039596;  // std dev = 3.496, 59.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | | | else return -0.04194636668610674;  // std dev = 3.072, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.12061572958519085;  // std dev = 29.536, 3,497.000 (wgt'ed) examples reached here.  /* #neg=1,795 #pos=1,702 */
%   | | | else return 0.14348871222036796;  // std dev = 5.634, 136.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04087482573550997;  // std dev = 6.787, 252.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=66 */
%   | | | else return 0.21120856503776733;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.016178143584908596;  // std dev = 4.809, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0929449059366645;  // std dev = 0.499, 3,593.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=1,753 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06966737607148987;  // std dev = 4.152, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return 0.15913394095189945;  // std dev = 3.952, 71.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=47 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1849268449598698;  // std dev = 2.498, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.032221385851222875;  // std dev = 6.827, 253.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=68 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014016882544356872;  // std dev = 4.809, 161.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=28 */
%   | | | else return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4481052779983754;  // std dev = 1.221, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.0324106649032232;  // std dev = 4.413, 84.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06980442592138379;  // std dev = 29.535, 3,497.000 (wgt'ed) examples reached here.  /* #neg=1,795 #pos=1,702 */
%   | | | else return 0.0793728274945061;  // std dev = 5.623, 136.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01995379046375566;  // std dev = 6.712, 255.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=65 */
%   | | | else return 0.23619364396437278;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.10919469143743332;  // std dev = 0.976, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.017760373194080168;  // std dev = 4.753, 152.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05328432167909945;  // std dev = 0.499, 3,593.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=1,753 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03213145563589815;  // std dev = 4.142, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return 0.09904102760987;  // std dev = 3.944, 71.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=47 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01653644903205349;  // std dev = 6.712, 255.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=65 */
%   | | | else return 0.18132762871306474;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0952473247205756;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.01529173982727377;  // std dev = 4.753, 152.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04015788461547596;  // std dev = 0.499, 3,593.000 (wgt'ed) examples reached here.  /* #neg=1,840 #pos=1,753 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.018155873984810375;  // std dev = 4.287, 75.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=40 */
%   | | | else return 0.08483200643705789;  // std dev = 3.778, 67.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.01179729238483962;  // std dev = 6.695, 252.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=66 */
%   | | | else return 0.1471191469072963;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.05767022823765398;  // std dev = 1.334, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.00939665674264575;  // std dev = 4.620, 153.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.611', 'seconds']
Refined model CLL: -0.671301


******************************************
Best model found
******************************************
Results 

CLL : -0.602914 

AUC ROC : 0.561639 

AUC PR : 0.254217 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 420.568 

Total Inference Time : 4.005372524261475 

Total revision time: 428.24570178985596
Best scored revision CLL: -0.671301


Results 

CLL : -0.602914 

AUC ROC : 0.561639 

AUC PR : 0.254217 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 449.2182705402374 

Total Inference Time : 4.005372524261475 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.512
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '720', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 616.555
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6984459746020693;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34001926937474064;  // std dev = 6.348, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23228051201687597;  // std dev = 4.662, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30843319502714445;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1670534496159236;  // std dev = 4.650, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24425728659686713;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598745;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508113;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.30501238911018724;  // std dev = 1.197, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14509184200254746;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510875;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426377;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094524;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02105752645551097;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08625884815496324;  // std dev = 4.640, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14665185395650632;  // std dev = 4.294, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830446;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960773;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.23185606756778104;  // std dev = 1.181, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07860061456029878;  // std dev = 6.201, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955346;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302788;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.034175307731721484;  // std dev = 4.629, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09923957250766986;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13682433256477533;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021577358070322378;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009773119313054707;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08564686162744155;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040154893573991046;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1673267897972997;  // std dev = 1.183, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.043166853683837624;  // std dev = 6.194, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017052302539259784;  // std dev = 7.485, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12731447945880967;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06235766377296756;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.009089761821202014;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.463', 'seconds']
Refined model CLL: -0.674054


******************************************
Best model found
******************************************
Results 

CLL : -0.605804 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 616.555 

Total Inference Time : 4.186213731765747 

Total revision time: 625.526212064743
Best scored revision CLL: -0.674054


Results 

CLL : -0.605804 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 646.4987808151245 

Total Inference Time : 4.186213731765747 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.297
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '719', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 74.966
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.26212244503328236;  // std dev = 0.491, 1,057.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=427 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.09929787341112603;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.026980103930681208;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0803711573217346;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6413377905010478;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.21601311517637237;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.18679233595559316;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.223758381957782;  // std dev = 15.465, 996.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=399 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.08763477038348894;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.023663991585890606;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.07030324498182258;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19152503219587477;  // std dev = 0.490, 1,057.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=427 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.07802856056578536;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.020702713113433347;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06102210441531283;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4874804817779767;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.1248891529460728;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1487586729821362;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.15507199546538034;  // std dev = 15.465, 996.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=399 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.06999615028877926;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.018071236418078448;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.05259950478597567;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.34390676052343205;  // std dev = 1.895, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.07351206833574597;  // std dev = 2.127, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0.12471402987883065;  // std dev = 0.490, 1,018.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=407 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.06319209969572152;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.0157429200610258;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0450615657215787;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3185375190039691;  // std dev = 1.613, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.06490607472356984;  // std dev = 2.314, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else return 0.09916099464608726;  // std dev = 0.490, 1,018.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=407 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.05736360036870724;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.013690649367091853;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.038396899365325005;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4149488469666345;  // std dev = 1.197, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.01771522128595088;  // std dev = 2.126, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.07736590367713904;  // std dev = 0.490, 1,024.000 (wgt'ed) examples reached here.  /* #neg=614 #pos=410 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.052321788354321434;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.011887705243024375;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03256600389501999;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.061669659722260406;  // std dev = 0.488, 1,057.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=427 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.047922966549026516;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.010308394581906495;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.027510392484601673;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04769366081634855;  // std dev = 0.488, 1,057.000 (wgt'ed) examples reached here.  /* #neg=630 #pos=427 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.04405600640115155;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.008928478568645625;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.023160528370293736;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.2463093212157628;  // std dev = 1.208, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.0023767963117784746;  // std dev = 2.489, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.0015243593559024543;  // std dev = 2.162, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.036341511186851354;  // std dev = 15.465, 996.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=399 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return -0.04063370356578385;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.00772543683026533;  // std dev = 3.287, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.019442152765119673;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.265', 'seconds']
Refined model CLL: -0.628782


******************************************
Best model found
******************************************
Results 

CLL : -0.677818 

AUC ROC : 0.533406 

AUC PR : 0.440735 

Precision : 1.0 

Recall : 0.002677 

F1 : 0.00534 

Total Learning Time : 74.966 

Total Inference Time : 2.2996671199798584 

Total revision time: 79.51958059120177
Best scored revision CLL: -0.628782


Results 

CLL : -0.677818 

AUC ROC : 0.533406 

AUC PR : 0.440735 

Precision : 1.0 

Recall : 0.002677 

F1 : 0.00534 

Total Learning Time : 100.49214934158324 

Total Inference Time : 2.2996671199798584 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.877
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '714', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 378.747
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.25646590564649185;  // std dev = 0.490, 2,139.000 (wgt'ed) examples reached here.  /* #neg=1,287 #pos=852 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.002962176011599175;  // std dev = 4.640, 180.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=25 */
%   | | | else return 0.02481560176617883;  // std dev = 4.183, 126.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=21 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22229486192140008;  // std dev = 0.490, 2,139.000 (wgt'ed) examples reached here.  /* #neg=1,287 #pos=852 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.05138821861013487;  // std dev = 2.699, 88.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | | else return 0.032168271909624735;  // std dev = 4.251, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06716337123456546;  // std dev = 4.505, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return -0.14646127763782232;  // std dev = 0.041, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.5540936909724451;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.1465306657623607;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.18580600803866296;  // std dev = 0.489, 2,066.000 (wgt'ed) examples reached here.  /* #neg=1,247 #pos=819 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | | then return -0.04523178293535494;  // std dev = 2.699, 88.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | | else return 0.0281292886111698;  // std dev = 4.251, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.05868027223162833;  // std dev = 4.504, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return -0.1290968204912318;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15475685009913273;  // std dev = 0.489, 2,139.000 (wgt'ed) examples reached here.  /* #neg=1,287 #pos=852 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1485284678461718;  // std dev = 2.439, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.075394757418822;  // std dev = 0.960, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.005686630598104097;  // std dev = 4.621, 180.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=25 */
%   | | | else return 0.016889548613437565;  // std dev = 4.171, 126.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6484855021251189;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34079319443281136;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.09210605147594585;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.12366060258695935;  // std dev = 22.234, 2,066.000 (wgt'ed) examples reached here.  /* #neg=1,247 #pos=819 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1262991397603212;  // std dev = 2.436, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.0666932132989328;  // std dev = 0.961, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004985817457303742;  // std dev = 4.621, 180.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=25 */
%   | | | else return 0.014727716768980412;  // std dev = 4.171, 126.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=21 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09952357941257214;  // std dev = 0.489, 2,139.000 (wgt'ed) examples reached here.  /* #neg=1,287 #pos=852 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.04016532896024162;  // std dev = 2.705, 88.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | | else return 0.019627402094466537;  // std dev = 4.248, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04686141316861308;  // std dev = 4.465, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return -0.12160926121824504;  // std dev = 0.093, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07828418409054264;  // std dev = 0.489, 2,139.000 (wgt'ed) examples reached here.  /* #neg=1,287 #pos=852 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.03566304854066158;  // std dev = 2.705, 88.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | | else return 0.017004326598187496;  // std dev = 4.248, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04035464080723022;  // std dev = 4.463, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return -0.1092655863004083;  // std dev = 0.085, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.49786211725922325;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22127913309053332;  // std dev = 1.655, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0.05935597358552176;  // std dev = 0.489, 2,122.000 (wgt'ed) examples reached here.  /* #neg=1,283 #pos=839 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | | then return -0.03177680900736081;  // std dev = 2.705, 88.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=8 */
%   | | | else return 0.014703415385039997;  // std dev = 4.248, 124.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=22 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.034589868619199535;  // std dev = 4.462, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return -0.09912211188699489;  // std dev = 0.078, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047238453729850624;  // std dev = 0.489, 2,139.000 (wgt'ed) examples reached here.  /* #neg=1,287 #pos=852 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09632760541838847;  // std dev = 2.399, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return -0.06499928031002021;  // std dev = 0.957, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.007716351673118142;  // std dev = 4.609, 180.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=25 */
%   | | | else return 0.0085604136740324;  // std dev = 4.162, 126.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42471114058960246;  // std dev = 12.982, 996.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=774 */
%   | | | else return -0.3068503283776311;  // std dev = 6.365, 1,148.000 (wgt'ed) examples reached here.  /* #neg=1,109 #pos=39 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.16013515170970852;  // std dev = 2.377, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | | else return 0.00952590425764418;  // std dev = 4.972, 133.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.27107225726411366;  // std dev = 2.173, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.45737561238744323;  // std dev = 1.279, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02831171942162988;  // std dev = 4.447, 123.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=26 */
%   | | | else return -0.09244237299569816;  // std dev = 0.091, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.557', 'seconds']
Refined model CLL: -0.533506


******************************************
Best model found
******************************************
Results 

CLL : -0.556906 

AUC ROC : 0.880432 

AUC PR : 0.790973 

Precision : 1.0 

Recall : 0.002677 

F1 : 0.00534 

Total Learning Time : 378.747 

Total Inference Time : 5.301835298538208 

Total revision time: 387.0320195426941
Best scored revision CLL: -0.533506


Results 

CLL : -0.556906 

AUC ROC : 0.880432 

AUC PR : 0.790973 

Precision : 1.0 

Recall : 0.002677 

F1 : 0.00534 

Total Learning Time : 408.0045882930756 

Total Inference Time : 5.301835298538208 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.498
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '671', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 532.9159999999999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.6581489350995123;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.21769949689726378;  // std dev = 4.527, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2227322684328443;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | | | else return 0.25099435682579535;  // std dev = 26.959, 3,047.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,197 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.15544623239680966;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.084564029439135;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.013229149003255782;  // std dev = 7.000, 374.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=58 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21821322808885402;  // std dev = 0.488, 3,252.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,280 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13545091461582792;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.07611187483440301;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.07395512035596542;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.011611130840798739;  // std dev = 7.000, 374.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=58 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18439920055609008;  // std dev = 0.488, 3,252.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,280 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11519540170584217;  // std dev = 2.809, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.05898030844596038;  // std dev = 1.341, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.002167296397159951;  // std dev = 5.558, 251.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=36 */
%   | | | else return 0.042710239058472474;  // std dev = 5.129, 172.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=33 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6768293445195533;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.36913703682724563;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.12444227588388651;  // std dev = 4.527, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | | else return 0.15099050057927363;  // std dev = 27.369, 3,143.000 (wgt'ed) examples reached here.  /* #neg=1,911 #pos=1,232 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.09913130242918422;  // std dev = 2.807, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.05104554778747796;  // std dev = 1.341, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.001897974914894848;  // std dev = 5.558, 251.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=36 */
%   | | | else return 0.03721880082240726;  // std dev = 5.128, 172.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=33 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.31661390559283265;  // std dev = 3.274, 49.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=30 */
%   | | | else return 0.012953452537321006;  // std dev = 3.657, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else return 0.12262711639855696;  // std dev = 0.488, 3,134.000 (wgt'ed) examples reached here.  /* #neg=1,905 #pos=1,229 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10705722599918159;  // std dev = 2.761, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.07820905023912467;  // std dev = 0.974, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04752635863693938;  // std dev = 3.023, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.006936880176916918;  // std dev = 6.999, 374.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=58 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.33431565564885085;  // std dev = 2.803, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | | | else return 0.020800552698149143;  // std dev = 3.775, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07066125363998182;  // std dev = 4.617, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | | | else return 0.09816833544257388;  // std dev = 26.959, 3,047.000 (wgt'ed) examples reached here.  /* #neg=1,850 #pos=1,197 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, A) )
%   | | | then return 0.02571226894577334;  // std dev = 5.690, 223.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=40 */
%   | | | else return -0.043056205992772906;  // std dev = 2.690, 75.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.04175107163474349;  // std dev = 5.147, 166.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=34 */
%   | | | else return -0.16350052020501626;  // std dev = 0.110, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07739210699284926;  // std dev = 0.487, 3,252.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,280 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07709830475815237;  // std dev = 2.785, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.049912586145066454;  // std dev = 1.335, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.003725581168892484;  // std dev = 5.559, 251.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=36 */
%   | | | else return 0.02540510330346709;  // std dev = 5.103, 172.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06044756123111977;  // std dev = 0.487, 3,252.000 (wgt'ed) examples reached here.  /* #neg=1,972 #pos=1,280 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08303552375983239;  // std dev = 2.741, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return -0.07360977283280296;  // std dev = 0.971, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03344352903697288;  // std dev = 3.000, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.003158080077028531;  // std dev = 6.991, 374.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=58 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2154831701194199;  // std dev = 3.158, 47.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | | else return -0.04654616753238773;  // std dev = 3.414, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | else return 0.046225809877184436;  // std dev = 0.488, 3,143.000 (wgt'ed) examples reached here.  /* #neg=1,911 #pos=1,232 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(B, J) )
%   | | | then return -0.15173281511334674;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.04124092981770002;  // std dev = 3.079, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.003906805703420864;  // std dev = 5.561, 251.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=36 */
%   | | | else return 0.019769808429842245;  // std dev = 5.092, 172.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=33 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4272275412712329;  // std dev = 15.996, 1,511.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=1,174 */
%   | | | else return -0.30822964549759063;  // std dev = 7.422, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,683 #pos=53 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.13293476661008924;  // std dev = 3.176, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | | else return 0.004285159815697767;  // std dev = 6.090, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06552720688420284;  // std dev = 5.536, 174.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=46 */
%   | | | else return -0.029981110415098846;  // std dev = 1.566, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07596700760346402;  // std dev = 1.105, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2274572775402816;  // std dev = 2.241, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.592', 'seconds']
Refined model CLL: -0.535174


******************************************
Best model found
******************************************
Results 

CLL : -0.557076 

AUC ROC : 0.884028 

AUC PR : 0.810824 

Precision : 1.0 

Recall : 0.012048 

F1 : 0.02381 

Total Learning Time : 532.9159999999999 

Total Inference Time : 6.854830503463745 

Total revision time: 543.381963218689
Best scored revision CLL: -0.535174


Results 

CLL : -0.557076 

AUC ROC : 0.884028 

AUC PR : 0.810824 

Precision : 1.0 

Recall : 0.012048 

F1 : 0.02381 

Total Learning Time : 564.3545319690704 

Total Inference Time : 6.854830503463745 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.123
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '649', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 751.476
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4610901115701007;  // std dev = 4.035, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   | | | else return 0.16849376268571925;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | | else return 0.250183484043845;  // std dev = 0.488, 4,168.000 (wgt'ed) examples reached here.  /* #neg=2,534 #pos=1,634 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13814893509951237;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.09837280403092258;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.029866106816684494;  // std dev = 7.505, 396.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=68 */
%   | | | else return 0.02392433616903029;  // std dev = 5.085, 187.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=31 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.5930794163066362;  // std dev = 1.950, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.19995545662804212;  // std dev = 5.526, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else return 0.21692177840416288;  // std dev = 0.488, 4,168.000 (wgt'ed) examples reached here.  /* #neg=2,534 #pos=1,634 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.12048633002602775;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.08681449082837045;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.05749041122194406;  // std dev = 3.340, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | | else return 0.020096428955006244;  // std dev = 8.423, 514.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=85 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844446705372061;  // std dev = 0.488, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,621 #pos=1,702 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.018365235757275583;  // std dev = 6.977, 351.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=59 */
%   | | | else return 0.10102684141392058;  // std dev = 3.358, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.029005693479216853;  // std dev = 5.728, 224.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=40 */
%   | | | else return -0.1475237041496022;  // std dev = 0.074, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3149332112371043;  // std dev = 3.995, 68.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=41 */
%   | | | else return 0.07501053969698679;  // std dev = 4.223, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | | else return 0.15126225044428418;  // std dev = 0.488, 4,168.000 (wgt'ed) examples reached here.  /* #neg=2,534 #pos=1,634 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10512687584397472;  // std dev = 3.197, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.06859895405052514;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.027884756301778158;  // std dev = 7.650, 397.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=72 */
%   | | | else return -0.007411301092876456;  // std dev = 4.714, 182.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=26 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.31744885854859706;  // std dev = 3.718, 61.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=37 */
%   | | | else return 0.004200876551084631;  // std dev = 4.012, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else return 0.12273260296981214;  // std dev = 0.488, 4,181.000 (wgt'ed) examples reached here.  /* #neg=2,539 #pos=1,642 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.24256669985754864;  // std dev = 1.531, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0165536074428072;  // std dev = 3.100, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024230332349032133;  // std dev = 7.650, 397.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=72 */
%   | | | else return -0.006468032070652289;  // std dev = 4.714, 182.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0982489630129048;  // std dev = 0.487, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,621 #pos=1,702 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08544578961428465;  // std dev = 3.187, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.06865626273294924;  // std dev = 1.316, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.020997681213996665;  // std dev = 7.649, 397.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=72 */
%   | | | else return -0.005648808470678736;  // std dev = 4.714, 182.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=26 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2576187605777803;  // std dev = 3.355, 49.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=30 */
%   | | | else return -0.0017016486800957515;  // std dev = 4.301, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | | else return 0.07706596069784559;  // std dev = 0.488, 4,181.000 (wgt'ed) examples reached here.  /* #neg=2,539 #pos=1,642 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07285449916568318;  // std dev = 3.185, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.059864874803535216;  // std dev = 1.317, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0013893071116599237;  // std dev = 6.798, 347.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=55 */
%   | | | else return 0.02511309244633378;  // std dev = 5.874, 232.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060426236673331545;  // std dev = 0.487, 4,323.000 (wgt'ed) examples reached here.  /* #neg=2,621 #pos=1,702 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08925406412056691;  // std dev = 3.131, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.08914659495150673;  // std dev = 0.980, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.022209777427257233;  // std dev = 3.290, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | | else return 0.007057032690340173;  // std dev = 8.410, 514.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=85 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3362920523221084;  // std dev = 1.906, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.001725271310566244;  // std dev = 5.026, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.026767874333021902;  // std dev = 5.378, 131.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=51 */
%   | | | else return 0.04730221893150543;  // std dev = 31.080, 4,050.000 (wgt'ed) examples reached here.  /* #neg=2,459 #pos=1,591 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.0751270651108635;  // std dev = 3.128, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.07924435028010707;  // std dev = 0.980, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.004064452471461885;  // std dev = 7.053, 354.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=60 */
%   | | | else return 0.013142392238883112;  // std dev = 5.640, 229.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=39 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.42287754617841217;  // std dev = 18.609, 2,014.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=1,557 */
%   | | | else return -0.31006058701328143;  // std dev = 8.302, 2,297.000 (wgt'ed) examples reached here.  /* #neg=2,232 #pos=65 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.12299360421432795;  // std dev = 3.906, 92.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
%   | | | else return 0.03882374284893956;  // std dev = 7.334, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.191258241146265;  // std dev = 2.870, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return 0.4475336374480094;  // std dev = 2.198, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02646327352284917;  // std dev = 5.939, 227.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=45 */
%   | | | else return -0.13344754250576968;  // std dev = 0.120, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.588', 'seconds']
Refined model CLL: -0.536069


******************************************
Best model found
******************************************
Results 

CLL : -0.556522 

AUC ROC : 0.883447 

AUC PR : 0.808165 

Precision : 1.0 

Recall : 0.024096 

F1 : 0.047059 

Total Learning Time : 751.476 

Total Inference Time : 8.586210250854492 

Total revision time: 764.3073802223206
Best scored revision CLL: -0.536069


Results 

CLL : -0.556522 

AUC ROC : 0.883447 

AUC PR : 0.808165 

Precision : 1.0 

Recall : 0.024096 

F1 : 0.047059 

Total Learning Time : 785.2799489727021 

Total Inference Time : 8.586210250854492 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.127
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '673', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 923.252
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04548402744779789;  // std dev = 7.596, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.015090501520205963;  // std dev = 3.965, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.050876207826785;  // std dev = 6.541, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4195923898729339;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.09916548493374269;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.21757434129930542;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1284259102691069;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07299927426723861;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06065195582305038;  // std dev = 3.665, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.018308337033637517;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18442313203816715;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11998405052935078;  // std dev = 3.500, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08199357374665579;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.05270648039001929;  // std dev = 3.642, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0160139442531936;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.31488373221036825;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.05433118057853982;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12724029114542512;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.15247190951715486;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.10493613497141802;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0713883055767163;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.04466614145966648;  // std dev = 3.643, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013982699569893618;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1232349355515121;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09766701143964912;  // std dev = 3.491, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07805796488184098;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.008060167187514606;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026317219261883205;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.4102178307470457;  // std dev = 2.304, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.05512739984654709;  // std dev = 5.733, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.09792238450370229;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.08641215931212884;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06667407693061181;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.006173992036007852;  // std dev = 7.774, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023249440300662314;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.26794861693635297;  // std dev = 4.259, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.04278892108663794;  // std dev = 4.489, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04832127191789316;  // std dev = 5.704, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.07773306198868365;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.20038370877643022;  // std dev = 1.573, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008414654858730011;  // std dev = 3.390, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.005367454091191455;  // std dev = 7.774, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020113443241741576;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06041999451388838;  // std dev = 0.487, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0018675810242012067;  // std dev = 7.675, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07463347976689601;  // std dev = 3.721, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.02714771211920079;  // std dev = 6.490, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1395219686008087;  // std dev = 0.089, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23150590215052788;  // std dev = 3.689, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.025972152221455862;  // std dev = 4.957, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else return 0.04649287764261746;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.005360069215284059;  // std dev = 7.652, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08048830360385238;  // std dev = 3.728, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.024887470648676732;  // std dev = 6.497, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.12364173773047482;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030799093511922518;  // std dev = 34.195, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04539870886965389;  // std dev = 8.397, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11359994074991722;  // std dev = 4.670, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03431131251155954;  // std dev = 8.103, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.23006544016427322;  // std dev = 3.226, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4598282765508758;  // std dev = 2.570, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024031425040112905;  // std dev = 6.490, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.110887695527659;  // std dev = 0.074, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.377', 'seconds']
Refined model CLL: -0.639031


******************************************
Best model found
******************************************
Results 

CLL : -0.677459 

AUC ROC : 0.543575 

AUC PR : 0.457619 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 923.252 

Total Inference Time : 6.515713691711426 

Total revision time: 935.127698234558
Best scored revision CLL: -0.639031


Results 

CLL : -0.677459 

AUC ROC : 0.543575 

AUC PR : 0.457619 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 956.1002669849395 

Total Inference Time : 6.515713691711426 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.315
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '629', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 159.655
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.23697658164368945;  // std dev = 16.400, 1,143.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=433 */
%   | | | else return 0.2732432747221531;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.007704723437073033;  // std dev = 3.086, 82.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return -0.046612969662392464;  // std dev = 0.294, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.8267867658498328;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.08565673050829918;  // std dev = 2.278, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.20393009112388058;  // std dev = 16.494, 1,158.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=437 */
%   | | | else return 0.2583310744413738;  // std dev = 2.878, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.00676941808044335;  // std dev = 3.086, 82.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return 0.11418623766746648;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return -0.041032968606155254;  // std dev = 0.294, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17369647848316275;  // std dev = 16.353, 1,143.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=433 */
%   | | | else return 0.20546191485739693;  // std dev = 3.583, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10601237951194438;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.2850896249529491;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.005951912732638807;  // std dev = 3.086, 82.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return 0.09835299714676587;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return -0.036275015885953256;  // std dev = 0.294, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.6370400835698159;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.04484845645157441;  // std dev = 2.280, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.14274469573835896;  // std dev = 16.493, 1,158.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=437 */
%   | | | else return 0.17556108055604353;  // std dev = 2.858, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.005236416220804792;  // std dev = 3.086, 82.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return 0.083737008556944;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return -0.0321868713929861;  // std dev = 0.294, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11656945614194303;  // std dev = 16.310, 1,143.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=433 */
%   | | | else return 0.14267498733019113;  // std dev = 3.578, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.036722518513222925;  // std dev = 1.809, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.21264075923826514;  // std dev = 2.151, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.04366887832261821;  // std dev = 2.926, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.022351971634329497;  // std dev = 2.305, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return -0.028650792560551905;  // std dev = 0.294, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.45237745219025405;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.016042535953013855;  // std dev = 2.281, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09279524080854773;  // std dev = 16.492, 1,158.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=437 */
%   | | | else return 0.11041009277419046;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.037640965074797736;  // std dev = 2.925, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.019684090633225695;  // std dev = 2.305, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return -0.025574384627582873;  // std dev = 0.294, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07375460829586185;  // std dev = 16.288, 1,143.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=433 */
%   | | | else return 0.0941875536893692;  // std dev = 3.574, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.0028719592806336455;  // std dev = 1.673, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.1405324920680115;  // std dev = 2.249, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.005497091933277872;  // std dev = 3.083, 82.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=11 */
%   | | | else return 0.05804951744429571;  // std dev = 2.086, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else return -0.022884189461016155;  // std dev = 0.294, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05959528752772188;  // std dev = 16.226, 1,132.000 (wgt'ed) examples reached here.  /* #neg=701 #pos=431 */
%   | | | else return 0.042353494599634015;  // std dev = 3.843, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.024336092627710578;  // std dev = 1.819, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.1277903579892395;  // std dev = 2.109, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.15154932889719247;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.016393803212159982;  // std dev = 3.706, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
%   | | | else return -0.018985012602169803;  // std dev = 2.328, 62.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.026786612273147676;  // std dev = 2.163, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.7296524290061722;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(I, D) )
%   | | | then return 0.04461791685852301;  // std dev = 16.492, 1,158.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=437 */
%   | | | else return 0.049965273688006545;  // std dev = 2.803, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.028281004679806737;  // std dev = 2.916, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.018333167900676527;  // std dev = 2.304, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return -0.018390316080494604;  // std dev = 0.293, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03478816316715514;  // std dev = 16.270, 1,143.000 (wgt'ed) examples reached here.  /* #neg=710 #pos=433 */
%   | | | else return 0.05268530713175744;  // std dev = 3.574, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03655280339519946;  // std dev = 1.683, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.08442812565049335;  // std dev = 2.214, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.02412926869713885;  // std dev = 2.916, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.016194284970927748;  // std dev = 2.304, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else return -0.016551263601958466;  // std dev = 0.293, 63.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.554', 'seconds']
Refined model CLL: -0.625801


******************************************
Best model found
******************************************
Results 

CLL : -0.761802 

AUC ROC : 0.598738 

AUC PR : 0.572619 

Precision : 0.644444 

Recall : 0.052727 

F1 : 0.097479 

Total Learning Time : 159.655 

Total Inference Time : 4.791990518569946 

Total revision time: 166.71511408805847
Best scored revision CLL: -0.625801


Results 

CLL : -0.761802 

AUC ROC : 0.598738 

AUC PR : 0.572619 

Precision : 0.644444 

Recall : 0.052727 

F1 : 0.097479 

Total Learning Time : 187.68768283843994 

Total Inference Time : 4.791990518569946 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.924
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '591', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 406.998
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2275340201409377;  // std dev = 23.111, 2,293.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=847 */
%   | | | else return 0.24620863659205075;  // std dev = 5.641, 134.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2823913593419366;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.443514788758048;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0017236763654560464;  // std dev = 4.349, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
%   | | | else return 0.2010060779566552;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.011210159589308284;  // std dev = 3.564, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.197536526396538;  // std dev = 23.138, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,449 #pos=849 */
%   | | | else return 0.21384530235477625;  // std dev = 5.531, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22852054182540896;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.39335767460890814;  // std dev = 3.129, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.001513983880598526;  // std dev = 4.349, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
%   | | | else return 0.17473486774709096;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.009840067815310454;  // std dev = 3.564, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1675167483092866;  // std dev = 23.112, 2,293.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=847 */
%   | | | else return 0.1813973278306273;  // std dev = 5.639, 134.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18964295419499;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.32535795019632335;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0013300149393497074;  // std dev = 4.349, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
%   | | | else return 0.1488623764399909;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.008628360142405594;  // std dev = 3.564, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1391836507391339;  // std dev = 23.138, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,449 #pos=849 */
%   | | | else return 0.15039482041184274;  // std dev = 5.529, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1364558027205354;  // std dev = 2.842, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.27227257307849484;  // std dev = 3.094, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0011685653541737696;  // std dev = 4.349, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
%   | | | else return 0.1245223132434355;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.007558861774578846;  // std dev = 3.564, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11355768207370687;  // std dev = 23.112, 2,293.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=847 */
%   | | | else return 0.12243703339875317;  // std dev = 5.637, 134.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10727637031102828;  // std dev = 2.843, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.21172840932578882;  // std dev = 3.089, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0010268410977856321;  // std dev = 4.349, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
%   | | | else return 0.10252772983323281;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.006616537152534327;  // std dev = 3.564, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.6664981021076777;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.021402290253974297;  // std dev = 3.078, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08977571217790517;  // std dev = 23.438, 2,361.000 (wgt'ed) examples reached here.  /* #neg=1,491 #pos=870 */
%   | | | else return 0.12586140567868334;  // std dev = 4.159, 72.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0822062624328488;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.16130227047675816;  // std dev = 0.152, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0243147203355393;  // std dev = 6.183, 264.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=48 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07237963192287025;  // std dev = 23.081, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,449 #pos=849 */
%   | | | else return 0.07983866027496497;  // std dev = 5.526, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04162635856622564;  // std dev = 2.851, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.14289878602072678;  // std dev = 3.066, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07253849942411987;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01495316239342462;  // std dev = 5.089, 179.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=33 */
%   | | | else return 0.012397966145755253;  // std dev = 3.555, 97.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05703236717114697;  // std dev = 23.054, 2,293.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=847 */
%   | | | else return 0.06280592669618341;  // std dev = 5.634, 134.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.030657332948680283;  // std dev = 2.844, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.10871857067508808;  // std dev = 3.071, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.1427163558089034;  // std dev = 0.139, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06448042752993234;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.019211753982437588;  // std dev = 6.182, 264.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=48 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04466290932464379;  // std dev = 23.080, 2,298.000 (wgt'ed) examples reached here.  /* #neg=1,449 #pos=849 */
%   | | | else return 0.049028064240718094;  // std dev = 5.524, 129.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012310552608983998;  // std dev = 2.856, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.0907548105969947;  // std dev = 3.051, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.002282199631683848;  // std dev = 4.331, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
%   | | | else return 0.07551893053101956;  // std dev = 2.794, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0012985285079103995;  // std dev = 3.563, 98.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=15 */
%   | | | else return -0.0896451599896159;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03478398377372838;  // std dev = 23.053, 2,293.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=847 */
%   | | | else return 0.03811899168660145;  // std dev = 5.633, 134.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.008103693162569151;  // std dev = 2.849, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.06940962457329802;  // std dev = 3.057, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12826892290456293;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.057442981486021345;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.014998968058641027;  // std dev = 6.175, 264.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.470', 'seconds']
Refined model CLL: -0.635153


******************************************
Best model found
******************************************
Results 

CLL : -0.758111 

AUC ROC : 0.610175 

AUC PR : 0.596434 

Precision : 1.0 

Recall : 0.021818 

F1 : 0.042705 

Total Learning Time : 406.998 

Total Inference Time : 10.886518001556396 

Total revision time: 420.9266324729919
Best scored revision CLL: -0.635153


Results 

CLL : -0.758111 

AUC ROC : 0.610175 

AUC PR : 0.596434 

Precision : 1.0 

Recall : 0.021818 

F1 : 0.042705 

Total Learning Time : 441.8992012233734 

Total Inference Time : 10.886518001556396 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.791
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '585', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 576.737
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22708657944130858;  // std dev = 28.399, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.25041412846967936;  // std dev = 6.569, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2792015666784586;  // std dev = 3.728, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.4831489350995112;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015354175274183942;  // std dev = 5.508, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
%   | | | else return 0.16584124279182005;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008517731567154418;  // std dev = 4.163, 150.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=20 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19713618719830509;  // std dev = 28.399, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.21711910414099986;  // std dev = 6.569, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24170865544729192;  // std dev = 3.728, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.41365732870831157;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013474823862168344;  // std dev = 5.508, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
%   | | | else return 0.14443085832463715;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.14081736672249348;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.006176488113256235;  // std dev = 4.159, 149.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16724959342569098;  // std dev = 28.399, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.18351356767269122;  // std dev = 6.569, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18615827621810083;  // std dev = 3.617, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.3455619904253957;  // std dev = 3.704, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011808476187084738;  // std dev = 5.508, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
%   | | | else return 0.12372973587223238;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006223547776043811;  // std dev = 4.161, 150.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=20 */
%   | | | else return -0.12476859277197196;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1389759725650343;  // std dev = 28.399, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.15158485603447575;  // std dev = 6.569, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1514095102633176;  // std dev = 3.715, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.2808603551847004;  // std dev = 3.592, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.14677469747234997;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03732512581603173;  // std dev = 6.426, 267.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=52 */
%   | | | else return -0.004355874787563799;  // std dev = 4.158, 149.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.6195116460088085;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return 0.029085097048963674;  // std dev = 3.657, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1121043277471791;  // std dev = 28.765, 3,557.000 (wgt'ed) examples reached here.  /* #neg=2,247 #pos=1,310 */
%   | | | else return 0.16752139025786927;  // std dev = 5.152, 111.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=58 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006759297508789811;  // std dev = 5.501, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
%   | | | else return 0.09942300587853518;  // std dev = 3.323, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.00447121213057161;  // std dev = 4.159, 150.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=20 */
%   | | | else return -0.11133743806821267;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09105520245572403;  // std dev = 28.354, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.10054977320025496;  // std dev = 6.567, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.062467483299407815;  // std dev = 3.607, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.19063982972461913;  // std dev = 3.665, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.13135501535997987;  // std dev = 0.105, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07248037431962223;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.022905420557173862;  // std dev = 7.516, 391.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=70 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07242841441308766;  // std dev = 28.352, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.07934892168280512;  // std dev = 6.567, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04783502756799969;  // std dev = 3.606, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.14478314730432806;  // std dev = 3.663, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06334776083795252;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02691252602130391;  // std dev = 6.276, 256.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=50 */
%   | | | else return -0.008710343082496986;  // std dev = 4.162, 154.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05710851555991668;  // std dev = 28.352, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.062041629965919734;  // std dev = 6.567, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02754578724180178;  // std dev = 3.699, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.1223433872493961;  // std dev = 3.555, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05574306448449027;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023137676699840463;  // std dev = 6.275, 256.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=50 */
%   | | | else return -0.007674640151926246;  // std dev = 4.162, 154.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04472967805832844;  // std dev = 28.351, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.04817838401379419;  // std dev = 6.567, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01636060257301514;  // std dev = 3.603, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.09273187824610304;  // std dev = 3.649, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.049335230735169475;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019839343732188014;  // std dev = 6.275, 256.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=50 */
%   | | | else return -0.006767481465382434;  // std dev = 4.162, 154.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03485824566136176;  // std dev = 28.351, 3,464.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,278 */
%   | | | else return 0.03722515624691186;  // std dev = 6.567, 181.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=71 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.005833652939794042;  // std dev = 3.697, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.07987281430531575;  // std dev = 3.545, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12235916258697395;  // std dev = 0.110, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01910395880523995;  // std dev = 6.401, 267.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=52 */
%   | | | else return -0.0030050714828326894;  // std dev = 4.157, 149.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.578', 'seconds']
Refined model CLL: -0.635911


******************************************
Best model found
******************************************
Results 

CLL : -0.757292 

AUC ROC : 0.614293 

AUC PR : 0.605772 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 576.737 

Total Inference Time : 15.736906290054321 

Total revision time: 596.4016655712128
Best scored revision CLL: -0.635911


Results 

CLL : -0.757292 

AUC ROC : 0.614293 

AUC PR : 0.605772 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 617.3742343215943 

Total Inference Time : 15.736906290054321 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.644
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '607', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 876.94
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2279881354471821;  // std dev = 32.750, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,900 #pos=1,702 */
%   | | | else return 0.23159291850200017;  // std dev = 7.509, 241.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.31269438964496565;  // std dev = 4.045, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   | | | else return 0.5163767832007787;  // std dev = 4.216, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.022745208391437757;  // std dev = 6.654, 322.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=53 */
%   | | | else return 0.11490569185626909;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006172672940689156;  // std dev = 4.831, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19790942670318895;  // std dev = 32.750, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,900 #pos=1,702 */
%   | | | else return 0.20100038996092365;  // std dev = 7.509, 241.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27021896952830937;  // std dev = 4.045, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   | | | else return 0.441293744985533;  // std dev = 4.216, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01995383047513868;  // std dev = 6.654, 322.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=53 */
%   | | | else return 0.10033468045687743;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005422937383903739;  // std dev = 4.831, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16788135590930298;  // std dev = 32.750, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,900 #pos=1,702 */
%   | | | else return 0.170404825837653;  // std dev = 7.509, 241.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2261786689692578;  // std dev = 4.176, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.3678761354443596;  // std dev = 4.073, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017467575578477623;  // std dev = 6.654, 322.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=53 */
%   | | | else return 0.08663429825498052;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004767000391492321;  // std dev = 4.831, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13946883051280237;  // std dev = 32.750, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,900 #pos=1,702 */
%   | | | else return 0.1414349861442904;  // std dev = 7.509, 241.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16675566186258112;  // std dev = 4.023, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   | | | else return 0.29340865739326955;  // std dev = 4.198, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05842500798889813;  // std dev = 1.651, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return 0.0339456030391248;  // std dev = 7.458, 363.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=69 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00419251155645528;  // std dev = 4.831, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11381799371441724;  // std dev = 32.750, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,900 #pos=1,702 */
%   | | | else return 0.11528644258162066;  // std dev = 7.509, 241.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12316413591837122;  // std dev = 4.146, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.23892957111294408;  // std dev = 4.052, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012090793784643429;  // std dev = 6.650, 322.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=53 */
%   | | | else return 0.06892787753261474;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13936727602379628;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0034133854822952143;  // std dev = 4.827, 201.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=27 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09154409826106752;  // std dev = 32.750, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,900 #pos=1,702 */
%   | | | else return 0.09260028429996953;  // std dev = 7.509, 241.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08790657665325356;  // std dev = 4.004, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   | | | else return 0.18032842152765627;  // std dev = 4.185, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055653051185358245;  // std dev = 0.284, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026480530560997986;  // std dev = 7.452, 362.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=69 */
%   | | | else return -0.005932680710362091;  // std dev = 4.834, 206.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=27 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07279021699207998;  // std dev = 32.750, 4,602.000 (wgt'ed) examples reached here.  /* #neg=2,900 #pos=1,702 */
%   | | | else return 0.07352425864392258;  // std dev = 7.509, 241.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05874894346495293;  // std dev = 4.130, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.14953295312179668;  // std dev = 4.044, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.045927018744127336;  // std dev = 1.651, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return 0.02235267008130482;  // std dev = 7.454, 363.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=69 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0021843349231119745;  // std dev = 4.829, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
%   | | | else return -0.09190826215409519;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.057368931179929104;  // std dev = 32.759, 4,604.000 (wgt'ed) examples reached here.  /* #neg=2,901 #pos=1,703 */
%   | | | else return 0.05788468334733339;  // std dev = 7.470, 239.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04016727661390571;  // std dev = 3.991, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
%   | | | else return 0.11139909633197674;  // std dev = 4.179, 79.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005943322044089706;  // std dev = 6.645, 322.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=53 */
%   | | | else return 0.05030026098289284;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0019249303042446167;  // std dev = 4.829, 199.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=27 */
%   | | | else return -0.0845198131892737;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04491245346447828;  // std dev = 32.759, 4,604.000 (wgt'ed) examples reached here.  /* #neg=2,901 #pos=1,703 */
%   | | | else return 0.045273571250300466;  // std dev = 7.470, 239.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.023635165241375867;  // std dev = 4.121, 72.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=36 */
%   | | | else return 0.09530433150632207;  // std dev = 4.041, 73.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.044521195620061224;  // std dev = 0.284, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0520059941753615;  // std dev = 1.634, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return 0.012678051936155838;  // std dev = 8.725, 540.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=93 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.46514747184765215;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return -0.06450618969355586;  // std dev = 4.157, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.034132689228668966;  // std dev = 33.179, 4,727.000 (wgt'ed) examples reached here.  /* #neg=2,982 #pos=1,745 */
%   | | | else return 0.044957556690114114;  // std dev = 5.746, 143.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=81 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.045192509446385816;  // std dev = 0.309, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.039479113653499466;  // std dev = 1.655, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | | else return 0.010979287512266385;  // std dev = 8.725, 540.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=93 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.620', 'seconds']
Refined model CLL: -0.63574


******************************************
Best model found
******************************************
Results 

CLL : -0.750304 

AUC ROC : 0.611729 

AUC PR : 0.60601 

Precision : 0.909091 

Recall : 0.036364 

F1 : 0.06993 

Total Learning Time : 876.94 

Total Inference Time : 21.171645402908325 

Total revision time: 903.0421553936005
Best scored revision CLL: -0.63574


Results 

CLL : -0.750304 

AUC ROC : 0.611729 

AUC PR : 0.60601 

Precision : 0.909091 

Recall : 0.036364 

F1 : 0.06993 

Total Learning Time : 924.014724143982 

Total Inference Time : 21.171645402908325 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.098
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '611', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1027.817
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.198153475855333;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990791;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014080153338777813;  // std dev = 7.226, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08413167004780364;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.002751008364389232;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14211285473534627;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651227;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649644;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06421896856598301;  // std dev = 1.657, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.03042550259637797;  // std dev = 8.051, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0024076568830899317;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1256518203747454;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406567;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00810697630754286;  // std dev = 7.214, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07851201912110697;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0012502861640882323;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11248398203413054;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029168;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708751;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488163;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844144;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007112715525692854;  // std dev = 7.214, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06820749552635405;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0010139975824129648;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10173445257221206;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611797;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431222;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997694;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766654;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06123322122415996;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06126311423657362;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.017578064529602477;  // std dev = 9.615, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816684;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090491;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158732;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441782;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004109953765749594;  // std dev = 7.203, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06513457391634886;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.001918703928377054;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.0942975083212586;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05748051249156739;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05333152949010175;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04401048386508491;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946207;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05493083812291666;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01872680519960558;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004460896621583592;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40448748754744557;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.0356745517898075;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.044006202294617894;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.0610554178728121;  // std dev = 6.486, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.048605115098028076;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05628149835558968;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012647910642081015;  // std dev = 9.608, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3901937952916546;  // std dev = 2.687, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.0426516901327178;  // std dev = 4.609, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03403931590258604;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.04637928117232193;  // std dev = 6.487, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.043218237033468804;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.049749135200059476;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.010964191545928948;  // std dev = 9.608, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.643', 'seconds']
Refined model CLL: -0.635384


******************************************
Best model found
******************************************
Results 

CLL : -0.750624 

AUC ROC : 0.633875 

AUC PR : 0.62306 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1027.817 

Total Inference Time : 22.812718391418457 

Total revision time: 1057.0792155647277
Best scored revision CLL: -0.635384


Results 

CLL : -0.750624 

AUC ROC : 0.633875 

AUC PR : 0.62306 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1078.0517843151092 

Total Inference Time : 22.812718391418457 

