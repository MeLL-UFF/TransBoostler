Starting experiment 3_imdb_cora 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.355
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '541', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 214.614
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2618706179474039;  // std dev = 0.491, 1,236.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=499 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.11167006186007576;  // std dev = 3.666, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 0.0010060779566551223;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.001500187707505213;  // std dev = 2.622, 57.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22691431070761642;  // std dev = 0.491, 1,236.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=499 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.09752553097515936;  // std dev = 3.666, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 8.835646163368341E-4;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.1416685461403968;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0020577346245319;  // std dev = 2.616, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4031010256339696;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.0358130015153515;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return 0.1923598596689156;  // std dev = 0.491, 1,206.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=488 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.08425037418082011;  // std dev = 3.666, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 7.758973011973762E-4;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.13785685198069372;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0027055510269860467;  // std dev = 2.613, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15761338787659823;  // std dev = 0.490, 1,236.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=499 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.07207107987727128;  // std dev = 3.666, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 6.812936799187815E-4;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 1.287773444547688E-4;  // std dev = 2.617, 57.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
%   | | | else return -0.121074815205049;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3900370367007876;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.005955480559210895;  // std dev = 1.911, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.12510030024524335;  // std dev = 0.490, 1,200.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=482 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1970539977605071;  // std dev = 1.532, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.05070364259502448;  // std dev = 0.921, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024903073483236563;  // std dev = 3.674, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return 0.0032602607745055557;  // std dev = 2.611, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26683039242803336;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.0774205348138359;  // std dev = 1.581, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14875215459280486;  // std dev = 2.818, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.1003823299282444;  // std dev = 16.790, 1,172.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=472 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.05579022340706226;  // std dev = 3.645, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return -0.0049011964841711156;  // std dev = 1.857, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13452191312741665;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0028684387380557585;  // std dev = 2.611, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2040788343093055;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.0630396779886668;  // std dev = 1.581, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else return 0.07983968885855774;  // std dev = 0.490, 1,206.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=488 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.16582820285082756;  // std dev = 1.506, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.046553874653334416;  // std dev = 0.918, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015145635530383016;  // std dev = 3.674, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return 0.002522945785834508;  // std dev = 2.611, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06149812079189477;  // std dev = 0.489, 1,236.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=499 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1385332349459356;  // std dev = 1.498, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.04010061139860093;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.012841645361152731;  // std dev = 3.674, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return 0.00221847707315728;  // std dev = 2.611, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2686454162306935;  // std dev = 1.790, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.04579313229043417;  // std dev = 2.096, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.04615697960799252;  // std dev = 0.489, 1,200.000 (wgt'ed) examples reached here.  /* #neg=718 #pos=482 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05313358063769618;  // std dev = 2.666, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.004302908419931942;  // std dev = 3.069, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13519269863798403;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0019502955808290573;  // std dev = 2.611, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.44013419920873575;  // std dev = 9.580, 587.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=472 */
%   | | | else return -0.3321028056448165;  // std dev = 3.841, 647.000 (wgt'ed) examples reached here.  /* #neg=633 #pos=14 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.19235413062790527;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.01934318075307024;  // std dev = 3.556, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.49351046466950316;  // std dev = 0.351, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -9.677359902098676E-4;  // std dev = 2.616, 57.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
%   | | | else return -0.11002372442270635;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.199', 'seconds']
Refined model CLL: -0.529931


******************************************
Best model found
******************************************
Results 

CLL : -0.536859 

AUC ROC : 0.820544 

AUC PR : 0.649553 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 214.614 

Total Inference Time : 3.4612326622009277 

Total revision time: 220.43344296836852
Best scored revision CLL: -0.529931


Results 

CLL : -0.536859 

AUC ROC : 0.820544 

AUC PR : 0.649553 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 220.45469083213806 

Total Inference Time : 3.4612326622009277 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.04
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '612', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 81.939
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2635872467878189;  // std dev = 0.491, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=999 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.049103708968858;  // std dev = 5.545, 199.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=38 */
%   | | | else return 0.03814893509951238;  // std dev = 3.842, 100.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41669263986436184;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.1354426398643618;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else return 0.2277245190589656;  // std dev = 0.491, 2,384.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=965 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.15769047480138346;  // std dev = 2.203, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.07086964555118122;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025400236405699484;  // std dev = 5.143, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return 0.04117594995889408;  // std dev = 4.026, 106.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19259174326742706;  // std dev = 0.491, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=999 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.055649556341854416;  // std dev = 5.097, 158.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=33 */
%   | | | else return -0.007082219762412035;  // std dev = 2.775, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.025677726346524488;  // std dev = 3.847, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return -0.14465984737532941;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3948078091132226;  // std dev = 2.531, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.05033710674677289;  // std dev = 2.665, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1524579791500436;  // std dev = 23.686, 2,341.000 (wgt'ed) examples reached here.  /* #neg=1,406 #pos=935 */
%   | | | else return 0.34425154235466776;  // std dev = 3.842, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13120312821730803;  // std dev = 2.198, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.06603175873089719;  // std dev = 0.958, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019336532672069858;  // std dev = 5.142, 186.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=32 */
%   | | | else return 0.029808426335887237;  // std dev = 4.022, 106.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1278350550265722;  // std dev = 0.490, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=999 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.043862948008224635;  // std dev = 5.086, 158.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=33 */
%   | | | else return -0.009391160058021288;  // std dev = 2.777, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.13525490278805236;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.02406817111517399;  // std dev = 3.836, 100.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10149967693140417;  // std dev = 0.490, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=999 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.10748079738638774;  // std dev = 2.190, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.062344423255578145;  // std dev = 0.957, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.008353159293051096;  // std dev = 1.827, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.017680961812400055;  // std dev = 6.264, 266.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=48 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07962144921134677;  // std dev = 0.490, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=999 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.04486534904104635;  // std dev = 1.793, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.12534976075213478;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.05376839690025434;  // std dev = 2.403, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.01525808524005932;  // std dev = 6.263, 266.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=48 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06190510953797023;  // std dev = 0.490, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=999 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.03889949629540157;  // std dev = 1.793, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.1122674513708683;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04549314980296979;  // std dev = 2.402, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.013144051891143291;  // std dev = 6.263, 266.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=48 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04782027905741187;  // std dev = 0.490, 2,464.000 (wgt'ed) examples reached here.  /* #neg=1,465 #pos=999 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.028733543981418853;  // std dev = 5.072, 158.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=33 */
%   | | | else return -0.016877470624585517;  // std dev = 2.778, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.0993817693408946;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.013295566404085343;  // std dev = 3.836, 100.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17289165415811253;  // std dev = 2.843, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | | | else return -0.04204116678043448;  // std dev = 3.136, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else return 0.036256836902749;  // std dev = 0.490, 2,384.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=965 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return -0.16318489200554692;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.019541849956301136;  // std dev = 1.793, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.03492333307982821;  // std dev = 2.396, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.008981831255956458;  // std dev = 6.261, 266.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '851', 'milliseconds']
Refined model CLL: -0.650202


******************************************
Best model found
******************************************
Results 

CLL : -0.62472 

AUC ROC : 0.58907 

AUC PR : 0.414947 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 81.939 

Total Inference Time : 1.9077541828155518 

Total revision time: 86.97334947967529
Best scored revision CLL: -0.650202


Results 

CLL : -0.62472 

AUC ROC : 0.58907 

AUC PR : 0.414947 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 86.99459734344482 

Total Inference Time : 1.9077541828155518 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.826
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '613', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 634.883
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25738847882574295;  // std dev = 28.636, 3,419.000 (wgt'ed) examples reached here.  /* #neg=2,054 #pos=1,365 */
%   | | | else return 0.23763611458669315;  // std dev = 6.776, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3581489350995112;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.6081489350995114;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2129876447769317;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.08302753548872309;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.058148935099512376;  // std dev = 2.530, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.03644350874292367;  // std dev = 7.530, 387.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=69 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22308358663430228;  // std dev = 28.636, 3,419.000 (wgt'ed) examples reached here.  /* #neg=2,054 #pos=1,365 */
%   | | | else return 0.20617947299617692;  // std dev = 6.776, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.5170719622367209;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16101236152159681;  // std dev = 2.476, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.03483477606943739;  // std dev = 6.630, 296.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.034478270480102186;  // std dev = 4.613, 143.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=26 */
%   | | | else return -0.14547311928560783;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18834270013606758;  // std dev = 28.636, 3,419.000 (wgt'ed) examples reached here.  /* #neg=2,054 #pos=1,365 */
%   | | | else return 0.17462604439310137;  // std dev = 6.776, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25641236875858625;  // std dev = 3.742, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.41257245288266026;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17885405289968795;  // std dev = 2.655, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.07791622281905781;  // std dev = 0.971, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.024616557088894035;  // std dev = 6.341, 277.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=49 */
%   | | | else return 0.03604990591442614;  // std dev = 4.772, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15529710730081972;  // std dev = 28.636, 3,419.000 (wgt'ed) examples reached here.  /* #neg=2,054 #pos=1,365 */
%   | | | else return 0.14471506626982672;  // std dev = 6.776, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20081745296844658;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.319257685183199;  // std dev = 3.076, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15140441223286275;  // std dev = 2.654, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.06898004410769286;  // std dev = 0.971, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021412207594720213;  // std dev = 6.341, 277.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=49 */
%   | | | else return 0.03138079985269016;  // std dev = 4.772, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12553111313999418;  // std dev = 28.636, 3,419.000 (wgt'ed) examples reached here.  /* #neg=2,054 #pos=1,365 */
%   | | | else return 0.11772763943757035;  // std dev = 6.776, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14596944156494782;  // std dev = 3.732, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.25861489645088437;  // std dev = 2.848, 44.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13046880586636395;  // std dev = 2.444, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.02033998717998556;  // std dev = 6.605, 296.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=54 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022448957840501212;  // std dev = 4.615, 143.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=26 */
%   | | | else return -0.1329869409008969;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09910492998068568;  // std dev = 28.636, 3,423.000 (wgt'ed) examples reached here.  /* #neg=2,060 #pos=1,363 */
%   | | | else return 0.10815177231883423;  // std dev = 6.777, 191.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=76 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10086731637095943;  // std dev = 3.556, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.20594973017787693;  // std dev = 3.047, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12070466345418455;  // std dev = 2.643, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.06447905702130877;  // std dev = 0.973, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01449715914540247;  // std dev = 6.333, 277.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=49 */
%   | | | else return 0.024608449840572703;  // std dev = 4.772, 150.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07792530021576183;  // std dev = 28.636, 3,423.000 (wgt'ed) examples reached here.  /* #neg=2,060 #pos=1,363 */
%   | | | else return 0.08540443472189475;  // std dev = 6.778, 191.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=76 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.312197747689721;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1016748989235327;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=57 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03200201017223961;  // std dev = 5.987, 227.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=46 */
%   | | | else return -9.770853978788036E-4;  // std dev = 3.706, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016740049792414332;  // std dev = 4.617, 143.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=26 */
%   | | | else return -0.1199655656630542;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06142001464675388;  // std dev = 28.637, 3,419.000 (wgt'ed) examples reached here.  /* #neg=2,054 #pos=1,365 */
%   | | | else return 0.054543036972735735;  // std dev = 6.772, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04383695162375693;  // std dev = 3.718, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | | | else return 0.13730182972781668;  // std dev = 2.823, 44.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10590386107917485;  // std dev = 2.431, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.10055435050839232;  // std dev = 0.973, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008285142901604314;  // std dev = 6.353, 276.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=50 */
%   | | | else return 0.024082462658269844;  // std dev = 4.833, 154.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.046893000378309;  // std dev = 28.635, 3,423.000 (wgt'ed) examples reached here.  /* #neg=2,060 #pos=1,363 */
%   | | | else return 0.0540753271735328;  // std dev = 6.780, 191.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=76 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024879125475185573;  // std dev = 3.547, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return 0.11363737494865218;  // std dev = 3.026, 45.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09153715243045968;  // std dev = 2.626, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.06350052242539264;  // std dev = 0.974, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008291852715908057;  // std dev = 6.504, 286.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=52 */
%   | | | else return 0.015524306980555376;  // std dev = 4.522, 141.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03675171748516558;  // std dev = 28.637, 3,419.000 (wgt'ed) examples reached here.  /* #neg=2,054 #pos=1,365 */
%   | | | else return 0.03082985713438324;  // std dev = 6.770, 195.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=74 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.37761911188492103;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.039089938145085726;  // std dev = 4.635, 97.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=58 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07342986901977973;  // std dev = 2.625, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.05686026226573893;  // std dev = 0.974, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007101295352685536;  // std dev = 6.504, 286.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=52 */
%   | | | else return 0.013410113376340413;  // std dev = 4.522, 141.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.595', 'seconds']
Refined model CLL: -0.649907


******************************************
Best model found
******************************************
Results 

CLL : -0.624254 

AUC ROC : 0.577169 

AUC PR : 0.408624 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 634.883 

Total Inference Time : 16.922605514526367 

Total revision time: 655.8485401954651
Best scored revision CLL: -0.649907


Results 

CLL : -0.624254 

AUC ROC : 0.577169 

AUC PR : 0.408624 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 655.8697880592347 

Total Inference Time : 16.922605514526367 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.778
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '598', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 669.53
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.25749319739458915;  // std dev = 33.127, 4,575.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,827 */
%   | | | else return 0.2291166770349941;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.37869688030499077;  // std dev = 4.268, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.6000844189704803;  // std dev = 3.445, 62.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.17633075328133055;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.03925129730423724;  // std dev = 7.517, 381.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=69 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.030023935099511467;  // std dev = 5.228, 192.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2231731074017006;  // std dev = 33.127, 4,575.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,827 */
%   | | | else return 0.1988772384162454;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3260905683893191;  // std dev = 4.268, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.5104452493640246;  // std dev = 3.445, 62.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1534823605167704;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.03440576733197384;  // std dev = 7.517, 381.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=69 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026329694474564794;  // std dev = 5.228, 192.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=33 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18841509170267412;  // std dev = 33.127, 4,575.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,827 */
%   | | | else return 0.16867181529389647;  // std dev = 7.607, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2595252769820698;  // std dev = 4.160, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.42001169122531223;  // std dev = 3.544, 62.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16584682997558653;  // std dev = 3.073, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.10327782058073133;  // std dev = 0.978, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04358468368501399;  // std dev = 3.150, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.025435208664505705;  // std dev = 8.516, 502.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=88 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15541521899189825;  // std dev = 33.109, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.1391278569761051;  // std dev = 7.684, 251.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=94 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19659691602998158;  // std dev = 4.242, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.3371297517443525;  // std dev = 3.410, 62.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14318718418000942;  // std dev = 3.071, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.09069957602960871;  // std dev = 0.978, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03727676316730087;  // std dev = 3.149, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.02216618127461663;  // std dev = 8.515, 502.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=88 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12564099359145983;  // std dev = 33.109, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.11318090621532281;  // std dev = 7.685, 251.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=94 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.13521591463317945;  // std dev = 4.127, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.27413427073156704;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.039846515545272874;  // std dev = 6.767, 288.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=58 */
%   | | | else return 0.013947485474352182;  // std dev = 4.468, 137.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=25 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.15442609363482798;  // std dev = 0.153, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.01988690935479015;  // std dev = 5.215, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09999524503607767;  // std dev = 33.125, 4,575.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,827 */
%   | | | else return 0.0903428541710666;  // std dev = 7.615, 248.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=92 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09926912908319267;  // std dev = 4.218, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | | else return 0.21103824973865828;  // std dev = 3.382, 62.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12030774820693257;  // std dev = 3.048, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.07972446541387924;  // std dev = 0.975, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02865046273305676;  // std dev = 3.151, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.015555265698171103;  // std dev = 8.514, 502.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=88 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07863837220558907;  // std dev = 33.108, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.07133602664303634;  // std dev = 7.690, 251.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=94 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.061071210764004895;  // std dev = 4.110, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.17565966788818538;  // std dev = 3.484, 62.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10054793767459685;  // std dev = 3.045, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.07128418869949768;  // std dev = 0.975, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.024251546343728628;  // std dev = 3.150, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.01345667980662227;  // std dev = 8.514, 502.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=88 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6259010986148045;  // std dev = 0.160, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2708948274143245;  // std dev = 1.712, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.018016073862585004;  // std dev = 5.469, 131.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=47 */
%   | | | else return 0.06167994579764996;  // std dev = 33.902, 4,808.000 (wgt'ed) examples reached here.  /* #neg=2,866 #pos=1,942 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015231848713416625;  // std dev = 7.419, 366.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=70 */
%   | | | else return 0.05353957271862754;  // std dev = 3.199, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.009236606125610995;  // std dev = 5.236, 192.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=33 */
%   | | | else return -0.10953642277525236;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25445189052153966;  // std dev = 3.625, 58.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return -0.04745112785153705;  // std dev = 4.148, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04654584407649105;  // std dev = 33.493, 4,687.000 (wgt'ed) examples reached here.  /* #neg=2,826 #pos=1,861 */
%   | | | else return 0.059960599854470276;  // std dev = 5.313, 129.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=79 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013023637764371007;  // std dev = 7.419, 366.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=70 */
%   | | | else return 0.045979354329712695;  // std dev = 3.200, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.1472548524273675;  // std dev = 0.226, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.012383262509049635;  // std dev = 5.213, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03646734835316104;  // std dev = 33.073, 4,572.000 (wgt'ed) examples reached here.  /* #neg=2,747 #pos=1,825 */
%   | | | else return 0.03171820823930289;  // std dev = 7.690, 251.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=94 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.27801079835354076;  // std dev = 0.821, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.045537346325257994;  // std dev = 5.314, 129.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=79 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08109715324795302;  // std dev = 3.030, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.0627171579958402;  // std dev = 0.973, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01669761241813923;  // std dev = 3.147, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.007045802819144488;  // std dev = 8.510, 502.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=88 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.530', 'seconds']
Refined model CLL: -0.648641


******************************************
Best model found
******************************************
Results 

CLL : -0.623988 

AUC ROC : 0.588351 

AUC PR : 0.420074 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 669.53 

Total Inference Time : 18.239786863327026 

Total revision time: 692.7800554351807
Best scored revision CLL: -0.648641


Results 

CLL : -0.623988 

AUC ROC : 0.588351 

AUC PR : 0.420074 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 692.8013032989502 

Total Inference Time : 18.239786863327026 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.984
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '668', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 1019.881
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14309509431928658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516536;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675653;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1685236708029212;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694759;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03711211154702512;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277193;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436806;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903758;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0317117696637387;  // std dev = 8.409, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07208194380010914;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.026380820066897247;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083852;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19125494210527302;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04197733862597419;  // std dev = 7.651, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.01188108533766322;  // std dev = 5.025, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0696806403523731;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.025543663063719847;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098676;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11082226745851513;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483612;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11148594569440297;  // std dev = 3.365, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0764900496588404;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03997159265608336;  // std dev = 3.521, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.018134308044002744;  // std dev = 9.635, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6278127217050254;  // std dev = 0.235, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.27584640209596906;  // std dev = 2.142, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.07701438599243383;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.11071250990770212;  // std dev = 6.133, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.10395134447433849;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016563178619559832;  // std dev = 8.485, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1047615597493701;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01575094186721917;  // std dev = 5.847, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0611918001015929;  // std dev = 37.046, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05399846410448227;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04261709031485881;  // std dev = 4.734, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14145564236631308;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09469464413923273;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06784367999442979;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.022560624939925753;  // std dev = 3.509, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.013335575463855507;  // std dev = 9.634, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.24422847370447828;  // std dev = 1.904, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.046579738598139596;  // std dev = 37.922, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2868477530878197;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05523661916498301;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.084184118390342;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01148360814061683;  // std dev = 8.478, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09752159301451051;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.011585232140433811;  // std dev = 5.847, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036649750832317245;  // std dev = 37.040, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.030400712154114138;  // std dev = 8.373, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013114061828312313;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09582663684015032;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07994242459452414;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.060324410498466305;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008291291892024554;  // std dev = 8.469, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.01274950189812682;  // std dev = 5.774, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.455', 'seconds']
Refined model CLL: -0.65012


******************************************
Best model found
******************************************
Results 

CLL : -0.624141 

AUC ROC : 0.583481 

AUC PR : 0.416857 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1019.881 

Total Inference Time : 23.432353496551514 

Total revision time: 1049.5835020446777
Best scored revision CLL: -0.65012


Results 

CLL : -0.624141 

AUC ROC : 0.583481 

AUC PR : 0.416857 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1049.6047499084473 

Total Inference Time : 23.432353496551514 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.399
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '650', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 139.883
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2148187553454867;  // std dev = 15.574, 1,057.000 (wgt'ed) examples reached here.  /* #neg=680 #pos=377 */
%   | | | else return 0.27605938286070514;  // std dev = 4.037, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.48972788246793336;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.04117992396089034;  // std dev = 3.673, 149.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18660687768973339;  // std dev = 15.574, 1,057.000 (wgt'ed) examples reached here.  /* #neg=680 #pos=377 */
%   | | | else return 0.23902847147352785;  // std dev = 4.037, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4648880383750967;  // std dev = 1.601, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.27898156973481075;  // std dev = 2.293, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2393682161831661;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.16346342323214572;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.012853024696446958;  // std dev = 3.318, 102.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=13 */
%   | | | else return -0.030876266836445686;  // std dev = 2.505, 65.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15862738490974115;  // std dev = 15.574, 1,057.000 (wgt'ed) examples reached here.  /* #neg=680 #pos=377 */
%   | | | else return 0.20119521987118433;  // std dev = 4.037, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19339737136057206;  // std dev = 1.866, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.3529268329305543;  // std dev = 2.069, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.24921760585026773;  // std dev = 1.833, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.12339296894232375;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.09616230886636136;  // std dev = 1.870, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.033884871877863244;  // std dev = 3.673, 149.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return -0.046886573450178014;  // std dev = 2.029, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.13674577711879268;  // std dev = 1.320, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13989273833409785;  // std dev = 15.899, 1,090.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=399 */
%   | | | else return 0.19414978842713407;  // std dev = 2.710, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.20961890776077133;  // std dev = 1.830, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.11065413924452566;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0814858547131298;  // std dev = 1.868, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.029987622635166987;  // std dev = 3.673, 149.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return -0.03880569295895608;  // std dev = 2.029, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.11114754921665607;  // std dev = 1.317, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11448465421263988;  // std dev = 15.899, 1,090.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=399 */
%   | | | else return 0.15082944472611354;  // std dev = 2.707, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17121664189653385;  // std dev = 1.872, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.17456022457640086;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.07432727626884136;  // std dev = 1.784, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.026619008574630273;  // std dev = 3.673, 149.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08647037785377573;  // std dev = 15.558, 1,057.000 (wgt'ed) examples reached here.  /* #neg=680 #pos=377 */
%   | | | else return 0.11512306469310772;  // std dev = 4.031, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.23467764559141946;  // std dev = 1.553, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.10011579969998165;  // std dev = 2.311, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13970059333905713;  // std dev = 1.871, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.1509235777761341;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.019637758569604997;  // std dev = 3.259, 108.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=13 */
%   | | | else return -0.004833598327994064;  // std dev = 2.479, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06909327737670135;  // std dev = 15.558, 1,057.000 (wgt'ed) examples reached here.  /* #neg=680 #pos=377 */
%   | | | else return 0.09029135295904042;  // std dev = 4.030, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05472339926922519;  // std dev = 1.899, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.1560161541954981;  // std dev = 2.035, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16144832607298523;  // std dev = 1.799, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.10643647918767335;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.031623175989349814;  // std dev = 1.826, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.022149819128913912;  // std dev = 3.673, 149.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0547401798439405;  // std dev = 15.557, 1,057.000 (wgt'ed) examples reached here.  /* #neg=680 #pos=377 */
%   | | | else return 0.07010789457319372;  // std dev = 4.030, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14662569996387148;  // std dev = 1.529, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.0502502575861439;  // std dev = 2.321, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12894056567393172;  // std dev = 1.796, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.09672947045623419;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.025851579549796926;  // std dev = 1.825, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.019783401413487427;  // std dev = 3.673, 149.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.043085470220149524;  // std dev = 15.557, 1,057.000 (wgt'ed) examples reached here.  /* #neg=680 #pos=377 */
%   | | | else return 0.05404569959615112;  // std dev = 4.030, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.023124243283946588;  // std dev = 1.912, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.09496291646146444;  // std dev = 2.017, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10143292652390803;  // std dev = 1.794, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.0886014431810107;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.022958970275531072;  // std dev = 3.154, 108.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=12 */
%   | | | else return 0.0037465759895637233;  // std dev = 2.621, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return -0.07806804241860033;  // std dev = 2.031, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.029337929605365826;  // std dev = 1.292, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.038136803120873065;  // std dev = 15.897, 1,090.000 (wgt'ed) examples reached here.  /* #neg=691 #pos=399 */
%   | | | else return 0.013994702450693555;  // std dev = 2.670, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09759718169200236;  // std dev = 1.849, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.14907585570255566;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.018156008271300175;  // std dev = 1.731, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.016342307266775335;  // std dev = 3.672, 149.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.950', 'seconds']
Refined model CLL: -0.613331


******************************************
Best model found
******************************************
Results 

CLL : -0.830887 

AUC ROC : 0.502446 

AUC PR : 0.603638 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 139.883 

Total Inference Time : 4.187169551849365 

Total revision time: 146.4468349761963
Best scored revision CLL: -0.613331


Results 

CLL : -0.830887 

AUC ROC : 0.502446 

AUC PR : 0.603638 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 146.46808283996583 

Total Inference Time : 4.187169551849365 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.909
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '648', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 341.419
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.20967529957684308;  // std dev = 22.200, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=760 */
%   | | | else return 0.23910131605189394;  // std dev = 5.451, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3733004502510275;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.5822868661339945;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007881555420367383;  // std dev = 4.879, 187.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=28 */
%   | | | else return -0.014578337627760393;  // std dev = 3.495, 110.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1821881457134676;  // std dev = 22.200, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=760 */
%   | | | else return 0.20743465140990436;  // std dev = 5.451, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.8063865464415862;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.37523059631967776;  // std dev = 3.716, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1764295502114536;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.08360914417941119;  // std dev = 2.326, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.010178111518878355;  // std dev = 5.513, 266.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=35 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1549982274914608;  // std dev = 22.200, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=760 */
%   | | | else return 0.17564775908399496;  // std dev = 5.451, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2452063156454997;  // std dev = 2.814, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.4231257403887844;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18045131381526533;  // std dev = 2.291, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.1566102442996667;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06150908201327391;  // std dev = 2.554, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return -0.008944349240008736;  // std dev = 5.513, 266.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=35 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12936901230689304;  // std dev = 22.200, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=760 */
%   | | | else return 0.14550731772537256;  // std dev = 5.451, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6446616824665329;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22994373034087978;  // std dev = 3.648, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14089282418682353;  // std dev = 2.550, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.005149867319841412;  // std dev = 4.849, 188.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=28 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.15327659260380286;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.013138219014059626;  // std dev = 3.497, 114.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.04560151598353713;  // std dev = 3.100, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | | else return 0.48938807173236953;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11098636748578328;  // std dev = 22.617, 2,228.000 (wgt'ed) examples reached here.  /* #neg=1,432 #pos=796 */
%   | | | else return 0.1761476129409036;  // std dev = 3.643, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15819072762555517;  // std dev = 2.267, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.13452955082767282;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03662698994423082;  // std dev = 2.532, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return -0.007647777217499663;  // std dev = 5.514, 266.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=35 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08589492464038662;  // std dev = 22.190, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=760 */
%   | | | else return 0.09650823646445536;  // std dev = 5.449, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4489097872894423;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12801130708281852;  // std dev = 3.615, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13423806630992074;  // std dev = 2.263, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.11967348737683323;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03093170330873732;  // std dev = 2.530, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return -0.006733816297568429;  // std dev = 5.514, 266.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=35 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06880787008805847;  // std dev = 22.189, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=760 */
%   | | | else return 0.0764647098518252;  // std dev = 5.449, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04480915566421812;  // std dev = 2.695, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.18960774887763096;  // std dev = 2.393, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10502210576473145;  // std dev = 2.533, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.002335072384431461;  // std dev = 4.812, 188.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=28 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009653910238111909;  // std dev = 3.505, 111.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=14 */
%   | | | else return -0.12396767804971902;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0554199032618156;  // std dev = 22.157, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=759 */
%   | | | else return 0.04745753869280358;  // std dev = 5.577, 136.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=49 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.033949591160242466;  // std dev = 2.695, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.14305019554578455;  // std dev = 2.394, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005162162749759635;  // std dev = 5.154, 202.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=34 */
%   | | | else return 0.12121923955320733;  // std dev = 1.728, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12237741540337532;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.006368573265407276;  // std dev = 3.500, 110.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04371612310334238;  // std dev = 22.157, 2,152.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=759 */
%   | | | else return 0.037172371344663474;  // std dev = 5.577, 136.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=49 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.32700107832876146;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.046475702774180366;  // std dev = 3.577, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1102727976363755;  // std dev = 2.253, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.10741693454912249;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009608826124231987;  // std dev = 4.808, 199.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=28 */
%   | | | else return 0.008375804172888341;  // std dev = 3.672, 106.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03361985396816645;  // std dev = 22.188, 2,162.000 (wgt'ed) examples reached here.  /* #neg=1,402 #pos=760 */
%   | | | else return 0.04036137558509831;  // std dev = 5.451, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.27777268677194267;  // std dev = 0.168, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03409365202000709;  // std dev = 3.571, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0853036891310264;  // std dev = 2.525, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.0014557724932764806;  // std dev = 4.793, 188.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=28 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1524696816456597;  // std dev = 0.177, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.00589312691185245;  // std dev = 3.494, 114.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.324', 'seconds']
Refined model CLL: -0.618665


******************************************
Best model found
******************************************
Results 

CLL : -0.829042 

AUC ROC : 0.502793 

AUC PR : 0.604784 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 341.419 

Total Inference Time : 8.855079174041748 

Total revision time: 353.29886644172666
Best scored revision CLL: -0.618665


Results 

CLL : -0.829042 

AUC ROC : 0.502793 

AUC PR : 0.604784 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 353.3201143054962 

Total Inference Time : 8.855079174041748 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.645
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '629', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 482.369
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21704271259793587;  // std dev = 27.058, 3,182.000 (wgt'ed) examples reached here.  /* #neg=2,040 #pos=1,142 */
%   | | | else return 0.18167834686421958;  // std dev = 6.682, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3900638287165344;  // std dev = 4.838, 94.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17729787126972513;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.0918510649004878;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05380110901255586;  // std dev = 2.691, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.00990662045604314;  // std dev = 7.034, 432.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=57 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1885167118315077;  // std dev = 27.058, 3,182.000 (wgt'ed) examples reached here.  /* #neg=2,040 #pos=1,142 */
%   | | | else return 0.1580929469511456;  // std dev = 6.682, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2864293131180327;  // std dev = 3.600, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | | else return 0.43518938083951964;  // std dev = 3.369, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15431638550541824;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.08103355623325077;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010780030630309594;  // std dev = 5.892, 306.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=40 */
%   | | | else return 0.009917959265069002;  // std dev = 4.700, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16019398708450544;  // std dev = 27.058, 3,182.000 (wgt'ed) examples reached here.  /* #neg=2,040 #pos=1,142 */
%   | | | else return 0.135097064073203;  // std dev = 6.682, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5792403236993741;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2732953624486103;  // std dev = 4.819, 95.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13196083912291018;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.0024448172044759134;  // std dev = 6.006, 302.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=42 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0024226750516255042;  // std dev = 4.646, 184.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=25 */
%   | | | else return -0.13823143015834813;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.133454739713304;  // std dev = 27.058, 3,182.000 (wgt'ed) examples reached here.  /* #neg=2,040 #pos=1,142 */
%   | | | else return 0.11356362283888354;  // std dev = 6.682, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4760030367301494;  // std dev = 0.918, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.21246127359997954;  // std dev = 4.793, 94.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11105033960274348;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.06974978406723627;  // std dev = 0.973, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.048766425196144506;  // std dev = 2.690, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.007779391686879939;  // std dev = 7.031, 432.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=57 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10930222229885649;  // std dev = 27.058, 3,182.000 (wgt'ed) examples reached here.  /* #neg=2,040 #pos=1,142 */
%   | | | else return 0.09410568615837303;  // std dev = 6.682, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11995327566620036;  // std dev = 3.536, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | | else return 0.24491590525693901;  // std dev = 3.343, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09215692586092955;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.0625918267654233;  // std dev = 0.973, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00902442684742092;  // std dev = 5.888, 306.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=40 */
%   | | | else return 0.01023778358877534;  // std dev = 4.697, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08660654902840126;  // std dev = 27.073, 3,196.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,140 */
%   | | | else return 0.10429877327140404;  // std dev = 6.617, 190.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07403698189905224;  // std dev = 3.269, 46.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=23 */
%   | | | else return 0.18871631554288118;  // std dev = 3.587, 56.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09917122448024943;  // std dev = 2.561, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.09359240409861337;  // std dev = 0.973, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006842385098074545;  // std dev = 6.184, 324.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=46 */
%   | | | else return 0.00935010656601841;  // std dev = 4.689, 170.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=26 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.2747364523312469;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5199888299122104;  // std dev = 0.386, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.06910634954697906;  // std dev = 27.810, 3,375.000 (wgt'ed) examples reached here.  /* #neg=2,174 #pos=1,201 */
%   | | | else return 0.09918385367412769;  // std dev = 4.862, 100.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=55 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07636441489881235;  // std dev = 3.191, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.05780040541284619;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.03740944532976735;  // std dev = 2.676, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.006533758216651603;  // std dev = 7.029, 432.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=57 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.054689340283599286;  // std dev = 27.066, 3,196.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,140 */
%   | | | else return 0.06944068992247612;  // std dev = 6.619, 190.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.26607277524626427;  // std dev = 0.870, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.06379449434258438;  // std dev = 4.759, 95.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06205256078143945;  // std dev = 3.191, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.05236780135215988;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00844431526477314;  // std dev = 5.877, 306.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=40 */
%   | | | else return 0.009221939138304724;  // std dev = 4.695, 172.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=26 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.20266191633026578;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04328620829088745;  // std dev = 27.820, 3,377.000 (wgt'ed) examples reached here.  /* #neg=2,174 #pos=1,203 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01426065082426856;  // std dev = 3.498, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | | | else return 0.10720388125781442;  // std dev = 3.334, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08263370311081503;  // std dev = 2.550, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.08837754060089795;  // std dev = 0.976, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.020351097124632116;  // std dev = 3.266, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return -0.005546720257313845;  // std dev = 7.028, 432.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=57 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return -0.04413292724408454;  // std dev = 4.392, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.19612110166587104;  // std dev = 0.861, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.036539593951121205;  // std dev = 27.502, 3,289.000 (wgt'ed) examples reached here.  /* #neg=2,109 #pos=1,180 */
%   | | | else return 0.033256821791122125;  // std dev = 4.750, 95.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07086413012280517;  // std dev = 2.548, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.07720624394543105;  // std dev = 0.975, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.007307907910569305;  // std dev = 6.167, 324.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=46 */
%   | | | else return 0.007680524189578508;  // std dev = 4.692, 170.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.241', 'seconds']
Refined model CLL: -0.619865


******************************************
Best model found
******************************************
Results 

CLL : -0.825533 

AUC ROC : 0.499529 

AUC PR : 0.60434 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 482.369 

Total Inference Time : 11.201005935668945 

Total revision time: 497.385887922287
Best scored revision CLL: -0.619865


Results 

CLL : -0.825533 

AUC ROC : 0.499529 

AUC PR : 0.60434 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 497.40713578605653 

Total Inference Time : 11.201005935668945 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.485
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '688', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 779.699
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2136733452840435;  // std dev = 31.319, 4,281.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,522 */
%   | | | else return 0.20992759122599314;  // std dev = 7.596, 253.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.42266506413177146;  // std dev = 5.521, 124.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14116780302404067;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.007704723437073006;  // std dev = 6.901, 410.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=55 */
%   | | | else return 0.0167392434695555;  // std dev = 5.504, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18562307147622378;  // std dev = 31.319, 4,281.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,522 */
%   | | | else return 0.18240494635567286;  // std dev = 7.596, 253.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3177857506022159;  // std dev = 3.876, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.43082841217001205;  // std dev = 4.050, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02499854699145134;  // std dev = 6.736, 324.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=55 */
%   | | | else return 0.011787627773342134;  // std dev = 4.316, 143.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=22 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00735243090184916;  // std dev = 5.185, 231.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=31 */
%   | | | else return -0.14215697200584437;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15781992304015055;  // std dev = 31.319, 4,281.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,522 */
%   | | | else return 0.15517643665811331;  // std dev = 7.596, 253.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5476947071237782;  // std dev = 0.929, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2947715639929915;  // std dev = 5.506, 124.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=70 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12057642016571263;  // std dev = 3.276, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.04493402778246735;  // std dev = 1.344, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07544806639753612;  // std dev = 3.424, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return -0.009318013574029676;  // std dev = 8.109, 568.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=76 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13158996835872375;  // std dev = 31.319, 4,281.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,522 */
%   | | | else return 0.1295094279056858;  // std dev = 7.596, 253.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1963632807171634;  // std dev = 4.032, 67.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=36 */
%   | | | else return 0.29355357147284344;  // std dev = 3.854, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1434073226826912;  // std dev = 3.343, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.10654780096348611;  // std dev = 0.981, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010856581669856752;  // std dev = 6.807, 403.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=54 */
%   | | | else return 0.015000248191442935;  // std dev = 5.571, 233.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=37 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10789462709599446;  // std dev = 31.319, 4,281.000 (wgt'ed) examples reached here.  /* #neg=2,759 #pos=1,522 */
%   | | | else return 0.1063200094451463;  // std dev = 7.596, 253.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3679140086966133;  // std dev = 1.208, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.17459061102339793;  // std dev = 5.431, 123.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=70 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.019375831365737402;  // std dev = 6.718, 324.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=55 */
%   | | | else return 0.002511646454657508;  // std dev = 4.267, 143.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=22 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.15379187725201302;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.003980164514232112;  // std dev = 5.181, 233.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0872568408459077;  // std dev = 31.351, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,765 #pos=1,525 */
%   | | | else return 0.0859511285058145;  // std dev = 7.465, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09336161620928389;  // std dev = 3.822, 61.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   | | | else return 0.1844652517441258;  // std dev = 4.030, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10592895430354002;  // std dev = 3.246, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.04165237624848184;  // std dev = 1.343, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008229666746767561;  // std dev = 6.874, 410.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=55 */
%   | | | else return 0.008915700062672567;  // std dev = 5.497, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06978799805229464;  // std dev = 31.351, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,765 #pos=1,525 */
%   | | | else return 0.06881607532136831;  // std dev = 7.465, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.27752829509447474;  // std dev = 0.909, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.09620673833780453;  // std dev = 5.471, 124.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=70 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12329267288209973;  // std dev = 3.336, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.09305172262714873;  // std dev = 0.982, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.046751149038936374;  // std dev = 3.362, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return -0.00885869367890929;  // std dev = 8.105, 568.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=76 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05533600764868059;  // std dev = 31.350, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,765 #pos=1,525 */
%   | | | else return 0.054627827167507595;  // std dev = 7.465, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04166225525882076;  // std dev = 3.992, 67.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=36 */
%   | | | else return 0.12119750190171004;  // std dev = 3.842, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08314694290581748;  // std dev = 3.233, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.043150910808255935;  // std dev = 1.344, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00782462272567159;  // std dev = 6.857, 410.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=55 */
%   | | | else return 0.00840284463066128;  // std dev = 5.498, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.15267292541010172;  // std dev = 3.116, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return -0.02261751212818904;  // std dev = 4.476, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.011636564754773015;  // std dev = 5.138, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.04550299507648058;  // std dev = 31.816, 4,402.000 (wgt'ed) examples reached here.  /* #neg=2,806 #pos=1,596 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.10531900007675322;  // std dev = 3.328, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.08349583452248334;  // std dev = 0.985, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.011462862252234586;  // std dev = 6.778, 403.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=54 */
%   | | | else return 0.010550813630559486;  // std dev = 5.568, 233.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=37 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034025521049098256;  // std dev = 31.343, 4,290.000 (wgt'ed) examples reached here.  /* #neg=2,765 #pos=1,525 */
%   | | | else return 0.03357247612829109;  // std dev = 7.468, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.19868821716587828;  // std dev = 0.902, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04115820740444567;  // std dev = 5.464, 124.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=70 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08854311560026559;  // std dev = 3.327, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.005170237304654085;  // std dev = 7.139, 413.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=61 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14983734943049085;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.001683679632036184;  // std dev = 5.179, 233.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.176', 'seconds']
Refined model CLL: -0.620825


******************************************
Best model found
******************************************
Results 

CLL : -0.825303 

AUC ROC : 0.509697 

AUC PR : 0.614917 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 779.699 

Total Inference Time : 16.7097647190094 

Total revision time: 801.1418053951263
Best scored revision CLL: -0.620825


Results 

CLL : -0.825303 

AUC ROC : 0.509697 

AUC PR : 0.614917 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 801.1630532588958 

Total Inference Time : 16.7097647190094 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.736
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '628', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 944.391
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703925;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5861333969918011;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36327055714680573;  // std dev = 6.203, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12730486140002475;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07013883095892158;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0026762220053997243;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006082028716741403;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2566020382312615;  // std dev = 4.462, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.35738676387641305;  // std dev = 4.468, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11117109695805269;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06179147492321247;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05579913829327811;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0025095331913377846;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894217;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051696;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19096925128064174;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29270920720177157;  // std dev = 4.457, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1038733942694141;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06920511017202644;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04703783977271951;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.00220225323509035;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077230198093342;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842096;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14679887142721504;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22502644346895237;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08935585273246609;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.060878514393603825;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04033865856610698;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019330517757924536;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357497;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3077086839646279;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1311276752182827;  // std dev = 6.160, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08330612125459463;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06644299618572434;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -9.95359510842894E-4;  // std dev = 7.964, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006649249445052726;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081798;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0708104284025158;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0666793658259503;  // std dev = 4.429, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14442370176151756;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19934403953636204;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.013704038226551609;  // std dev = 3.405, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0019873634361142847;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006323780538365889;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644005;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530426;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.048384804272353005;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11016277584292763;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07076337473664311;  // std dev = 3.493, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061372267436812906;  // std dev = 1.341, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02775635648977545;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020745986333113235;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3916133057867786;  // std dev = 2.078, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.008492997123486105;  // std dev = 5.591, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.043289235370918465;  // std dev = 35.490, 5,500.000 (wgt'ed) examples reached here.  /* #neg=3,547 #pos=1,953 */
%   | | | else return 0.050135577051269475;  // std dev = 6.139, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.06572878911507897;  // std dev = 3.485, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0021942443006601896;  // std dev = 8.010, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.007048319468551053;  // std dev = 6.184, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1378283905896114;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03415214292453909;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03293240501724081;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.017528720176573986;  // std dev = 4.423, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07496869774255129;  // std dev = 4.437, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16533939226111982;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005645765348251229;  // std dev = 3.385, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.016322792928003545;  // std dev = 3.618, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001749683708148939;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.296', 'seconds']
Refined model CLL: -0.621447


******************************************
Best model found
******************************************
Results 

CLL : -0.826038 

AUC ROC : 0.502574 

AUC PR : 0.607171 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 944.391 

Total Inference Time : 20.59050679206848 

Total revision time: 970.9389871616363
Best scored revision CLL: -0.621447


Results 

CLL : -0.826038 

AUC ROC : 0.502574 

AUC PR : 0.607171 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 970.9602350254058 

Total Inference Time : 20.59050679206848 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.167
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '757', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 107.499
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3432318080276844;  // std dev = 0.500, 905.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=439 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4735335504841268;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0545775065280838;  // std dev = 2.973, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.030562728202960583;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2961207533682165;  // std dev = 0.500, 905.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=439 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3549429594915061;  // std dev = 2.243, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.5110935314880638;  // std dev = 2.073, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.047803085394691455;  // std dev = 2.973, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return 0.2616318086752123;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026801469463012095;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24653321083442944;  // std dev = 0.500, 905.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=439 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6243549766816008;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32431033941916876;  // std dev = 3.022, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.18048955739816916;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14788243223765915;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.08150625945768823;  // std dev = 3.095, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.016608011411224363;  // std dev = 2.225, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19892419561674546;  // std dev = 0.500, 905.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=439 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5199615539844737;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25508230728201825;  // std dev = 3.012, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03781862722523751;  // std dev = 2.960, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return 0.20473416601569794;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013310143948511944;  // std dev = 2.033, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.11086547855206914;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15662982422421987;  // std dev = 0.500, 905.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=439 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1489933118609946;  // std dev = 2.202, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.2650946406934818;  // std dev = 2.052, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.032709262736777926;  // std dev = 2.960, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return 0.16546597415268444;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011521754042908833;  // std dev = 2.033, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.10040301519753883;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12120220770122274;  // std dev = 0.500, 905.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=439 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.332268631554124;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13942984113573303;  // std dev = 2.999, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.14734127134906164;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13426343562409948;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.052669982550954446;  // std dev = 3.072, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.008167211841979827;  // std dev = 2.219, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.44096264867579865;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.11348860667043961;  // std dev = 1.313, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09179221127007509;  // std dev = 14.859, 884.000 (wgt'ed) examples reached here.  /* #neg=456 #pos=428 */
%   | | | else return 0.10475202881732419;  // std dev = 2.999, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02574626025728569;  // std dev = 2.950, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return 0.11955651772916094;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13011017042648607;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 7.188562863148874E-4;  // std dev = 2.029, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.42916426143145714;  // std dev = 1.300, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.18030106953522773;  // std dev = 1.136, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06788425535504854;  // std dev = 14.828, 884.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=427 */
%   | | | else return 0.08296512124970701;  // std dev = 3.001, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.12774609062657746;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1185240660545367;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0373945553100438;  // std dev = 3.194, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 6.223971747728954E-4;  // std dev = 2.029, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.22601562787771573;  // std dev = 0.654, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.10540897174484633;  // std dev = 1.932, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.051808864084958;  // std dev = 15.129, 924.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=452 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04132990097110276;  // std dev = 2.903, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return -0.017549383071111514;  // std dev = 1.563, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.003543163060704798;  // std dev = 2.032, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.0874750931116475;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03949671177398767;  // std dev = 0.498, 905.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=439 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.26748407735760515;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04326085365805139;  // std dev = 2.990, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.012414036021076855;  // std dev = 2.938, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | | else return 0.08826760366544376;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.003046065427169144;  // std dev = 2.032, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.08075828401441311;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.368', 'seconds']
Refined model CLL: -0.666493


******************************************
Best model found
******************************************
Results 

CLL : -0.601638 

AUC ROC : 0.559741 

AUC PR : 0.244509 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 107.499 

Total Inference Time : 1.5433061122894287 

Total revision time: 111.14231216049194
Best scored revision CLL: -0.666493


Results 

CLL : -0.601638 

AUC ROC : 0.559741 

AUC PR : 0.244509 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 111.16356002426147 

Total Inference Time : 1.5433061122894287 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.664
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '764', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 238.362
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3483996314783374;  // std dev = 0.500, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4263307532813295;  // std dev = 3.286, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | | | else return 0.5166855204653651;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.24797944357408774;  // std dev = 3.746, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 0.00883386660636166;  // std dev = 3.057, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.030739953789376582;  // std dev = 2.667, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3004953064494665;  // std dev = 0.500, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.591988775636658;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.39067987339214383;  // std dev = 4.377, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.21503587986829528;  // std dev = 3.746, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 0.0077551198854367885;  // std dev = 3.057, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.02703903610535136;  // std dev = 2.667, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24996339954059224;  // std dev = 0.500, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6969813708756584;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3099552267270068;  // std dev = 4.413, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.050089683046327;  // std dev = 4.365, 115.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=25 */
%   | | | else return 0.32140539996720924;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.13213141877343595;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.02409981661351247;  // std dev = 2.664, 74.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20143475449076423;  // std dev = 0.500, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5348023165963245;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24318699930123458;  // std dev = 4.412, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.15918592230534084;  // std dev = 3.719, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 5.216934861152207E-4;  // std dev = 3.057, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.01990449473116162;  // std dev = 2.663, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.10892254804795257;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.42886334189026304;  // std dev = 2.135, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return -0.10030265925937062;  // std dev = 1.721, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.15756944956847507;  // std dev = 20.930, 1,753.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=858 */
%   | | | else return 0.18613496667438023;  // std dev = 4.412, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.032701645247867284;  // std dev = 4.346, 115.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=25 */
%   | | | else return 0.2313183370371396;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.11470845751117988;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.018127535326090006;  // std dev = 2.662, 74.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1222009262364826;  // std dev = 0.499, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11522427685548607;  // std dev = 3.237, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | | | else return 0.18965168542216804;  // std dev = 3.010, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.11093065143132656;  // std dev = 3.699, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return -0.0037675357272073154;  // std dev = 3.057, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.014705560115857712;  // std dev = 2.661, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.09643874965280441;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09336048114442667;  // std dev = 0.499, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.07853515258086428;  // std dev = 3.169, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.14961456908256604;  // std dev = 3.076, 42.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.08831704947886437;  // std dev = 3.698, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return -0.003276147531995391;  // std dev = 3.057, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.013097589143416577;  // std dev = 2.661, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.08835821503417737;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07082134651730679;  // std dev = 0.499, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.20622178592933488;  // std dev = 0.844, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07793548603348424;  // std dev = 4.334, 80.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.014045274585106852;  // std dev = 4.328, 115.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=25 */
%   | | | else return 0.13428859587451675;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011680314685962923;  // std dev = 2.661, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.08149665035993914;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053491114268308465;  // std dev = 0.499, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2754496451698922;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05409316422674154;  // std dev = 4.400, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.058165883345332514;  // std dev = 3.690, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return -0.004684135729258175;  // std dev = 3.057, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.01042815090116082;  // std dev = 2.661, 72.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=8 */
%   | | | else return -0.07560193144297396;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04029613939666964;  // std dev = 0.499, 1,795.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=880 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2239984249593228;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04070825892484222;  // std dev = 4.400, 81.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=48 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.007760000331967423;  // std dev = 4.325, 115.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=25 */
%   | | | else return 0.08749161329144177;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0967170697532302;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.008136901434550666;  // std dev = 2.656, 74.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.426', 'seconds']
Refined model CLL: -0.666181


******************************************
Best model found
******************************************
Results 

CLL : -0.605065 

AUC ROC : 0.558138 

AUC PR : 0.246395 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 238.362 

Total Inference Time : 2.562577486038208 

Total revision time: 243.609918094635
Best scored revision CLL: -0.666181


Results 

CLL : -0.605065 

AUC ROC : 0.558138 

AUC PR : 0.246395 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 243.63116595840452 

Total Inference Time : 2.562577486038208 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.076
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '745', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 354.252
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34529074259399656;  // std dev = 0.500, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.49624417319475134;  // std dev = 4.924, 105.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23910131605189194;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | | else return 0.004700659237443398;  // std dev = 3.809, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.009198003675997865;  // std dev = 3.358, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29786394292432056;  // std dev = 0.500, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3607125097850032;  // std dev = 3.699, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.5247259227663285;  // std dev = 3.211, 54.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.20743465140990297;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | | else return 0.0041274871891294656;  // std dev = 3.809, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1392060378156697;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.006677796539363785;  // std dev = 3.353, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2479008270444403;  // std dev = 0.500, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2931606752836175;  // std dev = 3.695, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.42314966947047217;  // std dev = 3.209, 54.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.17564775908399538;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | | else return 0.0036226132421486035;  // std dev = 3.809, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0058803177059874815;  // std dev = 3.353, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
%   | | | else return -0.12333763851694726;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19992593117796637;  // std dev = 0.500, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5471652992545212;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.26093693276429564;  // std dev = 4.869, 105.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.14550731772537306;  // std dev = 4.451, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | | else return 0.0031782674542867356;  // std dev = 3.809, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.005180152620785174;  // std dev = 3.353, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
%   | | | else return -0.11061097656441396;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1573260678569466;  // std dev = 0.500, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16371551266565576;  // std dev = 3.667, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.25858492447296516;  // std dev = 3.202, 54.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=40 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026908051977389397;  // std dev = 5.291, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return 0.22211818867369992;  // std dev = 2.478, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004565820565601276;  // std dev = 3.353, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
%   | | | else return -0.10019036087525908;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D), haswordauthor(F, D) )
%   | | then return 0.6345281720376007;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12053700856188695;  // std dev = 26.047, 2,716.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,320 */
%   | | | else return 0.15808518556501877;  // std dev = 4.883, 111.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=73 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.022912484895225273;  // std dev = 5.290, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return 0.1775312029593128;  // std dev = 2.476, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004026254667438387;  // std dev = 3.353, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
%   | | | else return -0.09151387428013377;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0930117568878203;  // std dev = 0.500, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.33077297990576454;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1070723398819982;  // std dev = 4.854, 105.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.08726566672098135;  // std dev = 4.413, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | | else return -0.003551934442710759;  // std dev = 3.353, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0038878791670888813;  // std dev = 3.811, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | | else return -0.08418541105490483;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07060010983757721;  // std dev = 0.500, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.053317608001170864;  // std dev = 3.503, 56.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=35 */
%   | | | else return 0.128534632617387;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0164939069809808;  // std dev = 5.118, 164.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=37 */
%   | | | else return 0.15441123269562454;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1422582495101433;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.003410548424635288;  // std dev = 3.789, 115.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2612105679955215;  // std dev = 2.981, 48.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | | | else return -0.22799032594914093;  // std dev = 2.015, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.053098593326501624;  // std dev = 25.735, 2,651.000 (wgt'ed) examples reached here.  /* #neg=1,361 #pos=1,290 */
%   | | | else return 0.05875306648107292;  // std dev = 4.848, 105.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010269765945695258;  // std dev = 5.263, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return 0.11605044186372063;  // std dev = 2.471, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.11770157362231384;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -9.562383221593473E-4;  // std dev = 3.341, 98.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040063969154797464;  // std dev = 0.499, 2,722.000 (wgt'ed) examples reached here.  /* #neg=1,396 #pos=1,326 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.016218941506645972;  // std dev = 3.645, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.0965407581672701;  // std dev = 3.205, 54.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=40 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.11819074924169466;  // std dev = 2.106, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.007494091187114476;  // std dev = 5.098, 160.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=37 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.00376340411398009;  // std dev = 3.806, 116.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=17 */
%   | | | else return -0.0765702202375018;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.399', 'seconds']
Refined model CLL: -0.667412


******************************************
Best model found
******************************************
Results 

CLL : -0.602498 

AUC ROC : 0.558141 

AUC PR : 0.246396 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 354.252 

Total Inference Time : 3.4890971183776855 

Total revision time: 360.9560865669251
Best scored revision CLL: -0.667412


Results 

CLL : -0.602498 

AUC ROC : 0.558141 

AUC PR : 0.246396 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 360.9773344306946 

Total Inference Time : 3.4890971183776855 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.621
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '748', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 476.41700000000003
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.343426712877285;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.42064893509951296;  // std dev = 4.437, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.5878786648292426;  // std dev = 3.820, 74.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=54 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2599346493852269;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.04448433882621959;  // std dev = 4.941, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.03935698879078686;  // std dev = 4.702, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2962857861791287;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.361386758207021;  // std dev = 4.437, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.500403809354532;  // std dev = 3.820, 74.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=54 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.22525993936200103;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.038982542122712294;  // std dev = 4.941, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03592542196762528;  // std dev = 4.694, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
%   | | | else return -0.14316562765365212;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24666272911555953;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.29707588146212444;  // std dev = 4.437, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.400510288827928;  // std dev = 3.820, 74.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=54 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19010187835392767;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.03401714475533109;  // std dev = 4.941, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03140832829477169;  // std dev = 4.694, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
%   | | | else return -0.12649196073972294;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1990191079128644;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5238969449143944;  // std dev = 0.917, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.25578320189998377;  // std dev = 5.753, 146.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05871407798834558;  // std dev = 6.635, 244.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=60 */
%   | | | else return 0.27514900222577776;  // std dev = 2.675, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1273035399819586;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.028503364656400458;  // std dev = 4.688, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.35041952722235065;  // std dev = 3.701, 64.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=44 */
%   | | | else return -0.03793060043353089;  // std dev = 2.350, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1552064392189387;  // std dev = 29.632, 3,516.000 (wgt'ed) examples reached here.  /* #neg=1,815 #pos=1,701 */
%   | | | else return 0.19800578528207227;  // std dev = 5.723, 145.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=92 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.13477924084714715;  // std dev = 5.161, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.024781817302923746;  // std dev = 4.688, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02145563235675891;  // std dev = 4.942, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | | else return -0.11383848696163744;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12115956822473556;  // std dev = 0.499, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3712545216853693;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1446836204961378;  // std dev = 5.748, 146.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=92 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.10764014076478487;  // std dev = 5.159, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.021486331533939546;  // std dev = 4.688, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0184801683587962;  // std dev = 4.942, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | | else return -0.10286279977341121;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09267865348609879;  // std dev = 0.499, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.07659526078424117;  // std dev = 4.159, 77.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=47 */
%   | | | else return 0.1589878827347634;  // std dev = 4.072, 77.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=52 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.14934180590489163;  // std dev = 2.378, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.03521478732610941;  // std dev = 6.549, 234.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=61 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01588311528141339;  // std dev = 4.942, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | | else return -0.09376080235081292;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07037676970205177;  // std dev = 0.499, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.052321008965988014;  // std dev = 4.393, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.12832926643023493;  // std dev = 3.809, 74.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=54 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07272638439254216;  // std dev = 5.144, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.013111563815080532;  // std dev = 4.690, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.013625607239204423;  // std dev = 4.942, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | | else return -0.08609956348358593;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05320016291170123;  // std dev = 0.499, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03545912366454178;  // std dev = 4.147, 77.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=47 */
%   | | | else return 0.09958449090652571;  // std dev = 4.074, 77.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=52 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.05650672817027482;  // std dev = 5.143, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.01127100515349421;  // std dev = 4.690, 149.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=27 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.011670168100607777;  // std dev = 4.942, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | | else return -0.07956794010287599;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040104171747394064;  // std dev = 0.499, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.02176045571082206;  // std dev = 4.383, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.08338265619627702;  // std dev = 3.812, 74.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=54 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.09818260695738529;  // std dev = 2.346, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.015724328169567273;  // std dev = 6.545, 234.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=61 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009981517035833718;  // std dev = 4.942, 161.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=30 */
%   | | | else return -0.07393713791794088;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.561', 'seconds']
Refined model CLL: -0.67285


******************************************
Best model found
******************************************
Results 

CLL : -0.603147 

AUC ROC : 0.558159 

AUC PR : 0.248602 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 476.41700000000003 

Total Inference Time : 4.046112775802612 

Total revision time: 484.24664629745484
Best scored revision CLL: -0.67285


Results 

CLL : -0.603147 

AUC ROC : 0.558159 

AUC PR : 0.248602 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 484.2678941612244 

Total Inference Time : 4.046112775802612 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.41
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '790', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 532.23
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.51313373820162;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3361153135855329;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23048590135751643;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31038115199810856;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1660528669145617;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24530976698422133;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559876;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30296050205597946;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07476187822390655;  // std dev = 2.900, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1204890902009401;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.14604447598759615;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04103392149496013;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09277688395625648;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08511798180640759;  // std dev = 4.644, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.15051490066776974;  // std dev = 4.310, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03421308315076516;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797175400585821;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07476430958110533;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01959338027920786;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.452967635945385;  // std dev = 1.257, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.04066541404798306;  // std dev = 4.832, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06981126584582513;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.08044635247629908;  // std dev = 6.203, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02663584632247807;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721595576907224;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.010507365000832066;  // std dev = 5.420, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07877658292327684;  // std dev = 0.010, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18547319759272818;  // std dev = 4.057, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.11226813013824534;  // std dev = 2.749, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05276571268111128;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.06072239475520998;  // std dev = 6.203, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13648617685336803;  // std dev = 2.867, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021243473297770047;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07942136770241502;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014237788907329844;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2060601217617849;  // std dev = 4.006, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.15903796582725874;  // std dev = 2.895, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03946038334657905;  // std dev = 33.077, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04198218376836934;  // std dev = 6.197, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01713746472134856;  // std dev = 7.485, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12756212913013015;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0059390512325805;  // std dev = 5.417, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07287128149611397;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.568', 'seconds']
Refined model CLL: -0.671969


******************************************
Best model found
******************************************
Results 

CLL : -0.60149 

AUC ROC : 0.559717 

AUC PR : 0.252025 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 532.23 

Total Inference Time : 4.654965162277222 

Total revision time: 541.4822923088074
Best scored revision CLL: -0.671969


Results 

CLL : -0.60149 

AUC ROC : 0.559717 

AUC PR : 0.252025 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 541.5035401725769 

Total Inference Time : 4.654965162277222 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.368
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '630', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 160.756
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24949805971330774;  // std dev = 15.208, 971.000 (wgt'ed) examples reached here.  /* #neg=591 #pos=380 */
%   | | | else return 0.2823913593419354;  // std dev = 4.015, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.5456489350995123;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00868656950811451;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.032760155809578625;  // std dev = 2.312, 55.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.725083227524282;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.16564790699461435;  // std dev = 2.077, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.21796947142501635;  // std dev = 0.488, 1,036.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=408 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.007625865862415122;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return 0.21423003928420992;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.09446743783575555;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.028818879196799502;  // std dev = 2.312, 55.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18562880228304027;  // std dev = 15.193, 969.000 (wgt'ed) examples reached here.  /* #neg=586 #pos=383 */
%   | | | else return 0.1553571825202082;  // std dev = 3.969, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17028593428841413;  // std dev = 1.721, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.42814778149133026;  // std dev = 1.861, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0066892428575105285;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return 0.18117025335774115;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0087151916747022;  // std dev = 2.753, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return -0.1345191087088379;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14960952976526595;  // std dev = 15.177, 971.000 (wgt'ed) examples reached here.  /* #neg=591 #pos=380 */
%   | | | else return 0.18084439425371507;  // std dev = 4.018, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5115854431772406;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18100090319241388;  // std dev = 2.350, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005863457993502541;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return 0.14977830299848977;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.0804286787730797;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.024419425149405295;  // std dev = 2.307, 55.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.511884004022821;  // std dev = 0.943, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.04647749924861455;  // std dev = 1.916, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.12245742650223285;  // std dev = 0.488, 1,036.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=408 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0051363800941217575;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return 0.12147505727722242;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007599050723074499;  // std dev = 2.749, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return -0.11706548375583622;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09913757400272098;  // std dev = 15.167, 969.000 (wgt'ed) examples reached here.  /* #neg=586 #pos=383 */
%   | | | else return 0.07102214786557597;  // std dev = 3.960, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.362160331761958;  // std dev = 0.776, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.11518511610507189;  // std dev = 2.347, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0044969717094979125;  // std dev = 3.449, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return 0.09701668319368789;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.1279620630437812;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.004864725643062718;  // std dev = 2.748, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0748349552414002;  // std dev = 15.149, 971.000 (wgt'ed) examples reached here.  /* #neg=591 #pos=380 */
%   | | | else return 0.10349969708835646;  // std dev = 4.023, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028695688809355416;  // std dev = 1.686, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.20680343182714916;  // std dev = 1.788, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04006428091689711;  // std dev = 3.374, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.03501712110276954;  // std dev = 2.174, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007054363281861903;  // std dev = 2.746, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return -0.10425146154554395;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06157167786387215;  // std dev = 15.167, 969.000 (wgt'ed) examples reached here.  /* #neg=586 #pos=383 */
%   | | | else return 0.035585481454644415;  // std dev = 3.952, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23829510593824976;  // std dev = 0.737, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.058739714409702756;  // std dev = 2.339, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 6.729387960325593E-4;  // std dev = 3.441, 93.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=14 */
%   | | | else return 0.08403913550478775;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.06588631674863411;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.019701155819073512;  // std dev = 2.298, 55.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3195126514820624;  // std dev = 0.944, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.046172537249846386;  // std dev = 1.801, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.04636522621904063;  // std dev = 0.488, 1,036.000 (wgt'ed) examples reached here.  /* #neg=628 #pos=408 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03489392248707656;  // std dev = 3.374, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.03820688644111246;  // std dev = 2.161, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.005982614028153965;  // std dev = 2.743, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return -0.09323294654249055;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03397708108238049;  // std dev = 15.134, 971.000 (wgt'ed) examples reached here.  /* #neg=591 #pos=380 */
%   | | | else return 0.05980869185584351;  // std dev = 4.027, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.07334244001127223;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10060913190520292;  // std dev = 2.170, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.030346967663720067;  // std dev = 3.374, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.03175779817787003;  // std dev = 2.164, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11041642022223726;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.004313028338756951;  // std dev = 2.741, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.219', 'seconds']
Refined model CLL: -0.632252


******************************************
Best model found
******************************************
Results 

CLL : -0.676948 

AUC ROC : 0.541101 

AUC PR : 0.452866 

Precision : 0.608696 

Recall : 0.037483 

F1 : 0.070618 

Total Learning Time : 160.756 

Total Inference Time : 4.640872478485107 

Total revision time: 167.7448665370941
Best scored revision CLL: -0.632252


Results 

CLL : -0.676948 

AUC ROC : 0.541101 

AUC PR : 0.452866 

Precision : 0.608696 

Recall : 0.037483 

F1 : 0.070618 

Total Learning Time : 167.76611440086364 

Total Inference Time : 4.640872478485107 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.821
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '648', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 343.946
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2557704449237059;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.2416075817160548;  // std dev = 5.607, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3819584589090361;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.5854216623722389;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.07042249347191636;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0070851053122774855;  // std dev = 5.458, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
%   | | | else return -0.034324183180057574;  // std dev = 2.987, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22170024693155943;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.2095812010518781;  // std dev = 5.607, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6545888249104502;  // std dev = 0.909, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3938154299794664;  // std dev = 3.296, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.11115563121567792;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.062064272658592136;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006220449650234657;  // std dev = 5.458, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
%   | | | else return -0.03019706357618206;  // std dev = 2.987, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1872237195168621;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.17739385542452354;  // std dev = 5.607, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2544909681697765;  // std dev = 2.291, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.411134960860839;  // std dev = 2.524, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -3.622781737871489E-4;  // std dev = 4.787, 191.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=27 */
%   | | | else return 0.0833810643303662;  // std dev = 2.490, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005315900689797636;  // std dev = 3.940, 130.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.13616501307921883;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15443820697309993;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.14685976159205658;  // std dev = 5.607, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.43399957003235157;  // std dev = 0.869, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.24375591902231086;  // std dev = 3.282, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.09569501228353636;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.05285364155656618;  // std dev = 0.962, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.004334404541688749;  // std dev = 5.452, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
%   | | | else return -0.02515597388013748;  // std dev = 2.983, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12490179973745394;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.11931806012141491;  // std dev = 5.607, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14189597885561053;  // std dev = 2.296, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.24824949385190517;  // std dev = 2.498, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -4.74567590996345E-4;  // std dev = 4.776, 191.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=27 */
%   | | | else return 0.07134265100939025;  // std dev = 2.493, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005363649940567608;  // std dev = 3.941, 130.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.11920048250569766;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0994385700149662;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.09548368511413005;  // std dev = 5.607, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10803995718816423;  // std dev = 2.296, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.1867460442863057;  // std dev = 2.499, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08140688680782104;  // std dev = 2.263, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.045509253990598575;  // std dev = 0.960, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.00282194742240908;  // std dev = 5.447, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
%   | | | else return -0.021105066432897283;  // std dev = 2.980, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07822074585423718;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.07551612265447294;  // std dev = 5.607, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23461347998856705;  // std dev = 0.841, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.09776617645467434;  // std dev = 3.277, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.026362423384672554;  // std dev = 4.688, 161.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=27 */
%   | | | else return -0.034532732681990926;  // std dev = 2.632, 65.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0052173423924857885;  // std dev = 3.942, 130.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.10604426272530613;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.060660115532748755;  // std dev = 21.530, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=769 */
%   | | | else return 0.06394958593910888;  // std dev = 5.578, 130.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1832000889362038;  // std dev = 0.846, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0738149138268301;  // std dev = 3.277, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.06724790114979375;  // std dev = 2.255, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return -0.041319990837632194;  // std dev = 0.959, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.00310872948884964;  // std dev = 5.446, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
%   | | | else return -0.020183355578068565;  // std dev = 2.976, 93.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.046988421525968535;  // std dev = 21.530, 1,937.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=769 */
%   | | | else return 0.049696830084113346;  // std dev = 5.579, 130.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.14602103003046857;  // std dev = 0.851, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.055830829008697645;  // std dev = 3.277, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02312799653334369;  // std dev = 4.679, 161.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=27 */
%   | | | else return -0.030883081025583656;  // std dev = 2.635, 65.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1417063876048491;  // std dev = 0.155, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0039961588718841375;  // std dev = 3.932, 133.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036505647708661375;  // std dev = 21.523, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=769 */
%   | | | else return 0.0342834153961979;  // std dev = 5.606, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.017975382939261094;  // std dev = 2.307, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.07626776836840331;  // std dev = 2.479, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.004613704911061127;  // std dev = 4.747, 191.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=27 */
%   | | | else return 0.06839318788827263;  // std dev = 2.499, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0038086271328492912;  // std dev = 3.939, 130.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.09197611789810563;  // std dev = 0.056, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.824', 'seconds']
Refined model CLL: -0.63211


******************************************
Best model found
******************************************
Results 

CLL : -0.675954 

AUC ROC : 0.536954 

AUC PR : 0.446468 

Precision : 0.62069 

Recall : 0.024096 

F1 : 0.046392 

Total Learning Time : 343.946 

Total Inference Time : 10.711186408996582 

Total revision time: 357.58745745849615
Best scored revision CLL: -0.63211


Results 

CLL : -0.675954 

AUC ROC : 0.536954 

AUC PR : 0.446468 

Precision : 0.62069 

Recall : 0.024096 

F1 : 0.046392 

Total Learning Time : 357.6087053222657 

Total Inference Time : 10.711186408996582 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.441
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '666', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 492.508
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.24983830839650994;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.209500286450865;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4652917922423695;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.5902917922423695;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008498585449162177;  // std dev = 6.044, 286.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=43 */
%   | | | else return 0.1130508958838261;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.04564893509951138;  // std dev = 5.178, 176.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21662645719685422;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.18203774899683697;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.40145998573248864;  // std dev = 2.507, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0.49929375748267896;  // std dev = 3.376, 57.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.14662121162561784;  // std dev = 2.909, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.08872475835778308;  // std dev = 0.969, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.023743998858584442;  // std dev = 6.754, 326.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=55 */
%   | | | else return 3.251323108511299E-4;  // std dev = 4.226, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18311417606204053;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.15487459307658766;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32329147279103826;  // std dev = 2.507, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0.4021094290537086;  // std dev = 3.372, 57.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.12737125361290727;  // std dev = 2.909, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.07811619057805508;  // std dev = 0.969, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.020776568753893228;  // std dev = 6.754, 326.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=55 */
%   | | | else return 2.847151347123021E-4;  // std dev = 4.226, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15127718986842978;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.12927158590235008;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21675319561410486;  // std dev = 2.581, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.3275635230956585;  // std dev = 3.288, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0013028656009413358;  // std dev = 6.044, 286.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=43 */
%   | | | else return 0.09276707875233557;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03451780744271725;  // std dev = 5.140, 176.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=33 */
%   | | | else return -0.12542936872776544;  // std dev = 0.041, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12257959295911428;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.10613972391639466;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32896462635509405;  // std dev = 1.228, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.20458116264069456;  // std dev = 3.994, 74.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10528300038757794;  // std dev = 2.904, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.07088517287657531;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.002127800147576209;  // std dev = 6.139, 287.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=45 */
%   | | | else return 0.023088280612163708;  // std dev = 5.062, 183.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=31 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09779912229530661;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.08596851750785517;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10773248499450941;  // std dev = 2.583, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.19329910512930523;  // std dev = 3.276, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08872845259066517;  // std dev = 2.904, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.06326849746886881;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0018495856785808067;  // std dev = 6.139, 287.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=45 */
%   | | | else return 0.020183117353752025;  // std dev = 5.062, 183.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=31 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07710328848040691;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.06887428499731264;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07459984862527687;  // std dev = 2.499, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0.1477076593778009;  // std dev = 3.338, 57.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.07395155732378324;  // std dev = 2.903, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.05680832313219074;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0016074166580919889;  // std dev = 6.139, 287.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=45 */
%   | | | else return 0.017604720809344897;  // std dev = 5.062, 183.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=31 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06024549923038074;  // std dev = 26.449, 2,936.000 (wgt'ed) examples reached here.  /* #neg=1,786 #pos=1,150 */
%   | | | else return 0.05470794829352964;  // std dev = 6.493, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04558952770176542;  // std dev = 2.582, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.11855669818943788;  // std dev = 3.269, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.061058492570056314;  // std dev = 2.903, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.05127100670519488;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.011502925012888058;  // std dev = 6.744, 326.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=55 */
%   | | | else return -0.0037808787248190534;  // std dev = 4.222, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.28772662297425544;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=31 */
%   | | | else return -0.11620446015489025;  // std dev = 3.003, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else return 0.046423025365508866;  // std dev = 0.487, 3,099.000 (wgt'ed) examples reached here.  /* #neg=1,873 #pos=1,226 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.050020136147775285;  // std dev = 2.902, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.046480928869202666;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 7.869920835924313E-4;  // std dev = 6.139, 287.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=45 */
%   | | | else return 0.013935815960777661;  // std dev = 5.061, 183.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0354107234262606;  // std dev = 26.403, 2,941.000 (wgt'ed) examples reached here.  /* #neg=1,793 #pos=1,148 */
%   | | | else return 0.03995461309398249;  // std dev = 6.538, 180.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.18571956811053844;  // std dev = 1.207, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04955649669756158;  // std dev = 3.985, 74.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.04071490914944907;  // std dev = 2.902, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return -0.04230374675550602;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.008950486060883592;  // std dev = 6.743, 326.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=55 */
%   | | | else return -0.003525074084945081;  // std dev = 4.222, 144.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.572', 'seconds']
Refined model CLL: -0.635525


******************************************
Best model found
******************************************
Results 

CLL : -0.676284 

AUC ROC : 0.539091 

AUC PR : 0.451779 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 492.508 

Total Inference Time : 13.813989162445068 

Total revision time: 509.99071037673946
Best scored revision CLL: -0.635525


Results 

CLL : -0.676284 

AUC ROC : 0.539091 

AUC PR : 0.451779 

Precision : 0.544304 

Recall : 0.057564 

F1 : 0.104116 

Total Learning Time : 510.011958240509 

Total Inference Time : 13.813989162445068 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.357
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '676', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 722.342
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4889181658687433;  // std dev = 3.891, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | | else return 0.14884660951811612;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else return 0.25256261195960833;  // std dev = 0.489, 4,153.000 (wgt'ed) examples reached here.  /* #neg=2,515 #pos=1,638 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.015330506915230625;  // std dev = 6.992, 369.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=58 */
%   | | | else return 0.11211718906776634;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.027037823988400288;  // std dev = 5.620, 225.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=38 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.40974048711083066;  // std dev = 4.035, 68.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | | else return 0.11329760910131051;  // std dev = 4.074, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.2088383627075169;  // std dev = 5.457, 130.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=51 */
%   | | | else return 0.21947623874640282;  // std dev = 31.017, 4,026.000 (wgt'ed) examples reached here.  /* #neg=2,436 #pos=1,590 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.01345406839054056;  // std dev = 6.992, 369.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=58 */
%   | | | else return 0.09791377992572152;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.02371454880323664;  // std dev = 5.620, 225.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=38 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.378344372400059;  // std dev = 3.864, 65.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=41 */
%   | | | else return 0.10112772690836369;  // std dev = 4.232, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else return 0.1846993681509331;  // std dev = 0.488, 4,153.000 (wgt'ed) examples reached here.  /* #neg=2,515 #pos=1,638 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0027463616677457126;  // std dev = 6.757, 364.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=54 */
%   | | | else return 0.10452279102601195;  // std dev = 3.465, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.037805288541125213;  // std dev = 5.858, 229.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=42 */
%   | | | else return -0.11231637819360635;  // std dev = 1.67e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15334789881796673;  // std dev = 0.488, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,704 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09098353022101376;  // std dev = 3.017, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.09745974944686177;  // std dev = 0.973, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.023630768663474733;  // std dev = 3.016, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return 0.012344632788919124;  // std dev = 8.548, 539.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=88 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5055351506963889;  // std dev = 1.737, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.0925719341431037;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
%   | | else return 0.12333977745553336;  // std dev = 0.488, 4,156.000 (wgt'ed) examples reached here.  /* #neg=2,515 #pos=1,641 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return -0.004298362387193593;  // std dev = 6.756, 364.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=54 */
%   | | | else return 0.08931271015104544;  // std dev = 3.465, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.030530719478337565;  // std dev = 5.848, 229.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=42 */
%   | | | else return -0.10271523717258378;  // std dev = 0.017, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3204155908092497;  // std dev = 3.177, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return 0.019797335138587956;  // std dev = 4.553, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | else return 0.09828728345070747;  // std dev = 0.488, 4,156.000 (wgt'ed) examples reached here.  /* #neg=2,515 #pos=1,641 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07629985161058628;  // std dev = 3.014, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.08753965434513204;  // std dev = 0.972, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006840778969641794;  // std dev = 7.151, 374.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=62 */
%   | | | else return 0.014848848464013222;  // std dev = 5.555, 230.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=37 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.3822573025823632;  // std dev = 1.719, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.04627963627977214;  // std dev = 5.259, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
%   | | else return 0.07739738403280112;  // std dev = 0.488, 4,156.000 (wgt'ed) examples reached here.  /* #neg=2,515 #pos=1,641 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.06560092180549007;  // std dev = 3.013, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.07765157696546734;  // std dev = 0.972, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.019021415301652904;  // std dev = 3.016, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | | else return 0.007360395948398178;  // std dev = 8.538, 539.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=88 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06070459327693373;  // std dev = 0.487, 4,304.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,704 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.006640433409131902;  // std dev = 6.754, 364.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=54 */
%   | | | else return 0.07474018298734446;  // std dev = 3.465, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.022778459518318906;  // std dev = 5.833, 229.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=42 */
%   | | | else return -0.09551866486061421;  // std dev = 0.042, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.21731223682970016;  // std dev = 3.144, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return -0.019934302036259968;  // std dev = 4.465, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | else return 0.046773142613988725;  // std dev = 0.488, 4,156.000 (wgt'ed) examples reached here.  /* #neg=2,515 #pos=1,641 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.021804062461767686;  // std dev = 6.696, 312.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=55 */
%   | | | else return -0.04163168302815002;  // std dev = 3.566, 116.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019688909122431365;  // std dev = 5.833, 229.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=42 */
%   | | | else return -0.08758735445912731;  // std dev = 0.039, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4142197850949175;  // std dev = 18.798, 2,016.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=1,545 */
%   | | | else return -0.3051038106151578;  // std dev = 8.958, 2,284.000 (wgt'ed) examples reached here.  /* #neg=2,207 #pos=77 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.12185594558505429;  // std dev = 4.093, 98.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=22 */
%   | | | else return 0.0299794934312747;  // std dev = 7.088, 261.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=80 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.21844278133625858;  // std dev = 3.050, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.4432361703245245;  // std dev = 2.375, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016980123625141084;  // std dev = 5.832, 229.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=42 */
%   | | | else return -0.08084242827314327;  // std dev = 0.036, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.758', 'seconds']
Refined model CLL: -0.537599


******************************************
Best model found
******************************************
Results 

CLL : -0.557683 

AUC ROC : 0.883352 

AUC PR : 0.808019 

Precision : 1.0 

Recall : 0.026774 

F1 : 0.052151 

Total Learning Time : 722.342 

Total Inference Time : 8.73625135421753 

Total revision time: 735.6218756427764
Best scored revision CLL: -0.537599


Results 

CLL : -0.557683 

AUC ROC : 0.883352 

AUC PR : 0.808019 

Precision : 1.0 

Recall : 0.026774 

F1 : 0.052151 

Total Learning Time : 735.643123506546 

Total Inference Time : 8.73625135421753 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.332
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '703', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 862.771
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2510675953865885;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21825179463547345;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1280024676900924;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697812;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.05627664105721549;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.019061048961767458;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844298456806199;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10831975056255072;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06965937941835045;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.052057311356765536;  // std dev = 3.648, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.016681613798281193;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15229035135400842;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.007498243432828699;  // std dev = 7.700, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08136992977852675;  // std dev = 3.725, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03937778838727241;  // std dev = 6.508, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.15232643946990174;  // std dev = 0.065, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12332626295192291;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10344268762375552;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07297867119987392;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.007294211943322863;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02590423187109952;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09832918724984978;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 4.0642165587547797E-4;  // std dev = 7.675, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07882452370304348;  // std dev = 3.729, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.034387464780866364;  // std dev = 6.505, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.13606875517569653;  // std dev = 0.071, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07746765525611934;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0854110322233357;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06491385653205965;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0028349795730972585;  // std dev = 7.760, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022451118240498717;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060488669235967275;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08228970639050581;  // std dev = 3.477, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06844628030991864;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 6.812974090278297E-4;  // std dev = 7.760, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021088474373367985;  // std dev = 6.403, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04692037306623485;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.003616754191306359;  // std dev = 7.660, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.06793042745560778;  // std dev = 3.733, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.025425373637110515;  // std dev = 6.492, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.12453728775132929;  // std dev = 0.092, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03097057217123248;  // std dev = 34.278, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.043086043244358926;  // std dev = 8.380, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11343652513928615;  // std dev = 4.671, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.034850503823374;  // std dev = 8.109, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.2291387248496253;  // std dev = 3.230, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4561137784071918;  // std dev = 2.558, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025255766967849806;  // std dev = 6.492, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1116233939037219;  // std dev = 0.084, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.240', 'seconds']
Refined model CLL: -0.640876


******************************************
Best model found
******************************************
Results 

CLL : -0.677991 

AUC ROC : 0.541563 

AUC PR : 0.45443 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 862.771 

Total Inference Time : 5.629377603530884 

Total revision time: 874.0909174232482
Best scored revision CLL: -0.640876


Results 

CLL : -0.677991 

AUC ROC : 0.541563 

AUC PR : 0.45443 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 874.1121652870178 

Total Inference Time : 5.629377603530884 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.401
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '676', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 205.902
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.23511228588484778;  // std dev = 16.406, 1,146.000 (wgt'ed) examples reached here.  /* #neg=714 #pos=432 */
%   | | | else return 0.15639454913460007;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3875606998053947;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.5581489350995124;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.015535275426803462;  // std dev = 3.238, 95.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return -0.033155412726574685;  // std dev = 0.311, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.20401694056085845;  // std dev = 16.406, 1,146.000 (wgt'ed) examples reached here.  /* #neg=714 #pos=432 */
%   | | | else return 0.13627054891136262;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3335621649521725;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.4758860545469178;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.01365467795637769;  // std dev = 3.238, 95.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
%   | | | else return 0.09446743783575551;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return -0.029167150475852933;  // std dev = 0.311, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17283862747690384;  // std dev = 16.428, 1,150.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=433 */
%   | | | else return 0.11325080508309379;  // std dev = 3.344, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2756931975053717;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.38264739880473914;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.033251742444412265;  // std dev = 2.545, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return -0.023321456801675355;  // std dev = 2.108, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else return -0.021071721239662174;  // std dev = 0.322, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14350802052522763;  // std dev = 16.405, 1,146.000 (wgt'ed) examples reached here.  /* #neg=714 #pos=432 */
%   | | | else return 0.0959300950022658;  // std dev = 3.455, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18666918993375164;  // std dev = 1.820, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.30527083485889067;  // std dev = 2.247, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.02900321145625698;  // std dev = 2.545, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return -0.020630822659206127;  // std dev = 2.108, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else return -0.01857354603468515;  // std dev = 0.322, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11689368167757659;  // std dev = 16.427, 1,150.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=433 */
%   | | | else return 0.07634670026351095;  // std dev = 3.346, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14195168395255084;  // std dev = 1.819, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.23404691510196746;  // std dev = 2.246, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.05407609408459317;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0013807941508354872;  // std dev = 3.572, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | | else return -0.02071484559589313;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09380456300163184;  // std dev = 16.427, 1,150.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=433 */
%   | | | else return 0.06275345334376747;  // std dev = 3.346, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1039764632581569;  // std dev = 2.045, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.19000441649070315;  // std dev = 2.035, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.018815718195486726;  // std dev = 2.865, 63.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | | | else return -0.0316091553840454;  // std dev = 1.644, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return -0.016211006633255712;  // std dev = 0.322, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5304966173031282;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.016321045425787564;  // std dev = 2.017, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07197174399728024;  // std dev = 16.579, 1,178.000 (wgt'ed) examples reached here.  /* #neg=740 #pos=438 */
%   | | | else return 0.11326654940649483;  // std dev = 2.891, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.009286093049485543;  // std dev = 3.235, 95.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
%   | | | else return 0.07232044617474266;  // std dev = 1.727, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return -0.02017414848406658;  // std dev = 0.312, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.058761423680563314;  // std dev = 16.388, 1,146.000 (wgt'ed) examples reached here.  /* #neg=714 #pos=432 */
%   | | | else return 0.036852346378397925;  // std dev = 3.456, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.036560802497780334;  // std dev = 1.813, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.11511218834279605;  // std dev = 2.241, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.047260383432301635;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -2.955659673985611E-4;  // std dev = 3.564, 106.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=15 */
%   | | | else return -0.017926287000578977;  // std dev = 2.113, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045861797806085854;  // std dev = 16.410, 1,150.000 (wgt'ed) examples reached here.  /* #neg=717 #pos=433 */
%   | | | else return 0.02893257622019005;  // std dev = 3.346, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.025016611490266977;  // std dev = 2.040, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.09815912760084908;  // std dev = 2.031, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.016922822046631383;  // std dev = 2.856, 63.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=10 */
%   | | | else return -0.0274380646565852;  // std dev = 1.647, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else return -0.013368910202616461;  // std dev = 0.322, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03570665086440752;  // std dev = 16.387, 1,146.000 (wgt'ed) examples reached here.  /* #neg=714 #pos=432 */
%   | | | else return 0.02267285874264528;  // std dev = 3.457, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.007499927099916616;  // std dev = 1.809, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.07453559198522815;  // std dev = 2.238, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.006847931159635735;  // std dev = 3.232, 95.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
%   | | | else return 0.06004661018259248;  // std dev = 1.725, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return -0.017542695103483906;  // std dev = 0.312, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.731', 'seconds']
Refined model CLL: -0.629502


******************************************
Best model found
******************************************
Results 

CLL : -0.745256 

AUC ROC : 0.63804 

AUC PR : 0.629396 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 205.902 

Total Inference Time : 6.091836929321289 

Total revision time: 214.36889436531067
Best scored revision CLL: -0.629502


Results 

CLL : -0.745256 

AUC ROC : 0.63804 

AUC PR : 0.629396 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 214.3901422290802 

Total Inference Time : 6.091836929321289 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.968
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '631', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 381.663
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2280711477183491;  // std dev = 23.224, 2,314.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=856 */
%   | | | else return 0.19727936988211997;  // std dev = 5.077, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.5346195233348057;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.07047770222279902;  // std dev = 4.941, 146.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
%   | | | else return -0.006257844561504622;  // std dev = 2.630, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | | else return 0.003982268432845688;  // std dev = 0.353, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1979806202014675;  // std dev = 23.224, 2,314.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=856 */
%   | | | else return 0.17152872209858022;  // std dev = 5.077, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.45642152444011985;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06168007382764703;  // std dev = 4.941, 146.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
%   | | | else return -0.005497787222959114;  // std dev = 2.630, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | | else return 0.003496817793567438;  // std dev = 0.353, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1679395135595999;  // std dev = 23.224, 2,314.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=856 */
%   | | | else return 0.14621739569330397;  // std dev = 5.077, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22765386892831127;  // std dev = 2.355, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.36537832006273085;  // std dev = 3.052, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.065276412843199;  // std dev = 4.049, 98.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   | | | else return 0.010708501140598571;  // std dev = 3.864, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | else return 0.0030694032306090545;  // std dev = 0.353, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.7140364204485347;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.059786890880042076;  // std dev = 2.793, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1356048214481277;  // std dev = 23.456, 2,373.000 (wgt'ed) examples reached here.  /* #neg=1,506 #pos=867 */
%   | | | else return 0.24885163950818392;  // std dev = 3.873, 64.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04982612344250499;  // std dev = 4.937, 146.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
%   | | | else return -0.012095597674277913;  // std dev = 2.627, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | | else return 0.0026933502788515245;  // std dev = 0.353, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11385065058979045;  // std dev = 23.173, 2,314.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=856 */
%   | | | else return 0.09876236812469526;  // std dev = 5.075, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13215439149409391;  // std dev = 2.722, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.24290811319697733;  // std dev = 2.715, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005343231779513023;  // std dev = 4.512, 157.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=24 */
%   | | | else return 0.1427630185949636;  // std dev = 2.734, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return 3.2084642998252974E-4;  // std dev = 0.370, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5378644318278681;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.027786036984624504;  // std dev = 2.792, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08867054383673874;  // std dev = 23.456, 2,373.000 (wgt'ed) examples reached here.  /* #neg=1,506 #pos=867 */
%   | | | else return 0.14434842924841174;  // std dev = 3.858, 64.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004670432977331869;  // std dev = 4.512, 157.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=24 */
%   | | | else return 0.12152848675504561;  // std dev = 2.733, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return 2.766929331106386E-4;  // std dev = 0.370, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07275815828868848;  // std dev = 23.136, 2,314.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=856 */
%   | | | else return 0.06310064136136315;  // std dev = 5.073, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.031431991187003946;  // std dev = 2.332, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.15218888374289952;  // std dev = 3.037, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0040802774820409725;  // std dev = 4.512, 157.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=24 */
%   | | | else return 0.10192279975482102;  // std dev = 2.732, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return 2.3860802912843514E-4;  // std dev = 0.370, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05742159492916977;  // std dev = 23.096, 2,308.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=853 */
%   | | | else return 0.04980871540695231;  // std dev = 5.248, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03315898395917789;  // std dev = 2.707, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.12490619096478305;  // std dev = 2.707, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.02937209984766705;  // std dev = 0.348, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.022045974690807397;  // std dev = 5.126, 178.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=33 */
%   | | | else return 2.0575958629287795E-4;  // std dev = 3.867, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044990162924012596;  // std dev = 23.095, 2,308.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=853 */
%   | | | else return 0.03930592569359942;  // std dev = 5.248, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.002411859938310308;  // std dev = 2.321, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.09784452464252416;  // std dev = 3.032, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02949223668923866;  // std dev = 4.892, 146.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=31 */
%   | | | else return -0.01809731156308384;  // std dev = 2.638, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | | else return -0.00191222852636903;  // std dev = 0.353, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035072701000660414;  // std dev = 23.134, 2,314.000 (wgt'ed) examples reached here.  /* #neg=1,458 #pos=856 */
%   | | | else return 0.03066065325637086;  // std dev = 5.075, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.004634314921896854;  // std dev = 2.696, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.083919311380009;  // std dev = 2.702, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.001837011576444286;  // std dev = 4.512, 157.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=24 */
%   | | | else return 0.07602443128368745;  // std dev = 2.728, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else return -0.003481859062167661;  // std dev = 0.370, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.500', 'seconds']
Refined model CLL: -0.634567


******************************************
Best model found
******************************************
Results 

CLL : -0.750608 

AUC ROC : 0.63604 

AUC PR : 0.616454 

Precision : 0.621212 

Recall : 0.074545 

F1 : 0.133117 

Total Learning Time : 381.663 

Total Inference Time : 10.187243700027466 

Total revision time: 394.90782328224185
Best scored revision CLL: -0.634567


Results 

CLL : -0.750608 

AUC ROC : 0.63604 

AUC PR : 0.616454 

Precision : 0.621212 

Recall : 0.074545 

F1 : 0.133117 

Total Learning Time : 394.9290711460114 

Total Inference Time : 10.187243700027466 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.798
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '626', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 564.04
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22887082178343013;  // std dev = 28.481, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,188 #pos=1,289 */
%   | | | else return 0.2104216623722409;  // std dev = 6.337, 176.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3679528566681387;  // std dev = 3.570, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007721584672161098;  // std dev = 5.456, 234.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=35 */
%   | | | else return 0.13814893509951237;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0019397847727147175;  // std dev = 4.340, 153.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=22 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19866640865681437;  // std dev = 28.481, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,188 #pos=1,289 */
%   | | | else return 0.18282949712710997;  // std dev = 6.337, 176.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30261259371433996;  // std dev = 3.408, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.4512234900055817;  // std dev = 3.417, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006779039359456494;  // std dev = 5.456, 234.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=35 */
%   | | | else return 0.12048633002602775;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0017034919659874932;  // std dev = 4.340, 153.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16849964632651948;  // std dev = 28.481, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,188 #pos=1,289 */
%   | | | else return 0.15552537122784038;  // std dev = 6.337, 176.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2476793694397829;  // std dev = 3.550, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | | else return 0.37956709418492274;  // std dev = 3.252, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056668878269967894;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.049691615252716384;  // std dev = 1.348, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.021917618290209544;  // std dev = 7.438, 397.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=67 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13995093737302436;  // std dev = 28.481, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,188 #pos=1,289 */
%   | | | else return 0.12978430498025578;  // std dev = 6.337, 176.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18021382593725374;  // std dev = 3.384, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.3038835785845613;  // std dev = 3.401, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004765064815262771;  // std dev = 5.453, 234.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=35 */
%   | | | else return 0.10066320368992274;  // std dev = 3.174, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -9.740630858202877E-4;  // std dev = 4.339, 153.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=22 */
%   | | | else return -0.11452023378878094;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11417841903305506;  // std dev = 28.481, 3,477.000 (wgt'ed) examples reached here.  /* #neg=2,188 #pos=1,289 */
%   | | | else return 0.10652829633139303;  // std dev = 6.337, 176.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13890915259870212;  // std dev = 3.529, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | | else return 0.24063730279361376;  // std dev = 3.240, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04475023350799914;  // std dev = 0.294, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021123444612442442;  // std dev = 6.186, 267.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=47 */
%   | | | else return 4.3464253946251425E-6;  // std dev = 4.335, 153.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09115949135977092;  // std dev = 28.430, 3,469.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,283 */
%   | | | else return 0.09863834327698495;  // std dev = 6.560, 184.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09162284090249277;  // std dev = 3.367, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.18858486144321418;  // std dev = 3.393, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05292435142592916;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02226535500809082;  // std dev = 6.174, 261.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=47 */
%   | | | else return -0.0033349476749815195;  // std dev = 4.343, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5284705546206956;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return -0.004983108199354683;  // std dev = 3.474, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0709868735936385;  // std dev = 28.827, 3,573.000 (wgt'ed) examples reached here.  /* #neg=2,258 #pos=1,315 */
%   | | | else return 0.1124942292012125;  // std dev = 4.768, 98.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.046677320353322484;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019292549267743285;  // std dev = 6.174, 261.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=47 */
%   | | | else return -0.002925788504729282;  // std dev = 4.343, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.056970164706672585;  // std dev = 28.394, 3,469.000 (wgt'ed) examples reached here.  /* #neg=2,186 #pos=1,283 */
%   | | | else return 0.06429981286681682;  // std dev = 6.559, 184.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=68 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04171056041708426;  // std dev = 3.511, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   | | | else return 0.12076513057964426;  // std dev = 3.234, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04136502446806063;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016680300344130324;  // std dev = 6.173, 261.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=47 */
%   | | | else return -0.002567629025573119;  // std dev = 4.343, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3224810768998245;  // std dev = 2.270, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.03067620384029386;  // std dev = 3.580, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04441960068766036;  // std dev = 28.794, 3,568.000 (wgt'ed) examples reached here.  /* #neg=2,250 #pos=1,318 */
%   | | | else return 0.06042528681667051;  // std dev = 4.783, 99.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.044899257123808815;  // std dev = 0.294, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.012483360546620265;  // std dev = 6.180, 267.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=47 */
%   | | | else return 0.0010868951760133287;  // std dev = 4.335, 153.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.24792685653719684;  // std dev = 2.270, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.02402930379901756;  // std dev = 3.580, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.08130101006216205;  // std dev = 3.874, 68.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=30 */
%   | | | else return 0.034025861722629586;  // std dev = 28.928, 3,599.000 (wgt'ed) examples reached here.  /* #neg=2,253 #pos=1,346 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.03816899285929751;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013118043098956863;  // std dev = 6.172, 261.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=47 */
%   | | | else return -0.0022562391893108445;  // std dev = 4.343, 157.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.431', 'seconds']
Refined model CLL: -0.634882


******************************************
Best model found
******************************************
Results 

CLL : -0.751032 

AUC ROC : 0.626244 

AUC PR : 0.615004 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 564.04 

Total Inference Time : 12.764855861663818 

Total revision time: 580.787904680252
Best scored revision CLL: -0.634882


Results 

CLL : -0.751032 

AUC ROC : 0.626244 

AUC PR : 0.615004 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 580.8091525440216 

Total Inference Time : 12.764855861663818 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.75
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '671', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 744.0889999999999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22867116211720245;  // std dev = 32.876, 4,634.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,717 */
%   | | | else return 0.21257931484634723;  // std dev = 7.364, 237.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=84 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.37243464938522536;  // std dev = 4.182, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.5393083553893678;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010252494970062195;  // std dev = 6.313, 309.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=47 */
%   | | | else return 0.08395538671241559;  // std dev = 3.292, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.003920030417729576;  // std dev = 4.913, 203.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=28 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19849518912508013;  // std dev = 32.876, 4,634.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,717 */
%   | | | else return 0.184683281765697;  // std dev = 7.364, 237.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=84 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32080740000829716;  // std dev = 4.182, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.4603045678598751;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.07167511146191162;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.02723096723694628;  // std dev = 6.985, 343.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=59 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0034435173140947993;  // std dev = 4.913, 203.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=28 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1683598134021437;  // std dev = 32.876, 4,634.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,717 */
%   | | | else return 0.15704829358504815;  // std dev = 7.364, 237.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=84 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26580991356836625;  // std dev = 4.182, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.37121669479853053;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04942128280353441;  // std dev = 0.296, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.020964786542111553;  // std dev = 6.937, 345.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=58 */
%   | | | else return -0.002859791670122366;  // std dev = 4.911, 204.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13987677833139608;  // std dev = 32.886, 4,638.000 (wgt'ed) examples reached here.  /* #neg=2,920 #pos=1,718 */
%   | | | else return 0.13013724830629472;  // std dev = 7.317, 233.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=83 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19813161736912174;  // std dev = 3.892, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.29231394727053744;  // std dev = 4.148, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.043360123487769624;  // std dev = 0.296, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01831481565145054;  // std dev = 6.937, 345.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=58 */
%   | | | else return -0.0025156578703095975;  // std dev = 4.911, 204.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=28 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11413563541307459;  // std dev = 32.886, 4,638.000 (wgt'ed) examples reached here.  /* #neg=2,920 #pos=1,718 */
%   | | | else return 0.10656155602958771;  // std dev = 7.318, 233.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=83 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15190321826919637;  // std dev = 3.890, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.22474767664655268;  // std dev = 4.145, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07063478097745023;  // std dev = 0.254, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.020535145902259747;  // std dev = 6.980, 342.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=59 */
%   | | | else return -0.005272816297805808;  // std dev = 4.919, 209.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09179380046136512;  // std dev = 32.875, 4,634.000 (wgt'ed) examples reached here.  /* #neg=2,917 #pos=1,717 */
%   | | | else return 0.08597476482000802;  // std dev = 7.367, 237.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=84 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10886054626135729;  // std dev = 4.167, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.18218371919230827;  // std dev = 3.855, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06236498937326974;  // std dev = 0.254, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017870319896034912;  // std dev = 6.980, 342.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=59 */
%   | | | else return -0.0046421728531125415;  // std dev = 4.919, 209.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4954856553485337;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.009710790390562548;  // std dev = 4.086, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07112472625082317;  // std dev = 33.291, 4,765.000 (wgt'ed) examples reached here.  /* #neg=3,011 #pos=1,754 */
%   | | | else return 0.11315981509947576;  // std dev = 5.662, 138.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=83 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.041872875636147555;  // std dev = 0.295, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05541258991812166;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.0110604456954429;  // std dev = 8.377, 520.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=84 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05750412814631186;  // std dev = 32.852, 4,638.000 (wgt'ed) examples reached here.  /* #neg=2,920 #pos=1,718 */
%   | | | else return 0.05388387750955042;  // std dev = 7.320, 233.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=83 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04999553578187843;  // std dev = 3.880, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.1080362955762692;  // std dev = 4.139, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03694840894844427;  // std dev = 0.295, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.012645799429656587;  // std dev = 6.898, 357.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=57 */
%   | | | else return -0.004875527183337835;  // std dev = 4.952, 192.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045013603925812266;  // std dev = 32.851, 4,638.000 (wgt'ed) examples reached here.  /* #neg=2,920 #pos=1,718 */
%   | | | else return 0.04240022322249436;  // std dev = 7.320, 233.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=83 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03312350613368408;  // std dev = 4.160, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | | | else return 0.09062775842168333;  // std dev = 3.851, 69.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -1.1512111613880483E-4;  // std dev = 6.299, 309.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=47 */
%   | | | else return 0.057045202196223395;  // std dev = 3.288, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.003516052939907977;  // std dev = 4.910, 203.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=28 */
%   | | | else return -0.11141174466045455;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03505882266166831;  // std dev = 32.851, 4,638.000 (wgt'ed) examples reached here.  /* #neg=2,920 #pos=1,718 */
%   | | | else return 0.03319990944981988;  // std dev = 7.320, 233.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=83 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.021093235695752135;  // std dev = 3.877, 63.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=35 */
%   | | | else return 0.06804436409771875;  // std dev = 4.135, 76.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.050623091715636226;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0331066897030488;  // std dev = 1.645, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.008197001202309612;  // std dev = 8.372, 520.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=84 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.640', 'seconds']
Refined model CLL: -0.635031


******************************************
Best model found
******************************************
Results 

CLL : -0.751709 

AUC ROC : 0.635562 

AUC PR : 0.628637 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 744.0889999999999 

Total Inference Time : 20.38441777229309 

Total revision time: 769.50843526268
Best scored revision CLL: -0.635031


Results 

CLL : -0.751709 

AUC ROC : 0.635562 

AUC PR : 0.628637 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 769.5296831264495 

Total Inference Time : 20.38441777229309 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.915
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '621', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 1128.36
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533294;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014080153338777844;  // std dev = 7.226, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08413167004780366;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0027510083643892303;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14211285473534627;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651222;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649646;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012347247288737052;  // std dev = 7.226, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07334170816733637;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0024076568830899317;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1256518203747454;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396752450040656;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05762469433122598;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06792974904501572;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.021342833274782192;  // std dev = 9.624, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1139834107002916;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1052503820870875;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488155;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844144;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05951969409345183;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025577396356428077;  // std dev = 8.043, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004051776353754221;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0917038549161181;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431226;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997691;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766648;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05338857886922024;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0236131602511651;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005825483913067008;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816681;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090495;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158736;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441793;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.054783220911879434;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021803226717966223;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006269052716827849;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.19563577274163912;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.057005201076682784;  // std dev = 37.570, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.1147056517394621;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0028203157001438477;  // std dev = 7.198, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06949064832437833;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004125434171348885;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11300380320866188;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04507029638605529;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04062806898924075;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.031951072282543735;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817374;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.002452930869062202;  // std dev = 7.198, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0599128065761909;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0035919922836722823;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10216262735823164;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03510747692515106;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.031819332633257424;  // std dev = 8.219, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168194;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.0733171742031002;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04994487462419243;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.050084896149009114;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.011403836508945518;  // std dev = 9.607, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.710', 'seconds']
Refined model CLL: -0.636683


******************************************
Best model found
******************************************
Results 

CLL : -0.751467 

AUC ROC : 0.642524 

AUC PR : 0.645836 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1128.36 

Total Inference Time : 25.571167469024658 

Total revision time: 1160.1579073905943
Best scored revision CLL: -0.636683


Results 

CLL : -0.751467 

AUC ROC : 0.642524 

AUC PR : 0.645836 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1160.1791552543639 

Total Inference Time : 25.571167469024658 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.435
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '583', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 54.722
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4581489350995123;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.2662433701753928;  // std dev = 0.491, 1,186.000 (wgt'ed) examples reached here.  /* #neg=702 #pos=484 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.058148935099512376;  // std dev = 3.347, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return -0.0198998453882926;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.009092331325927433;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5669430564493851;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1687091354231199;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.2326324185403816;  // std dev = 16.994, 1,194.000 (wgt'ed) examples reached here.  /* #neg=704 #pos=490 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.050922032513553844;  // std dev = 3.347, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return -0.017494671642432055;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.007981919527063671;  // std dev = 2.606, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3891123441544499;  // std dev = 1.877, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.017172406232945234;  // std dev = 1.490, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return 0.19605732228221018;  // std dev = 0.492, 1,194.000 (wgt'ed) examples reached here.  /* #neg=704 #pos=490 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.128096534184164;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.14130508631659933;  // std dev = 1.871, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.009364589059489363;  // std dev = 4.307, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.44722589712591027;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17875626241734835;  // std dev = 2.872, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.10616847356680112;  // std dev = 2.336, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.16069104224140035;  // std dev = 16.748, 1,160.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=475 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.11449459906861469;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.12210786486049303;  // std dev = 1.871, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.00818921774180026;  // std dev = 4.307, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2694387490434915;  // std dev = 2.013, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.10110757230204241;  // std dev = 1.151, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1428031722541545;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.12946546865910905;  // std dev = 16.748, 1,160.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=475 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.10341604801999454;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02433267297200071;  // std dev = 3.921, 105.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=19 */
%   | | | else return 0.004194117049605494;  // std dev = 2.608, 53.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10270897335535253;  // std dev = 0.491, 1,224.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=502 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return -0.1069022033248328;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.019811292601910682;  // std dev = 3.923, 106.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 4.952527647729664E-4;  // std dev = 2.606, 57.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=8 */
%   | | | else return -0.13631956090455102;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.08043964636634506;  // std dev = 0.491, 1,224.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=502 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.08989848493637784;  // std dev = 0.043, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.09861916915746333;  // std dev = 1.866, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.0034396896144875426;  // std dev = 4.307, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.062442312699424;  // std dev = 0.491, 1,224.000 (wgt'ed) examples reached here.  /* #neg=722 #pos=502 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return -0.08282105654371905;  // std dev = 0.040, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08265529348169594;  // std dev = 1.865, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.002994662907882336;  // std dev = 4.307, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17058975732310266;  // std dev = 1.862, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.022049116326702478;  // std dev = 2.329, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else return 0.047120244032683264;  // std dev = 0.491, 1,186.000 (wgt'ed) examples reached here.  /* #neg=702 #pos=484 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.07675261906044156;  // std dev = 0.038, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.0685570699260242;  // std dev = 1.865, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.0026063488070962484;  // std dev = 4.307, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.17091752357693132;  // std dev = 1.807, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.10837663644603403;  // std dev = 1.424, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.035719379174248576;  // std dev = 2.851, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.037144627870064284;  // std dev = 16.748, 1,160.000 (wgt'ed) examples reached here.  /* #neg=685 #pos=475 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then return -0.07149500514664647;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.056367998597857405;  // std dev = 1.864, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.002267731007426584;  // std dev = 4.307, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '929', 'milliseconds']
Refined model CLL: -0.644225


******************************************
Best model found
******************************************
Results 

CLL : -0.625034 

AUC ROC : 0.577544 

AUC PR : 0.389093 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 54.722 

Total Inference Time : 1.5527560710906982 

Total revision time: 58.71417039108277
Best scored revision CLL: -0.644225


Results 

CLL : -0.625034 

AUC ROC : 0.577544 

AUC PR : 0.389093 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 58.74185817909241 

Total Inference Time : 1.5527560710906982 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.02
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '629', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 93.104
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.42064893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.0052077586289240585;  // std dev = 2.065, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else return 0.26643050859847206;  // std dev = 0.492, 2,415.000 (wgt'ed) examples reached here.  /* #neg=1,429 #pos=986 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.06710415898010853;  // std dev = 4.706, 134.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=28 */
%   | | | else return -0.01141628229179202;  // std dev = 2.798, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.013138193613358953;  // std dev = 3.366, 101.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22939335001188024;  // std dev = 0.491, 2,481.000 (wgt'ed) examples reached here.  /* #neg=1,472 #pos=1,009 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.058737679265291734;  // std dev = 4.706, 134.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=28 */
%   | | | else return -0.010032259705424013;  // std dev = 2.798, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.13756570409089217;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.005475014644371756;  // std dev = 3.352, 97.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1934353973675239;  // std dev = 0.491, 2,481.000 (wgt'ed) examples reached here.  /* #neg=1,472 #pos=1,009 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.05108464884038336;  // std dev = 4.706, 134.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=28 */
%   | | | else return -0.008825367568025589;  // std dev = 2.798, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.12204697690519124;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.004819167132002987;  // std dev = 3.352, 97.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.159195707986936;  // std dev = 0.491, 2,481.000 (wgt'ed) examples reached here.  /* #neg=1,472 #pos=1,009 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.17613813699866215;  // std dev = 2.137, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.040208577019997825;  // std dev = 1.319, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.010085780764504804;  // std dev = 4.830, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.009356413244420483;  // std dev = 3.358, 103.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2508619801657385;  // std dev = 2.861, 35.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | else return -0.11330620303295957;  // std dev = 1.902, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else return 0.12970736457255433;  // std dev = 0.492, 2,415.000 (wgt'ed) examples reached here.  /* #neg=1,429 #pos=986 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.15141552307368458;  // std dev = 2.134, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.03494297392150821;  // std dev = 1.319, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.008764543717841003;  // std dev = 4.830, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.008264442354407434;  // std dev = 3.358, 103.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.10178178755443938;  // std dev = 0.490, 2,481.000 (wgt'ed) examples reached here.  /* #neg=1,472 #pos=1,009 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1278355061109206;  // std dev = 2.131, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.030484529144479758;  // std dev = 1.319, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.007608936794729984;  // std dev = 4.830, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.007306096464160765;  // std dev = 3.358, 103.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07980768028032369;  // std dev = 0.490, 2,481.000 (wgt'ed) examples reached here.  /* #neg=1,472 #pos=1,009 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03400016359298784;  // std dev = 4.658, 134.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=28 */
%   | | | else return -0.014456587548307242;  // std dev = 2.811, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.005253015155291752;  // std dev = 3.358, 101.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | | | else return -0.11351494864403154;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2872586860430521;  // std dev = 2.748, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.024296765879976968;  // std dev = 3.120, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.007745637789933478;  // std dev = 3.321, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.06128591801105876;  // std dev = 23.795, 2,347.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=954 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.029057443486116014;  // std dev = 4.657, 134.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=28 */
%   | | | else return -0.012677468695425778;  // std dev = 2.811, 69.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11009871072915157;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 2.450813958035461E-4;  // std dev = 3.349, 97.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047846268570508436;  // std dev = 0.490, 2,481.000 (wgt'ed) examples reached here.  /* #neg=1,472 #pos=1,009 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.09894245538639886;  // std dev = 2.117, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.03225542750608437;  // std dev = 1.317, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.016781223558797426;  // std dev = 1.621, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.001605365629542062;  // std dev = 5.651, 246.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=38 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.20792617063927404;  // std dev = 2.747, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.008172993777160135;  // std dev = 3.121, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.01644270376140564;  // std dev = 3.318, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.036219720380701266;  // std dev = 23.795, 2,347.000 (wgt'ed) examples reached here.  /* #neg=1,393 #pos=954 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.18249117870738726;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.003829209432076895;  // std dev = 2.199, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.002288413711941753;  // std dev = 4.829, 170.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=28 */
%   | | | else return -0.004352963602413978;  // std dev = 3.353, 103.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '918', 'milliseconds']
Refined model CLL: -0.64694


******************************************
Best model found
******************************************
Results 

CLL : -0.625418 

AUC ROC : 0.577339 

AUC PR : 0.389042 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 93.104 

Total Inference Time : 2.182333469390869 

Total revision time: 98.42336480522155
Best scored revision CLL: -0.64694


Results 

CLL : -0.625418 

AUC ROC : 0.577339 

AUC PR : 0.389042 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 98.4510525932312 

Total Inference Time : 2.182333469390869 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.654
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '613', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 579.728
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.26054519459687714;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.191482268432847;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.43709630352056383;  // std dev = 3.728, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.5692600462106224;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.03068414636711772;  // std dev = 6.368, 284.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016769624754684433;  // std dev = 4.399, 145.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22578171549086992;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.16653882456487953;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3751785876229701;  // std dev = 3.728, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.48505916835917484;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15809294695114431;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.051552344297892655;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05112695979578969;  // std dev = 2.687, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return 0.019685963722300442;  // std dev = 7.137, 371.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=61 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1905234071252068;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.1420942428155646;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.30023022623478196;  // std dev = 3.618, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return 0.39447620030820246;  // std dev = 3.161, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13509706407320302;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.023997260703997103;  // std dev = 6.365, 284.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013126718798996125;  // std dev = 4.399, 145.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=23 */
%   | | | else return -0.12678403290637447;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15696874227585458;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.11914890490746523;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6206253657836304;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2573393031550107;  // std dev = 4.775, 99.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01983868054740723;  // std dev = 6.369, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
%   | | | else return 0.11190350309672031;  // std dev = 2.715, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.011487243468842475;  // std dev = 4.399, 145.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=23 */
%   | | | else return -0.11340057258915956;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12675388363143966;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.09841340278401774;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4686927983441229;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19588851535605384;  // std dev = 4.773, 99.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017178914430306516;  // std dev = 6.369, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
%   | | | else return 0.09697058422298649;  // std dev = 2.715, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.010040017405696348;  // std dev = 4.399, 145.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=23 */
%   | | | else return -0.10249035290276827;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10074079333733482;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.08026654944252283;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1186877576580356;  // std dev = 3.588, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return 0.19458338132431002;  // std dev = 3.145, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10735721279135824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.04672660286954307;  // std dev = 1.344, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03842949566698539;  // std dev = 2.682, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return 0.008790875293364604;  // std dev = 7.122, 371.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=61 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07910477097009766;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.06479591611329305;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08046574839257464;  // std dev = 3.705, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.15991729159140852;  // std dev = 2.994, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011086580706987134;  // std dev = 6.358, 280.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=50 */
%   | | | else return 0.08167453613408632;  // std dev = 2.715, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.008260673630686874;  // std dev = 4.399, 145.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=23 */
%   | | | else return -0.09383666432390574;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06156262979529961;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.0518791693440401;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05831181524740641;  // std dev = 3.586, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return 0.1208590324005344;  // std dev = 3.136, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19974816849168753;  // std dev = 1.386, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.008999874313814897;  // std dev = 2.701, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03197043377057817;  // std dev = 2.682, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return 0.0053491730971380715;  // std dev = 7.117, 371.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=61 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04759918206595977;  // std dev = 28.686, 3,422.000 (wgt'ed) examples reached here.  /* #neg=2,045 #pos=1,377 */
%   | | | else return 0.041269329984245866;  // std dev = 6.532, 192.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=64 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.036980548132231436;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.10257485265831777;  // std dev = 2.989, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08177651631695357;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.04818695040861875;  // std dev = 1.317, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003918581028783447;  // std dev = 6.170, 276.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=46 */
%   | | | else return 0.013511011340293833;  // std dev = 4.448, 141.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036164036474698465;  // std dev = 28.696, 3,434.000 (wgt'ed) examples reached here.  /* #neg=2,058 #pos=1,376 */
%   | | | else return 0.04127394085014375;  // std dev = 6.488, 180.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02617992040867797;  // std dev = 3.586, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return 0.07838214882258333;  // std dev = 3.130, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07752896598813724;  // std dev = 2.420, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return -0.05936236435772124;  // std dev = 1.339, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.021826897365591232;  // std dev = 2.944, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.003676473244077698;  // std dev = 7.116, 371.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=61 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.464', 'seconds']
Refined model CLL: -0.648132


******************************************
Best model found
******************************************
Results 

CLL : -0.6244 

AUC ROC : 0.57664 

AUC PR : 0.407385 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 579.728 

Total Inference Time : 16.561310529708862 

Total revision time: 600.1456895179748
Best scored revision CLL: -0.648132


Results 

CLL : -0.6244 

AUC ROC : 0.57664 

AUC PR : 0.407385 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 600.1733773059844 

Total Inference Time : 16.561310529708862 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.754
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '561', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 841.066
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2564928008654693;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.2214142412219598;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.45814893509951277;  // std dev = 4.099, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.5748156017661792;  // std dev = 3.490, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.2059750220560341;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.0469787223335555;  // std dev = 7.589, 376.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01687909382967038;  // std dev = 5.024, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22231785626890208;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.19226943979584268;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.38118558212551296;  // std dev = 4.093, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.5031846551499989;  // std dev = 3.472, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1790077228829523;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.04116325554346726;  // std dev = 7.589, 376.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1405593649498581;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.015691658758790052;  // std dev = 5.019, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18772337989104274;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.16326881935727613;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5662226203462357;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3422428153802426;  // std dev = 5.283, 123.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=79 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.19081507330623218;  // std dev = 2.999, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return -0.061668854357970454;  // std dev = 1.352, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03425722477919903;  // std dev = 7.545, 370.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=71 */
%   | | | else return 0.013757651311014519;  // std dev = 5.019, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15482182873459366;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.1358647141737613;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22954761053078318;  // std dev = 4.079, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.3285233930717676;  // std dev = 3.456, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16478532941043633;  // std dev = 2.994, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return -0.05389185042452755;  // std dev = 1.351, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.029661129495360303;  // std dev = 7.544, 370.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=71 */
%   | | | else return 0.012044192992087692;  // std dev = 5.019, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1251829658764652;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.11111615673768552;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16114488533229754;  // std dev = 4.073, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.2641862588806903;  // std dev = 3.436, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1416980231874404;  // std dev = 3.201, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return -0.06412960407317116;  // std dev = 1.355, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07275051959297829;  // std dev = 3.172, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.014132243430388578;  // std dev = 8.391, 497.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=85 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0996365628908168;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.08959235881734864;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1198963404493198;  // std dev = 4.073, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.2000981667087917;  // std dev = 3.434, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.041837191043913244;  // std dev = 6.890, 287.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=61 */
%   | | | else return 0.011474445627990095;  // std dev = 4.479, 135.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00795986317477587;  // std dev = 5.028, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
%   | | | else return -0.125548348596021;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835535561049696;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.07142735626214869;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.29197982604187606;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1080914756615334;  // std dev = 5.242, 123.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=79 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11398721322722165;  // std dev = 3.203, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return -0.056455131680661304;  // std dev = 1.355, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018341546930317917;  // std dev = 7.539, 373.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=71 */
%   | | | else return 0.004989455382641321;  // std dev = 4.857, 180.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0610705976780558;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.05644923312910673;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.049817082896178255;  // std dev = 4.063, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.13488253430150396;  // std dev = 3.418, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09297598107120707;  // std dev = 3.202, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.014388172175149769;  // std dev = 7.544, 376.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007005418197679569;  // std dev = 5.027, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
%   | | | else return -0.11183588505457145;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04728740573697982;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.044314503772972094;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.035578987734551454;  // std dev = 4.063, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.10501425274868967;  // std dev = 3.417, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11579707032676749;  // std dev = 2.953, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return -0.06794884534882878;  // std dev = 1.363, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.032370938823125105;  // std dev = 3.350, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.005747089485161181;  // std dev = 8.386, 497.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=85 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03644020927077624;  // std dev = 33.164, 4,589.000 (wgt'ed) examples reached here.  /* #neg=2,761 #pos=1,828 */
%   | | | else return 0.03461219971893442;  // std dev = 7.528, 245.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.019205630698933992;  // std dev = 4.062, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | | | else return 0.08951896124382484;  // std dev = 3.410, 60.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06883298923766444;  // std dev = 3.188, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.010119207532725346;  // std dev = 7.533, 376.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=71 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.16066450032760834;  // std dev = 0.162, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.008018180337437099;  // std dev = 5.011, 189.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.660', 'seconds']
Refined model CLL: -0.649569


******************************************
Best model found
******************************************
Results 

CLL : -0.624362 

AUC ROC : 0.579519 

AUC PR : 0.412312 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 841.066 

Total Inference Time : 21.29936933517456 

Total revision time: 867.3898421001435
Best scored revision CLL: -0.649569


Results 

CLL : -0.624362 

AUC ROC : 0.579519 

AUC PR : 0.412312 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 867.4175298881531 

Total Inference Time : 21.29936933517456 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.948
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '604', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 1054.781
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4723963623785731;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.22007296189803768;  // std dev = 37.927, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14131665839554822;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1876329682974677;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16417717100423795;  // std dev = 8.354, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03743967424313927;  // std dev = 8.420, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07411654196073601;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031521891583258535;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1547977069335831;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1358145297086938;  // std dev = 8.355, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903758;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973599;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1309414728018588;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08028547316610135;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02762019823608807;  // std dev = 8.491, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.02944234062161078;  // std dev = 5.773, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12526420536301117;  // std dev = 37.053, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.10927243447800586;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19125494210527297;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11255487155296057;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07026317571704686;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.043445580190565276;  // std dev = 3.523, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.02212067092496425;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09973604017725006;  // std dev = 37.052, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08754765077178166;  // std dev = 8.362, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11082226745851505;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483617;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03825357752713474;  // std dev = 7.636, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.007789907452654007;  // std dev = 5.022, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07774820983883472;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022095837409858463;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0785008520400161;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06857734489805473;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3546321084197926;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10375634102649121;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10491445847616641;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08341840600771114;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016750844216628445;  // std dev = 8.475, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.019094677423678354;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06120304424145454;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05388384549531018;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04146989198645727;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1428620693626102;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0331300808918116;  // std dev = 7.635, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.0038091206768137115;  // std dev = 4.998, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10645853987445246;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.016125683687772053;  // std dev = 5.841, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04742784764344532;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04160480893083384;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02900461883885475;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11129303261195567;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0877943151720998;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07339359619751842;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.031211757349038104;  // std dev = 3.493, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.010106296463208327;  // std dev = 9.637, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03655806673065968;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.032333670560181674;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24162143022826826;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.041006327564142714;  // std dev = 6.026, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02699600385426329;  // std dev = 7.631, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.007273487633681905;  // std dev = 4.983, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010930773660176918;  // std dev = 5.918, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10220688647241279;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.542', 'seconds']
Refined model CLL: -0.650305


******************************************
Best model found
******************************************
Results 

CLL : -0.624427 

AUC ROC : 0.582537 

AUC PR : 0.415134 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1054.781 

Total Inference Time : 25.47671937942505 

Total revision time: 1086.5699531116486
Best scored revision CLL: -0.650305


Results 

CLL : -0.624427 

AUC ROC : 0.582537 

AUC PR : 0.415134 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1086.5976408996582 

Total Inference Time : 25.47671937942505 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.372
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '642', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 171.162
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19771862639978813;  // std dev = 15.483, 1,069.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=363 */
%   | | | else return 0.3224346493852255;  // std dev = 3.732, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.572434649385226;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04481560176617904;  // std dev = 3.374, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.07935106490048778;  // std dev = 1.369, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.11211718906776634;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1719066883860281;  // std dev = 15.483, 1,069.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=363 */
%   | | | else return 0.27849027391233155;  // std dev = 3.732, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856348;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.48767788391726324;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.30715096820490306;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.14001830537947124;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02279815191891588;  // std dev = 3.105, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.0845789489732372;  // std dev = 3.482, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14652938065003432;  // std dev = 15.483, 1,069.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=363 */
%   | | | else return 0.23264591820802655;  // std dev = 3.732, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2564123687585864;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.39125696209925315;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03595995028788554;  // std dev = 3.335, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return -0.06696913114826988;  // std dev = 1.369, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.08644789298884108;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.13019137117689478;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12267331268273299;  // std dev = 15.483, 1,069.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=363 */
%   | | | else return 0.18869289576980006;  // std dev = 3.732, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.11624843221321643;  // std dev = 0.944, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2812299280684374;  // std dev = 2.969, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.2586382343910523;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.12269568406809606;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.020537183219018883;  // std dev = 3.100, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.06242724766469872;  // std dev = 3.475, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10111529794781109;  // std dev = 15.483, 1,069.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=363 */
%   | | | else return 0.14947773606037734;  // std dev = 3.732, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14692072292890565;  // std dev = 1.991, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2355214520806385;  // std dev = 2.389, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.21468327359773812;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.1101128523757076;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.018084399411066206;  // std dev = 3.100, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.05318773397091353;  // std dev = 3.475, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0858166225785643;  // std dev = 15.482, 1,063.000 (wgt'ed) examples reached here.  /* #neg=697 #pos=366 */
%   | | | else return 0.05229025645900518;  // std dev = 3.736, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1126969159580781;  // std dev = 1.991, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.1767627840734806;  // std dev = 2.389, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.173392947151592;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.09979590596291796;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01595448850361669;  // std dev = 3.100, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.04502499614936625;  // std dev = 3.474, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06565735310123888;  // std dev = 15.482, 1,069.000 (wgt'ed) examples reached here.  /* #neg=706 #pos=363 */
%   | | | else return 0.10248516925587534;  // std dev = 3.731, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08947011840778747;  // std dev = 2.265, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.1424123271630327;  // std dev = 2.128, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.049711277657276946;  // std dev = 2.054, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return 0.04219093435241724;  // std dev = 2.856, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04911226278808688;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.1254508352117399;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05564283194947169;  // std dev = 15.482, 1,063.000 (wgt'ed) examples reached here.  /* #neg=697 #pos=366 */
%   | | | else return 0.02050384637633451;  // std dev = 3.729, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.058889797722946266;  // std dev = 1.991, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.10448073135533299;  // std dev = 2.387, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.04320026889346865;  // std dev = 2.059, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return 0.037151705298886804;  // std dev = 2.856, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04099635523062653;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return -0.11239644889245884;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6053311612415282;  // std dev = 0.240, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.020456884286382343;  // std dev = 2.022, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.042483527691168935;  // std dev = 15.764, 1,102.000 (wgt'ed) examples reached here.  /* #neg=721 #pos=381 */
%   | | | else return 0.047466817838937574;  // std dev = 3.051, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15684465504484937;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.09139398744494286;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.014003755772287145;  // std dev = 3.649, 102.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=17 */
%   | | | else return 0.02979297961389121;  // std dev = 2.860, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.4645537236739795;  // std dev = 0.236, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return -0.02735297919907998;  // std dev = 2.356, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.03402787249046784;  // std dev = 16.010, 1,139.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=405 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12304929481714928;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.084118223349912;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.017061849831535834;  // std dev = 3.074, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.027360750497446126;  // std dev = 3.467, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.070', 'seconds']
Refined model CLL: -0.616515


******************************************
Best model found
******************************************
Results 

CLL : -0.840434 

AUC ROC : 0.499056 

AUC PR : 0.605175 

Precision : 0.740741 

Recall : 0.02594 

F1 : 0.050125 

Total Learning Time : 171.162 

Total Inference Time : 4.624043226242065 

Total revision time: 178.12702711486816
Best scored revision CLL: -0.616515


Results 

CLL : -0.840434 

AUC ROC : 0.499056 

AUC PR : 0.605175 

Precision : 0.740741 

Recall : 0.02594 

F1 : 0.050125 

Total Learning Time : 178.1547149028778 

Total Inference Time : 4.624043226242065 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.842
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '593', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 325.722
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.21161649662076007;  // std dev = 22.600, 2,235.000 (wgt'ed) examples reached here.  /* #neg=1,445 #pos=790 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.48858371770820697;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05814893509951233;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 6.312651865376522E-5;  // std dev = 6.074, 303.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18265809457949608;  // std dev = 22.008, 2,123.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=748 */
%   | | | else return 0.216112749741482;  // std dev = 5.313, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.4181848372572996;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15495349211549697;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.1523727307677739;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.013433700955946419;  // std dev = 4.756, 201.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=26 */
%   | | | else return 0.041338970309493635;  // std dev = 4.410, 130.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15535321766433272;  // std dev = 22.008, 2,123.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=748 */
%   | | | else return 0.18335729575324922;  // std dev = 5.314, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25641236875858675;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.339991361577038;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3044014613509137;  // std dev = 0.996, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.051879552154877884;  // std dev = 2.002, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06492939018613882;  // std dev = 2.453, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return -0.0010287546917851999;  // std dev = 6.069, 303.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1296205591894104;  // std dev = 22.008, 2,123.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=748 */
%   | | | else return 0.15206170473687475;  // std dev = 5.314, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20613740734453997;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.2653217705239629;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.252066039518571;  // std dev = 0.995, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.045214262381434805;  // std dev = 2.002, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0558688235695544;  // std dev = 2.452, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return -9.027791865225679E-4;  // std dev = 6.069, 303.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.27544186129768505;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.10677116221489097;  // std dev = 22.598, 2,235.000 (wgt'ed) examples reached here.  /* #neg=1,445 #pos=790 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1573282700818893;  // std dev = 3.055, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.2096493539402108;  // std dev = 3.140, 42.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.015372600495696815;  // std dev = 4.722, 164.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=27 */
%   | | | else return -0.04226661081399695;  // std dev = 2.482, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03758951521445825;  // std dev = 4.375, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.15006160356425538;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08816030047170167;  // std dev = 21.993, 2,114.000 (wgt'ed) examples reached here.  /* #neg=1,364 #pos=750 */
%   | | | else return 0.06434360964328822;  // std dev = 5.363, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2281997981814001;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.13332414947586183;  // std dev = 4.230, 74.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07647630521192529;  // std dev = 1.975, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.009140176164266363;  // std dev = 4.954, 211.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=29 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03271897574319554;  // std dev = 4.375, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.13191520821157696;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2961988103894193;  // std dev = 2.275, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.03384396680367083;  // std dev = 3.009, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06815091390168375;  // std dev = 22.325, 2,184.000 (wgt'ed) examples reached here.  /* #neg=1,414 #pos=770 */
%   | | | else return 0.1006207093393178;  // std dev = 4.230, 74.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11474319366676865;  // std dev = 2.354, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.1400927961664337;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.01292034563111784;  // std dev = 4.748, 201.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=26 */
%   | | | else return 0.025951467660811932;  // std dev = 4.377, 130.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05613093061078213;  // std dev = 21.983, 2,114.000 (wgt'ed) examples reached here.  /* #neg=1,364 #pos=750 */
%   | | | else return 0.03713282959853951;  // std dev = 5.362, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.059271975352189366;  // std dev = 3.047, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.1016320249344081;  // std dev = 3.138, 42.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09624482432813587;  // std dev = 2.354, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.1240810225440138;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011353640787415211;  // std dev = 4.748, 201.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=26 */
%   | | | else return 0.02247377309636421;  // std dev = 4.376, 130.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=24 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.042265295022344364;  // std dev = 21.993, 2,123.000 (wgt'ed) examples reached here.  /* #neg=1,375 #pos=748 */
%   | | | else return 0.06337233070761543;  // std dev = 5.318, 119.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.13635638243150763;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05524260655095885;  // std dev = 4.229, 74.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07061274652067902;  // std dev = 1.973, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.01812908536959471;  // std dev = 1.080, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008950876988575135;  // std dev = 4.928, 211.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=29 */
%   | | | else return 0.013684102192603392;  // std dev = 4.254, 127.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23455755304170314;  // std dev = 2.107, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return -7.463079025296763E-4;  // std dev = 3.098, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03306750034147747;  // std dev = 22.324, 2,184.000 (wgt'ed) examples reached here.  /* #neg=1,414 #pos=770 */
%   | | | else return 0.0415793512619139;  // std dev = 4.229, 74.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.013176106433795666;  // std dev = 4.703, 164.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=27 */
%   | | | else return -0.03739831790529053;  // std dev = 2.457, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019903825234810657;  // std dev = 4.374, 127.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=24 */
%   | | | else return -0.11296692724733673;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.879', 'seconds']
Refined model CLL: -0.620149


******************************************
Best model found
******************************************
Results 

CLL : -0.826135 

AUC ROC : 0.516026 

AUC PR : 0.619574 

Precision : 0.782609 

Recall : 0.023346 

F1 : 0.04534 

Total Learning Time : 325.722 

Total Inference Time : 7.224663972854614 

Total revision time: 335.8519078388214
Best scored revision CLL: -0.620149


Results 

CLL : -0.826135 

AUC ROC : 0.516026 

AUC PR : 0.619574 

Precision : 0.782609 

Recall : 0.023346 

F1 : 0.04534 

Total Learning Time : 335.879595626831 

Total Inference Time : 7.224663972854614 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.6
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '622', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 508.993
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21112679602872456;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.24488926659122634;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.31467067422994655;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.5194392576801578;  // std dev = 3.727, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0038039268533502026;  // std dev = 5.945, 297.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=41 */
%   | | | else return 0.014062913594135359;  // std dev = 4.948, 186.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=29 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18343537262573986;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.21239098670610188;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2718979338779211;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.4438355346346023;  // std dev = 3.727, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.2592458419706685;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08918206721211024;  // std dev = 2.632, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -7.470961056423656E-4;  // std dev = 6.246, 318.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=46 */
%   | | | else return 0.007953660384653973;  // std dev = 4.703, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15602323346257468;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.17967717849412126;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22742727023532366;  // std dev = 3.378, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.3590653815329058;  // std dev = 3.727, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16664262572950572;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.003865738735957593;  // std dev = 6.203, 321.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=45 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009932624529839054;  // std dev = 4.696, 171.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=26 */
%   | | | else return -0.14170994359758898;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13017636974532767;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.14862545717594924;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.42671182306486477;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2255526751181532;  // std dev = 4.888, 101.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=57 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14219371935982517;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.003389832480072962;  // std dev = 6.203, 321.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=45 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008717524568758067;  // std dev = 4.696, 171.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=26 */
%   | | | else return -0.12533918487785925;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10682524918210765;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.12062402624081432;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13208265747539732;  // std dev = 3.363, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.22317957721289342;  // std dev = 3.722, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01523389223834107;  // std dev = 5.792, 249.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=40 */
%   | | | else return -0.004213953800991704;  // std dev = 3.659, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007643956819744093;  // std dev = 4.696, 171.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=26 */
%   | | | else return -0.112235604591835;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08646996843644646;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.09641264294944812;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10252223663065585;  // std dev = 3.362, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.1677123059742777;  // std dev = 3.722, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11837859152134257;  // std dev = 2.561, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.02345832715153687;  // std dev = 1.247, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06258240425992048;  // std dev = 3.052, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return -0.009663381098001682;  // std dev = 7.141, 441.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=59 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06922934684287478;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.07615418505353133;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0713644105984507;  // std dev = 3.519, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.136605497572086;  // std dev = 3.566, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.21353879754492217;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06490745945146643;  // std dev = 2.619, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006513020737175336;  // std dev = 6.197, 318.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=46 */
%   | | | else return 0.0062058624289231265;  // std dev = 4.696, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.054951448456466614;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.05961732148812739;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05396397526135099;  // std dev = 3.519, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return 0.10341360003957902;  // std dev = 3.566, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10982153143576126;  // std dev = 2.831, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -0.08637678700513372;  // std dev = 0.976, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.08226798274142627;  // std dev = 2.827, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.008253077517436183;  // std dev = 7.140, 441.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=59 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04332917072899776;  // std dev = 27.063, 3,207.000 (wgt'ed) examples reached here.  /* #neg=2,075 #pos=1,132 */
%   | | | else return 0.04636205227470162;  // std dev = 6.552, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.22831788311867757;  // std dev = 1.168, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.04892851829015402;  // std dev = 4.854, 101.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=57 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.17025681027748937;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.04414967699724023;  // std dev = 2.616, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0073639269857118245;  // std dev = 6.104, 311.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=45 */
%   | | | else return 0.007295282644368811;  // std dev = 4.798, 182.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4172884738523767;  // std dev = 1.525, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.015895180904303412;  // std dev = 4.331, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03306374603472013;  // std dev = 27.447, 3,296.000 (wgt'ed) examples reached here.  /* #neg=2,130 #pos=1,166 */
%   | | | else return 0.04208703365800769;  // std dev = 4.889, 102.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=58 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07211190568168735;  // std dev = 2.568, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.020784957844989994;  // std dev = 1.188, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007038736673414765;  // std dev = 6.184, 318.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=46 */
%   | | | else return 0.00804125973285138;  // std dev = 4.694, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.158', 'seconds']
Refined model CLL: -0.62059


******************************************
Best model found
******************************************
Results 

CLL : -0.828957 

AUC ROC : 0.502574 

AUC PR : 0.607171 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 508.993 

Total Inference Time : 13.611351728439331 

Total revision time: 526.42774111557
Best scored revision CLL: -0.62059


Results 

CLL : -0.828957 

AUC ROC : 0.502574 

AUC PR : 0.607171 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 526.4554289035797 

Total Inference Time : 13.611351728439331 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.709
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '669', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 736.203
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21266476377734703;  // std dev = 31.354, 4,296.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,523 */
%   | | | else return 0.20794317378263918;  // std dev = 7.434, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3335587711650849;  // std dev = 3.900, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return 0.5067975837481615;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1642713840791042;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.0418510649004878;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 6.550776056549603E-4;  // std dev = 7.052, 407.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=58 */
%   | | | else return 0.016043671941616714;  // std dev = 5.506, 228.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1847566877808619;  // std dev = 31.354, 4,296.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,523 */
%   | | | else return 0.1806995260314567;  // std dev = 7.434, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28792570368038944;  // std dev = 3.900, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return 0.43333738675208217;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3467833629620698;  // std dev = 1.424, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.057373351089613396;  // std dev = 3.170, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 5.753167306089222E-4;  // std dev = 7.052, 407.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=58 */
%   | | | else return 0.014079441960180959;  // std dev = 5.506, 228.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1571085751247023;  // std dev = 31.354, 4,296.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,523 */
%   | | | else return 0.15377417592506146;  // std dev = 7.434, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24009062233034;  // std dev = 3.900, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return 0.35128110301641846;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13050177881908903;  // std dev = 3.221, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.04966278787398707;  // std dev = 1.292, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.08569487638197228;  // std dev = 3.169, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.0032285789294928557;  // std dev = 8.344, 578.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=81 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1310305355994673;  // std dev = 31.354, 4,296.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,523 */
%   | | | else return 0.12840401420367725;  // std dev = 7.434, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18817590201092071;  // std dev = 3.982, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | | else return 0.28321915082126303;  // std dev = 4.015, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1126516696617361;  // std dev = 2.944, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.03777245938767898;  // std dev = 1.333, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06881141590896968;  // std dev = 3.422, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return -0.002832533804096876;  // std dev = 8.344, 578.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=81 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10747166181925538;  // std dev = 31.354, 4,296.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,523 */
%   | | | else return 0.10548161363288489;  // std dev = 7.434, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14549537107557964;  // std dev = 3.981, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | | else return 0.21851245310845355;  // std dev = 4.012, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(A, K) )
%   | | | then return -0.15990440829095437;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07697303294182385;  // std dev = 3.230, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.058427706873567575;  // std dev = 3.421, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return -0.0024858220048642973;  // std dev = 8.344, 578.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=81 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.37691640280860533;  // std dev = 1.790, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.6696733604765417;  // std dev = 0.178, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.08553793952615131;  // std dev = 32.136, 4,522.000 (wgt'ed) examples reached here.  /* #neg=2,926 #pos=1,596 */
%   | | | else return 0.13294338241248574;  // std dev = 5.625, 133.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=75 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.26103947306882647;  // std dev = 1.437, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.020178398889045684;  // std dev = 3.133, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.05458687801736629;  // std dev = 3.159, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return -0.0021821266412870586;  // std dev = 8.344, 578.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=81 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06966482214195334;  // std dev = 31.320, 4,291.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,521 */
%   | | | else return 0.06660829322982695;  // std dev = 7.516, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06715152900871332;  // std dev = 3.875, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return 0.13637353053572987;  // std dev = 4.080, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08232096534967687;  // std dev = 3.212, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.003953625335458121;  // std dev = 7.023, 409.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=58 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.016286284830010832;  // std dev = 5.626, 233.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=38 */
%   | | | else return -0.14892347720820862;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05526696117627383;  // std dev = 31.340, 4,296.000 (wgt'ed) examples reached here.  /* #neg=2,773 #pos=1,523 */
%   | | | else return 0.052810734957620335;  // std dev = 7.432, 243.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=85 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2862193659430673;  // std dev = 1.180, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.06613108195904052;  // std dev = 5.477, 127.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=71 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07926733179706193;  // std dev = 2.921, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.04727904171699665;  // std dev = 1.329, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005515090374314694;  // std dev = 7.034, 404.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=59 */
%   | | | else return 0.012538915404886622;  // std dev = 5.626, 238.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=38 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04356177885026974;  // std dev = 31.319, 4,291.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,521 */
%   | | | else return 0.041536117452919054;  // std dev = 7.516, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028497930541499992;  // std dev = 3.855, 61.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=29 */
%   | | | else return 0.08555839887548125;  // std dev = 4.078, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06850900403556624;  // std dev = 3.208, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.06710655051244163;  // std dev = 1.230, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004503284053761092;  // std dev = 7.000, 398.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=58 */
%   | | | else return 0.011645345221402386;  // std dev = 5.524, 237.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034153919249477645;  // std dev = 31.319, 4,291.000 (wgt'ed) examples reached here.  /* #neg=2,770 #pos=1,521 */
%   | | | else return 0.03259839341687596;  // std dev = 7.516, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.20877055061508498;  // std dev = 1.181, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.03486285274710758;  // std dev = 5.471, 127.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=71 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0678008572415439;  // std dev = 2.914, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.04278246651719366;  // std dev = 1.329, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006798139662686408;  // std dev = 7.027, 404.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=59 */
%   | | | else return 0.012040662312840669;  // std dev = 5.625, 238.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.066', 'seconds']
Refined model CLL: -0.621984


******************************************
Best model found
******************************************
Results 

CLL : -0.827376 

AUC ROC : 0.502875 

AUC PR : 0.605863 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 736.203 

Total Inference Time : 15.895565748214722 

Total revision time: 757.066176712036
Best scored revision CLL: -0.621984


Results 

CLL : -0.827376 

AUC ROC : 0.502875 

AUC PR : 0.605863 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 757.0938645000457 

Total Inference Time : 15.895565748214722 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.655
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '627', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 972.606
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5248156017661789;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.21251872768947347;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.025981102931679878;  // std dev = 6.320, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.008650607340314613;  // std dev = 6.183, 299.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=45 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18531381433799654;  // std dev = 34.987, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18814468574883586;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32642508647238366;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.4239539507393848;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1251709511484097;  // std dev = 3.522, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06706867881429689;  // std dev = 1.358, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06375712248345329;  // std dev = 3.666, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.00275778818184048;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15755993809157298;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.15998393097850783;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.534120515572284;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2942406602320242;  // std dev = 6.185, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11758850979361025;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07577885931481593;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0015266383760922176;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006674469001163017;  // std dev = 6.045, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13138693943771174;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1332651481244585;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20212945403825505;  // std dev = 4.463, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.28224134265339446;  // std dev = 4.465, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10178524896960804;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06638190800139854;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0011328940119343285;  // std dev = 7.986, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006072417511893017;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077373254799278;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1092304111483379;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1481350612845719;  // std dev = 4.459, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2235836561164053;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1084168561346937;  // std dev = 3.505, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06306934538156758;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.001559349600997091;  // std dev = 7.972, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005594846903039434;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08713668985477363;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08822164957638662;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3603916191563375;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12770255502460423;  // std dev = 6.152, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09320324852433878;  // std dev = 3.504, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05578200053681317;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.039093645265995076;  // std dev = 3.633, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0033564850525317504;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06969712076778058;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07053547393592109;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2706517024047069;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0962183703921016;  // std dev = 6.151, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.20344299934828533;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.017909971172172648;  // std dev = 3.404, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.033574674592250435;  // std dev = 3.633, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0029436121843295225;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05527176610939429;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05585303383419033;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04820778457932856;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11036898541756857;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07354843471739182;  // std dev = 3.499, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05557843176881287;  // std dev = 1.338, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0021368814170542247;  // std dev = 8.020, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.00549989769924524;  // std dev = 6.048, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.043539649342624144;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04395812818458403;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.21696934995608527;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05034145928307981;  // std dev = 6.140, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07602120341761279;  // std dev = 3.485, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07206549611297657;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.025309437371711437;  // std dev = 3.608, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0026748254451963763;  // std dev = 9.361, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034124401421931946;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.034406069258677396;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012537469792663436;  // std dev = 4.413, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07663647398831669;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(B, K) )
%   | | | then return -0.16630117092213564;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03828381771997174;  // std dev = 3.739, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0032778824165085214;  // std dev = 7.960, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006148909249531815;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.449', 'seconds']
Refined model CLL: -0.621627


******************************************
Best model found
******************************************
Results 

CLL : -0.825808 

AUC ROC : 0.506878 

AUC PR : 0.609612 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 972.606 

Total Inference Time : 20.828907012939453 

Total revision time: 999.3355167732238
Best scored revision CLL: -0.621627


Results 

CLL : -0.825808 

AUC ROC : 0.506878 

AUC PR : 0.609612 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 999.3632045612335 

Total Inference Time : 20.828907012939453 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.185
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '755', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 85.013
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5854216623722396;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.3396304165809891;  // std dev = 14.915, 891.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=429 */
%   | | | else return 0.30259337954395676;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.16926004621062346;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.06269438964496693;  // std dev = 2.676, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.49838075774401863;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.29307067657967045;  // std dev = 14.915, 891.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=429 */
%   | | | else return 0.261631808675212;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.14738209092488688;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.48767788391726297;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.05488995898782412;  // std dev = 2.676, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2454146792509128;  // std dev = 0.499, 917.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=444 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.6717691493310408;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2192721473492705;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.12619034151790243;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.3912569620992536;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04776959281898354;  // std dev = 2.676, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6575139689290808;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20330052055224293;  // std dev = 2.297, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.12719058032990746;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.1976782085486415;  // std dev = 14.997, 901.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=434 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return 0.20994701932049675;  // std dev = 2.294, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.07116102901876713;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.142662037458715;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04091167935293331;  // std dev = 2.671, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.5030855074110242;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15703649135749953;  // std dev = 2.288, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.15530604766756398;  // std dev = 14.913, 891.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=429 */
%   | | | else return 0.1384311922030841;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08588199409535564;  // std dev = 3.098, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.2489011232199321;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12618888273189866;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.03537200795189409;  // std dev = 2.671, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12045428754986119;  // std dev = 0.498, 917.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=444 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.421673180251186;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10827090857487208;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1388893130491351;  // std dev = 2.281, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.0444089992675453;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032671354885775834;  // std dev = 2.670, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.10146805955130087;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09221707281801854;  // std dev = 0.498, 917.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=444 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.32353317209202903;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0836971975908492;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.044401710817281066;  // std dev = 1.135, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.1976927838137398;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.08435544247693026;  // std dev = 3.091, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.026661945105139424;  // std dev = 2.669, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.33590930551812015;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.06892284501628301;  // std dev = 15.077, 913.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=440 */
%   | | | else return 0.08347147733808893;  // std dev = 2.601, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.09272067626662686;  // std dev = 2.280, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.02587245496997696;  // std dev = 2.391, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.023970781906162267;  // std dev = 2.670, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.09135370194415073;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05307797839108212;  // std dev = 0.498, 917.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=444 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.007218786585778077;  // std dev = 1.848, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.1383387894827749;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.021575673011635457;  // std dev = 1.129, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.17098891685149226;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05597107536689825;  // std dev = 3.088, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.01999122651874533;  // std dev = 2.667, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.25744443894958546;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.02751554283071749;  // std dev = 2.243, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.039723948873659;  // std dev = 15.133, 918.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=441 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.01749261664431695;  // std dev = 1.128, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.14872865377132707;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04432228785370777;  // std dev = 3.088, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.017032375326178847;  // std dev = 2.667, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.545', 'seconds']
Refined model CLL: -0.67513


******************************************
Best model found
******************************************
Results 

CLL : -0.605911 

AUC ROC : 0.544824 

AUC PR : 0.225198 

Precision : 0.333333 

Recall : 0.005164 

F1 : 0.010169 

Total Learning Time : 85.013 

Total Inference Time : 1.6607890129089355 

Total revision time: 88.79588060188294
Best scored revision CLL: -0.67513


Results 

CLL : -0.605911 

AUC ROC : 0.544824 

AUC PR : 0.225198 

Precision : 0.333333 

Recall : 0.005164 

F1 : 0.010169 

Total Learning Time : 88.82356838989259 

Total Inference Time : 1.6607890129089355 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.593
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '754', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 191.575
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3410972299289903;  // std dev = 0.500, 1,818.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=878 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.28672036367094095;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.5504566274072038;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.4581489350995113;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | | else return 0.04932540568774767;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0268236338946931;  // std dev = 3.412, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29431309379205395;  // std dev = 0.500, 1,818.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=878 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24811816884741356;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.4695284990836149;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.3927941835770484;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | | else return 0.04321433841444774;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1412071368117731;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.022691710215847167;  // std dev = 3.411, 84.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24511397722376863;  // std dev = 0.500, 1,818.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=878 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.20848477447886862;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.37799101181885536;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.32092546969114233;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | | else return 0.03768304809742577;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021628228782336254;  // std dev = 3.408, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.12508851746505215;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19788355855543668;  // std dev = 0.500, 1,818.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=878 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.17062637354018517;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.29148150967292424;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08230752683954079;  // std dev = 4.414, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.47024746299614845;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018895160016171305;  // std dev = 3.408, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.11203262661116704;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.4064836726811618;  // std dev = 2.703, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return 0.0326087283142403;  // std dev = 1.806, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.15264149377484348;  // std dev = 21.030, 1,772.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=850 */
%   | | | else return 0.15679600745799452;  // std dev = 3.954, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.2102429018579685;  // std dev = 3.228, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | | | else return 0.02143627762247374;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01647333421185432;  // std dev = 3.408, 83.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=14 */
%   | | | else return -0.10136573389864996;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12056776676492438;  // std dev = 0.499, 1,818.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=878 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.4343741508074199;  // std dev = 0.916, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1201210970732757;  // std dev = 3.950, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.049772068408158864;  // std dev = 4.380, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.3050950694729257;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12431524030104182;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.014957648080431459;  // std dev = 3.403, 84.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09228293702392697;  // std dev = 0.499, 1,818.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=878 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3296889761867741;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09150535098865355;  // std dev = 3.948, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.06460962026919721;  // std dev = 1.536, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.16616414761631063;  // std dev = 0.113, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.07830684075202038;  // std dev = 4.276, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.013025781618623408;  // std dev = 3.403, 84.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2717770374549742;  // std dev = 2.715, 37.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | | else return -0.10263872001228688;  // std dev = 1.657, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.08874616090281032;  // std dev = 3.037, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.0672772558631666;  // std dev = 21.173, 1,802.000 (wgt'ed) examples reached here.  /* #neg=934 #pos=868 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.05092670883225304;  // std dev = 1.533, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.1445453290142477;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.06366497476374587;  // std dev = 4.273, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.01132709715642346;  // std dev = 3.403, 84.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4249328168632076;  // std dev = 0.855, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.06688472537448034;  // std dev = 3.036, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05082853351094238;  // std dev = 21.018, 1,772.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=850 */
%   | | | else return 0.05118580831581122;  // std dev = 3.932, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.040019361995601695;  // std dev = 1.531, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.12767428430645325;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.05149000617444803;  // std dev = 4.271, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.00983752922910744;  // std dev = 3.403, 84.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.22404809463169142;  // std dev = 2.273, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return 0.07201090326510948;  // std dev = 1.858, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.2642962148849485;  // std dev = 0.842, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.1321188429652276;  // std dev = 1.620, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.038338610307539996;  // std dev = 21.018, 1,772.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=850 */
%   | | | else return 0.038861631395050875;  // std dev = 3.932, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.03220091364434458;  // std dev = 4.470, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | | | else return -0.016375970259994033;  // std dev = 3.090, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.389', 'seconds']
Refined model CLL: -0.670212


******************************************
Best model found
******************************************
Results 

CLL : -0.598866 

AUC ROC : 0.55993 

AUC PR : 0.244823 

Precision : 0.515152 

Recall : 0.02926 

F1 : 0.055375 

Total Learning Time : 191.575 

Total Inference Time : 2.282961845397949 

Total revision time: 196.45130922126768
Best scored revision CLL: -0.670212


Results 

CLL : -0.598866 

AUC ROC : 0.55993 

AUC PR : 0.244823 

Precision : 0.515152 

Recall : 0.02926 

F1 : 0.055375 

Total Learning Time : 196.47899700927732 

Total Inference Time : 2.282961845397949 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.078
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '784', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 416.196
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3389607432175884;  // std dev = 0.500, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4020085842223182;  // std dev = 3.760, 57.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=31 */
%   | | | else return 0.5914822684328459;  // std dev = 3.425, 60.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.3224346493852258;  // std dev = 4.571, 84.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | | | else return 0.07053831563048525;  // std dev = 4.348, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.05422736647206124;  // std dev = 4.010, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2925033830591288;  // std dev = 0.500, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3457246122316195;  // std dev = 3.760, 57.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=31 */
%   | | | else return 0.5033699069850941;  // std dev = 3.425, 60.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2784902739123315;  // std dev = 4.571, 84.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | | | else return 0.06173293136347043;  // std dev = 4.348, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.04749724519294196;  // std dev = 4.010, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.7628802660651215;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24196208761272892;  // std dev = 25.963, 2,701.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,294 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6141250992193825;  // std dev = 0.930, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.3229771160987808;  // std dev = 4.971, 108.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.23264591820802713;  // std dev = 4.571, 84.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | | | else return 0.053662150526039655;  // std dev = 4.348, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03252062660511428;  // std dev = 4.021, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
%   | | | else return -0.1486371770520056;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19680512351076954;  // std dev = 0.499, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.21030143914743601;  // std dev = 3.725, 57.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=31 */
%   | | | else return 0.3253413258454542;  // std dev = 3.416, 60.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18869289576980003;  // std dev = 4.571, 84.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | | | else return 0.046364595977996;  // std dev = 4.348, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11444843601459766;  // std dev = 0.017, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.03842597189792525;  // std dev = 4.003, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15515872003083747;  // std dev = 0.499, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.42004204009447654;  // std dev = 0.926, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1867533525359901;  // std dev = 4.942, 108.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06493801549812102;  // std dev = 5.833, 174.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=50 */
%   | | | else return 0.25040941307901066;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10335274187220964;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.03325684098217625;  // std dev = 4.003, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12021822138696987;  // std dev = 0.499, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3165215149262753;  // std dev = 0.927, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.14105463996205944;  // std dev = 4.940, 108.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12376114869659993;  // std dev = 4.553, 84.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=39 */
%   | | | else return 0.03037573437910196;  // std dev = 4.348, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0941613899168277;  // std dev = 0.014, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.02867363516754912;  // std dev = 4.003, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3002445840662213;  // std dev = 3.018, 50.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   | | | else return -0.06605103174112753;  // std dev = 2.044, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.08996019127122702;  // std dev = 25.700, 2,647.000 (wgt'ed) examples reached here.  /* #neg=1,381 #pos=1,266 */
%   | | | else return 0.10627017611230433;  // std dev = 4.940, 108.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=67 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04108200205404636;  // std dev = 5.822, 174.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=50 */
%   | | | else return 0.16476144712086266;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.019832715285057534;  // std dev = 4.002, 110.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=20 */
%   | | | else return -0.13783117004128015;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0699174392179717;  // std dev = 0.499, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2930559268154942;  // std dev = 0.858, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07455075646734703;  // std dev = 4.934, 109.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03365609769648633;  // std dev = 5.821, 174.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=50 */
%   | | | else return 0.12463634671778145;  // std dev = 2.377, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08732623145077574;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.022929710303039284;  // std dev = 3.998, 102.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05290477409441721;  // std dev = 0.499, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.018329942379264854;  // std dev = 3.670, 57.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=31 */
%   | | | else return 0.11534679191600664;  // std dev = 3.401, 60.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=44 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.009553754415788655;  // std dev = 5.552, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
%   | | | else return 0.2541524125599545;  // std dev = 2.179, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014200119678018378;  // std dev = 4.348, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   | | | else return -0.1238734239395651;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.039915085004018455;  // std dev = 0.499, 2,710.000 (wgt'ed) examples reached here.  /* #neg=1,407 #pos=1,303 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21261273231549166;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.040408452366581665;  // std dev = 4.924, 109.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=68 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.007874229937479736;  // std dev = 5.552, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
%   | | | else return 0.19399664502047714;  // std dev = 2.175, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011933900350312207;  // std dev = 4.348, 113.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=24 */
%   | | | else return -0.11111660226505057;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.523', 'seconds']
Refined model CLL: -0.673584


******************************************
Best model found
******************************************
Results 

CLL : -0.601237 

AUC ROC : 0.558069 

AUC PR : 0.243835 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 416.196 

Total Inference Time : 3.3956706523895264 

Total revision time: 422.7460458984375
Best scored revision CLL: -0.673584


Results 

CLL : -0.601237 

AUC ROC : 0.558069 

AUC PR : 0.243835 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 422.77373368644714 

Total Inference Time : 3.3956706523895264 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.657
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '804', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 461.887
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.343426712877285;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4334914008529373;  // std dev = 4.223, 73.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   | | | else return 0.601392178342756;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=55 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23950486730290235;  // std dev = 5.276, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   | | | else return 0.050456627407203795;  // std dev = 4.922, 156.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04286231089568992;  // std dev = 4.862, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2962857861791287;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3721579452765602;  // std dev = 4.223, 73.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   | | | else return 0.5115202733759818;  // std dev = 3.758, 74.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=55 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.08647904907816988;  // std dev = 6.708, 246.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=60 */
%   | | | else return 0.36213867553333684;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0375641892270407;  // std dev = 4.862, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24666272911555953;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5901118780923934;  // std dev = 0.917, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.34209178246907174;  // std dev = 5.567, 138.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=89 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18424184485260728;  // std dev = 5.243, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   | | | else return 0.032956615587631785;  // std dev = 4.922, 156.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.09417001163726826;  // std dev = 0.970, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.038385889363429265;  // std dev = 4.756, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1990191079128644;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.22890193888226404;  // std dev = 4.210, 73.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   | | | else return 0.32533983304524716;  // std dev = 3.743, 74.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=55 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05859869527126569;  // std dev = 6.626, 248.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=60 */
%   | | | else return 0.3048109280726241;  // std dev = 2.585, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.028492085456206143;  // std dev = 4.922, 156.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
%   | | | else return -0.11490721640428223;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15669582109228342;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.17455764599365667;  // std dev = 4.042, 74.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=47 */
%   | | | else return 0.2467041322450284;  // std dev = 3.921, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04999194111918494;  // std dev = 6.637, 246.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=60 */
%   | | | else return 0.2579374050986082;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02152055184065622;  // std dev = 4.857, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
%   | | | else return -0.10372924598368698;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12124655822399834;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12249171593729662;  // std dev = 4.199, 73.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=42 */
%   | | | else return 0.19407580232650748;  // std dev = 3.740, 74.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=55 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03945032197389437;  // std dev = 6.584, 248.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=60 */
%   | | | else return 0.23944721012815084;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11387392883386017;  // std dev = 0.971, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.02681603049444434;  // std dev = 4.804, 147.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=29 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0927414494684252;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3037672403521594;  // std dev = 0.900, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.10752532379633623;  // std dev = 5.532, 138.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=89 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03377474395727836;  // std dev = 6.593, 246.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=60 */
%   | | | else return 0.19455407274567513;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09587089284973802;  // std dev = 0.970, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.0187305590993354;  // std dev = 4.750, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07042064568801659;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.23332269395580674;  // std dev = 0.902, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.08127871903203475;  // std dev = 5.533, 138.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=89 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.025757121296399385;  // std dev = 6.553, 248.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=60 */
%   | | | else return 0.18150451831600048;  // std dev = 2.580, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010739207252432615;  // std dev = 4.914, 156.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
%   | | | else return -0.09517948269474957;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05323001690725704;  // std dev = 0.500, 3,600.000 (wgt'ed) examples reached here.  /* #neg=1,853 #pos=1,747 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03790565134657127;  // std dev = 4.015, 74.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=47 */
%   | | | else return 0.10073874260156959;  // std dev = 3.911, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.021507268297113934;  // std dev = 6.568, 246.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=60 */
%   | | | else return 0.14345302753539294;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08661824336807383;  // std dev = 0.970, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.012818503792655455;  // std dev = 4.749, 149.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.554846213520717;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.315876018282534;  // std dev = 0.908, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03839334123961237;  // std dev = 29.925, 3,586.000 (wgt'ed) examples reached here.  /* #neg=1,852 #pos=1,734 */
%   | | | else return 0.048624836054103254;  // std dev = 5.602, 144.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.04761470004297731;  // std dev = 2.210, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.1170693564510418;  // std dev = 0.984, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.06636425747988967;  // std dev = 2.822, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.017079594751229152;  // std dev = 7.724, 350.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=84 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.372', 'seconds']
Refined model CLL: -0.672278


******************************************
Best model found
******************************************
Results 

CLL : -0.605584 

AUC ROC : 0.55863 

AUC PR : 0.24798 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 461.887 

Total Inference Time : 3.021245002746582 

Total revision time: 468.68096575164793
Best scored revision CLL: -0.672278


Results 

CLL : -0.605584 

AUC ROC : 0.55863 

AUC PR : 0.24798 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 468.7086535396576 

Total Inference Time : 3.021245002746582 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.506
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '815', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 602.841
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3073171177232837;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881261;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2306693971558717;  // std dev = 4.657, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30994712392327534;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5489266171835913;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19885698018452488;  // std dev = 6.327, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.051424342215598676;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508106;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30683567789883026;  // std dev = 4.117, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07778638872937292;  // std dev = 2.877, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1204890902009401;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.145071006583828;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04162130287751093;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07465821730094525;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510973;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2731581811117203;  // std dev = 4.079, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.09636507716121291;  // std dev = 2.956, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0918560576787553;  // std dev = 33.093, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10726490453501808;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0347187433283045;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.015948249735960773;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07034554590805396;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05866290254078262;  // std dev = 4.649, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12268596318200531;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02659322878595531;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188575;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302784;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05317285072321963;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.22595326032103627;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05856469923939453;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02242976577421198;  // std dev = 7.498, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13251849744708535;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009773119313054678;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08564686162744155;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040082084600436746;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.20195078165529434;  // std dev = 1.231, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04257167273353962;  // std dev = 6.196, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1322594524578573;  // std dev = 2.865, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015419984062496103;  // std dev = 7.510, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06114754146632822;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.009433016671144396;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.421', 'seconds']
Refined model CLL: -0.672708


******************************************
Best model found
******************************************
Results 

CLL : -0.602772 

AUC ROC : 0.559548 

AUC PR : 0.24702 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 602.841 

Total Inference Time : 4.107674598693848 

Total revision time: 611.7202614517212
Best scored revision CLL: -0.672708


Results 

CLL : -0.602772 

AUC ROC : 0.559548 

AUC PR : 0.24702 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 611.7479492397308 

Total Inference Time : 4.107674598693848 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.345
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '613', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 164.606
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.23469214497605076;  // std dev = 15.106, 972.000 (wgt'ed) examples reached here.  /* #neg=606 #pos=366 */
%   | | | else return 0.28672036367093967;  // std dev = 4.140, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5664822684328457;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.08144990597329828;  // std dev = 4.227, 103.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=23 */
%   | | | else return 0.10814893509951237;  // std dev = 3.240, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.20365688664848772;  // std dev = 15.106, 972.000 (wgt'ed) examples reached here.  /* #neg=606 #pos=366 */
%   | | | else return 0.24811816884741375;  // std dev = 4.140, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4827669997975616;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.12377316266746144;  // std dev = 3.798, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.0016099569583634533;  // std dev = 2.254, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06127635777871765;  // std dev = 0.958, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.06780300313171314;  // std dev = 2.930, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17257110219319977;  // std dev = 15.106, 972.000 (wgt'ed) examples reached here.  /* #neg=606 #pos=366 */
%   | | | else return 0.20848477447886976;  // std dev = 4.140, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.48625354685042926;  // std dev = 1.267, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.3513452802215239;  // std dev = 1.819, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.02240838723242047;  // std dev = 0.946, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.12184491294806307;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.07383796943409533;  // std dev = 4.437, 109.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   | | | else return 0.05884642250175489;  // std dev = 2.930, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14311966851484498;  // std dev = 15.106, 972.000 (wgt'ed) examples reached here.  /* #neg=606 #pos=366 */
%   | | | else return 0.17062637354018548;  // std dev = 4.140, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.45667219442193047;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2932100847754078;  // std dev = 2.215, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return -0.019838236126617257;  // std dev = 0.946, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.10940224570505017;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.054941512622298856;  // std dev = 4.218, 103.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=23 */
%   | | | else return 0.06771271588651946;  // std dev = 3.236, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.5717910973027452;  // std dev = 0.194, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.0026395858181773478;  // std dev = 2.805, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.12238515396410271;  // std dev = 15.509, 1,022.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=398 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return -0.01759803788688805;  // std dev = 0.946, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.09919365387126453;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.05438012727923684;  // std dev = 4.436, 109.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   | | | else return 0.04278933779848822;  // std dev = 2.930, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09576020621691836;  // std dev = 15.126, 973.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=370 */
%   | | | else return 0.06968029550662971;  // std dev = 3.983, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2634690645613384;  // std dev = 1.252, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.15135036314077532;  // std dev = 1.798, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.07965282888769876;  // std dev = 3.790, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return -0.024695329433413783;  // std dev = 2.256, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.17005582476674141;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03297224289348037;  // std dev = 3.064, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07588080434772428;  // std dev = 15.126, 973.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=370 */
%   | | | else return 0.05467418355279448;  // std dev = 3.982, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20094880717506297;  // std dev = 1.252, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.11502243671496686;  // std dev = 1.799, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.017670383127311673;  // std dev = 0.944, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.0940859433375171;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03897588817915749;  // std dev = 4.426, 109.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   | | | else return 0.03323186748301093;  // std dev = 2.924, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05694073690240422;  // std dev = 15.080, 972.000 (wgt'ed) examples reached here.  /* #neg=606 #pos=366 */
%   | | | else return 0.07963093673030493;  // std dev = 4.148, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15551664072042481;  // std dev = 1.252, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.08785567810956058;  // std dev = 1.800, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.015703158602315487;  // std dev = 0.944, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.08637169484394304;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03269156858905546;  // std dev = 4.426, 109.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   | | | else return 0.028133294494320164;  // std dev = 2.924, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04693939599599748;  // std dev = 15.126, 973.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=370 */
%   | | | else return 0.02629940208968706;  // std dev = 3.974, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12219736794422326;  // std dev = 1.253, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.06747158819401636;  // std dev = 1.801, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return -0.013976528268694631;  // std dev = 0.944, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.07979864215261859;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.027308646090676486;  // std dev = 4.425, 109.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=26 */
%   | | | else return 0.023734579066377836;  // std dev = 2.924, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.37935219877142246;  // std dev = 0.197, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.03399149540032225;  // std dev = 0.484, 1,062.000 (wgt'ed) examples reached here.  /* #neg=653 #pos=409 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.05052826111625294;  // std dev = 3.787, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return -0.03586673391599785;  // std dev = 2.256, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.15524211044546973;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.020448330474081625;  // std dev = 3.057, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.434', 'seconds']
Refined model CLL: -0.638876


******************************************
Best model found
******************************************
Results 

CLL : -0.681236 

AUC ROC : 0.537748 

AUC PR : 0.444453 

Precision : 0.555556 

Recall : 0.060241 

F1 : 0.108696 

Total Learning Time : 164.606 

Total Inference Time : 5.056448221206665 

Total revision time: 171.99902298545837
Best scored revision CLL: -0.638876


Results 

CLL : -0.681236 

AUC ROC : 0.537748 

AUC PR : 0.444453 

Precision : 0.555556 

Recall : 0.060241 

F1 : 0.108696 

Total Learning Time : 172.026710773468 

Total Inference Time : 5.056448221206665 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.905
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '730', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 973.873
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.24870085277958212;  // std dev = 0.488, 2,138.000 (wgt'ed) examples reached here.  /* #neg=1,303 #pos=835 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.05457750652808276;  // std dev = 5.150, 168.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=33 */
%   | | | else return -0.023206997103877528;  // std dev = 2.484, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.09115864383737582;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.42155936158739954;  // std dev = 2.768, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return 0.07920331142105315;  // std dev = 2.983, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else return 0.21764727243339196;  // std dev = 0.488, 2,066.000 (wgt'ed) examples reached here.  /* #neg=1,255 #pos=811 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.047803085394692454;  // std dev = 5.150, 168.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=33 */
%   | | | else return -0.020405435739439686;  // std dev = 2.484, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.07969565114714434;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18387369887492383;  // std dev = 0.488, 2,148.000 (wgt'ed) examples reached here.  /* #neg=1,304 #pos=844 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.004611418738832508;  // std dev = 3.461, 100.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=14 */
%   | | | else return 0.0503767527924812;  // std dev = 4.549, 127.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=26 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06906228405471192;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1518638414143928;  // std dev = 0.488, 2,148.000 (wgt'ed) examples reached here.  /* #neg=1,304 #pos=844 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.012636692225029552;  // std dev = 5.297, 202.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=34 */
%   | | | else return 0.10365463169816348;  // std dev = 2.136, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05937503175768698;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.5264365874173688;  // std dev = 0.903, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.06187691255909008;  // std dev = 3.889, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | else return 0.12319429691641741;  // std dev = 0.488, 2,066.000 (wgt'ed) examples reached here.  /* #neg=1,255 #pos=811 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.03515874214962342;  // std dev = 5.149, 168.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=33 */
%   | | | else return -0.024004439417685805;  // std dev = 2.469, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.05068981490022861;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22598742039883576;  // std dev = 2.753, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return -0.04979851333769908;  // std dev = 2.593, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else return 0.0988571873096162;  // std dev = 0.488, 2,075.000 (wgt'ed) examples reached here.  /* #neg=1,260 #pos=815 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.007443743531544176;  // std dev = 5.291, 202.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=34 */
%   | | | else return 0.09400102431749899;  // std dev = 2.136, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04301100130933484;  // std dev = 4.290, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07727282954534292;  // std dev = 0.487, 2,148.000 (wgt'ed) examples reached here.  /* #neg=1,304 #pos=844 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03946164139054473;  // std dev = 4.887, 139.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=31 */
%   | | | else return -0.04656370431305215;  // std dev = 2.483, 64.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.036076138907544304;  // std dev = 4.551, 127.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=26 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.43867877899848223;  // std dev = 13.320, 997.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=761 */
%   | | | else return -0.28473950558192695;  // std dev = 5.956, 1,145.000 (wgt'ed) examples reached here.  /* #neg=1,110 #pos=35 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.12094374265540689;  // std dev = 2.806, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.0802070333661877;  // std dev = 5.444, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.11436963620201557;  // std dev = 4.813, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
%   | | | else return -0.22825625139131417;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.5210469812562152;  // std dev = 1.310, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.33728049849358593;  // std dev = 13.316, 997.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=761 */
%   | | | else return -0.22725902427182113;  // std dev = 5.910, 1,145.000 (wgt'ed) examples reached here.  /* #neg=1,110 #pos=35 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.09659601978250336;  // std dev = 2.806, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.06487446208240552;  // std dev = 5.437, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.34030312914813043;  // std dev = 0.706, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.42499102155663415;  // std dev = 2.004, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01409392183485528;  // std dev = 4.274, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.2542031337890381;  // std dev = 13.314, 996.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=760 */
%   | | | else return -0.186992988563775;  // std dev = 5.974, 1,157.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=37 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.07005323187290201;  // std dev = 5.402, 129.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=51 */
%   | | | else return -0.043603215700091694;  // std dev = 2.583, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.26428247370047886;  // std dev = 0.697, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.32128785524896025;  // std dev = 2.001, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.011676864210808118;  // std dev = 4.274, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | | else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.531', 'seconds']
Refined model CLL: -0.439273


******************************************
Best model found
******************************************
Results 

CLL : -0.436966 

AUC ROC : 0.906985 

AUC PR : 0.816078 

Precision : 0.807468 

Recall : 0.926372 

F1 : 0.862843 

Total Learning Time : 973.873 

Total Inference Time : 11.858440160751343 

Total revision time: 988.7417739658356
Best scored revision CLL: -0.439273


Results 

CLL : -0.436966 

AUC ROC : 0.906985 

AUC PR : 0.816078 

Precision : 0.807468 

Recall : 0.926372 

F1 : 0.862843 

Total Learning Time : 988.7694617538452 

Total Inference Time : 11.858440160751343 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.366
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '638', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 1011.508
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2511714729198221;  // std dev = 0.488, 3,239.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,273 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.059083514538763975;  // std dev = 5.862, 214.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=43 */
%   | | | else return -0.04185106490048767;  // std dev = 2.846, 90.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=9 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0695775065280825;  // std dev = 5.402, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6914111370127703;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.16883049185148047;  // std dev = 4.581, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | else return 0.21695143297785122;  // std dev = 0.488, 3,131.000 (wgt'ed) examples reached here.  /* #neg=1,903 #pos=1,228 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.05173801818175256;  // std dev = 5.862, 214.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=43 */
%   | | | else return -0.036832517440074916;  // std dev = 2.846, 90.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06089502525107593;  // std dev = 5.402, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.37587991895584894;  // std dev = 3.401, 49.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | | | else return 0.07098195689182887;  // std dev = 3.628, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else return 0.18343584496611146;  // std dev = 0.488, 3,122.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=1,224 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1387292226118388;  // std dev = 2.647, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.0981544385376017;  // std dev = 0.968, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0155409831868547;  // std dev = 6.177, 278.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=46 */
%   | | | else return 0.042729613438385286;  // std dev = 5.055, 164.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=32 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.5353442165591005;  // std dev = 1.294, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.10720950938053507;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | else return 0.15153565945760186;  // std dev = 0.488, 3,122.000 (wgt'ed) examples reached here.  /* #neg=1,898 #pos=1,224 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.041727112475506485;  // std dev = 5.783, 208.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=42 */
%   | | | else return -0.03299027744570283;  // std dev = 2.996, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04928258084579091;  // std dev = 5.387, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.11535199135780193;  // std dev = 0.027, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12297405995091479;  // std dev = 0.487, 3,239.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,273 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03603460826770178;  // std dev = 5.783, 208.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=42 */
%   | | | else return -0.029134551099182168;  // std dev = 2.995, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04247844687409619;  // std dev = 5.387, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.10409757304961344;  // std dev = 0.025, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.24472778301356896;  // std dev = 3.451, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | | else return -0.022247050376301668;  // std dev = 3.185, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else return 0.097888143353038;  // std dev = 0.488, 3,131.000 (wgt'ed) examples reached here.  /* #neg=1,903 #pos=1,228 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10831008943957482;  // std dev = 2.639, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.09273290160444993;  // std dev = 0.968, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007397911664356678;  // std dev = 6.169, 278.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=46 */
%   | | | else return 0.029575289437515483;  // std dev = 5.038, 164.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.25067019273771557;  // std dev = 3.013, 40.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=24 */
%   | | | else return -0.003454217940751542;  // std dev = 3.799, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04289044899686603;  // std dev = 4.464, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | | | else return 0.07809629529327694;  // std dev = 26.893, 3,031.000 (wgt'ed) examples reached here.  /* #neg=1,839 #pos=1,192 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.026912930247640812;  // std dev = 5.854, 214.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=43 */
%   | | | else return -0.029080161897076316;  // std dev = 2.849, 90.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03382314743496799;  // std dev = 5.375, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.0965993882212713;  // std dev = 0.043, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0603448913956257;  // std dev = 0.487, 3,239.000 (wgt'ed) examples reached here.  /* #neg=1,966 #pos=1,273 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0029569914839962636;  // std dev = 5.855, 251.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=42 */
%   | | | else return 0.0630309909161704;  // std dev = 2.841, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.028837139579469345;  // std dev = 5.374, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.0885013907004316;  // std dev = 0.039, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.43163911765824264;  // std dev = 16.212, 1,516.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=1,167 */
%   | | | else return -0.29968980285941277;  // std dev = 7.182, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,674 #pos=50 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.17212390061217386;  // std dev = 3.013, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | | else return 0.04951021606958068;  // std dev = 6.433, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09051128783535341;  // std dev = 5.738, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
%   | | | else return -0.17815583084377942;  // std dev = 0.227, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.14741736238835915;  // std dev = 0.824, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.24267018933898768;  // std dev = 2.100, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3305530056722887;  // std dev = 16.199, 1,516.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=1,167 */
%   | | | else return -0.23789770686124606;  // std dev = 7.108, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,674 #pos=50 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.13565987808623645;  // std dev = 3.014, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | | else return 0.03984244404024103;  // std dev = 6.429, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.3236951977845146;  // std dev = 2.348, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.42205592460303576;  // std dev = 1.566, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01789794969141575;  // std dev = 5.085, 159.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=33 */
%   | | | else return -0.09922513080357429;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.232', 'seconds']
Refined model CLL: -0.473498


******************************************
Best model found
******************************************
Results 

CLL : -0.482416 

AUC ROC : 0.89765 

AUC PR : 0.817707 

Precision : 0.814681 

Recall : 0.906292 

F1 : 0.858048 

Total Learning Time : 1011.508 

Total Inference Time : 12.0940420627594 

Total revision time: 1027.0668081512451
Best scored revision CLL: -0.473498


Results 

CLL : -0.482416 

AUC ROC : 0.89765 

AUC PR : 0.817707 

Precision : 0.814681 

Recall : 0.906292 

F1 : 0.858048 

Total Learning Time : 1027.0944959392548 

Total Inference Time : 12.0940420627594 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.176
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '664', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 774.9159999999999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.19408643509951198;  // std dev = 5.344, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   | | else return 0.2524948862255254;  // std dev = 0.489, 4,174.000 (wgt'ed) examples reached here.  /* #neg=2,528 #pos=1,646 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.01231738614401136;  // std dev = 4.665, 193.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=25 */
%   | | | else return 0.04398964306411339;  // std dev = 5.848, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.056305617127161416;  // std dev = 5.872, 217.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=43 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.38927253972272197;  // std dev = 3.882, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | | else return 0.06948959650536854;  // std dev = 3.861, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | else return 0.21939506298263867;  // std dev = 0.489, 4,179.000 (wgt'ed) examples reached here.  /* #neg=2,530 #pos=1,649 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.00573401371785065;  // std dev = 6.765, 359.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=54 */
%   | | | else return 0.07607730359663009;  // std dev = 3.192, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04931239507125751;  // std dev = 5.872, 217.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1850273625041336;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,618 #pos=1,706 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11949731777655782;  // std dev = 3.068, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.09768961316724026;  // std dev = 0.969, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008190691643808893;  // std dev = 6.856, 356.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=56 */
%   | | | else return 0.027232500204878014;  // std dev = 5.738, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.46456488562106224;  // std dev = 1.915, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.10468061921636734;  // std dev = 5.344, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   | | else return 0.1525806048690464;  // std dev = 0.488, 4,174.000 (wgt'ed) examples reached here.  /* #neg=2,528 #pos=1,646 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10351398549260056;  // std dev = 3.067, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return -0.08583091018367209;  // std dev = 0.970, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007148824658591938;  // std dev = 6.856, 356.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=56 */
%   | | | else return 0.02380767104339974;  // std dev = 5.738, 231.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=40 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12359743156219748;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,618 #pos=1,706 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return -0.016608914572631344;  // std dev = 4.658, 193.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=25 */
%   | | | else return 0.030934476897753815;  // std dev = 5.842, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.037624969909451016;  // std dev = 5.848, 217.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=43 */
%   | | | else return -0.11600117060436838;  // std dev = 0.047, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.23830228966463823;  // std dev = 3.894, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | | | else return -0.004395684328640766;  // std dev = 4.026, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.0345554531970481;  // std dev = 5.046, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return 0.10035090408769273;  // std dev = 31.139, 4,053.000 (wgt'ed) examples reached here.  /* #neg=2,447 #pos=1,606 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.0020238051502730996;  // std dev = 6.751, 359.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=54 */
%   | | | else return 0.06641586034404658;  // std dev = 3.194, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.03249633726919002;  // std dev = 5.848, 217.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=43 */
%   | | | else return -0.10463686251651672;  // std dev = 0.042, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07758427744094502;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,618 #pos=1,706 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.020367927992421275;  // std dev = 6.607, 304.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=53 */
%   | | | else return -0.029220376827788202;  // std dev = 3.479, 115.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=14 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.027961946807134347;  // std dev = 5.847, 217.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=43 */
%   | | | else return -0.09524009276148873;  // std dev = 0.039, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060570465305813774;  // std dev = 0.488, 4,324.000 (wgt'ed) examples reached here.  /* #neg=2,618 #pos=1,706 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10915955034026908;  // std dev = 3.049, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return -0.11429683976308881;  // std dev = 0.983, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.001151428556830337;  // std dev = 6.809, 362.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=55 */
%   | | | else return 0.01727873997557178;  // std dev = 5.726, 220.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.4085904466517407;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21065464817670143;  // std dev = 1.849, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else return 0.045818670316525575;  // std dev = 0.488, 4,302.000 (wgt'ed) examples reached here.  /* #neg=2,613 #pos=1,689 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.09428845377843988;  // std dev = 3.046, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return -0.09990991205493345;  // std dev = 0.982, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.0010023236805104842;  // std dev = 6.809, 362.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=55 */
%   | | | else return 0.014847783865264464;  // std dev = 5.725, 220.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.03176287496876001;  // std dev = 30.661, 3,975.000 (wgt'ed) examples reached here.  /* #neg=2,425 #pos=1,550 */
%   | | | else return 0.0370332184351842;  // std dev = 7.323, 340.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=74 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.14490928410342305;  // std dev = 3.707, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return 0.03444150759241211;  // std dev = 7.253, 271.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=84 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06618472016784635;  // std dev = 6.419, 231.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=62 */
%   | | | else return -0.13161772344679395;  // std dev = 1.465, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.4715744962343853;  // std dev = 2.041, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return -0.08929269262278716;  // std dev = 0.050, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.340', 'seconds']
Refined model CLL: -0.638124


******************************************
Best model found
******************************************
Results 

CLL : -0.677793 

AUC ROC : 0.5448 

AUC PR : 0.461318 

Precision : 1.0 

Recall : 0.002677 

F1 : 0.00534 

Total Learning Time : 774.9159999999999 

Total Inference Time : 5.812520742416382 

Total revision time: 785.1078886909485
Best scored revision CLL: -0.638124


Results 

CLL : -0.677793 

AUC ROC : 0.5448 

AUC PR : 0.461318 

Precision : 1.0 

Recall : 0.002677 

F1 : 0.00534 

Total Learning Time : 785.1355764789581 

Total Inference Time : 5.812520742416382 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.375
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '695', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 959.253
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4195923898729339;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.09916548493374269;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1930767336437534;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.2183083520155745;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.040981177934432636;  // std dev = 7.595, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.017515285900006304;  // std dev = 3.964, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.046883032432784924;  // std dev = 6.526, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14608236020820276;  // std dev = 0.034, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.184422296075819;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12449891425525049;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0785149839589294;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05169279535965894;  // std dev = 3.644, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.015555749460753379;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15228347893206567;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10795877819545847;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06878481240023598;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.044789032618513996;  // std dev = 3.643, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01357794599252068;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1233203130383196;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.003901402498976984;  // std dev = 7.684, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08389934956363368;  // std dev = 3.724, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0345904071729829;  // std dev = 6.515, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.13369198632121215;  // std dev = 0.058, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6611886835545965;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.30427874759082574;  // std dev = 2.171, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.07338671792618257;  // std dev = 5.972, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.09744851023305241;  // std dev = 35.281, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.09443091694744633;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07921262741394473;  // std dev = 1.358, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.004633489907667251;  // std dev = 7.762, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025439647177036066;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2698901933150667;  // std dev = 4.251, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.03737075071591235;  // std dev = 4.477, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04577476453624738;  // std dev = 5.801, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.07769929370610822;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08857452431773036;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06330539417298213;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.003484304243312581;  // std dev = 7.765, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02042060796691267;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.24360602527536918;  // std dev = 3.691, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.012363345739715198;  // std dev = 4.937, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else return 0.06007199041854419;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.20015221020587456;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.010972919460267138;  // std dev = 3.387, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.003023082679504911;  // std dev = 7.765, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017631057937394137;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23332808808107217;  // std dev = 3.681, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.02038607440448068;  // std dev = 4.949, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.016964670913976108;  // std dev = 5.698, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.04719805137416672;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.07045345831182176;  // std dev = 3.474, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0622832148360588;  // std dev = 1.335, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.0026220208841866576;  // std dev = 7.765, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01519183857021899;  // std dev = 6.407, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030773488493489577;  // std dev = 34.193, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04397188158206497;  // std dev = 8.392, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11366624691494612;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036495907147396506;  // std dev = 8.105, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06538237155045808;  // std dev = 7.108, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10238925943618085;  // std dev = 1.687, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.46098134944389446;  // std dev = 2.575, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.12574841789649327;  // std dev = 0.096, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.364', 'seconds']
Refined model CLL: -0.639165


******************************************
Best model found
******************************************
Results 

CLL : -0.677954 

AUC ROC : 0.543545 

AUC PR : 0.457728 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 959.253 

Total Inference Time : 6.696067810058594 

Total revision time: 971.5962543277741
Best scored revision CLL: -0.639165


Results 

CLL : -0.677954 

AUC ROC : 0.543545 

AUC PR : 0.457728 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 971.6239421157837 

Total Inference Time : 6.696067810058594 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.317
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '539', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 572.9159999999999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2294400337362356;  // std dev = 0.483, 1,247.000 (wgt'ed) examples reached here.  /* #neg=784 #pos=463 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.06085163780221508;  // std dev = 3.458, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.0072356802851030666;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.19915451986934926;  // std dev = 0.483, 1,247.000 (wgt'ed) examples reached here.  /* #neg=784 #pos=463 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.05328156203562089;  // std dev = 3.458, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.16653882456488167;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.006357166156836994;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.16889822831206638;  // std dev = 0.483, 1,247.000 (wgt'ed) examples reached here.  /* #neg=784 #pos=463 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.04638253292491396;  // std dev = 3.458, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.1420942428155646;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.00558907352359072;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.14026160197961457;  // std dev = 0.483, 1,247.000 (wgt'ed) examples reached here.  /* #neg=784 #pos=463 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0401674520627277;  // std dev = 3.458, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.11914890490746421;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.004916680419848607;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.11441055016444605;  // std dev = 0.483, 1,247.000 (wgt'ed) examples reached here.  /* #neg=784 #pos=463 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.034625581674887045;  // std dev = 3.458, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.09841340278401871;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.004327415213389085;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09197068258268899;  // std dev = 0.483, 1,247.000 (wgt'ed) examples reached here.  /* #neg=784 #pos=463 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.029728186880878468;  // std dev = 3.458, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.08026654944252264;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.003810501673426377;  // std dev = 0.341, 52.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.7017958819479717;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.04820411805202829;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.07095092706691919;  // std dev = 0.483, 1,219.000 (wgt'ed) examples reached here.  /* #neg=769 #pos=450 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.08751191568902388;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.046336018746951216;  // std dev = 4.035, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | | else return 0.0020279441664727295;  // std dev = 2.454, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4595770471527382;  // std dev = 9.807, 552.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=424 */
%   | | | else return -0.26780173401704777;  // std dev = 4.955, 687.000 (wgt'ed) examples reached here.  /* #neg=662 #pos=25 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return -0.006406298301574012;  // std dev = 3.635, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return -0.07081955092852821;  // std dev = 2.122, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then return 0.6867381088932214;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.013751106147816113;  // std dev = 0.396, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.3549011314824446;  // std dev = 9.793, 552.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=424 */
%   | | | else return -0.21453355331143018;  // std dev = 4.936, 687.000 (wgt'ed) examples reached here.  /* #neg=662 #pos=25 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.061264005524586794;  // std dev = 3.589, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return 0.10781216364096873;  // std dev = 2.101, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | then return 0.5245241422237354;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.011693180388187126;  // std dev = 0.396, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.2688271328516656;  // std dev = 9.753, 550.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=423 */
%   | | | else return -0.18676691835283415;  // std dev = 4.368, 689.000 (wgt'ed) examples reached here.  /* #neg=669 #pos=20 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.2498802071079535;  // std dev = 2.448, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return -0.01033574114546371;  // std dev = 3.624, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.39499854184752164;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.009929137719457136;  // std dev = 0.396, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.567', 'seconds']
Refined model CLL: -0.427665


******************************************
Best model found
******************************************
Results 

CLL : -0.467607 

AUC ROC : 0.912047 

AUC PR : 0.889264 

Precision : 0.896869 

Recall : 0.885455 

F1 : 0.891125 

Total Learning Time : 572.9159999999999 

Total Inference Time : 7.052630186080933 

Total revision time: 582.2586788730621
Best scored revision CLL: -0.427665


Results 

CLL : -0.467607 

AUC ROC : 0.912047 

AUC PR : 0.889264 

Precision : 0.896869 

Recall : 0.885455 

F1 : 0.891125 

Total Learning Time : 582.2863666610717 

Total Inference Time : 7.052630186080933 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.996
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '634', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 406.841
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22276365744130666;  // std dev = 23.199, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,476 #pos=847 */
%   | | | else return 0.2549743319249102;  // std dev = 5.492, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3429974199479972;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.564031288040688;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03658790700575096;  // std dev = 0.307, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0594476363982127;  // std dev = 4.976, 154.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   | | | else return 0.01052988748046475;  // std dev = 3.683, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19656007280202217;  // std dev = 23.221, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,466 #pos=853 */
%   | | | else return 0.16428994806521374;  // std dev = 5.391, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2959222839173268;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.48074388375574273;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.018241963191900377;  // std dev = 4.483, 148.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | | else return 0.1408512887896476;  // std dev = 2.793, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.008457912980682126;  // std dev = 3.433, 89.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.14313770151993407;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1638159097704566;  // std dev = 23.197, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,476 #pos=847 */
%   | | | else return 0.19419103909805746;  // std dev = 5.491, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.246377439708811;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.3861984486324226;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015979986328258866;  // std dev = 4.483, 148.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | | else return 0.12213452259795937;  // std dev = 2.793, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0073832289284742865;  // std dev = 3.433, 89.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.12646221541029876;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13913831719176611;  // std dev = 23.221, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,466 #pos=853 */
%   | | | else return 0.10848584076248514;  // std dev = 5.386, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19881003268781505;  // std dev = 2.871, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.29710604942069174;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03912242573454416;  // std dev = 0.308, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04146794674517331;  // std dev = 4.953, 154.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   | | | else return 0.005972975272618314;  // std dev = 3.679, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11090976395129623;  // std dev = 23.196, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,476 #pos=847 */
%   | | | else return 0.13891774279679653;  // std dev = 5.491, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14100652745748218;  // std dev = 2.557, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.23100075437529882;  // std dev = 2.951, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012716705529021894;  // std dev = 4.482, 148.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | | else return 0.09868869393968756;  // std dev = 2.791, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0013767139142383746;  // std dev = 3.432, 89.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.11373981504889281;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09198054892631714;  // std dev = 23.221, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,466 #pos=853 */
%   | | | else return 0.06373508969921754;  // std dev = 5.381, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10702532942425685;  // std dev = 2.554, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.1762312447145294;  // std dev = 2.952, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03698446445932582;  // std dev = 0.308, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05860544347261074;  // std dev = 0.946, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.02362369475782171;  // std dev = 6.088, 249.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=46 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07073255713561558;  // std dev = 23.194, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,476 #pos=847 */
%   | | | else return 0.0962692060509696;  // std dev = 5.491, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07417983523439843;  // std dev = 2.842, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.14470168552900706;  // std dev = 2.668, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009452591508540682;  // std dev = 4.480, 148.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | | else return 0.07956261659238688;  // std dev = 2.788, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.13062125233508962;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -8.396679818709156E-4;  // std dev = 3.428, 89.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05822274998614699;  // std dev = 23.220, 2,319.000 (wgt'ed) examples reached here.  /* #neg=1,466 #pos=853 */
%   | | | else return 0.03261841054640862;  // std dev = 5.376, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.051930929240417985;  // std dev = 2.538, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.10858117452500357;  // std dev = 2.957, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05215645415052035;  // std dev = 0.299, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024145599510317604;  // std dev = 5.196, 176.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=34 */
%   | | | else return -0.004502839205795374;  // std dev = 3.434, 92.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04338799898595953;  // std dev = 23.193, 2,323.000 (wgt'ed) examples reached here.  /* #neg=1,476 #pos=847 */
%   | | | else return 0.06658241906298883;  // std dev = 5.492, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.034009316170731094;  // std dev = 2.831, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.09129544196627842;  // std dev = 2.672, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.034771187607218486;  // std dev = 0.308, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.024698428856876693;  // std dev = 4.934, 154.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=31 */
%   | | | else return -0.0029175196603339853;  // std dev = 3.676, 105.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4334451390205716;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.058647444464207436;  // std dev = 2.953, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.033657222641594195;  // std dev = 23.521, 2,388.000 (wgt'ed) examples reached here.  /* #neg=1,516 #pos=872 */
%   | | | else return 0.048112428927078094;  // std dev = 3.897, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005631091188534932;  // std dev = 4.479, 148.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=24 */
%   | | | else return 0.05796491519331615;  // std dev = 2.786, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0036241592567404363;  // std dev = 3.429, 89.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | | else return -0.10419363824924399;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.538', 'seconds']
Refined model CLL: -0.637058


******************************************
Best model found
******************************************
Results 

CLL : -0.751754 

AUC ROC : 0.618876 

AUC PR : 0.61236 

Precision : 0.909091 

Recall : 0.036364 

F1 : 0.06993 

Total Learning Time : 406.841 

Total Inference Time : 11.033679962158203 

Total revision time: 420.94503937911986
Best scored revision CLL: -0.637058


Results 

CLL : -0.751754 

AUC ROC : 0.618876 

AUC PR : 0.61236 

Precision : 0.909091 

Recall : 0.036364 

F1 : 0.06993 

Total Learning Time : 420.9727271671295 

Total Inference Time : 11.033679962158203 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.608
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '563', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 640.765
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22801591022964024;  // std dev = 28.389, 3,458.000 (wgt'ed) examples reached here.  /* #neg=2,179 #pos=1,279 */
%   | | | else return 0.19328407023464877;  // std dev = 6.420, 185.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.39814893509951127;  // std dev = 3.524, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | | else return 0.5191658842520542;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.053270886319023616;  // std dev = 5.674, 205.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=40 */
%   | | | else return -0.0060485957646851975;  // std dev = 3.083, 81.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | else return 8.441897047984674E-5;  // std dev = 0.349, 155.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19793324715583582;  // std dev = 28.389, 3,458.000 (wgt'ed) examples reached here.  /* #neg=2,179 #pos=1,279 */
%   | | | else return 0.1680900722243262;  // std dev = 6.420, 185.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3424774603058724;  // std dev = 3.524, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | | else return 0.4436086770783546;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05511774023267013;  // std dev = 1.353, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.039554888401071284;  // std dev = 6.312, 263.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.14186134147677373;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0028755006284893556;  // std dev = 4.338, 152.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1679008149147213;  // std dev = 28.389, 3,458.000 (wgt'ed) examples reached here.  /* #neg=2,179 #pos=1,279 */
%   | | | else return 0.14337690254313556;  // std dev = 6.420, 185.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=62 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.27653292943375146;  // std dev = 3.710, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.3757906917957911;  // std dev = 3.430, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.053432290686575845;  // std dev = 4.800, 144.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=29 */
%   | | | else return 0.001912919712868669;  // std dev = 4.311, 142.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=22 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1254527727889101;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0025250860421935856;  // std dev = 4.338, 152.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13749475704101724;  // std dev = 28.335, 3,455.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,270 */
%   | | | else return 0.1570354116996872;  // std dev = 6.653, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21719071952830055;  // std dev = 3.706, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.294760936412933;  // std dev = 3.431, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0392554286480913;  // std dev = 5.666, 205.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=40 */
%   | | | else return -0.013638451657331522;  // std dev = 3.082, 81.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=11 */
%   | | else return -1.1960498577495525E-7;  // std dev = 0.349, 155.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11413352426254622;  // std dev = 28.389, 3,458.000 (wgt'ed) examples reached here.  /* #neg=2,179 #pos=1,279 */
%   | | | else return 0.09376128699722792;  // std dev = 6.416, 185.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15437336689108627;  // std dev = 3.493, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | | else return 0.2283756879973519;  // std dev = 3.638, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0036583915112148382;  // std dev = 5.528, 241.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=36 */
%   | | | else return 0.10510586872470125;  // std dev = 3.300, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else return -0.005266083727694413;  // std dev = 0.360, 144.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.090016197824922;  // std dev = 28.334, 3,455.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,270 */
%   | | | else return 0.1094314806818356;  // std dev = 6.655, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11819138506594197;  // std dev = 3.690, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.17814558148475862;  // std dev = 3.434, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05908510701211572;  // std dev = 0.277, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025395747927500153;  // std dev = 6.291, 262.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=49 */
%   | | | else return -4.250833302900884E-4;  // std dev = 4.342, 155.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07330472551001006;  // std dev = 28.390, 3,458.000 (wgt'ed) examples reached here.  /* #neg=2,179 #pos=1,279 */
%   | | | else return 0.05601727232516902;  // std dev = 6.412, 185.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07989090264474064;  // std dev = 3.482, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | | else return 0.13628734591987154;  // std dev = 3.641, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05202248099733131;  // std dev = 0.277, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.023058398376751815;  // std dev = 6.312, 276.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=49 */
%   | | | else return -0.004801307631332404;  // std dev = 4.308, 141.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05617925543640631;  // std dev = 28.332, 3,455.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,270 */
%   | | | else return 0.07438475465330513;  // std dev = 6.658, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06054002357978106;  // std dev = 3.681, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.10777538208986254;  // std dev = 3.437, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04605070277302745;  // std dev = 0.277, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02072362056084445;  // std dev = 6.289, 262.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=49 */
%   | | | else return -0.003144443818636981;  // std dev = 4.342, 155.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.045520906131650204;  // std dev = 28.390, 3,458.000 (wgt'ed) examples reached here.  /* #neg=2,179 #pos=1,279 */
%   | | | else return 0.030403098461138336;  // std dev = 6.407, 185.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=62 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03839498228363587;  // std dev = 3.475, 50.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=27 */
%   | | | else return 0.08319730980288609;  // std dev = 3.643, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 3.875926071367337E-4;  // std dev = 5.525, 241.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=36 */
%   | | | else return 0.08098723159719404;  // std dev = 3.294, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else return -0.009488251735766035;  // std dev = 0.359, 144.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03402722726795596;  // std dev = 28.331, 3,455.000 (wgt'ed) examples reached here.  /* #neg=2,185 #pos=1,270 */
%   | | | else return 0.050562660675348134;  // std dev = 6.660, 188.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=71 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.029247668712130182;  // std dev = 3.675, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return 0.06731243022046957;  // std dev = 3.439, 52.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=34 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 3.385103834597939E-4;  // std dev = 5.525, 241.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=36 */
%   | | | else return 0.06837980666431763;  // std dev = 3.293, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else return -0.00820294009893015;  // std dev = 0.359, 144.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.694', 'seconds']
Refined model CLL: -0.636609


******************************************
Best model found
******************************************
Results 

CLL : -0.751004 

AUC ROC : 0.632482 

AUC PR : 0.628834 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 640.765 

Total Inference Time : 17.60973286628723 

Total revision time: 662.1607802848815
Best scored revision CLL: -0.636609


Results 

CLL : -0.751004 

AUC ROC : 0.632482 

AUC PR : 0.628834 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 662.1884680728912 

Total Inference Time : 17.60973286628723 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.651
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '610', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 951.297
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22892815587872795;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.1970610689907258;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.39762261931003856;  // std dev = 4.345, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return 0.5346195233348068;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.038402789038418816;  // std dev = 0.305, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028120606487614525;  // std dev = 7.057, 353.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=60 */
%   | | | else return -3.8765026634190607E-4;  // std dev = 4.990, 205.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=29 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19871557521963565;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.17134087445559498;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.34203455617545087;  // std dev = 4.345, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return 0.4564215244401205;  // std dev = 3.858, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011064420895813325;  // std dev = 6.439, 319.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=49 */
%   | | | else return 0.0693728115744208;  // std dev = 3.431, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -1.0562695490141442E-4;  // std dev = 4.892, 193.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=28 */
%   | | | else return -0.14180388304046046;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16853979829554305;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.14606232326641375;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2602227400275186;  // std dev = 3.939, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return 0.3730445354658582;  // std dev = 4.250, 80.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=52 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00970679335868266;  // std dev = 6.439, 319.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=49 */
%   | | | else return 0.06056333795247982;  // std dev = 3.431, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -9.251870307530061E-5;  // std dev = 4.892, 193.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=28 */
%   | | | else return -0.12540729108779988;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13998223729404785;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.12230274113699206;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20440891949336432;  // std dev = 3.935, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return 0.29285943151961075;  // std dev = 4.248, 80.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03742274911783787;  // std dev = 0.305, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020803769793039318;  // std dev = 7.049, 353.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=60 */
%   | | | else return -0.0021733896390444545;  // std dev = 4.986, 205.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=29 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1142018109612479;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.10083180383691828;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15363684660844912;  // std dev = 4.311, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return 0.23912819092785084;  // std dev = 3.850, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03242043655219758;  // std dev = 5.327, 188.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=35 */
%   | | | else return 1.0441698110695322E-4;  // std dev = 4.982, 201.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=29 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0025751026084661123;  // std dev = 4.891, 193.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=28 */
%   | | | else return -0.11206970355499442;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09182046995963718;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.08206128193113237;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10794580221462391;  // std dev = 3.917, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return 0.17739572104955717;  // std dev = 4.245, 80.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=52 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.03812875316823647;  // std dev = 0.319, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.03625430689345423;  // std dev = 1.641, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.01205509342078186;  // std dev = 8.476, 532.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=86 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07298252665074138;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.06608778988158548;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07909320086566471;  // std dev = 4.299, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return 0.14512233885636044;  // std dev = 3.850, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.028111914666207088;  // std dev = 5.325, 188.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=35 */
%   | | | else return -0.001280736821317554;  // std dev = 4.981, 201.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=29 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003686551386444718;  // std dev = 4.891, 193.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=28 */
%   | | | else return -0.10249664205754527;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.057499251991180736;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.052781622540733444;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.052295562127593204;  // std dev = 3.907, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return 0.10762887609801637;  // std dev = 4.245, 80.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.03478098416186519;  // std dev = 0.305, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.013704815427174452;  // std dev = 7.108, 363.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=61 */
%   | | | else return -0.003613717178235721;  // std dev = 4.890, 195.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=28 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044998345161045374;  // std dev = 32.831, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,907 #pos=1,713 */
%   | | | else return 0.04187992498176397;  // std dev = 7.318, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0375673427426275;  // std dev = 4.291, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return 0.09070589562103933;  // std dev = 3.850, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0034546723565726297;  // std dev = 6.435, 319.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=49 */
%   | | | else return 0.03862328577583354;  // std dev = 3.426, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.002711194251061211;  // std dev = 4.891, 193.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=28 */
%   | | | else return -0.09313891566391258;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034839630043958646;  // std dev = 32.794, 4,616.000 (wgt'ed) examples reached here.  /* #neg=2,908 #pos=1,708 */
%   | | | else return 0.03686533169926097;  // std dev = 7.478, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.022510067907334473;  // std dev = 3.899, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | | | else return 0.06747911872431685;  // std dev = 4.245, 80.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0015621190117834451;  // std dev = 6.410, 313.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=49 */
%   | | | else return 0.041126153604254735;  // std dev = 3.338, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.1413726848073947;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0025699090895779787;  // std dev = 4.977, 202.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.625', 'seconds']
Refined model CLL: -0.635948


******************************************
Best model found
******************************************
Results 

CLL : -0.749377 

AUC ROC : 0.631167 

AUC PR : 0.628404 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 951.297 

Total Inference Time : 23.00582528114319 

Total revision time: 979.2082293491363
Best scored revision CLL: -0.635948


Results 

CLL : -0.749377 

AUC ROC : 0.631167 

AUC PR : 0.628404 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 979.235917137146 

Total Inference Time : 23.00582528114319 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.029
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '605', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 1091.233
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533327;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03296064436529561;  // std dev = 8.057, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0011242011748237037;  // std dev = 5.550, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865123;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496448;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.36538039098940883;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012648480820743832;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08122605687754754;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -2.87117742559136E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14519912137035695;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396752450040655;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603244;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011079892058710768;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07065144689637017;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -2.5070816338032884E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12808904447072178;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029136;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708754;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248815;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844144;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009694240508774685;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.060964813995629606;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -2.1892170558764697E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1144520481762058;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611825;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431217;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997686;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766648;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06089853881676991;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05246595068346667;  // std dev = 1.663, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.017040362057167437;  // std dev = 9.619, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816684;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0676315129209049;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158728;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441804;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0025711279075370064;  // std dev = 7.196, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07469229898221762;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.002599129413152014;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10494372379885442;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567486;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0533315294901014;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04401048386508491;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946218;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.031227270946471607;  // std dev = 6.052, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0034441955887578807;  // std dev = 5.538, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0026139810730055712;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09548704222337559;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04499836200047509;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04203080782019986;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03195107228254373;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817377;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04970369122299822;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05761116867446244;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012767707144492985;  // std dev = 9.608, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3945355786049575;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.045550639915706105;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.034099876054307025;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.04619596743250457;  // std dev = 6.482, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05087207251084164;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.044158231138301425;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.011069328566519581;  // std dev = 9.607, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.600', 'seconds']
Refined model CLL: -0.636036


******************************************
Best model found
******************************************
Results 

CLL : -0.752008 

AUC ROC : 0.635462 

AUC PR : 0.628698 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1091.233 

Total Inference Time : 25.410632133483887 

Total revision time: 1122.925995027542
Best scored revision CLL: -0.636036


Results 

CLL : -0.752008 

AUC ROC : 0.635462 

AUC PR : 0.628698 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1122.9536828155517 

Total Inference Time : 25.410632133483887 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.358
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '566', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 380.096
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.011995088945666114;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2602783372289096;  // std dev = 0.490, 1,221.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=491 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.14981560176617903;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.04419544672741935;  // std dev = 2.552, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02481560176617902;  // std dev = 2.582, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.01052865241152266;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.22555366166529442;  // std dev = 0.490, 1,221.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=491 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.12903756644857117;  // std dev = 3.377, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.01700626025944337;  // std dev = 2.225, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021767884192405756;  // std dev = 2.582, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.009231108997431438;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.4419486100244409;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1903391796032221;  // std dev = 0.490, 1,221.000 (wgt'ed) examples reached here.  /* #neg=730 #pos=491 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.6425646986294037;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.036734676032555945;  // std dev = 1.241, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.05429131629708409;  // std dev = 3.740, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return -0.02008079472854623;  // std dev = 2.268, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1544519336482179;  // std dev = 0.488, 1,252.000 (wgt'ed) examples reached here.  /* #neg=753 #pos=499 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.5379334654072327;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.031670551460667454;  // std dev = 1.240, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0469612996245738;  // std dev = 3.739, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return -0.01740913866875864;  // std dev = 2.268, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12490886461514886;  // std dev = 0.488, 1,252.000 (wgt'ed) examples reached here.  /* #neg=753 #pos=499 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.1026439681581103;  // std dev = 3.268, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return -0.003692206563848734;  // std dev = 2.159, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0792873085857553;  // std dev = 1.220, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.029607329104056234;  // std dev = 2.223, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09945374910291958;  // std dev = 0.488, 1,252.000 (wgt'ed) examples reached here.  /* #neg=753 #pos=499 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordvenue(A, G) )
%   | | | then return 0.09807798766280983;  // std dev = 3.068, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.0037901805734014624;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0693476042457884;  // std dev = 1.219, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.02553995725402055;  // std dev = 2.223, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07824904557016367;  // std dev = 0.488, 1,252.000 (wgt'ed) examples reached here.  /* #neg=753 #pos=499 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.412205922548116;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.00653862985753968;  // std dev = 1.223, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.03297532501094465;  // std dev = 3.701, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return -0.028894625936485032;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06102255316007961;  // std dev = 0.488, 1,252.000 (wgt'ed) examples reached here.  /* #neg=753 #pos=499 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3115736412944885;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0055243160881650625;  // std dev = 1.223, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0281071336441044;  // std dev = 3.700, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return -0.024892011772618856;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.4273140815375374;  // std dev = 10.185, 599.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=465 */
%   | | | else return -0.32566234837972485;  // std dev = 3.158, 640.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=9 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.16696903820541104;  // std dev = 3.533, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | | else return -0.009528154867448074;  // std dev = 2.366, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.39696903820541124;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.4919782842416394;  // std dev = 0.930, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.013484448997478667;  // std dev = 2.524, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return -0.11733907757912576;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.32590040323377256;  // std dev = 10.188, 599.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=465 */
%   | | | else return -0.2573595093795715;  // std dev = 3.105, 640.000 (wgt'ed) examples reached here.  /* #neg=631 #pos=9 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.12796677427567757;  // std dev = 3.533, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | | else return -0.007958341085167315;  // std dev = 2.367, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.30200465493176687;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.37431326435347906;  // std dev = 0.930, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.062030065654256145;  // std dev = 1.205, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.03573432110232017;  // std dev = 2.209, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.347', 'seconds']
Refined model CLL: -0.468315


******************************************
Best model found
******************************************
Results 

CLL : -0.49031 

AUC ROC : 0.835673 

AUC PR : 0.660905 

Precision : 0.706573 

Recall : 0.817935 

F1 : 0.758186 

Total Learning Time : 380.096 

Total Inference Time : 5.34080958366394 

Total revision time: 387.7832713165283
Best scored revision CLL: -0.468315


Results 

CLL : -0.49031 

AUC ROC : 0.835673 

AUC PR : 0.660905 

Precision : 0.706573 

Recall : 0.817935 

F1 : 0.758186 

Total Learning Time : 387.8053524532318 

Total Inference Time : 5.34080958366394 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.972
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '577', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 504.06
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.25637902359508247;  // std dev = 0.490, 2,486.000 (wgt'ed) examples reached here.  /* #neg=1,496 #pos=990 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.11901850031690216;  // std dev = 5.158, 138.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.04932540568774767;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.07091489254632072;  // std dev = 3.968, 94.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2222205807426132;  // std dev = 0.490, 2,486.000 (wgt'ed) examples reached here.  /* #neg=1,496 #pos=990 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.05350660134146234;  // std dev = 5.426, 181.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=37 */
%   | | | else return 0.27837716698692044;  // std dev = 2.705, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.13820395430332577;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.057883588530959845;  // std dev = 3.864, 89.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1876446900093028;  // std dev = 0.490, 2,486.000 (wgt'ed) examples reached here.  /* #neg=1,496 #pos=990 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41111210992369535;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03105962792404284;  // std dev = 2.003, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06526857907278344;  // std dev = 5.719, 188.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=43 */
%   | | | else return 0.039304699399822327;  // std dev = 3.676, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15476142361989906;  // std dev = 0.490, 2,486.000 (wgt'ed) examples reached here.  /* #neg=1,496 #pos=990 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03696992163293227;  // std dev = 5.416, 181.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=37 */
%   | | | else return 0.22789427424782668;  // std dev = 2.702, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.126855798983701;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.042783780472745066;  // std dev = 3.844, 89.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1251387028353815;  // std dev = 0.490, 2,486.000 (wgt'ed) examples reached here.  /* #neg=1,496 #pos=990 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.34089773323931516;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02142842272971681;  // std dev = 2.003, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04546631473564611;  // std dev = 5.689, 188.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=43 */
%   | | | else return 0.029219842583716783;  // std dev = 3.671, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3013753122393997;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return -0.02779135442726655;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.04008498965875459;  // std dev = 3.727, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.1012048092556039;  // std dev = 23.727, 2,346.000 (wgt'ed) examples reached here.  /* #neg=1,408 #pos=938 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.03572131112885052;  // std dev = 5.502, 179.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=41 */
%   | | | else return 0.12183807181100068;  // std dev = 2.366, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.030369715546571252;  // std dev = 3.965, 94.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=20 */
%   | | | else return -0.12498684189219235;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07829981761788171;  // std dev = 0.489, 2,486.000 (wgt'ed) examples reached here.  /* #neg=1,496 #pos=990 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.26800462091667093;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.012550538628658788;  // std dev = 2.005, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -2.9459846225347527E-4;  // std dev = 2.023, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.03176487349553149;  // std dev = 6.449, 244.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=55 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.44571280493027504;  // std dev = 14.290, 1,188.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=924 */
%   | | | else return -0.3083200173130166;  // std dev = 4.915, 1,291.000 (wgt'ed) examples reached here.  /* #neg=1,268 #pos=23 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.03739817633662219;  // std dev = 3.112, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.10450361104864626;  // std dev = 5.652, 141.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.497377462425223;  // std dev = 1.584, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.5652980527134701;  // std dev = 0.952, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.019079640694753396;  // std dev = 3.808, 89.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
%   | | | else return -0.11342492175369408;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03537055884888198;  // std dev = 20.365, 2,307.000 (wgt'ed) examples reached here.  /* #neg=1,406 #pos=901 */
%   | | | else return 0.04332700292299434;  // std dev = 5.252, 118.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=46 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return 0.036193372762431356;  // std dev = 5.557, 208.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=53 */
%   | | | else return 0.14715227875655346;  // std dev = 2.978, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.3792267556759213;  // std dev = 1.585, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.43043589570498736;  // std dev = 0.953, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10929248094003025;  // std dev = 0.060, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.016552450346588893;  // std dev = 3.807, 89.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.02749482534011184;  // std dev = 20.336, 2,307.000 (wgt'ed) examples reached here.  /* #neg=1,406 #pos=901 */
%   | | | else return 0.03348121026279339;  // std dev = 5.251, 118.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=46 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.13873609185789407;  // std dev = 2.166, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.03238722903758453;  // std dev = 5.909, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.28472420967644185;  // std dev = 1.585, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.32350997371000456;  // std dev = 0.952, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.013957599576639435;  // std dev = 3.806, 89.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
%   | | | else return -0.09936763344715688;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.367', 'seconds']
Refined model CLL: -0.540569


******************************************
Best model found
******************************************
Results 

CLL : -0.539076 

AUC ROC : 0.822062 

AUC PR : 0.646996 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 504.06 

Total Inference Time : 7.998580694198608 

Total revision time: 515.1672410316467
Best scored revision CLL: -0.540569


Results 

CLL : -0.539076 

AUC ROC : 0.822062 

AUC PR : 0.646996 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 515.1893221683501 

Total Inference Time : 7.998580694198608 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.762
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '621', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 614.82
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2504767467821576;  // std dev = 28.642, 3,441.000 (wgt'ed) examples reached here.  /* #neg=2,091 #pos=1,350 */
%   | | | else return 0.23519811542738248;  // std dev = 6.556, 183.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4344201215401891;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | | | else return 0.6407576307516852;  // std dev = 2.798, 46.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.11173745184592415;  // std dev = 6.290, 209.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=53 */
%   | | | else return 0.0363667568816906;  // std dev = 3.846, 101.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.06094613789671429;  // std dev = 4.808, 143.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21717267580582925;  // std dev = 28.642, 3,441.000 (wgt'ed) examples reached here.  /* #neg=2,091 #pos=1,350 */
%   | | | else return 0.2040904930486703;  // std dev = 6.556, 183.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3729362641053732;  // std dev = 3.796, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | | | else return 0.5438037177829127;  // std dev = 2.798, 46.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09758404812441933;  // std dev = 6.290, 209.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=53 */
%   | | | else return 0.03188193631631921;  // std dev = 3.846, 101.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.05336405129341355;  // std dev = 4.808, 143.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18355699372772444;  // std dev = 28.642, 3,441.000 (wgt'ed) examples reached here.  /* #neg=2,091 #pos=1,350 */
%   | | | else return 0.17292447347947193;  // std dev = 6.556, 183.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=69 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2760299643092012;  // std dev = 3.541, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.4510521209677488;  // std dev = 3.050, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08430005859912598;  // std dev = 6.290, 209.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=53 */
%   | | | else return 0.02785411631939296;  // std dev = 3.846, 101.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.046453689504957055;  // std dev = 4.808, 143.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=29 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15161830278088645;  // std dev = 28.642, 3,441.000 (wgt'ed) examples reached here.  /* #neg=2,091 #pos=1,350 */
%   | | | else return 0.1433942029792759;  // std dev = 6.556, 183.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=69 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21404173301687943;  // std dev = 3.536, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.350463475895384;  // std dev = 3.043, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03642592637812353;  // std dev = 6.575, 271.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=54 */
%   | | | else return 0.1968164219726769;  // std dev = 3.139, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03553908788145705;  // std dev = 4.855, 139.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12283065448454705;  // std dev = 28.642, 3,441.000 (wgt'ed) examples reached here.  /* #neg=2,091 #pos=1,350 */
%   | | | else return 0.11674587404109797;  // std dev = 6.556, 183.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15331180443176337;  // std dev = 3.741, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | | | else return 0.2885769837732163;  // std dev = 2.745, 46.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3968607886913315;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.025506616867684375;  // std dev = 2.501, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.040347221530661774;  // std dev = 6.832, 282.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=60 */
%   | | | else return 0.030865035617407475;  // std dev = 4.681, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09797673119097783;  // std dev = 28.642, 3,441.000 (wgt'ed) examples reached here.  /* #neg=2,091 #pos=1,350 */
%   | | | else return 0.09364681711151507;  // std dev = 6.556, 183.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1157353006223004;  // std dev = 3.740, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | | | else return 0.2171880932646463;  // std dev = 2.746, 46.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.025090118746917692;  // std dev = 6.566, 271.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=54 */
%   | | | else return 0.15989837553328945;  // std dev = 3.134, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02421648535964176;  // std dev = 4.838, 139.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
%   | | | else return -0.0952539820311983;  // std dev = 0.000427, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07724008877198826;  // std dev = 28.664, 3,448.000 (wgt'ed) examples reached here.  /* #neg=2,096 #pos=1,352 */
%   | | | else return 0.0738273823426563;  // std dev = 6.459, 176.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=67 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06340103333596288;  // std dev = 3.498, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.18242027994533117;  // std dev = 3.014, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02145493577393926;  // std dev = 6.566, 271.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=54 */
%   | | | else return 0.13197312574997327;  // std dev = 3.131, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.05783347905395023;  // std dev = 1.226, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.023025747674940745;  // std dev = 4.680, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06034431145065255;  // std dev = 28.664, 3,448.000 (wgt'ed) examples reached here.  /* #neg=2,096 #pos=1,352 */
%   | | | else return 0.057907440439100615;  // std dev = 6.460, 176.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=67 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04799588356370542;  // std dev = 3.499, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | | else return 0.13893358819535376;  // std dev = 3.017, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14802489990982692;  // std dev = 2.529, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.01849820192114159;  // std dev = 6.809, 285.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=60 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018032047496075808;  // std dev = 4.836, 139.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
%   | | | else return -0.08830421407966901;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.26016297172301905;  // std dev = 1.536, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.3074475311296136;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.04593124724650414;  // std dev = 29.319, 3,611.000 (wgt'ed) examples reached here.  /* #neg=2,200 #pos=1,411 */
%   | | | else return 0.06872557590945069;  // std dev = 4.631, 104.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=69 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3164383616748531;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0015764084622355019;  // std dev = 2.466, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.005202373463558777;  // std dev = 2.559, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.01911137537492524;  // std dev = 7.845, 370.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=80 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.036235916877082164;  // std dev = 28.658, 3,448.000 (wgt'ed) examples reached here.  /* #neg=2,096 #pos=1,352 */
%   | | | else return 0.03367967766604743;  // std dev = 6.465, 176.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.011359881895352033;  // std dev = 3.715, 59.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=34 */
%   | | | else return 0.10915096689532688;  // std dev = 2.728, 46.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11658956805728862;  // std dev = 2.506, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.09213962994343187;  // std dev = 1.187, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.00444987456842101;  // std dev = 2.559, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.016086558926797247;  // std dev = 7.844, 370.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=80 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.476', 'seconds']
Refined model CLL: -0.651519


******************************************
Best model found
******************************************
Results 

CLL : -0.626663 

AUC ROC : 0.583568 

AUC PR : 0.417492 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 614.82 

Total Inference Time : 15.393175601959229 

Total revision time: 634.2043695278168
Best scored revision CLL: -0.651519


Results 

CLL : -0.626663 

AUC ROC : 0.583568 

AUC PR : 0.417492 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 634.2264506645203 

Total Inference Time : 15.393175601959229 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.893
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '605', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 836.751
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.2527222573861683;  // std dev = 33.961, 4,828.000 (wgt'ed) examples reached here.  /* #neg=2,923 #pos=1,905 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.41370449065506754;  // std dev = 4.216, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | | | else return 0.5678263544543513;  // std dev = 3.574, 62.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.05603811715756064;  // std dev = 7.756, 379.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=75 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04394128482628731;  // std dev = 5.261, 183.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22115278446718087;  // std dev = 33.187, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,777 #pos=1,826 */
%   | | | else return 0.1907039340345061;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3460924923227531;  // std dev = 4.221, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.49730468949438933;  // std dev = 3.539, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15252617693695447;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.04907878139996203;  // std dev = 7.756, 379.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=75 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03850770435951504;  // std dev = 5.261, 183.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18682275552115193;  // std dev = 33.186, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,777 #pos=1,826 */
%   | | | else return 0.1612811619173116;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2764042569137711;  // std dev = 4.196, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | | | else return 0.40840751473365766;  // std dev = 3.547, 62.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04073755460222138;  // std dev = 7.574, 361.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=72 */
%   | | | else return 0.1160516970144619;  // std dev = 3.415, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03360547179301008;  // std dev = 5.261, 183.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1541681173053778;  // std dev = 33.186, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,777 #pos=1,826 */
%   | | | else return 0.1336780267769143;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20465600914779564;  // std dev = 4.198, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.33349151850347825;  // std dev = 3.507, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1242103009461163;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.03571892600480387;  // std dev = 7.751, 379.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=75 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.029218628668209307;  // std dev = 5.261, 183.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12473678494890397;  // std dev = 33.186, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,777 #pos=1,826 */
%   | | | else return 0.10892154466934081;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15183774704409897;  // std dev = 4.176, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | | | else return 0.25730713253439824;  // std dev = 3.520, 62.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.028627413184663674;  // std dev = 7.567, 361.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=72 */
%   | | | else return 0.0951031732306522;  // std dev = 3.415, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.053693132989986216;  // std dev = 1.335, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.02833387644562495;  // std dev = 5.089, 172.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09935056921870032;  // std dev = 33.185, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,777 #pos=1,826 */
%   | | | else return 0.08752599218181545;  // std dev = 7.420, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1039125373422046;  // std dev = 4.183, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.2079267807009392;  // std dev = 3.488, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09929756518415428;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.025224097582927124;  // std dev = 7.746, 379.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=75 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022544942095798656;  // std dev = 5.259, 183.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | | else return -0.09358437558861026;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07819005016815081;  // std dev = 33.178, 4,605.000 (wgt'ed) examples reached here.  /* #neg=2,780 #pos=1,825 */
%   | | | else return 0.06939441449836202;  // std dev = 7.454, 235.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=88 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3608350965844733;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10230464906276038;  // std dev = 5.359, 128.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=79 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04115573394042752;  // std dev = 6.967, 287.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=62 */
%   | | | else return -0.0020291004336900824;  // std dev = 4.506, 133.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01944217375884157;  // std dev = 5.259, 183.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=34 */
%   | | | else return -0.08594286820860156;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0610118565053336;  // std dev = 33.184, 4,603.000 (wgt'ed) examples reached here.  /* #neg=2,777 #pos=1,826 */
%   | | | else return 0.054216773807201565;  // std dev = 7.423, 237.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.044036811703953155;  // std dev = 4.145, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | | | else return 0.1344652857316531;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=44 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01663182695579965;  // std dev = 7.438, 355.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=70 */
%   | | | else return 0.06938577375868296;  // std dev = 3.363, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11877115697390962;  // std dev = 0.938, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.01925864304078747;  // std dev = 5.368, 185.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047290081657997404;  // std dev = 33.177, 4,605.000 (wgt'ed) examples reached here.  /* #neg=2,780 #pos=1,825 */
%   | | | else return 0.04207427836076657;  // std dev = 7.458, 235.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=88 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02513154290785573;  // std dev = 4.161, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.1129457305397137;  // std dev = 3.470, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03275694832409571;  // std dev = 6.854, 283.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=61 */
%   | | | else return -0.0053619427990947615;  // std dev = 4.431, 132.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=24 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013546721934809656;  // std dev = 5.456, 188.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=37 */
%   | | | else return -0.07881063299951767;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23449835144077424;  // std dev = 3.850, 62.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=37 */
%   | | | else return -0.07805774807966524;  // std dev = 4.184, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.015293372553359027;  // std dev = 5.585, 134.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=51 */
%   | | | else return 0.03684186217592336;  // std dev = 33.446, 4,688.000 (wgt'ed) examples reached here.  /* #neg=2,806 #pos=1,882 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.38257418246544306;  // std dev = 1.285, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.013442340059500105;  // std dev = 2.716, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.011110126247587684;  // std dev = 7.651, 372.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=74 */
%   | | | else return 0.015212075683357675;  // std dev = 5.288, 178.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.598', 'seconds']
Refined model CLL: -0.651203


******************************************
Best model found
******************************************
Results 

CLL : -0.624576 

AUC ROC : 0.586336 

AUC PR : 0.415715 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 836.751 

Total Inference Time : 18.75032067298889 

Total revision time: 860.5899745883942
Best scored revision CLL: -0.651203


Results 

CLL : -0.624576 

AUC ROC : 0.586336 

AUC PR : 0.415715 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 860.6120557250977 

Total Inference Time : 18.75032067298889 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.839
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '550', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 1021.003
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381665;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.043688297190162616;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690136;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267565;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1685236708029212;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947587;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750710216629658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07786764027423052;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.034473075743909336;  // std dev = 8.438, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.03030750903748209;  // std dev = 5.853, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436795;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309688;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903763;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189736;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03205080553104168;  // std dev = 8.406, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07170505343796112;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02671204256605129;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11310454482878503;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802822;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083846;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.458764766850876;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1912697601898219;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11399487162699581;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07066485473978909;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04444813927839668;  // std dev = 3.526, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.021908239070930098;  // std dev = 9.638, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6507579684699868;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.29880615895896007;  // std dev = 2.146, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09814014693515048;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.14870254766348737;  // std dev = 6.145, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.03839876591561986;  // std dev = 7.636, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.007396387091147983;  // std dev = 5.020, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10000776427871572;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.02031351612086526;  // std dev = 5.850, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07848498374362564;  // std dev = 37.046, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06872731831659055;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07280058365803184;  // std dev = 4.740, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16775981930208947;  // std dev = 3.881, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09517273756585357;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06360769120651145;  // std dev = 1.356, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03568427292822744;  // std dev = 3.529, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.015302061585910668;  // std dev = 9.636, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06119110018916629;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05400370065406797;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04255115479169715;  // std dev = 4.735, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1416751116014337;  // std dev = 3.864, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10123006386733156;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01190798717097129;  // std dev = 8.475, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0846951987553755;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.018109207458086342;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04741660578437262;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.041746091301146704;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.030205982353343992;  // std dev = 4.734, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1099359744705238;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07757243689106985;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.011460100861429262;  // std dev = 8.480, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0127944445711776;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10308944205442949;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.036550179863724726;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0324363753646851;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2753743530331088;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.03939760846461532;  // std dev = 6.027, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.028397358582636187;  // std dev = 7.633, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.011704757409733552;  // std dev = 4.975, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0109753322054695;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09395655653907799;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.449', 'seconds']
Refined model CLL: -0.650204


******************************************
Best model found
******************************************
Results 

CLL : -0.624137 

AUC ROC : 0.583872 

AUC PR : 0.41696 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1021.003 

Total Inference Time : 23.64343523979187 

Total revision time: 1050.7313156051637
Best scored revision CLL: -0.650204


Results 

CLL : -0.624137 

AUC ROC : 0.583872 

AUC PR : 0.41696 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1050.7533967418672 

Total Inference Time : 23.64343523979187 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.356
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '596', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 158.727
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21800092399867493;  // std dev = 15.780, 1,081.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=389 */
%   | | | else return 0.18542166237223964;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41370449065506787;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.025062743732604444;  // std dev = 3.759, 137.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18933943849384718;  // std dev = 15.780, 1,081.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=389 */
%   | | | else return 0.16131878574345496;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7516841208129501;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.349590793234092;  // std dev = 2.556, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.030352835297128303;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07611187483440301;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.022039170918903086;  // std dev = 3.759, 137.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15824350277932223;  // std dev = 15.649, 1,067.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=381 */
%   | | | else return 0.1830506573093135;  // std dev = 4.027, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5898531252317124;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2867818200657587;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.2564123687585864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.026524969827465543;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06765119390174773;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.019425203468704428;  // std dev = 3.759, 137.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6110178690792815;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4946884470234256;  // std dev = 0.323, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.13000090121518237;  // std dev = 16.079, 1,129.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=401 */
%   | | | else return 0.2466546654096967;  // std dev = 2.579, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.20613740734453975;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02311256121844531;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0605273558179078;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.01715575438771077;  // std dev = 3.759, 137.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11045825547088688;  // std dev = 15.766, 1,081.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=389 */
%   | | | else return 0.08100886118945869;  // std dev = 3.452, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.38000541304215874;  // std dev = 0.246, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16592852044485248;  // std dev = 2.533, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16162857548414666;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.020087540311506266;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02947909971580588;  // std dev = 2.998, 101.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=10 */
%   | | | else return -0.0015237854060162624;  // std dev = 2.466, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08921833061902536;  // std dev = 15.766, 1,081.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=389 */
%   | | | else return 0.06570967321979354;  // std dev = 3.451, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2992601513323175;  // std dev = 0.221, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12617546153325263;  // std dev = 2.532, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.028652635564399773;  // std dev = 3.182, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return -0.046848744331453356;  // std dev = 1.669, 39.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.20232998326310167;  // std dev = 0.194, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.021694126785563924;  // std dev = 2.313, 57.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0689827410833202;  // std dev = 15.632, 1,067.000 (wgt'ed) examples reached here.  /* #neg=686 #pos=381 */
%   | | | else return 0.09173025560422776;  // std dev = 4.011, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2545994968114124;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09312059931318019;  // std dev = 2.526, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.13103027018550356;  // std dev = 0.974, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.020397525738035913;  // std dev = 1.560, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.049353237742974856;  // std dev = 0.974, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.012371074822350107;  // std dev = 3.755, 137.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3605262317701103;  // std dev = 1.029, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.02812259880505737;  // std dev = 2.528, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else return 0.054824434433950645;  // std dev = 0.479, 1,127.000 (wgt'ed) examples reached here.  /* #neg=720 #pos=407 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.024658953901175607;  // std dev = 3.173, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return -0.03972025317767533;  // std dev = 1.670, 39.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.1807341658176106;  // std dev = 0.199, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.01766819843423448;  // std dev = 2.313, 57.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.3401346505909985;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20747475058464182;  // std dev = 0.370, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.04172140906227041;  // std dev = 16.076, 1,129.000 (wgt'ed) examples reached here.  /* #neg=728 #pos=401 */
%   | | | else return 0.07443787207664422;  // std dev = 2.552, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07280563056700502;  // std dev = 1.524, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.012782746073244651;  // std dev = 0.987, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.04283463565236047;  // std dev = 0.976, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.010535540476884386;  // std dev = 3.753, 137.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03561592627172818;  // std dev = 15.748, 1,081.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=389 */
%   | | | else return 0.007255054448217709;  // std dev = 3.424, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17045197083021452;  // std dev = 0.238, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03808381984963192;  // std dev = 2.527, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.021469625204996776;  // std dev = 3.168, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return -0.033950821585794544;  // std dev = 1.670, 39.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.16068090595800638;  // std dev = 0.194, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.014412352379340986;  // std dev = 2.312, 57.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.978', 'seconds']
Refined model CLL: -0.61175


******************************************
Best model found
******************************************
Results 

CLL : -0.827017 

AUC ROC : 0.499512 

AUC PR : 0.600196 

Precision : 0.73913 

Recall : 0.044099 

F1 : 0.083231 

Total Learning Time : 158.727 

Total Inference Time : 4.227854490280151 

Total revision time: 165.315013463974
Best scored revision CLL: -0.61175


Results 

CLL : -0.827017 

AUC ROC : 0.499512 

AUC PR : 0.600196 

Precision : 0.73913 

Recall : 0.044099 

F1 : 0.083231 

Total Learning Time : 165.3370946006775 

Total Inference Time : 4.227854490280151 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.959
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '660', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 316.944
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21295752520221503;  // std dev = 22.144, 2,142.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=760 */
%   | | | else return 0.19727936988211997;  // std dev = 5.077, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4438632208137981;  // std dev = 4.121, 70.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.009149643099540316;  // std dev = 4.928, 211.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=28 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.005487428536851287;  // std dev = 3.599, 110.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18500818313573422;  // std dev = 22.144, 2,142.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=760 */
%   | | | else return 0.17152872209858022;  // std dev = 5.077, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3319881859627784;  // std dev = 3.254, 44.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
%   | | | else return 0.5178185181919084;  // std dev = 2.544, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1444308583246371;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.043535875146194274;  // std dev = 1.275, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.018522733819185386;  // std dev = 4.589, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return -6.443915173775755E-4;  // std dev = 3.822, 122.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=17 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.6223539412801666;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.15446929356410172;  // std dev = 22.630, 2,246.000 (wgt'ed) examples reached here.  /* #neg=1,456 #pos=790 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6354918870728635;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.30481220574581125;  // std dev = 4.089, 70.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.016266311305214946;  // std dev = 3.942, 116.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=19 */
%   | | | else return -0.0012677894033547555;  // std dev = 3.828, 121.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=17 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003141941363578799;  // std dev = 3.597, 110.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=15 */
%   | | | else return -0.12660529049996203;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1313883985199795;  // std dev = 22.131, 2,142.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=760 */
%   | | | else return 0.11789034867060276;  // std dev = 5.051, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19758953086809408;  // std dev = 3.200, 44.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
%   | | | else return 0.346484156888279;  // std dev = 2.532, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12158042706192075;  // std dev = 2.352, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.041056237464810755;  // std dev = 1.271, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.017024789994820197;  // std dev = 4.589, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return 2.2982707452278624E-4;  // std dev = 3.819, 122.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=17 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10777155583088316;  // std dev = 22.130, 2,142.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=760 */
%   | | | else return 0.0969485442414032;  // std dev = 5.049, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.152200442190004;  // std dev = 3.198, 44.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
%   | | | else return 0.2628259567964054;  // std dev = 2.532, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06195867798917476;  // std dev = 1.788, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.14287100579067016;  // std dev = 0.071, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.09071441028181633;  // std dev = 2.664, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.008276079606038945;  // std dev = 5.670, 285.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=37 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.45012025938763117;  // std dev = 1.324, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.10118382254428962;  // std dev = 3.814, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.08455968803583411;  // std dev = 22.319, 2,186.000 (wgt'ed) examples reached here.  /* #neg=1,418 #pos=768 */
%   | | | else return 0.13513627671174244;  // std dev = 3.960, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.08871029817447648;  // std dev = 2.348, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.005891325411024087;  // std dev = 4.921, 211.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=28 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -0.001336433240198327;  // std dev = 3.593, 110.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=15 */
%   | | | else return -0.11464527100274266;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06987134100912237;  // std dev = 22.117, 2,142.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=760 */
%   | | | else return 0.05907538812773253;  // std dev = 5.029, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3204360782693954;  // std dev = 0.181, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.09542665185221963;  // std dev = 4.044, 70.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.15846232421054554;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0402222642043322;  // std dev = 2.383, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.014389786460824866;  // std dev = 4.586, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return 0.003871202860474372;  // std dev = 3.812, 122.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3213352835328648;  // std dev = 1.331, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.04153580975473458;  // std dev = 3.537, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.054195242540654276;  // std dev = 22.347, 2,189.000 (wgt'ed) examples reached here.  /* #neg=1,418 #pos=771 */
%   | | | else return 0.07186378428058061;  // std dev = 4.044, 70.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.13453323296358136;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.03334543826534952;  // std dev = 2.382, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.012699146132789493;  // std dev = 4.586, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return 0.003417518950977081;  // std dev = 3.812, 122.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04377430213642185;  // std dev = 22.109, 2,142.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=760 */
%   | | | else return 0.033511503705119565;  // std dev = 5.018, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23194728896586594;  // std dev = 0.198, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05415307719178463;  // std dev = 4.045, 70.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=41 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.11235810280451441;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.02752966604698302;  // std dev = 2.381, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011221807395876587;  // std dev = 4.586, 196.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=24 */
%   | | | else return 0.003015941797583295;  // std dev = 3.811, 122.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03432768492495227;  // std dev = 22.109, 2,142.000 (wgt'ed) examples reached here.  /* #neg=1,382 #pos=760 */
%   | | | else return 0.026432175897603133;  // std dev = 5.018, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.018035610956195772;  // std dev = 3.166, 44.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
%   | | | else return 0.10382456359331625;  // std dev = 2.526, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05975055313304006;  // std dev = 1.788, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.12789295954160326;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04085148517043134;  // std dev = 2.650, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.004347609094651151;  // std dev = 5.667, 285.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.086', 'seconds']
Refined model CLL: -0.615778


******************************************
Best model found
******************************************
Results 

CLL : -0.828055 

AUC ROC : 0.503294 

AUC PR : 0.606834 

Precision : 0.761905 

Recall : 0.041505 

F1 : 0.078721 

Total Learning Time : 316.944 

Total Inference Time : 7.698373079299927 

Total revision time: 327.734928730011
Best scored revision CLL: -0.615778


Results 

CLL : -0.828055 

AUC ROC : 0.503294 

AUC PR : 0.606834 

Precision : 0.761905 

Recall : 0.041505 

F1 : 0.078721 

Total Learning Time : 327.7570098667145 

Total Inference Time : 7.698373079299927 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.597
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '653', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 422.666
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21261489387527235;  // std dev = 27.068, 3,202.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=1,135 */
%   | | | else return 0.19542704160838933;  // std dev = 6.146, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.40987307303054565;  // std dev = 3.787, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.5188632208137969;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16584124279182005;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04564893509951238;  // std dev = 2.704, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return -9.114675850511714E-4;  // std dev = 7.357, 447.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=63 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18471384647566538;  // std dev = 27.068, 3,202.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=1,135 */
%   | | | else return 0.16993465560751853;  // std dev = 6.146, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5743971085930862;  // std dev = 1.241, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.38184734878850857;  // std dev = 5.029, 105.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=62 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14443085832463715;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 8.835646163369135E-4;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04000075842466886;  // std dev = 2.704, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return -8.005514524991094E-4;  // std dev = 7.357, 447.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=63 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15707339375452287;  // std dev = 27.068, 3,202.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=1,135 */
%   | | | else return 0.1449010949762053;  // std dev = 6.146, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.48722556195233424;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.31007496192409567;  // std dev = 5.023, 105.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=62 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13671058282920578;  // std dev = 2.519, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.01084806794251771;  // std dev = 6.393, 312.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=49 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0015959480515000267;  // std dev = 4.902, 193.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=28 */
%   | | | else return -0.1444552462601468;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6123921688941166;  // std dev = 1.289, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.616812682438102;  // std dev = 0.186, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12860609586714472;  // std dev = 27.669, 3,358.000 (wgt'ed) examples reached here.  /* #neg=2,177 #pos=1,181 */
%   | | | else return 0.2458305498459814;  // std dev = 5.155, 111.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=66 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12176720162661969;  // std dev = 2.877, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.0021877604953098933;  // std dev = 1.305, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 2.1722914681822204E-4;  // std dev = 6.322, 324.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=47 */
%   | | | else return 0.002993844733256854;  // std dev = 4.622, 171.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10761426358137184;  // std dev = 27.052, 3,202.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=1,135 */
%   | | | else return 0.09648747762915058;  // std dev = 6.123, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15200072943714452;  // std dev = 3.754, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.23763370689082433;  // std dev = 3.521, 56.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10262997492398807;  // std dev = 2.876, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.0019231786808515355;  // std dev = 1.305, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.024199620392155567;  // std dev = 2.686, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return -0.0014559859470343313;  // std dev = 7.355, 447.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=63 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08707037951365153;  // std dev = 27.051, 3,202.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=1,135 */
%   | | | else return 0.07843346429443601;  // std dev = 6.122, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.36148443600425156;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14077046426721374;  // std dev = 5.145, 111.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=66 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19941858332002727;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.03908247476338237;  // std dev = 2.828, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.020869166251361274;  // std dev = 2.686, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return -0.0012782822242765968;  // std dev = 7.355, 447.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=63 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06967514381413031;  // std dev = 27.051, 3,202.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=1,135 */
%   | | | else return 0.06312427544284181;  // std dev = 6.121, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0761256648012175;  // std dev = 3.605, 54.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=31 */
%   | | | else return 0.14136071626122657;  // std dev = 3.667, 60.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16907561106767052;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.03267541111738733;  // std dev = 2.827, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.017953655189506847;  // std dev = 2.685, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return -0.001122419854746716;  // std dev = 7.355, 447.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=63 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05527558436430162;  // std dev = 27.051, 3,202.000 (wgt'ed) examples reached here.  /* #neg=2,067 #pos=1,135 */
%   | | | else return 0.05040233552549205;  // std dev = 6.121, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05141751676948521;  // std dev = 3.752, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.11587984939754567;  // std dev = 3.509, 56.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1404774121813191;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.027208364283438424;  // std dev = 2.826, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0154131213854351;  // std dev = 2.685, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return -9.856794976793512E-4;  // std dev = 7.355, 447.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=63 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.41717675248923963;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.3255741636440336;  // std dev = 0.292, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.06463881882588855;  // std dev = 4.429, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return 0.041844212811030776;  // std dev = 27.790, 3,385.000 (wgt'ed) examples reached here.  /* #neg=2,171 #pos=1,214 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06139044903053118;  // std dev = 2.876, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.03287826362675716;  // std dev = 1.248, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -5.512941302978608E-4;  // std dev = 6.317, 324.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=47 */
%   | | | else return 0.0024891634695406767;  // std dev = 4.627, 171.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3014146607027406;  // std dev = 1.317, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.05050159377959304;  // std dev = 4.428, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03241071525600958;  // std dev = 27.337, 3,280.000 (wgt'ed) examples reached here.  /* #neg=2,128 #pos=1,152 */
%   | | | else return 0.04450193596997866;  // std dev = 4.997, 105.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=62 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.10180646768455166;  // std dev = 2.483, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.0014536942359859005;  // std dev = 6.345, 312.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=49 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0013809270946141105;  // std dev = 4.929, 193.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=28 */
%   | | | else return -0.13138640175709188;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.946', 'seconds']
Refined model CLL: -0.619452


******************************************
Best model found
******************************************
Results 

CLL : -0.8268 

AUC ROC : 0.506679 

AUC PR : 0.609669 

Precision : 0.73913 

Recall : 0.044099 

F1 : 0.083231 

Total Learning Time : 422.666 

Total Inference Time : 10.15962290763855 

Total revision time: 436.5643470172882
Best scored revision CLL: -0.619452


Results 

CLL : -0.8268 

AUC ROC : 0.506679 

AUC PR : 0.609669 

Precision : 0.73913 

Recall : 0.044099 

F1 : 0.083231 

Total Learning Time : 436.5864281539917 

Total Inference Time : 10.15962290763855 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.612
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '644', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 788.24
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.5640312880406888;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.21144368131500138;  // std dev = 32.036, 4,492.000 (wgt'ed) examples reached here.  /* #neg=2,905 #pos=1,587 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3986894756400525;  // std dev = 4.287, 74.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.5156831816748553;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17814893509951235;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.05094197399139689;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0671041589801094;  // std dev = 3.328, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | | else return -0.00977559320237416;  // std dev = 8.175, 583.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=77 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18416264050794745;  // std dev = 31.216, 4,264.000 (wgt'ed) examples reached here.  /* #neg=2,755 #pos=1,509 */
%   | | | else return 0.19639938758230271;  // std dev = 7.541, 245.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5927877325179838;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3767994407961645;  // std dev = 5.756, 137.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=80 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.025107430740067764;  // std dev = 7.647, 420.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=71 */
%   | | | else return -0.028684646856899934;  // std dev = 2.110, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.006563551014950381;  // std dev = 5.348, 244.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=33 */
%   | | | else return -0.14201175373321964;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1566139105231809;  // std dev = 31.215, 4,264.000 (wgt'ed) examples reached here.  /* #neg=2,755 #pos=1,509 */
%   | | | else return 0.1667607829769316;  // std dev = 7.541, 245.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5175361220808685;  // std dev = 1.239, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3053888315319393;  // std dev = 5.746, 137.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=80 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15253355950842634;  // std dev = 3.294, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.045777818449647206;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0064872328373670515;  // std dev = 7.012, 420.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=57 */
%   | | | else return 0.004630320073584393;  // std dev = 5.378, 230.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1315986757510253;  // std dev = 31.221, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,512 */
%   | | | else return 0.12209532366330393;  // std dev = 7.512, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2043695784963952;  // std dev = 4.256, 74.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.29877493569426955;  // std dev = 4.040, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13017725726555152;  // std dev = 3.293, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.040466426775589155;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005697878307746008;  // std dev = 7.012, 420.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=57 */
%   | | | else return 0.004061378433504799;  // std dev = 5.378, 230.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1070238906866505;  // std dev = 31.213, 4,264.000 (wgt'ed) examples reached here.  /* #neg=2,755 #pos=1,509 */
%   | | | else return 0.11589105487424727;  // std dev = 7.542, 245.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3484885691082913;  // std dev = 1.230, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.18092631924628663;  // std dev = 5.730, 137.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=80 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.14037460445453367;  // std dev = 3.226, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.10668599992580607;  // std dev = 0.985, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.057221638517776625;  // std dev = 3.421, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return -0.008912050341655197;  // std dev = 8.172, 583.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=77 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08747700377939256;  // std dev = 31.220, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,512 */
%   | | | else return 0.07823635168953946;  // std dev = 7.509, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10147691409323308;  // std dev = 4.040, 68.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | | else return 0.18322675215097445;  // std dev = 4.233, 79.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12123666726448838;  // std dev = 3.224, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.09346269218954707;  // std dev = 0.985, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04852178527349564;  // std dev = 3.419, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return -0.007836280660592956;  // std dev = 8.172, 583.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=77 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06915406829697403;  // std dev = 31.212, 4,264.000 (wgt'ed) examples reached here.  /* #neg=2,755 #pos=1,509 */
%   | | | else return 0.0770302155941704;  // std dev = 7.543, 245.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24627401081936262;  // std dev = 1.228, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09940192848224595;  // std dev = 5.715, 137.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=80 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09204529337532286;  // std dev = 3.272, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.04990947720611045;  // std dev = 1.349, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03942589455014435;  // std dev = 3.274, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | | else return -0.00689605259052324;  // std dev = 8.172, 583.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=77 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05566809141089602;  // std dev = 31.220, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,512 */
%   | | | else return 0.04706485143514467;  // std dev = 7.507, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.046193088405787584;  // std dev = 4.231, 74.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.11893046367601683;  // std dev = 4.024, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09714238287568128;  // std dev = 3.215, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.08786948418572225;  // std dev = 0.986, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.008422543066788784;  // std dev = 6.980, 414.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=58 */
%   | | | else return 0.008501133165106632;  // std dev = 5.451, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04310337335666591;  // std dev = 31.211, 4,264.000 (wgt'ed) examples reached here.  /* #neg=2,755 #pos=1,509 */
%   | | | else return 0.05022319797401588;  // std dev = 7.545, 245.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.026812545941741185;  // std dev = 4.029, 68.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | | else return 0.09229625581466584;  // std dev = 4.222, 79.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08135778298410672;  // std dev = 3.213, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.07806860296078175;  // std dev = 0.985, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.007370414775692876;  // std dev = 6.980, 414.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=58 */
%   | | | else return 0.007471973414568389;  // std dev = 5.451, 235.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=35 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034526085043537845;  // std dev = 31.220, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,748 #pos=1,512 */
%   | | | else return 0.0266943430066584;  // std dev = 7.504, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.019047950484457118;  // std dev = 4.230, 74.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | | else return 0.07489821535271406;  // std dev = 4.018, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06744398568306964;  // std dev = 3.211, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.06988506641686688;  // std dev = 0.984, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03266098196659086;  // std dev = 3.409, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return -0.0056359673983824255;  // std dev = 8.171, 583.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=77 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.162', 'seconds']
Refined model CLL: -0.619514


******************************************
Best model found
******************************************
Results 

CLL : -0.827446 

AUC ROC : 0.50675 

AUC PR : 0.609581 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 788.24 

Total Inference Time : 16.713737726211548 

Total revision time: 809.8269209880829
Best scored revision CLL: -0.619514


Results 

CLL : -0.827446 

AUC ROC : 0.50675 

AUC PR : 0.609581 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 809.8490021247864 

Total Inference Time : 16.713737726211548 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.754
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '621', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 844.51
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703928;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6007717207169574;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3623742328705789;  // std dev = 6.198, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12730486140002475;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0701388309589216;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.002676222005399772;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006082028716741431;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748987;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.25823581976205584;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3560423650052856;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11117109695805269;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06179147492321248;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05579913829327811;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0025095331913378067;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894198;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505172;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20208540622949775;  // std dev = 4.463, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2822844486665084;  // std dev = 4.465, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10387339426941407;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 5.246422875642448E-4;  // std dev = 8.034, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007920861895290952;  // std dev = 6.181, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13978938868549928;  // std dev = 0.024, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.41834438413173153;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.10683594804882231;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.40003596386115614;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17341971142236123;  // std dev = 6.162, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08899786888039372;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06818066052466272;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04738511399517848;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0023737832938631894;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.33246430580301056;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.5870661152468689;  // std dev = 0.357, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.08606136318168911;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.13619613007430195;  // std dev = 6.284, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07544323084259703;  // std dev = 3.505, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06006815005358891;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return -2.2861283623145962E-4;  // std dev = 7.971, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006581224069634147;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06976638074382063;  // std dev = 34.973, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06895410190841887;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06629969704172076;  // std dev = 4.431, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.143770532972024;  // std dev = 4.440, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0633605634455322;  // std dev = 3.504, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05324791086783017;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04076442242864841;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0023713594734828237;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05533361543459113;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05452774038749819;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2187106843986995;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07099020149039194;  // std dev = 6.150, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1897785135269239;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -5.434988396133235E-4;  // std dev = 3.380, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -6.590387300604159E-4;  // std dev = 7.967, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0057023217464973845;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04359314749332266;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04287412775063614;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.028724309714445496;  // std dev = 4.423, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.0898439106983986;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08236192208950857;  // std dev = 3.482, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.003642638862413694;  // std dev = 8.006, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005436189496519398;  // std dev = 6.187, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12281368761168988;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03417146424428618;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03350371173136505;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1787487140470001;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.03687213636931003;  // std dev = 6.141, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06951999556140946;  // std dev = 3.480, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0684359833850933;  // std dev = 1.370, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004667524399588916;  // std dev = 7.953, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0074396723408841825;  // std dev = 6.108, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.243', 'seconds']
Refined model CLL: -0.621287


******************************************
Best model found
******************************************
Results 

CLL : -0.826017 

AUC ROC : 0.506113 

AUC PR : 0.608813 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 844.51 

Total Inference Time : 19.092666387557983 

Total revision time: 869.6293433322907
Best scored revision CLL: -0.621287


Results 

CLL : -0.826017 

AUC ROC : 0.506113 

AUC PR : 0.608813 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 869.6514244689942 

Total Inference Time : 19.092666387557983 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.206
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '782', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 124.724
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34398771505593456;  // std dev = 0.500, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.48972788246793336;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.09344305274657119;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.006715929765352576;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.8109220063398401;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.2945106277840569;  // std dev = 15.108, 914.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=442 */
%   | | | else return 0.40354320247710496;  // std dev = 2.711, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.49068714539554725;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1029304181060551;  // std dev = 3.085, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.005900368802309396;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24698367039232363;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30544782808760956;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.3439092788620532;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.21612012793105903;  // std dev = 2.215, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.06601908137227284;  // std dev = 2.480, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.005187084451574057;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1992584713754303;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2423844582245272;  // std dev = 1.904, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.27200424812174395;  // std dev = 1.927, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.17793960335185519;  // std dev = 2.210, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.056539208149605114;  // std dev = 2.480, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0045625232594819235;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1568694082942782;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.17898442157157698;  // std dev = 1.711, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.2079631202752683;  // std dev = 2.099, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.33496471090738855;  // std dev = 1.101, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05375929127732633;  // std dev = 3.082, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.004015089941941436;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.38598968049919136;  // std dev = 1.489, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.01415476728207874;  // std dev = 0.958, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11830218258470555;  // std dev = 14.991, 900.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=434 */
%   | | | else return 0.14830749692509396;  // std dev = 2.709, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.25755697071799727;  // std dev = 1.095, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.044733569217696174;  // std dev = 3.082, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.006984312598753736;  // std dev = 2.079, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return -0.12084155992962119;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09281121393928661;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.09875140069907842;  // std dev = 1.907, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.12309851326532854;  // std dev = 1.922, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06647413525052617;  // std dev = 3.158, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.06844478780168123;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08323965209425632;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0020010283025355775;  // std dev = 2.078, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07047908445216035;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.06961899827600203;  // std dev = 1.713, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.0923394564372048;  // std dev = 2.097, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.17813797789147992;  // std dev = 1.092, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.0278919024163167;  // std dev = 3.079, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11956258309744429;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0012733844961253487;  // std dev = 2.072, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327969088457978;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05267697464362136;  // std dev = 1.909, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.0723366056700081;  // std dev = 1.920, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1339811008221151;  // std dev = 1.091, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.022848336141685483;  // std dev = 3.079, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1075993561440785;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0011304491243742509;  // std dev = 2.072, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040166366865696336;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=446 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.035919552718930235;  // std dev = 1.715, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.05457141245394866;  // std dev = 2.095, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.036918686590980666;  // std dev = 3.144, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.06500232233216455;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09774147500144609;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0010036701505984802;  // std dev = 2.072, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.516', 'seconds']
Refined model CLL: -0.671723


******************************************
Best model found
******************************************
Results 

CLL : -0.604104 

AUC ROC : 0.560137 

AUC PR : 0.248604 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 124.724 

Total Inference Time : 1.6510727405548096 

Total revision time: 128.52192538261414
Best scored revision CLL: -0.671723


Results 

CLL : -0.604104 

AUC ROC : 0.560137 

AUC PR : 0.248604 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 128.54400651931763 

Total Inference Time : 1.6510727405548096 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.623
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '804', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 211.668
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3413074110796288;  // std dev = 0.500, 1,811.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=875 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48501460674130376;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2547006592374425;  // std dev = 3.725, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.06941654073331519;  // std dev = 3.440, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.06327714022771751;  // std dev = 3.566, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29449110419995234;  // std dev = 0.500, 1,811.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=875 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.35042134448385326;  // std dev = 2.694, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.48662437717460766;  // std dev = 2.892, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.22078549749077184;  // std dev = 3.725, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.06075464150936709;  // std dev = 3.440, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05539853433077759;  // std dev = 3.566, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.245253784057484;  // std dev = 0.500, 1,811.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=875 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.28534523587569044;  // std dev = 2.691, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.39390508732977325;  // std dev = 2.891, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.27873922436937587;  // std dev = 2.014, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.0518478938443344;  // std dev = 1.252, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.08996560599013907;  // std dev = 4.650, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return 0.03212535042264351;  // std dev = 3.366, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19798611992743445;  // std dev = 0.500, 1,811.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=875 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.22438865020165444;  // std dev = 2.689, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.30464690953592577;  // std dev = 2.890, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.23201096091192;  // std dev = 2.007, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.045202076777827845;  // std dev = 1.252, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.07634855758347474;  // std dev = 4.649, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return 0.02788450993892731;  // std dev = 3.365, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15597720452631264;  // std dev = 0.500, 1,811.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=875 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.17236207104635662;  // std dev = 2.688, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.23008326910290836;  // std dev = 2.890, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.14464268398083777;  // std dev = 3.683, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.03964080288232557;  // std dev = 3.565, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10885605126078947;  // std dev = 0.970, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.038282688065494244;  // std dev = 3.289, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6376050425207707;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.07177289284944892;  // std dev = 3.107, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11860334087584279;  // std dev = 20.979, 1,763.000 (wgt'ed) examples reached here.  /* #neg=915 #pos=848 */
%   | | | else return 0.163126589791661;  // std dev = 3.906, 69.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.11653459265051226;  // std dev = 3.680, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.03409361307062862;  // std dev = 3.565, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09302747078776022;  // std dev = 0.969, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.03257123840817506;  // std dev = 3.288, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09246312289273816;  // std dev = 0.499, 1,811.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=875 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.40660351390777666;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10154728300586728;  // std dev = 3.913, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordvenue(B, J) )
%   | | | then return -0.19634224365049804;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14360970779264706;  // std dev = 2.269, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04002949199344974;  // std dev = 4.628, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return 0.014226514588986165;  // std dev = 3.364, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4588225265485818;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.06476578311967537;  // std dev = 2.896, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06857944537883386;  // std dev = 21.008, 1,768.000 (wgt'ed) examples reached here.  /* #neg=918 #pos=850 */
%   | | | else return 0.07653876464289264;  // std dev = 3.913, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.0793926118548599;  // std dev = 3.666, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.025961302063354657;  // std dev = 3.560, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10745521424794205;  // std dev = 0.892, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.017370105379316908;  // std dev = 3.307, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.34889354304955605;  // std dev = 1.49e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.051401592413667825;  // std dev = 21.202, 1,801.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=865 */
%   | | | else return 0.06823712385164675;  // std dev = 3.935, 70.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.12027532918095325;  // std dev = 1.904, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.014268318493410082;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.007428976354963829;  // std dev = 1.659, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.020946995740270754;  // std dev = 5.474, 166.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=40 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04006856537822028;  // std dev = 0.499, 1,811.000 (wgt'ed) examples reached here.  /* #neg=936 #pos=875 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.025266534813047217;  // std dev = 2.668, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.07177043678030799;  // std dev = 2.887, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04696269734621845;  // std dev = 4.520, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return -0.01689188794395336;  // std dev = 2.354, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.10486333499293729;  // std dev = 0.889, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.012063773913658588;  // std dev = 3.306, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.368', 'seconds']
Refined model CLL: -0.67435


******************************************
Best model found
******************************************
Results 

CLL : -0.605342 

AUC ROC : 0.561689 

AUC PR : 0.246486 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 211.668 

Total Inference Time : 2.5481855869293213 

Total revision time: 216.87859140968322
Best scored revision CLL: -0.67435


Results 

CLL : -0.605342 

AUC ROC : 0.561689 

AUC PR : 0.246486 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 216.90067254638672 

Total Inference Time : 2.5481855869293213 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.075
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '776', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 333.194
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34599031182977286;  // std dev = 0.500, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3844647245731954;  // std dev = 3.770, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | | else return 0.5191658842520542;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.27399051925792794;  // std dev = 4.953, 101.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=42 */
%   | | | else return 0.05142624602388168;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04514080501821114;  // std dev = 4.324, 123.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=23 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29845613869786186;  // std dev = 0.500, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.33095332360970464;  // std dev = 3.770, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | | else return 0.4436086770783546;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23726328735021132;  // std dev = 4.953, 101.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=42 */
%   | | | else return 0.04505013127166623;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1446865190363139;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03946726802535034;  // std dev = 4.321, 124.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24836520974628823;  // std dev = 0.500, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5275682731704582;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.30753726053922004;  // std dev = 5.162, 111.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=65 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1997764779536424;  // std dev = 4.953, 101.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=42 */
%   | | | else return 0.03927169110684469;  // std dev = 4.308, 119.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03579563854986444;  // std dev = 4.318, 123.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=23 */
%   | | | else return -0.12768038960837425;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20026584242741996;  // std dev = 0.500, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.20876485189746768;  // std dev = 3.765, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | | else return 0.28864398137443054;  // std dev = 3.627, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.3304165313596855;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.03826266597472711;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.06687636831918224;  // std dev = 6.043, 192.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=51 */
%   | | | else return 0.025768119360071628;  // std dev = 4.135, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15756216468419393;  // std dev = 0.500, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.16193598856732774;  // std dev = 3.765, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | | else return 0.21913306564049564;  // std dev = 3.627, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1409992477459492;  // std dev = 4.902, 101.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=42 */
%   | | | else return 0.02854126232587763;  // std dev = 4.317, 123.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=23 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11350415798357114;  // std dev = 0.977, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.03436320241233268;  // std dev = 4.175, 110.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12182854728876395;  // std dev = 0.500, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12369683016979845;  // std dev = 3.765, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | | else return 0.16463532102351872;  // std dev = 3.627, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.24422961403888307;  // std dev = 2.358, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.037262384863602234;  // std dev = 1.324, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.042848213176348404;  // std dev = 6.026, 192.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=51 */
%   | | | else return 0.018655859502615675;  // std dev = 4.134, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09312550452962995;  // std dev = 0.500, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.09363999506532787;  // std dev = 3.765, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | | else return 0.12356290277435494;  // std dev = 3.627, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04051755918818074;  // std dev = 5.986, 198.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=53 */
%   | | | else return 0.16482055369591755;  // std dev = 2.521, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10748125828602619;  // std dev = 0.984, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.022740440267348914;  // std dev = 4.172, 110.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.5558884657660362;  // std dev = 0.266, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.02796626616128409;  // std dev = 3.834, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06920346585052466;  // std dev = 25.510, 2,605.000 (wgt'ed) examples reached here.  /* #neg=1,338 #pos=1,267 */
%   | | | else return 0.07455200094890374;  // std dev = 5.102, 109.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=64 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.18364911042708276;  // std dev = 2.335, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.03697758480320838;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.027696609255011315;  // std dev = 6.005, 192.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=51 */
%   | | | else return 0.010547115179435863;  // std dev = 4.134, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.24285789825250473;  // std dev = 2.837, 41.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | | | else return -0.11813614608577552;  // std dev = 2.395, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05269359329925884;  // std dev = 25.514, 2,606.000 (wgt'ed) examples reached here.  /* #neg=1,338 #pos=1,268 */
%   | | | else return 0.056672989305868796;  // std dev = 5.146, 111.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=65 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.16168056567746558;  // std dev = 2.008, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.02610666981504158;  // std dev = 6.137, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09994372979723447;  // std dev = 0.990, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.014637139114093636;  // std dev = 4.170, 110.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04017530674218809;  // std dev = 0.499, 2,673.000 (wgt'ed) examples reached here.  /* #neg=1,369 #pos=1,304 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.16190904806922773;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04276106899862504;  // std dev = 5.146, 111.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=65 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.25577792941085903;  // std dev = 1.352, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.018739429301068405;  // std dev = 2.278, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01812146359535809;  // std dev = 5.989, 192.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=51 */
%   | | | else return 0.004853359099249336;  // std dev = 4.136, 117.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.396', 'seconds']
Refined model CLL: -0.672615


******************************************
Best model found
******************************************
Results 

CLL : -0.605437 

AUC ROC : 0.561717 

AUC PR : 0.246856 

Precision : 0.515152 

Recall : 0.02926 

F1 : 0.055375 

Total Learning Time : 333.194 

Total Inference Time : 3.240501880645752 

Total revision time: 339.634348815918
Best scored revision CLL: -0.672615


Results 

CLL : -0.605437 

AUC ROC : 0.561717 

AUC PR : 0.246856 

Precision : 0.515152 

Recall : 0.02926 

F1 : 0.055375 

Total Learning Time : 339.65642995262147 

Total Inference Time : 3.240501880645752 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.6
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '725', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 468.376
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.34507885723521353;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.41529179224236884;  // std dev = 4.156, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return 0.5387044906550683;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=49 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2549743319249102;  // std dev = 5.492, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | | else return 0.05169732219628568;  // std dev = 4.919, 155.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04404637099694746;  // std dev = 4.859, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29768456960488476;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3568889518383036;  // std dev = 4.156, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return 0.45980459743702834;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=49 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.22101951902455486;  // std dev = 5.492, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | | else return 0.0452869792189017;  // std dev = 4.919, 155.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03859959207139053;  // std dev = 4.859, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24776014535180443;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5180130613491372;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3187537153759628;  // std dev = 5.589, 132.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=80 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.18667284999064818;  // std dev = 5.492, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | | else return 0.03947657928760703;  // std dev = 4.919, 155.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.14423311118549392;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0329377375076567;  // std dev = 4.855, 159.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=29 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19982293387596428;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5885194524839029;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25329390554997805;  // std dev = 5.711, 139.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=85 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.15401508994855337;  // std dev = 5.492, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | | else return 0.034260902931280784;  // std dev = 4.919, 155.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=30 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.03051373927011393;  // std dev = 4.853, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.11303902355871152;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15725451224991113;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1596238660357621;  // std dev = 4.262, 77.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   | | | else return 0.2449865028929322;  // std dev = 3.791, 65.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.12459152198501809;  // std dev = 5.492, 126.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=50 */
%   | | | else return 0.029619124758929843;  // std dev = 4.919, 155.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1283100792944748;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.025682464346489697;  // std dev = 4.850, 159.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=29 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12162191592167323;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11442681575946657;  // std dev = 4.128, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return 0.18439191998011037;  // std dev = 3.931, 72.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=49 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.183266594565336;  // std dev = 2.685, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.04310365208799705;  // std dev = 6.854, 250.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=66 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023902102413904683;  // std dev = 4.848, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.10273093256826413;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09298913142199236;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08227310389352128;  // std dev = 4.250, 77.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   | | | else return 0.1486768328935798;  // std dev = 3.792, 65.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=43 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03136068136639258;  // std dev = 6.754, 252.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=64 */
%   | | | else return 0.1979502620677184;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07586832751564941;  // std dev = 1.345, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.022685796632329478;  // std dev = 4.730, 146.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07058300800442184;  // std dev = 0.500, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21546440691355667;  // std dev = 1.186, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0748843173305111;  // std dev = 5.563, 132.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=80 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02620053543108108;  // std dev = 6.850, 254.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=67 */
%   | | | else return 0.17311556766549507;  // std dev = 2.574, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11714221646644482;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.015432564927202151;  // std dev = 4.846, 159.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=29 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.251591775383072;  // std dev = 3.413, 54.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | | | else return -0.11124695095166773;  // std dev = 2.960, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.010354708620346828;  // std dev = 4.485, 83.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=38 */
%   | | | else return 0.053747285199140536;  // std dev = 29.781, 3,558.000 (wgt'ed) examples reached here.  /* #neg=1,809 #pos=1,749 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.019589904794022516;  // std dev = 6.732, 252.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=64 */
%   | | | else return 0.14893749471044693;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.09515448343540497;  // std dev = 0.939, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.013017945779818492;  // std dev = 4.826, 155.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=29 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.039982852023167585;  // std dev = 0.499, 3,596.000 (wgt'ed) examples reached here.  /* #neg=1,845 #pos=1,751 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.02577807918884975;  // std dev = 4.118, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return 0.08010492045336463;  // std dev = 3.931, 72.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=49 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13545856453254612;  // std dev = 2.663, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.013443156099450291;  // std dev = 6.789, 250.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=66 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.011723373799640292;  // std dev = 4.846, 156.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=29 */
%   | | | else return -0.09363073001601123;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.426', 'seconds']
Refined model CLL: -0.673838


******************************************
Best model found
******************************************
Results 

CLL : -0.605033 

AUC ROC : 0.559731 

AUC PR : 0.247054 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 468.376 

Total Inference Time : 3.7296929359436035 

Total revision time: 475.89657490348816
Best scored revision CLL: -0.673838


Results 

CLL : -0.605033 

AUC ROC : 0.559731 

AUC PR : 0.247054 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 475.91865604019165 

Total Inference Time : 3.7296929359436035 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.418
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '747', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 660.928
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6984459746020693;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3400192693747403;  // std dev = 6.348, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23228051201687605;  // std dev = 4.662, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30843319502714456;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1670534496159236;  // std dev = 4.650, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2442572865968671;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559874;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820734;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508127;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.30501238911018724;  // std dev = 1.197, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14509184200254754;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510855;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094524;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510976;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27754039931628316;  // std dev = 4.117, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10945182127535631;  // std dev = 2.855, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09192763723756966;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10729931279916369;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.034718743328304456;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.015948249735960766;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07042213526709874;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.057245225051179204;  // std dev = 4.642, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12095724553580418;  // std dev = 4.293, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02659322878595537;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188575;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302802;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05322710223746079;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.20077852292397452;  // std dev = 1.212, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.058835107242085564;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02242976577421199;  // std dev = 7.498, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13251849744708535;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06923665802894202;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005865;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04011994476903041;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.018246455755123087;  // std dev = 4.633, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.08465825370655282;  // std dev = 4.285, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.016835490301491455;  // std dev = 7.485, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12710178926820453;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007107838771578387;  // std dev = 5.413, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08535272928885214;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.419', 'seconds']
Refined model CLL: -0.673356


******************************************
Best model found
******************************************
Results 

CLL : -0.604164 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 660.928 

Total Inference Time : 4.177379608154297 

Total revision time: 669.7646365604401
Best scored revision CLL: -0.673356


Results 

CLL : -0.604164 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 669.7867176971436 

Total Inference Time : 4.177379608154297 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.284
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '659', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 165.309
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24681290271084355;  // std dev = 15.322, 988.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=384 */
%   | | | else return 0.2714822684328444;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.5914822684328456;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.04429008929073158;  // std dev = 2.687, 82.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=8 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.06745126068090773;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21403753874156664;  // std dev = 15.322, 988.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=384 */
%   | | | else return 0.23512267046316226;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2293420911972036;  // std dev = 1.482, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.47771195223228413;  // std dev = 1.988, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.06205379637589729;  // std dev = 1.906, 51.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.019010854689848974;  // std dev = 2.431, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 8.835646163369135E-4;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.059040467278907924;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7923500518661636;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5130080564992683;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.17911884203523956;  // std dev = 15.829, 1,056.000 (wgt'ed) examples reached here.  /* #neg=647 #pos=409 */
%   | | | else return 0.3114675408772343;  // std dev = 2.495, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.036994905620694345;  // std dev = 2.678, 82.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=8 */
%   | | | else return 0.07116629076718407;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return 0.03892476769166317;  // std dev = 0.394, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14928446843765253;  // std dev = 15.300, 988.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=384 */
%   | | | else return 0.1662588043741871;  // std dev = 4.265, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13993747696022985;  // std dev = 1.788, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.3564515292347997;  // std dev = 1.662, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.05420399494084637;  // std dev = 1.895, 51.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.02111735302305893;  // std dev = 2.431, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.004035225420471052;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.046098891410695036;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12319959588629562;  // std dev = 15.349, 992.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=388 */
%   | | | else return 0.10503103806869252;  // std dev = 4.079, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05919958461004707;  // std dev = 1.474, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.25975017818824236;  // std dev = 1.927, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.2665761378980246;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.030487377118833068;  // std dev = 0.948, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03557937133560833;  // std dev = 2.671, 84.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=8 */
%   | | | else return 0.035888743186198765;  // std dev = 2.963, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09634402248713146;  // std dev = 15.297, 988.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=384 */
%   | | | else return 0.1110462763502378;  // std dev = 4.267, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0580559438614794;  // std dev = 1.782, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.2256887984083647;  // std dev = 1.627, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.23265571340623348;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.026825171025330483;  // std dev = 0.948, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03159029707154123;  // std dev = 2.672, 84.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=8 */
%   | | | else return 0.03090965924485917;  // std dev = 2.963, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5451252860699713;  // std dev = 1.309, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.05312860461965401;  // std dev = 2.314, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.020243833182571908;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.07333265004951549;  // std dev = 15.569, 1,025.000 (wgt'ed) examples reached here.  /* #neg=625 #pos=400 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -0.028876112805506275;  // std dev = 2.633, 82.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=8 */
%   | | | else return 0.0772139031941451;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.010964295619555187;  // std dev = 1.308, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.03049677890688728;  // std dev = 2.666, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.060764186820592314;  // std dev = 15.297, 992.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=388 */
%   | | | else return 0.044795025317386605;  // std dev = 4.075, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.01302364517108513;  // std dev = 1.472, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1457369409939965;  // std dev = 1.902, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.20232650993970216;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.02146964574821113;  // std dev = 0.949, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.02717798482044283;  // std dev = 2.666, 84.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=8 */
%   | | | else return 0.02340443715966308;  // std dev = 2.962, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.045393389925496574;  // std dev = 15.243, 988.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=384 */
%   | | | else return 0.059329037228259135;  // std dev = 4.269, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -9.369472483153468E-4;  // std dev = 1.780, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.13519662199284319;  // std dev = 1.608, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.16829318395136494;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01902313842401568;  // std dev = 0.949, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.02429257190742923;  // std dev = 2.666, 84.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=8 */
%   | | | else return 0.01997936283271155;  // std dev = 2.962, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03682509997954953;  // std dev = 15.296, 992.000 (wgt'ed) examples reached here.  /* #neg=604 #pos=388 */
%   | | | else return 0.02222710943262471;  // std dev = 4.072, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.032267269418260774;  // std dev = 1.472, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.09683225331196713;  // std dev = 1.888, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.024870122723383074;  // std dev = 2.607, 82.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=8 */
%   | | | else return 0.07414035321048772;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.014517256673354547;  // std dev = 1.307, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.019660767603640463;  // std dev = 2.665, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.599', 'seconds']
Refined model CLL: -0.630918


******************************************
Best model found
******************************************
Results 

CLL : -0.677604 

AUC ROC : 0.539568 

AUC PR : 0.455081 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 165.309 

Total Inference Time : 5.20267653465271 

Total revision time: 172.74991685676574
Best scored revision CLL: -0.630918


Results 

CLL : -0.677604 

AUC ROC : 0.539568 

AUC PR : 0.455081 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 172.77199799346923 

Total Inference Time : 5.20267653465271 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.86
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '650', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 303.899
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.24469511983846312;  // std dev = 21.734, 1,992.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=770 */
%   | | | else return 0.20929397326745144;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.5248156017661781;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06449814144871802;  // std dev = 4.543, 126.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=26 */
%   | | | else return -0.04015614964625042;  // std dev = 2.322, 59.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.08823743067473282;  // std dev = 4.474, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21222478593193556;  // std dev = 21.734, 1,992.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=770 */
%   | | | else return 0.18186045106222926;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.28858739689073243;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.4482956062419621;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05646402254536993;  // std dev = 4.543, 126.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=26 */
%   | | | else return -0.03533791082465639;  // std dev = 2.322, 59.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.07715325341491405;  // std dev = 4.474, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.17954219023709164;  // std dev = 21.734, 1,992.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=770 */
%   | | | else return 0.15472883492592274;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2293239846351572;  // std dev = 2.274, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.3689478026387153;  // std dev = 2.829, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.049126289052756275;  // std dev = 4.543, 126.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=26 */
%   | | | else return -0.031212377633073246;  // std dev = 2.322, 59.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.06688858640914329;  // std dev = 4.474, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14852116069208138;  // std dev = 21.734, 1,992.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=770 */
%   | | | else return 0.12915671328039838;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.17203642676619868;  // std dev = 2.284, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.29547895825752213;  // std dev = 2.807, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04223985035881372;  // std dev = 4.540, 127.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=26 */
%   | | | else return -0.02828174384703903;  // std dev = 2.326, 58.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14101034786155595;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.05786379945258851;  // std dev = 4.464, 115.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=26 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7340007855571709;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3096679193546878;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1195928863246956;  // std dev = 0.486, 2,169.000 (wgt'ed) examples reached here.  /* #neg=1,328 #pos=841 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.01749115460319963;  // std dev = 5.087, 176.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=32 */
%   | | | else return 0.12515932380852896;  // std dev = 2.361, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024215277373218717;  // std dev = 3.804, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | | else return -0.10061125215247113;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3164656926767143;  // std dev = 2.998, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return -0.013136214083357002;  // std dev = 2.678, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else return 0.09485216387087947;  // std dev = 0.486, 2,102.000 (wgt'ed) examples reached here.  /* #neg=1,289 #pos=813 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0011721516847854982;  // std dev = 4.602, 157.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=26 */
%   | | | else return 0.08614477393412996;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.047758497701891355;  // std dev = 4.467, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.09187223300086864;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0755666280840219;  // std dev = 21.691, 1,992.000 (wgt'ed) examples reached here.  /* #neg=1,222 #pos=770 */
%   | | | else return 0.0642505696376823;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06497277764712346;  // std dev = 2.277, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.18394301826112447;  // std dev = 2.800, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03104954529347622;  // std dev = 4.526, 127.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=26 */
%   | | | else return -0.03393071540827529;  // std dev = 2.319, 58.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1233041666438507;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.041394686920387724;  // std dev = 4.458, 115.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.057973174186200196;  // std dev = 21.655, 1,991.000 (wgt'ed) examples reached here.  /* #neg=1,225 #pos=766 */
%   | | | else return 0.06889155778091076;  // std dev = 5.601, 132.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04425764706829988;  // std dev = 2.279, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.14144653666905285;  // std dev = 2.794, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.11662273681444718;  // std dev = 2.188, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.17851788854070438;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01729334326936703;  // std dev = 5.186, 178.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=34 */
%   | | | else return 0.003417357851098213;  // std dev = 3.717, 100.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21443584378830988;  // std dev = 2.994, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | | else return -0.04507564988050646;  // std dev = 2.649, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else return 0.04500484116567532;  // std dev = 0.486, 2,102.000 (wgt'ed) examples reached here.  /* #neg=1,289 #pos=813 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0053870214726214425;  // std dev = 4.592, 157.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=26 */
%   | | | else return 0.07817660345546565;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03131630917438834;  // std dev = 4.447, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.08395769282310277;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.25340703219915306;  // std dev = 2.124, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.033047756363626064;  // std dev = 3.284, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | else return 0.034848116026763146;  // std dev = 0.486, 2,102.000 (wgt'ed) examples reached here.  /* #neg=1,289 #pos=813 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.02619843528992193;  // std dev = 4.526, 126.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=26 */
%   | | | else return -0.03564927505618056;  // std dev = 2.301, 59.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=6 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026287985656131916;  // std dev = 4.447, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.07773972693767504;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.181', 'seconds']
Refined model CLL: -0.639786


******************************************
Best model found
******************************************
Results 

CLL : -0.676689 

AUC ROC : 0.539083 

AUC PR : 0.45409 

Precision : 0.608696 

Recall : 0.037483 

F1 : 0.070618 

Total Learning Time : 303.899 

Total Inference Time : 7.488040924072266 

Total revision time: 314.34759753608705
Best scored revision CLL: -0.639786


Results 

CLL : -0.676689 

AUC ROC : 0.539083 

AUC PR : 0.45409 

Precision : 0.608696 

Recall : 0.037483 

F1 : 0.070618 

Total Learning Time : 314.36967867279054 

Total Inference Time : 7.488040924072266 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.452
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '740', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 480.167
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.24490968778767927;  // std dev = 26.568, 2,976.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,151 */
%   | | | else return 0.22943606381238488;  // std dev = 6.867, 202.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=75 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951234;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.5618526388032152;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.12841920536978263;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02041308604290801;  // std dev = 6.002, 265.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=43 */
%   | | | else return 0.050456627407203795;  // std dev = 4.922, 156.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21240846821811388;  // std dev = 26.568, 2,976.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,151 */
%   | | | else return 0.19915111568104674;  // std dev = 6.867, 202.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=75 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.47894507475018666;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.00893685039253512;  // std dev = 4.054, 140.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=19 */
%   | | | else return 0.05419089343627801;  // std dev = 5.204, 170.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=34 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.06002315357261938;  // std dev = 4.952, 149.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=31 */
%   | | | else return -0.14908378928014945;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.17969137645142905;  // std dev = 26.568, 2,976.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,151 */
%   | | | else return 0.16889544878850285;  // std dev = 6.867, 202.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=75 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5951466894703275;  // std dev = 0.975, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.30968457548797507;  // std dev = 4.118, 73.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=44 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10747898601639236;  // std dev = 2.691, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.0749927923103991;  // std dev = 0.967, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01518308459379297;  // std dev = 5.998, 265.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=43 */
%   | | | else return 0.038272112336157245;  // std dev = 4.912, 156.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.14863642633965846;  // std dev = 26.568, 2,976.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,151 */
%   | | | else return 0.14025943589366013;  // std dev = 6.867, 202.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=75 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15280001683425493;  // std dev = 2.638, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.32482223840530433;  // std dev = 3.278, 54.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.036385922889946354;  // std dev = 5.881, 227.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=43 */
%   | | | else return -0.026477342159279372;  // std dev = 2.970, 83.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04723832288037415;  // std dev = 4.950, 149.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=31 */
%   | | | else return -0.13655303213649492;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12065298422468045;  // std dev = 26.557, 2,975.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,150 */
%   | | | else return 0.11413396319811218;  // std dev = 6.909, 203.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11625363564237674;  // std dev = 2.638, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.2480150678824718;  // std dev = 3.271, 54.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.04542766584662364;  // std dev = 2.339, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.10392537740556984;  // std dev = 0.967, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.013234075093829557;  // std dev = 5.892, 249.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=42 */
%   | | | else return 0.0369747273764247;  // std dev = 5.195, 174.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09644745672269214;  // std dev = 26.567, 2,976.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,151 */
%   | | | else return 0.09155000420721694;  // std dev = 6.869, 202.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=75 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06251292998382654;  // std dev = 2.597, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.20019759193919084;  // std dev = 3.276, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02775935973622864;  // std dev = 5.877, 227.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=43 */
%   | | | else return -0.02515880048087625;  // std dev = 2.970, 83.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03935704975406092;  // std dev = 4.944, 149.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=31 */
%   | | | else return -0.12337319212797201;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07621594176061386;  // std dev = 26.556, 2,975.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,150 */
%   | | | else return 0.07225915970486342;  // std dev = 6.912, 203.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.29030729161069346;  // std dev = 0.934, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.09383920251131854;  // std dev = 4.062, 73.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=44 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.03531279516783947;  // std dev = 2.334, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.09314939338377946;  // std dev = 0.966, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.008992488756980702;  // std dev = 5.888, 249.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=42 */
%   | | | else return 0.029454692697737456;  // std dev = 5.188, 174.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25465365742191876;  // std dev = 3.658, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | | | else return -0.04559963819215587;  // std dev = 3.378, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0.05884610468352787;  // std dev = 0.486, 3,144.000 (wgt'ed) examples reached here.  /* #neg=1,918 #pos=1,226 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.01332862767306518;  // std dev = 4.053, 140.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=19 */
%   | | | else return 0.027353421738598272;  // std dev = 5.186, 170.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03282370499844864;  // std dev = 4.940, 149.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=31 */
%   | | | else return -0.11219825454858631;  // std dev = 0.040, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2509169211271332;  // std dev = 2.898, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | | else return -0.014988931680709142;  // std dev = 4.015, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | else return 0.04575244295151568;  // std dev = 0.486, 3,144.000 (wgt'ed) examples reached here.  /* #neg=1,918 #pos=1,226 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.026936338836974955;  // std dev = 2.330, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.08399889783485097;  // std dev = 0.966, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04125285041195607;  // std dev = 2.863, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.009345992137767597;  // std dev = 7.299, 374.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=65 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03547782831382097;  // std dev = 26.516, 2,975.000 (wgt'ed) examples reached here.  /* #neg=1,825 #pos=1,150 */
%   | | | else return 0.033726860579771395;  // std dev = 6.913, 203.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=76 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.0071583169907933186;  // std dev = 2.575, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.1053298624199741;  // std dev = 3.287, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.07119940161472271;  // std dev = 2.659, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.08737575275042879;  // std dev = 0.966, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0014705518683137374;  // std dev = 5.986, 265.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=43 */
%   | | | else return 0.016841048194565653;  // std dev = 4.881, 156.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.608', 'seconds']
Refined model CLL: -0.639555


******************************************
Best model found
******************************************
Results 

CLL : -0.676733 

AUC ROC : 0.538949 

AUC PR : 0.452528 

Precision : 0.607843 

Recall : 0.041499 

F1 : 0.077694 

Total Learning Time : 480.167 

Total Inference Time : 13.230279445648193 

Total revision time: 496.97220687294003
Best scored revision CLL: -0.639555


Results 

CLL : -0.676733 

AUC ROC : 0.538949 

AUC PR : 0.452528 

Precision : 0.607843 

Recall : 0.041499 

F1 : 0.077694 

Total Learning Time : 496.9942880096435 

Total Inference Time : 13.230279445648193 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.335
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '631', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 853.855
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.25117111624553307;  // std dev = 0.488, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,627 #pos=1,701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.045851200471680766;  // std dev = 6.864, 309.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=58 */
%   | | | else return -0.01920955546652541;  // std dev = 3.377, 106.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.061852638803215405;  // std dev = 5.919, 216.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=44 */
%   | | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8247445219001664;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.46760166475730935;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1890856071714829;  // std dev = 5.466, 129.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=47 */
%   | | | else return 0.21679813606959508;  // std dev = 31.557, 4,178.000 (wgt'ed) examples reached here.  /* #neg=2,540 #pos=1,638 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014119843200835036;  // std dev = 6.910, 355.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=57 */
%   | | | else return 0.09353805526867763;  // std dev = 3.272, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.05415529670062673;  // std dev = 5.919, 216.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=44 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18399979155665916;  // std dev = 0.488, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,627 #pos=1,701 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12933469640798795;  // std dev = 3.056, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.047716167408435886;  // std dev = 1.337, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.009708278173214182;  // std dev = 6.916, 360.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=57 */
%   | | | else return 0.038837201332889405;  // std dev = 5.875, 223.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15195951317407128;  // std dev = 0.488, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,627 #pos=1,701 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03552814714559736;  // std dev = 6.850, 309.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=58 */
%   | | | else return -0.02567170324621031;  // std dev = 3.365, 106.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04181010485499407;  // std dev = 5.918, 216.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=44 */
%   | | | else return -0.11597073707123458;  // std dev = 0.024, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.31725070892137297;  // std dev = 3.940, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return 0.003801669452338821;  // std dev = 4.005, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | else return 0.12233909083277025;  // std dev = 0.488, 4,178.000 (wgt'ed) examples reached here.  /* #neg=2,540 #pos=1,638 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10890797284917617;  // std dev = 3.049, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.043624070674778456;  // std dev = 1.335, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006107697433707265;  // std dev = 6.913, 360.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=57 */
%   | | | else return 0.028963379696956802;  // std dev = 5.869, 223.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.098119353511814;  // std dev = 0.488, 4,328.000 (wgt'ed) examples reached here.  /* #neg=2,627 #pos=1,701 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0853440391205996;  // std dev = 3.101, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return -0.11750886987068238;  // std dev = 0.973, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.06435991288315013;  // std dev = 3.342, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.009903054217964195;  // std dev = 8.435, 513.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=86 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3037658021059923;  // std dev = 3.126, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | | else return -0.029766887184386064;  // std dev = 4.271, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else return 0.07737756313907526;  // std dev = 0.488, 4,192.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,646 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.001286710223553631;  // std dev = 6.872, 355.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=57 */
%   | | | else return 0.08097031168234699;  // std dev = 3.271, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.029438684755360243;  // std dev = 5.904, 216.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=44 */
%   | | | else return -0.10887318249144973;  // std dev = 0.043, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.21054449256393273;  // std dev = 3.929, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return -0.0308494076106376;  // std dev = 4.021, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | else return 0.059778047876629374;  // std dev = 0.488, 4,178.000 (wgt'ed) examples reached here.  /* #neg=2,540 #pos=1,638 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08423343845051898;  // std dev = 3.043, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.04505153929427065;  // std dev = 1.335, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00199498423322786;  // std dev = 6.905, 360.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=57 */
%   | | | else return 0.019452679470766045;  // std dev = 5.851, 223.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.19739164417178082;  // std dev = 3.518, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | | | else return -0.06588729255275007;  // std dev = 3.907, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | else return 0.04686705551546172;  // std dev = 0.488, 4,192.000 (wgt'ed) examples reached here.  /* #neg=2,546 #pos=1,646 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07085005207430115;  // std dev = 3.041, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return -0.03973150373374161;  // std dev = 1.335, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0017317545486450875;  // std dev = 6.905, 360.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=57 */
%   | | | else return 0.01665501886874495;  // std dev = 5.850, 223.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.41877994318564227;  // std dev = 18.778, 2,017.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=1,551 */
%   | | | else return -0.31067608653827955;  // std dev = 8.335, 2,274.000 (wgt'ed) examples reached here.  /* #neg=2,207 #pos=67 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12648213914691034;  // std dev = 4.203, 106.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=23 */
%   | | | else return 0.04170115091084032;  // std dev = 7.298, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.06217560019343128;  // std dev = 6.350, 236.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=59 */
%   | | | else return -0.13165227143408503;  // std dev = 1.385, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordvenue(B, L) )
%   | | | then return 0.45404509244734736;  // std dev = 2.399, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return -0.10201903171752277;  // std dev = 0.067, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.575', 'seconds']
Refined model CLL: -0.538054


******************************************
Best model found
******************************************
Results 

CLL : -0.55748 

AUC ROC : 0.883017 

AUC PR : 0.807109 

Precision : 1.0 

Recall : 0.022758 

F1 : 0.044503 

Total Learning Time : 853.855 

Total Inference Time : 8.949984788894653 

Total revision time: 867.3504819297791
Best scored revision CLL: -0.538054


Results 

CLL : -0.55748 

AUC ROC : 0.883017 

AUC PR : 0.807109 

Precision : 1.0 

Recall : 0.022758 

F1 : 0.044503 

Total Learning Time : 867.3725630664826 

Total Inference Time : 8.949984788894653 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.381
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '698', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 303.576
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.43709630352056494;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.22178529873587716;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.2510675953865885;  // std dev = 35.304, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04548402744779789;  // std dev = 7.596, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.015090501520205963;  // std dev = 3.965, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.050876207826785;  // std dev = 6.541, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21825953046935773;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1284259102691069;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0729992742672386;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.06065195582305038;  // std dev = 3.665, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.018308337033637403;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844374578841011;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.03779940555676967;  // std dev = 7.590, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.021496638100556405;  // std dev = 3.958, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04132323186267624;  // std dev = 6.527, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.12850956411424796;  // std dev = 0.031, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.34513863886866114;  // std dev = 4.284, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.031419359519231686;  // std dev = 4.454, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15174128903083214;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11655989258006957;  // std dev = 3.492, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08436234072980024;  // std dev = 1.357, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04841917900028286;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01289943283361277;  // std dev = 9.400, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12329175719055102;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10071211256040609;  // std dev = 3.491, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07336459336189906;  // std dev = 1.358, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04159269157928965;  // std dev = 3.635, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.011237171866177668;  // std dev = 9.400, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09830552644030395;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0018657810308547792;  // std dev = 7.680, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08094937865743233;  // std dev = 3.717, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.029918875834506958;  // std dev = 6.516, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.11843161452184608;  // std dev = 0.053, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.22630833014765692;  // std dev = 4.274, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.01801607293884449;  // std dev = 4.449, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.07706586606178618;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.085104510256911;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06371067243427955;  // std dev = 1.358, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004468781397168215;  // std dev = 7.760, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01955066585355625;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060421439827542764;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1956254922242211;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009047290228172194;  // std dev = 3.389, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.003880004535005957;  // std dev = 7.760, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016868015522296265;  // std dev = 6.414, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.22594956819409068;  // std dev = 4.226, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.07264198597948801;  // std dev = 4.531, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.01760371426041199;  // std dev = 5.703, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.04736771547937877;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08676596465663809;  // std dev = 3.463, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08713504000151413;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return -8.977205238470068E-4;  // std dev = 7.759, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.019614716939587086;  // std dev = 6.394, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.1865712648506823;  // std dev = 3.978, 69.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | | else return 0.03462972699914106;  // std dev = 1.858, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return 0.02971546599233152;  // std dev = 34.929, 5,292.000 (wgt'ed) examples reached here.  /* #neg=3,316 #pos=1,976 */
%   | | | else return -0.0035226801318416945;  // std dev = 9.465, 462.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=133 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.22979537980378834;  // std dev = 3.229, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.459789741644651;  // std dev = 2.570, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.023228803321579335;  // std dev = 6.491, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1106844001011296;  // std dev = 0.073, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.387', 'seconds']
Refined model CLL: -0.639527


******************************************
Best model found
******************************************
Results 

CLL : -0.677732 

AUC ROC : 0.537234 

AUC PR : 0.450934 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 303.576 

Total Inference Time : 6.242906093597412 

Total revision time: 315.43787978363036
Best scored revision CLL: -0.639527


Results 

CLL : -0.677732 

AUC ROC : 0.537234 

AUC PR : 0.450934 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 315.45996092033386 

Total Inference Time : 6.242906093597412 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.342
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '622', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 400.908
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else return 0.22864073837819596;  // std dev = 0.483, 1,220.000 (wgt'ed) examples reached here.  /* #neg=768 #pos=452 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03887182666577744;  // std dev = 3.506, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0198998453882926;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2013489807116124;  // std dev = 0.484, 1,249.000 (wgt'ed) examples reached here.  /* #neg=782 #pos=467 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03407379120919525;  // std dev = 3.506, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return 0.12543301544918353;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.017494671642432055;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.17068812522634028;  // std dev = 0.484, 1,249.000 (wgt'ed) examples reached here.  /* #neg=782 #pos=467 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.02975814708994663;  // std dev = 3.506, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return 0.10782354562777491;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.015408510438769165;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1416559007054906;  // std dev = 0.484, 1,249.000 (wgt'ed) examples reached here.  /* #neg=782 #pos=467 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.025904169239630518;  // std dev = 3.506, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return 0.09150383240113776;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.013592905748145851;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.45207169027052646;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18341789370410164;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else return 0.1127361143410249;  // std dev = 0.483, 1,220.000 (wgt'ed) examples reached here.  /* #neg=768 #pos=452 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.04712755746685796;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.04108180019877496;  // std dev = 3.959, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.012008074624336715;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3439081976217366;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05342777960653885;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.0922998070137013;  // std dev = 0.483, 1,223.000 (wgt'ed) examples reached here.  /* #neg=767 #pos=456 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.018206514331782227;  // std dev = 3.504, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return 0.06991133237180244;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0106210805546405;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2918799311215298;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0933710751610097;  // std dev = 2.174, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return 0.07174953454897383;  // std dev = 0.483, 1,220.000 (wgt'ed) examples reached here.  /* #neg=768 #pos=452 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.03677387376471088;  // std dev = 3.340, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | | else return -5.264200674795209E-4;  // std dev = 2.325, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.009404448689713855;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05783684361766929;  // std dev = 0.483, 1,249.000 (wgt'ed) examples reached here.  /* #neg=782 #pos=467 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.011438401839233307;  // std dev = 3.501, 83.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=15 */
%   | | | else return 0.0579378811073977;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.008335103526439736;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4276844614112436;  // std dev = 10.232, 571.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=428 */
%   | | | else return -0.289607903275374;  // std dev = 4.394, 661.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=19 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.14251099396834505;  // std dev = 1.809, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.01981943929598267;  // std dev = 3.721, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.046929353243990286;  // std dev = 3.092, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.31356476499988734;  // std dev = 0.950, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3951379859953398;  // std dev = 0.359, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.3291583809796429;  // std dev = 10.217, 571.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=428 */
%   | | | else return -0.23070842171608508;  // std dev = 4.363, 661.000 (wgt'ed) examples reached here.  /* #neg=642 #pos=19 */
%   | | else if ( title(H, E), venue(H, B) )
%   | | | then return -0.11432553162282967;  // std dev = 1.809, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.01597317573392398;  // std dev = 3.720, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.304026154934786;  // std dev = 1.364, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.5812497798946215;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013446438843862107;  // std dev = 2.848, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return -0.09832556680542848;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.476', 'seconds']
Refined model CLL: -0.474597


******************************************
Best model found
******************************************
Results 

CLL : -0.531113 

AUC ROC : 0.902196 

AUC PR : 0.892055 

Precision : 0.897485 

Recall : 0.843636 

F1 : 0.869728 

Total Learning Time : 400.908 

Total Inference Time : 5.188633918762207 

Total revision time: 408.4679145812988
Best scored revision CLL: -0.474597


Results 

CLL : -0.531113 

AUC ROC : 0.902196 

AUC PR : 0.892055 

Precision : 0.897485 

Recall : 0.843636 

F1 : 0.869728 

Total Learning Time : 408.4899957180023 

Total Inference Time : 5.188633918762207 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.918
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '570', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 417.188
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.23019100346059404;  // std dev = 23.090, 2,282.000 (wgt'ed) examples reached here.  /* #neg=1,433 #pos=849 */
%   | | | else return 0.20597502205603452;  // std dev = 5.595, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3097618383253188;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.5456489350995116;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.058148935099511315;  // std dev = 5.138, 165.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=33 */
%   | | | else return 0.0010060779566551897;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.002727248352524393;  // std dev = 3.204, 83.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19979844586903414;  // std dev = 23.090, 2,282.000 (wgt'ed) examples reached here.  /* #neg=1,433 #pos=849 */
%   | | | else return 0.17900772288295086;  // std dev = 5.595, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26772691987897845;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.46555214248586185;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07720141537297659;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.046648719484689675;  // std dev = 5.675, 206.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=40 */
%   | | | else return -0.007548140333278611;  // std dev = 3.220, 90.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16950116702142928;  // std dev = 23.061, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,430 #pos=847 */
%   | | | else return 0.15174813681505053;  // std dev = 5.710, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22411808260116656;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.37507337777171845;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04528395011687859;  // std dev = 5.136, 165.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=33 */
%   | | | else return -0.001962775362692535;  // std dev = 2.616, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0033130797234478524;  // std dev = 3.204, 83.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=12 */
%   | | | else return -0.12461888351841435;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14074886244318804;  // std dev = 23.061, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,430 #pos=847 */
%   | | | else return 0.12655544643237107;  // std dev = 5.711, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17683792077816438;  // std dev = 2.872, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.3070316131267175;  // std dev = 2.493, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06926023882363816;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.036028998556929516;  // std dev = 5.674, 206.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=40 */
%   | | | else return -0.005999417988073466;  // std dev = 3.217, 90.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11481693121331289;  // std dev = 23.088, 2,282.000 (wgt'ed) examples reached here.  /* #neg=1,433 #pos=849 */
%   | | | else return 0.10301319539905258;  // std dev = 5.602, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12883617968148267;  // std dev = 2.768, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.23635329150484372;  // std dev = 2.597, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06133069239625242;  // std dev = 0.970, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.03117415189063832;  // std dev = 5.674, 206.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=40 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003638643782441701;  // std dev = 3.204, 83.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=12 */
%   | | | else return -0.11105423841332884;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09229630965656628;  // std dev = 23.060, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,430 #pos=847 */
%   | | | else return 0.0834651477378566;  // std dev = 5.715, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0882881496546923;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.19931039629991865;  // std dev = 2.464, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05464164589618061;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026877283759981496;  // std dev = 5.674, 206.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=40 */
%   | | | else return -0.004872132796760736;  // std dev = 3.215, 90.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07334620609629049;  // std dev = 23.087, 2,282.000 (wgt'ed) examples reached here.  /* #neg=1,433 #pos=849 */
%   | | | else return 0.06635071910165605;  // std dev = 5.605, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06699105790658601;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.15142979328455636;  // std dev = 2.462, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04893800682172282;  // std dev = 0.250, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02310043903719231;  // std dev = 5.674, 206.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=40 */
%   | | | else return -0.004293440345426781;  // std dev = 3.215, 90.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05777273955609784;  // std dev = 23.059, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,430 #pos=847 */
%   | | | else return 0.05269437575276792;  // std dev = 5.717, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03473665211689872;  // std dev = 2.767, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.12413047843492753;  // std dev = 2.565, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007928787488507312;  // std dev = 5.184, 184.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=33 */
%   | | | else return 0.05296155778244287;  // std dev = 2.499, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0043064934592097134;  // std dev = 3.204, 83.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=12 */
%   | | | else return -0.09972917988282824;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04520051325840669;  // std dev = 23.087, 2,282.000 (wgt'ed) examples reached here.  /* #neg=1,433 #pos=849 */
%   | | | else return 0.041315031991055136;  // std dev = 5.606, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.028034765321096566;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.09903001248150758;  // std dev = 2.450, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02264855391080657;  // std dev = 5.129, 165.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=33 */
%   | | | else return -0.014254632674609755;  // std dev = 2.608, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0037863441456977135;  // std dev = 3.204, 83.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=12 */
%   | | | else return -0.09112573565920515;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03518828474970861;  // std dev = 23.059, 2,277.000 (wgt'ed) examples reached here.  /* #neg=1,430 #pos=847 */
%   | | | else return 0.032412059497286594;  // std dev = 5.719, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.00865346619440773;  // std dev = 2.769, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.08235483232811897;  // std dev = 2.557, 32.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=22 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0444444706255392;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015345970959934877;  // std dev = 5.671, 206.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=40 */
%   | | | else return -0.0034531473387218823;  // std dev = 3.212, 90.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.597', 'seconds']
Refined model CLL: -0.637089


******************************************
Best model found
******************************************
Results 

CLL : -0.747263 

AUC ROC : 0.641505 

AUC PR : 0.640418 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 417.188 

Total Inference Time : 12.762709617614746 

Total revision time: 432.9346588191986
Best scored revision CLL: -0.637089


Results 

CLL : -0.747263 

AUC ROC : 0.641505 

AUC PR : 0.640418 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 432.9567399559021 

Total Inference Time : 12.762709617614746 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.658
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '592', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 595.98
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.23184231489044796;  // std dev = 28.391, 3,444.000 (wgt'ed) examples reached here.  /* #neg=2,157 #pos=1,287 */
%   | | | else return 0.18809817367819387;  // std dev = 6.599, 197.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.30259337954395565;  // std dev = 3.651, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.5039822684328447;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.09423201728144018;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.03807973094726309;  // std dev = 6.530, 289.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008524874949136315;  // std dev = 4.122, 133.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=20 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.201214192881204;  // std dev = 28.391, 3,444.000 (wgt'ed) examples reached here.  /* #neg=2,157 #pos=1,287 */
%   | | | else return 0.16362450117312705;  // std dev = 6.599, 197.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2616318086752131;  // std dev = 3.651, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.4309973442579218;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.08314364249724379;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.033380793096055544;  // std dev = 6.530, 289.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=52 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007483975802221801;  // std dev = 4.122, 133.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=20 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1705792596637156;  // std dev = 28.391, 3,444.000 (wgt'ed) examples reached here.  /* #neg=2,157 #pos=1,287 */
%   | | | else return 0.13968240963932296;  // std dev = 6.599, 197.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2192721473492705;  // std dev = 3.651, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.34954182216286817;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00989225697369349;  // std dev = 5.864, 259.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=41 */
%   | | | else return 0.08451962551501273;  // std dev = 3.029, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.006564932533194365;  // std dev = 4.122, 133.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=20 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14157074912252898;  // std dev = 28.391, 3,444.000 (wgt'ed) examples reached here.  /* #neg=2,157 #pos=1,287 */
%   | | | else return 0.11722717799348141;  // std dev = 6.599, 197.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16770562958780846;  // std dev = 3.535, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.2796665120108259;  // std dev = 3.423, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0785406348139957;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026761660851467712;  // std dev = 6.524, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 3.87152921876118E-4;  // std dev = 4.131, 140.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11544421183161371;  // std dev = 28.449, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,170 #pos=1,292 */
%   | | | else return 0.09398618553008735;  // std dev = 6.343, 179.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=60 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12964107074107964;  // std dev = 3.640, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.22277872472676588;  // std dev = 3.301, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07026106448911945;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023246895102717356;  // std dev = 6.524, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 3.3988107138105444E-4;  // std dev = 4.131, 140.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09275019110982533;  // std dev = 28.449, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,170 #pos=1,292 */
%   | | | else return 0.07638272000012375;  // std dev = 6.345, 179.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0855206993425534;  // std dev = 3.521, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.18120712553616353;  // std dev = 3.409, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.024433563765259278;  // std dev = 4.592, 144.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=26 */
%   | | | else return 0.004820050540927387;  // std dev = 4.124, 134.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=20 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00604756387227248;  // std dev = 4.747, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
%   | | | else return -0.101662708387118;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.36651990238528015;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.0422419417980572;  // std dev = 3.858, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07141506709669346;  // std dev = 28.752, 3,549.000 (wgt'ed) examples reached here.  /* #neg=2,237 #pos=1,312 */
%   | | | else return 0.10114835900831419;  // std dev = 4.876, 100.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06522714709548155;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0182096146924312;  // std dev = 6.523, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 1.7644393538826162E-4;  // std dev = 4.130, 140.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.058053382890522136;  // std dev = 28.431, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,170 #pos=1,292 */
%   | | | else return 0.047226160090389366;  // std dev = 6.346, 179.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.041083850412044695;  // std dev = 3.520, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.11332572994614626;  // std dev = 3.408, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.058969592917010386;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.015718453809186763;  // std dev = 6.523, 288.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=52 */
%   | | | else return 1.5488259722157996E-4;  // std dev = 4.130, 140.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04542560840917343;  // std dev = 28.371, 3,444.000 (wgt'ed) examples reached here.  /* #neg=2,157 #pos=1,287 */
%   | | | else return 0.037641464841216894;  // std dev = 6.610, 197.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.022475989880281797;  // std dev = 3.623, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
%   | | | else return 0.09752444793408055;  // std dev = 3.288, 48.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05358338357058352;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.015329484377278919;  // std dev = 6.088, 260.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=45 */
%   | | | else return -3.9346723075033073E-4;  // std dev = 4.747, 168.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03534715661832265;  // std dev = 28.430, 3,462.000 (wgt'ed) examples reached here.  /* #neg=2,170 #pos=1,292 */
%   | | | else return 0.028978000286511936;  // std dev = 6.350, 179.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=60 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0141179135778641;  // std dev = 3.514, 52.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=26 */
%   | | | else return 0.07434873761112246;  // std dev = 3.403, 50.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=29 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.018419868449025392;  // std dev = 5.122, 189.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=32 */
%   | | | else return -0.007996784221239048;  // std dev = 3.430, 89.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=14 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.001215135641066211;  // std dev = 4.745, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
%   | | | else return -0.09274162328476311;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.562', 'seconds']
Refined model CLL: -0.63674


******************************************
Best model found
******************************************
Results 

CLL : -0.748119 

AUC ROC : 0.636902 

AUC PR : 0.629054 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 595.98 

Total Inference Time : 15.859920263290405 

Total revision time: 615.6503407840729
Best scored revision CLL: -0.63674


Results 

CLL : -0.748119 

AUC ROC : 0.636902 

AUC PR : 0.629054 

Precision : 0.904762 

Recall : 0.034545 

F1 : 0.06655 

Total Learning Time : 615.6724219207764 

Total Inference Time : 15.859920263290405 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.706
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '587', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 830.547
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22979395674452882;  // std dev = 32.846, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,717 */
%   | | | else return 0.18879409638983485;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3370221745361308;  // std dev = 4.209, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | | else return 0.5156831816748553;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.016534028267214066;  // std dev = 6.552, 322.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=51 */
%   | | | else return 0.1005731775237548;  // std dev = 3.482, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004488427537850699;  // std dev = 4.644, 182.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=25 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19945800102251768;  // std dev = 32.846, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,717 */
%   | | | else return 0.16422390426238176;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2908609424016358;  // std dev = 4.209, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | | else return 0.440717944982494;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014509408960937546;  // std dev = 6.552, 322.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=51 */
%   | | | else return 0.08788410223490276;  // std dev = 3.482, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.003942932028501218;  // std dev = 4.644, 182.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=25 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16914600580566674;  // std dev = 32.846, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,717 */
%   | | | else return 0.14017868744088266;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2316317633908184;  // std dev = 4.104, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   | | | else return 0.36361478820437027;  // std dev = 4.143, 75.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012712954629203018;  // std dev = 6.552, 322.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=51 */
%   | | | else return 0.0760497051086857;  // std dev = 3.482, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0034651796455164815;  // std dev = 4.644, 182.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=25 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1404546759097283;  // std dev = 32.846, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,717 */
%   | | | else return 0.11762290394007675;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18108599776962556;  // std dev = 4.192, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | | else return 0.29290989369411263;  // std dev = 4.037, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07829590858489105;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02829462106575598;  // std dev = 7.283, 359.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=65 */
%   | | | else return -0.007195900063523691;  // std dev = 4.652, 190.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=25 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11455476797188913;  // std dev = 32.846, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,717 */
%   | | | else return 0.09723961009090355;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.126304288157473;  // std dev = 4.082, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   | | | else return 0.23505811200369464;  // std dev = 4.123, 75.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06873285788634055;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05323617020850906;  // std dev = 1.645, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.017910284330031712;  // std dev = 8.482, 518.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=87 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09207442648539932;  // std dev = 32.846, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,717 */
%   | | | else return 0.07939217158688554;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09714877085943771;  // std dev = 4.176, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | | else return 0.18008025470555958;  // std dev = 4.023, 73.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.058309982817385024;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.022456572702509666;  // std dev = 7.282, 360.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=65 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004112862711394645;  // std dev = 4.643, 182.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=25 */
%   | | | else return -0.10257846270615932;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07315909284725504;  // std dev = 32.846, 4,620.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,717 */
%   | | | else return 0.06416378449318311;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.060384357461313556;  // std dev = 4.071, 69.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=35 */
%   | | | else return 0.1461872810697499;  // std dev = 4.114, 75.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0488568170091548;  // std dev = 0.295, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05464070547160273;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.01398129511041765;  // std dev = 8.479, 518.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=87 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4132456786613127;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | | | else return 0.009809378573195342;  // std dev = 4.163, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.055630424859042286;  // std dev = 33.255, 4,757.000 (wgt'ed) examples reached here.  /* #neg=3,007 #pos=1,750 */
%   | | | else return 0.07967874385355879;  // std dev = 5.767, 142.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=81 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005376207540854082;  // std dev = 6.537, 322.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=51 */
%   | | | else return 0.05315993804178268;  // std dev = 3.480, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005119429737682384;  // std dev = 4.642, 182.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=25 */
%   | | | else return -0.09470493101469578;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.13740811471792194;  // std dev = 1.568, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.3505226950940374;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.044246375932632316;  // std dev = 33.579, 4,851.000 (wgt'ed) examples reached here.  /* #neg=3,061 #pos=1,790 */
%   | | | else return 0.05999903830771412;  // std dev = 5.800, 144.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=82 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then return -0.04356571781987784;  // std dev = 0.295, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.049402316612370614;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.011077000453599382;  // std dev = 8.475, 518.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=87 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.30615459447514326;  // std dev = 2.554, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | | | else return -0.009582969040123642;  // std dev = 4.130, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03379676580145774;  // std dev = 33.255, 4,757.000 (wgt'ed) examples reached here.  /* #neg=3,007 #pos=1,750 */
%   | | | else return 0.045444024591459395;  // std dev = 5.767, 142.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=81 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.026770877637044267;  // std dev = 5.354, 188.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=36 */
%   | | | else return -0.0039707188513259575;  // std dev = 5.112, 200.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005684738293574514;  // std dev = 4.641, 182.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=25 */
%   | | | else return -0.08777397130749619;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.393', 'seconds']
Refined model CLL: -0.635471


******************************************
Best model found
******************************************
Results 

CLL : -0.750497 

AUC ROC : 0.635675 

AUC PR : 0.630192 

Precision : 0.896552 

Recall : 0.047273 

F1 : 0.08981 

Total Learning Time : 830.547 

Total Inference Time : 17.590140104293823 

Total revision time: 853.1089391498566
Best scored revision CLL: -0.635471


Results 

CLL : -0.750497 

AUC ROC : 0.635675 

AUC PR : 0.630192 

Precision : 0.896552 

Recall : 0.047273 

F1 : 0.08981 

Total Learning Time : 853.1310202865601 

Total Inference Time : 17.590140104293823 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.094
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '638', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 951.099
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533305;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011891393393414466;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08620770432032858;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004983742099648497;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651213;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496443;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06474094755843036;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029253790847881704;  // std dev = 8.049, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 7.884295564755214E-4;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406556;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788115;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603244;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05686081827131817;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.025590943787885713;  // std dev = 8.056, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return 5.82117221355213E-5;  // std dev = 5.536, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029153;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1052503820870875;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488163;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2302435168284414;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007184294263144765;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06883172415039013;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0010826109513982938;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11240081723261972;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611792;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431222;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997686;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766648;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004931557774098987;  // std dev = 7.207, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06727303880513595;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 2.658227261953103E-4;  // std dev = 5.537, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10166592025668722;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090495;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158732;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441798;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07337539651119565;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021222190306016655;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00272214436929532;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41697328558963404;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.02329407897537472;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05643083141141915;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.0809269429029528;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06403572869728948;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018406649422181034;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0023819598191449414;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4002065185000649;  // std dev = 2.687, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.032709567826688574;  // std dev = 4.611, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.043944845159973704;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.06119867764263374;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.056272366096409496;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017140429236273274;  // std dev = 8.034, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.004672964543633174;  // std dev = 5.532, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3068096668516095;  // std dev = 2.686, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.025604470497623166;  // std dev = 4.611, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03424255271542702;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.046174660256589166;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05813855476202122;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0497411720563005;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.011905480827647166;  // std dev = 9.606, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.394', 'seconds']
Refined model CLL: -0.635045


******************************************
Best model found
******************************************
Results 

CLL : -0.751419 

AUC ROC : 0.633935 

AUC PR : 0.621184 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 951.099 

Total Inference Time : 23.643519401550293 

Total revision time: 981.0949737243653
Best scored revision CLL: -0.635045


Results 

CLL : -0.751419 

AUC ROC : 0.633935 

AUC PR : 0.621184 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 981.1170548610688 

Total Inference Time : 23.643519401550293 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.296
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '610', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 36.536
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2643227775040566;  // std dev = 0.491, 1,231.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=500 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.03206197857777325;  // std dev = 3.636, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | | else return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.020939632773930943;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.22900928406313079;  // std dev = 0.491, 1,231.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=500 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.18845421982366828;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10299419587989485;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08119703021343454;  // std dev = 0.963, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.035627949676036885;  // std dev = 4.420, 131.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3286217139144983;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return -0.046378286085501486;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.19161782826364973;  // std dev = 0.491, 1,201.000 (wgt'ed) examples reached here.  /* #neg=715 #pos=486 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.03597448384176215;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.11680417898725415;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.04933249384904395;  // std dev = 4.078, 103.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
%   | | | else return 0.012963398202013284;  // std dev = 2.424, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15893209760340435;  // std dev = 0.491, 1,231.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=500 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.031803083350107376;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.10528330430319298;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.04277827968414385;  // std dev = 4.078, 103.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
%   | | | else return 0.01130486879080424;  // std dev = 2.424, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12818605285068993;  // std dev = 0.491, 1,231.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=500 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.02820624515225655;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.09576988663210041;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.09279694014610108;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.02163089175837688;  // std dev = 4.419, 131.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=24 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.12236432420935113;  // std dev = 1.843, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.30408252390057905;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.10656914905926379;  // std dev = 0.492, 1,202.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=494 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return -0.025086572489438068;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.08779137445288045;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.07906433210939375;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.018680672295494687;  // std dev = 4.419, 131.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=24 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07969910103876857;  // std dev = 0.490, 1,231.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=500 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.05063842537575148;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.13103670351664598;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.0484306488483655;  // std dev = 0.957, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.01609817049183482;  // std dev = 4.419, 131.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=24 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.061947517638136614;  // std dev = 0.490, 1,231.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=500 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.01726009622871369;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.07747726455514888;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.02523501489779953;  // std dev = 4.069, 103.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
%   | | | else return 0.0011894049748511855;  // std dev = 2.428, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.047839967974438555;  // std dev = 0.490, 1,231.000 (wgt'ed) examples reached here.  /* #neg=731 #pos=500 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.015485269594475775;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.07211774238632097;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.052063141146650664;  // std dev = 1.707, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.011286573916104218;  // std dev = 4.419, 131.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5128298128110749;  // std dev = 0.956, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.3386545447715403;  // std dev = 0.197, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return -0.09108401213929194;  // std dev = 1.651, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.2684894156924725;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then return 0.04054849900424777;  // std dev = 0.492, 1,202.000 (wgt'ed) examples reached here.  /* #neg=708 #pos=494 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.010033477112836349;  // std dev = 3.716, 100.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
%   | | | else return -0.008460367963866924;  // std dev = 2.579, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '780', 'milliseconds']
Refined model CLL: -0.646301


******************************************
Best model found
******************************************
Results 

CLL : -0.626322 

AUC ROC : 0.57694 

AUC PR : 0.38893 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 36.536 

Total Inference Time : 1.3499524593353271 

Total revision time: 40.196912509918214
Best scored revision CLL: -0.646301


Results 

CLL : -0.626322 

AUC ROC : 0.57694 

AUC PR : 0.38893 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 61.86886356544495 

Total Inference Time : 1.3499524593353271 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.968
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '617', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 369.262
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.26122585817643035;  // std dev = 23.396, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.22822767525699308;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39661047356104956;  // std dev = 4.019, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0634469483445445;  // std dev = 4.963, 151.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
%   | | | else return -0.0033895264389492015;  // std dev = 2.785, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.0298661068166841;  // std dev = 3.752, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22636337392669093;  // std dev = 23.396, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.1981148605677358;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34118274280999294;  // std dev = 4.019, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05554672277212401;  // std dev = 4.963, 151.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
%   | | | else return -0.002977422292208569;  // std dev = 2.785, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023984085965665765;  // std dev = 3.755, 101.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return -0.14150947074818293;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19099320804253098;  // std dev = 23.396, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.16804916941207323;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3992392376796129;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.28705351358377545;  // std dev = 3.965, 64.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.024574260161756806;  // std dev = 5.222, 192.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=33 */
%   | | | else return 0.08908962152503117;  // std dev = 2.290, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.02028653627125581;  // std dev = 3.740, 96.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=17 */
%   | | | else return -0.12518200094220822;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.157328487642274;  // std dev = 23.396, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.13959970528950236;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.21081539315986966;  // std dev = 3.064, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.2629540733035347;  // std dev = 2.626, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.021461860840077885;  // std dev = 5.222, 192.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=33 */
%   | | | else return 0.07723370394008658;  // std dev = 2.290, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.017585763905345973;  // std dev = 3.740, 96.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=17 */
%   | | | else return -0.11210950813658382;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12701668117418743;  // std dev = 23.396, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.11391585929958713;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4092070136292651;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16988094990271937;  // std dev = 4.017, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015502566091530712;  // std dev = 5.194, 186.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=33 */
%   | | | else return 0.08603769856379134;  // std dev = 2.311, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.014959015580796929;  // std dev = 3.756, 101.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=17 */
%   | | | else return -0.10143002758402386;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10092519277186908;  // std dev = 23.396, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.09161458831146077;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3151812926645743;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12954977551586042;  // std dev = 4.017, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03837304634340236;  // std dev = 4.952, 151.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
%   | | | else return -0.01626079542499209;  // std dev = 2.785, 65.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.127416105570998;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.01760456816110558;  // std dev = 3.744, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then return 0.36500023689125194;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordtitle(F, D) )
%   | | | then return 0.07831257457761631;  // std dev = 23.995, 2,398.000 (wgt'ed) examples reached here.  /* #neg=1,437 #pos=961 */
%   | | | else return 0.10050667265982922;  // std dev = 4.021, 66.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=36 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return -0.12086248188118444;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0877353745279614;  // std dev = 2.269, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.02352015614542616;  // std dev = 2.220, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.007824230770724904;  // std dev = 6.016, 256.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.061732853672560185;  // std dev = 23.393, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.056225395646961454;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.061459308561015044;  // std dev = 3.050, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.10217649924431646;  // std dev = 2.620, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.1085972336248965;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07549803818827039;  // std dev = 2.268, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.020452237624319067;  // std dev = 2.220, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.006749536643546652;  // std dev = 6.016, 256.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04772127156657743;  // std dev = 23.392, 2,275.000 (wgt'ed) examples reached here.  /* #neg=1,358 #pos=917 */
%   | | | else return 0.04399247987289778;  // std dev = 5.441, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0464205217397366;  // std dev = 3.050, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.07704268291023926;  // std dev = 2.620, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.09852271955392368;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.06439726920199859;  // std dev = 2.267, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004230082538171667;  // std dev = 5.207, 191.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=33 */
%   | | | else return 0.012977156515510048;  // std dev = 3.743, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.17993050207227643;  // std dev = 2.760, 31.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return -0.19202209030167247;  // std dev = 2.128, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03849341127046466;  // std dev = 23.710, 2,337.000 (wgt'ed) examples reached here.  /* #neg=1,395 #pos=942 */
%   | | | else return 0.03843187773214309;  // std dev = 4.015, 65.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=35 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05915654345798865;  // std dev = 2.077, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return -0.044740472240468725;  // std dev = 0.914, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00363698401991096;  // std dev = 5.207, 191.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=33 */
%   | | | else return 0.01123852718874148;  // std dev = 3.743, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.482', 'seconds']
Refined model CLL: -0.649247


******************************************
Best model found
******************************************
Results 

CLL : -0.62286 

AUC ROC : 0.583151 

AUC PR : 0.416751 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 369.262 

Total Inference Time : 9.516455888748169 

Total revision time: 381.8796138572693
Best scored revision CLL: -0.649247


Results 

CLL : -0.62286 

AUC ROC : 0.583151 

AUC PR : 0.416751 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 403.55156491279604 

Total Inference Time : 9.516455888748169 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.709
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '552', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 562.775
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2582072951812113;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.23668000854584129;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4406732069441734;  // std dev = 5.005, 103.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=60 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04386322081379793;  // std dev = 6.507, 280.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=52 */
%   | | | else return 0.12005369700427426;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.022532496743347553;  // std dev = 4.478, 146.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2237835407249068;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.20536030753482762;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.34474761216498356;  // std dev = 3.771, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.4456022274714075;  // std dev = 3.318, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03843944428305427;  // std dev = 6.507, 280.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=52 */
%   | | | else return 0.10480218251995677;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01976743373704791;  // std dev = 4.478, 146.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18890865269924673;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.17395896623003507;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6332853662964207;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30724330237129427;  // std dev = 4.995, 103.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=60 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03354628643628634;  // std dev = 6.507, 280.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=52 */
%   | | | else return 0.09042046916565721;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.01730493773389806;  // std dev = 4.478, 146.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1557312235430176;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.1441974542609297;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21536888447306765;  // std dev = 3.753, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.2927971691977457;  // std dev = 3.304, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09345341627277466;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.027201382702511292;  // std dev = 6.549, 282.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015120809237889905;  // std dev = 4.478, 146.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1258489187792741;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.11734311729262081;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15870832742999683;  // std dev = 3.672, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.22908455303618985;  // std dev = 3.386, 51.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13415474460556553;  // std dev = 2.656, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.05573413355833293;  // std dev = 1.336, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02275247090512527;  // std dev = 6.481, 276.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=52 */
%   | | | else return 0.008055339205267943;  // std dev = 4.393, 147.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=23 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10010508482603603;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.09407418557708577;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3697260503569618;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1368242681320567;  // std dev = 4.981, 103.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=60 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11530158527917944;  // std dev = 2.656, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.04875852828303257;  // std dev = 1.336, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.051051942770668345;  // std dev = 2.924, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.010312885725723591;  // std dev = 7.259, 372.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=64 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07867360199607297;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.07454461499743284;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08147809705207651;  // std dev = 3.748, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | | | else return 0.14337069004396766;  // std dev = 3.285, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0977455416756261;  // std dev = 2.656, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.04287669529903821;  // std dev = 1.336, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017339956181754563;  // std dev = 6.479, 276.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=52 */
%   | | | else return 0.005235295058852137;  // std dev = 4.393, 147.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=23 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.061279703655333695;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.05854620585391975;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2663773272817335;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07552099883679957;  // std dev = 4.976, 103.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=60 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06812111602856358;  // std dev = 2.722, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.01329824927178793;  // std dev = 6.531, 282.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=53 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008225261916333639;  // std dev = 4.477, 146.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=24 */
%   | | | else return -0.09130276263753742;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047419988012492476;  // std dev = 28.680, 3,427.000 (wgt'ed) examples reached here.  /* #neg=2,056 #pos=1,371 */
%   | | | else return 0.0456748933668935;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.034715474319090375;  // std dev = 3.666, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.09351706675370079;  // std dev = 3.367, 51.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1931032922693131;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.009650288100521747;  // std dev = 2.665, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.003449384207818911;  // std dev = 6.385, 285.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=50 */
%   | | | else return 0.019855357342024024;  // std dev = 4.501, 138.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=25 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23569599632393332;  // std dev = 3.464, 51.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | | | else return -0.09681763234736472;  // std dev = 3.554, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.016701166886524742;  // std dev = 4.605, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.0369639739945435;  // std dev = 28.981, 3,502.000 (wgt'ed) examples reached here.  /* #neg=2,085 #pos=1,417 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.20779993630331864;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.0020025489923316156;  // std dev = 2.605, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.009900762192577014;  // std dev = 6.479, 276.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=52 */
%   | | | else return 0.002791694682286197;  // std dev = 4.383, 147.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.651', 'seconds']
Refined model CLL: -0.64946


******************************************
Best model found
******************************************
Results 

CLL : -0.622919 

AUC ROC : 0.583668 

AUC PR : 0.414119 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 562.775 

Total Inference Time : 14.390443325042725 

Total revision time: 581.0677471485137
Best scored revision CLL: -0.64946


Results 

CLL : -0.622919 

AUC ROC : 0.583668 

AUC PR : 0.414119 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 602.7396982040405 

Total Inference Time : 14.390443325042725 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.685
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '547', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 854.534
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.25618815078578167;  // std dev = 33.163, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,763 #pos=1,827 */
%   | | | else return 0.22898226843284408;  // std dev = 7.483, 240.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.46752393509951207;  // std dev = 5.520, 128.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=78 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14981560176617903;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.05169732219628723;  // std dev = 7.620, 372.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=72 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.031833145625827244;  // std dev = 5.222, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.22205738853573526;  // std dev = 33.163, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,763 #pos=1,827 */
%   | | | else return 0.19876197888435881;  // std dev = 7.483, 240.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.36936707375672023;  // std dev = 4.234, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | | else return 0.4619428288111978;  // std dev = 3.659, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13058263748064494;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.045286979218900215;  // std dev = 7.620, 372.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=72 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02791376387959292;  // std dev = 5.222, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.187512670649496;  // std dev = 33.163, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,763 #pos=1,827 */
%   | | | else return 0.1685776932143611;  // std dev = 7.483, 240.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5227994078048812;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.324413024479955;  // std dev = 5.510, 128.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=78 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.038686420455503245;  // std dev = 7.541, 362.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=71 */
%   | | | else return 0.10454888184600526;  // std dev = 3.335, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.024403420338079233;  // std dev = 5.222, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15466654774862354;  // std dev = 33.156, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,826 */
%   | | | else return 0.13988793466543653;  // std dev = 7.515, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.5326428920332754;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25538225791203956;  // std dev = 5.578, 132.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=81 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03348912967890353;  // std dev = 7.541, 362.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=71 */
%   | | | else return 0.0904246821892938;  // std dev = 3.335, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021277685435288043;  // std dev = 5.222, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.125115363730673;  // std dev = 33.162, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,763 #pos=1,827 */
%   | | | else return 0.11328088727685856;  // std dev = 7.487, 240.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=89 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.16500127505315235;  // std dev = 4.256, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.24390926510578223;  // std dev = 3.593, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10126867588976707;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.027102434655990163;  // std dev = 7.612, 372.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=72 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01850868505511086;  // std dev = 5.222, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09962217907397941;  // std dev = 33.154, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,826 */
%   | | | else return 0.09053553893689191;  // std dev = 7.520, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11541548925585328;  // std dev = 4.216, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | | else return 0.19292534660835092;  // std dev = 3.628, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.023496234167743744;  // std dev = 7.535, 362.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=71 */
%   | | | else return 0.07333516452396191;  // std dev = 3.335, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.016066753665929686;  // std dev = 5.222, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07836432884804334;  // std dev = 33.154, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,826 */
%   | | | else return 0.07175981841401331;  // std dev = 7.521, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08401006948917092;  // std dev = 4.254, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.15041921418231527;  // std dev = 3.579, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.040387784933012684;  // std dev = 6.934, 292.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=62 */
%   | | | else return -0.011832437738953165;  // std dev = 4.305, 135.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=22 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07091017460323079;  // std dev = 1.345, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.023384695758831214;  // std dev = 5.150, 172.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=33 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06111137285654873;  // std dev = 33.161, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,763 #pos=1,827 */
%   | | | else return 0.05603151112906478;  // std dev = 7.491, 240.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=89 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05600033536132881;  // std dev = 4.216, 74.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=43 */
%   | | | else return 0.12018549878711693;  // std dev = 3.618, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0768395030523883;  // std dev = 3.143, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.01712306905239284;  // std dev = 7.605, 372.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=72 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00861164910456014;  // std dev = 5.221, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.07866099210834114;  // std dev = 0.010, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04733098264509957;  // std dev = 33.154, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,764 #pos=1,826 */
%   | | | else return 0.0437194002925286;  // std dev = 7.524, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03973956645918623;  // std dev = 4.255, 76.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0.09553780942350547;  // std dev = 3.570, 59.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03278736071056941;  // std dev = 6.885, 287.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=60 */
%   | | | else return -0.0068978392048938035;  // std dev = 4.501, 133.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007421345840542908;  // std dev = 5.221, 190.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=33 */
%   | | | else return -0.07314642815048618;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.22971015717979643;  // std dev = 3.994, 67.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return -0.08531104043614834;  // std dev = 4.065, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.014651923510954002;  // std dev = 5.669, 138.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=53 */
%   | | | else return 0.036815859115561345;  // std dev = 33.440, 4,674.000 (wgt'ed) examples reached here.  /* #neg=2,792 #pos=1,882 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordauthor(L, J) )
%   | | | then return 0.06307384427650345;  // std dev = 3.146, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.011378267453682757;  // std dev = 7.600, 372.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=72 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.06614126277543007;  // std dev = 0.948, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.00703301494687557;  // std dev = 5.133, 188.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.520', 'seconds']
Refined model CLL: -0.650912


******************************************
Best model found
******************************************
Results 

CLL : -0.623358 

AUC ROC : 0.586479 

AUC PR : 0.417797 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 854.534 

Total Inference Time : 19.571460008621216 

Total revision time: 879.0775197925567
Best scored revision CLL: -0.650912


Results 

CLL : -0.623358 

AUC ROC : 0.586479 

AUC PR : 0.417797 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 900.7494708480834 

Total Inference Time : 19.571460008621216 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.227
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '621', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1101.477
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1413166583955482;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267565;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292127;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.29038694422917477;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947587;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13590836049502242;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07762444073070456;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.051978895871749246;  // std dev = 3.525, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.030925716345782128;  // std dev = 9.646, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.154646444444368;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309688;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973599;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04712598177542592;  // std dev = 7.652, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.016568537139122493;  // std dev = 5.020, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02738032547534357;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11362342782584059;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083846;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19125494210527297;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11149098646463663;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02366488731858901;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09747576234136658;  // std dev = 0.954, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.023195363314173698;  // std dev = 5.845, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098663;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.110822267458515;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483617;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11115376939839243;  // std dev = 3.343, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01862896341992893;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10250435872912936;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.021024235218156;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245328;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012979;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07043470907702584;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.17049971170696065;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03537242816561595;  // std dev = 7.641, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.001752150831273651;  // std dev = 5.001, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09540933288526426;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.017687724768043693;  // std dev = 5.844, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171411;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05571808877883232;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.32879850158547497;  // std dev = 0.881, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07530708081426507;  // std dev = 6.034, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09265011035995936;  // std dev = 3.330, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013837839533935924;  // std dev = 8.485, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01328969886951272;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10168938237679033;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047327940801264436;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715674;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.029023437041004047;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11124547317124808;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09003837806373095;  // std dev = 3.335, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07778665987229562;  // std dev = 1.358, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010979124893542856;  // std dev = 8.473, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.014824515663383794;  // std dev = 5.765, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108198;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741373;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24101728640575204;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04102687544281599;  // std dev = 6.026, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.026983582474541513;  // std dev = 7.629, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.0064738589776338114;  // std dev = 4.978, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0981849397044264;  // std dev = 0.950, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.010714882068344474;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.605', 'seconds']
Refined model CLL: -0.650434


******************************************
Best model found
******************************************
Results 

CLL : -0.624471 

AUC ROC : 0.58245 

AUC PR : 0.415111 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1101.477 

Total Inference Time : 26.21263599395752 

Total revision time: 1134.2163519897463
Best scored revision CLL: -0.650434


Results 

CLL : -0.624471 

AUC ROC : 0.58245 

AUC PR : 0.415111 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1155.888303045273 

Total Inference Time : 26.21263599395752 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.279
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '649', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 185.048
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21103534105853916;  // std dev = 15.661, 1,074.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=379 */
%   | | | else return 0.13885068948547727;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3364098046647297;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.4831489350995123;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.06723984419042099;  // std dev = 4.265, 110.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=23 */
%   | | | else return -0.050941973991396876;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.041822404487267484;  // std dev = 2.711, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.6904480554047552;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1770412963154146;  // std dev = 15.947, 1,124.000 (wgt'ed) examples reached here.  /* #neg=735 #pos=389 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5562252109810543;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3163280961542111;  // std dev = 2.947, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.44976513404244134;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.013361510844999314;  // std dev = 3.881, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03797560209398047;  // std dev = 2.706, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return -0.14162520716160526;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15652059969799667;  // std dev = 15.643, 1,074.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=379 */
%   | | | else return 0.09273848014246648;  // std dev = 3.383, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3432158571572576;  // std dev = 2.207, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.21590445781637443;  // std dev = 2.126, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.3829591640953116;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.12493116868162192;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0019400246046179423;  // std dev = 3.572, 101.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=15 */
%   | | | else return 0.052798217224831225;  // std dev = 3.087, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13065082904812167;  // std dev = 15.641, 1,074.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=379 */
%   | | | else return 0.07819988229092192;  // std dev = 3.383, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1749137241359133;  // std dev = 2.361, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.29430464391083005;  // std dev = 1.942, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05332298073381429;  // std dev = 3.753, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | | else return -0.01213755981743261;  // std dev = 2.017, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03424437475424603;  // std dev = 2.704, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return -0.12691824122113426;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10725911747156307;  // std dev = 15.640, 1,074.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=379 */
%   | | | else return 0.06530204150493232;  // std dev = 3.382, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3452040659234037;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1539468026275229;  // std dev = 2.921, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04602530681671665;  // std dev = 3.752, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | | else return -0.010435123949629178;  // std dev = 2.019, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.029842019419558784;  // std dev = 2.704, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return -0.11353593404266227;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08338028303792434;  // std dev = 15.643, 1,082.000 (wgt'ed) examples reached here.  /* #neg=705 #pos=377 */
%   | | | else return 0.12542263944593246;  // std dev = 3.362, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18023556933587676;  // std dev = 2.230, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.08234107735762818;  // std dev = 2.068, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.3079377829511049;  // std dev = 1.563, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.11209829688117531;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008770569567466953;  // std dev = 3.564, 101.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=15 */
%   | | | else return 0.03561874593566054;  // std dev = 3.075, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07012737335204429;  // std dev = 15.639, 1,074.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=379 */
%   | | | else return 0.03477858823847956;  // std dev = 3.378, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06339813036105162;  // std dev = 2.330, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.15347748804971303;  // std dev = 1.949, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.003552342640418308;  // std dev = 3.524, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
%   | | | else return 0.12233659460895087;  // std dev = 1.689, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.023933943398121132;  // std dev = 3.118, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return -0.10332335008331753;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.052590229393221756;  // std dev = 15.641, 1,082.000 (wgt'ed) examples reached here.  /* #neg=705 #pos=377 */
%   | | | else return 0.09238322236436035;  // std dev = 3.361, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2062556490666391;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.060730700719320525;  // std dev = 2.903, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.49270567326401277;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.08582184883765884;  // std dev = 1.244, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016057585072788847;  // std dev = 3.845, 100.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=20 */
%   | | | else return 0.023645548303617585;  // std dev = 2.705, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.43438160888538646;  // std dev = 0.895, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.07925348711782691;  // std dev = 2.271, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04415953324285681;  // std dev = 15.770, 1,095.000 (wgt'ed) examples reached here.  /* #neg=712 #pos=383 */
%   | | | else return 0.03555320903018732;  // std dev = 2.980, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return -0.017971763151901767;  // std dev = 1.183, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -6.260708043185625E-4;  // std dev = 1.179, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.1428443929427533;  // std dev = 1.510, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.005057447243590921;  // std dev = 4.427, 139.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035219055741086344;  // std dev = 15.616, 1,074.000 (wgt'ed) examples reached here.  /* #neg=695 #pos=379 */
%   | | | else return 0.0017755179608598814;  // std dev = 3.370, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08544003207958713;  // std dev = 2.254, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.006305565934474581;  // std dev = 2.018, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.41157229160664954;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07207053624163201;  // std dev = 1.249, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.010341721957922814;  // std dev = 3.828, 100.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=20 */
%   | | | else return 0.018857719899989734;  // std dev = 2.707, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.100', 'seconds']
Refined model CLL: -0.620414


******************************************
Best model found
******************************************
Results 

CLL : -0.829663 

AUC ROC : 0.499481 

AUC PR : 0.60079 

Precision : 0.782609 

Recall : 0.023346 

F1 : 0.04534 

Total Learning Time : 185.048 

Total Inference Time : 4.781994581222534 

Total revision time: 192.09150181007385
Best scored revision CLL: -0.620414


Results 

CLL : -0.829663 

AUC ROC : 0.499481 

AUC PR : 0.60079 

Precision : 0.782609 

Recall : 0.023346 

F1 : 0.04534 

Total Learning Time : 213.76345286560058 

Total Inference Time : 4.781994581222534 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.941
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '672', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 319.832
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21820586109571222;  // std dev = 22.039, 2,108.000 (wgt'ed) examples reached here.  /* #neg=1,349 #pos=759 */
%   | | | else return 0.18271033860828284;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4316783468642176;  // std dev = 4.078, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010846698088261171;  // std dev = 5.106, 229.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=30 */
%   | | | else return 0.01562925006014218;  // std dev = 4.105, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18951538773625115;  // std dev = 22.039, 2,108.000 (wgt'ed) examples reached here.  /* #neg=1,349 #pos=759 */
%   | | | else return 0.15898240524303162;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5851860008555361;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3706382678053435;  // std dev = 4.078, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1444308583246371;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.0017375929555448093;  // std dev = 5.242, 228.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=32 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.001145598840521773;  // std dev = 3.934, 130.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.1417287586186378;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16101270961688044;  // std dev = 22.039, 2,108.000 (wgt'ed) examples reached here.  /* #neg=1,349 #pos=759 */
%   | | | else return 0.13583504099648033;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.46125983910675533;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3041322725760013;  // std dev = 4.078, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12372973587223181;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.12397849125455786;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.009359768476433024;  // std dev = 5.106, 229.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=30 */
%   | | | else return 0.014960828593754189;  // std dev = 4.100, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13409701032824958;  // std dev = 22.039, 2,108.000 (wgt'ed) examples reached here.  /* #neg=1,349 #pos=759 */
%   | | | else return 0.11415412815377259;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.22978343059891906;  // std dev = 3.023, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.2694651216121085;  // std dev = 2.892, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.014924120328265131;  // std dev = 4.937, 181.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=29 */
%   | | | else return -0.005586779948848062;  // std dev = 2.977, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 8.466465377533705E-4;  // std dev = 3.931, 130.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=18 */
%   | | | else return -0.12554418351774446;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10806777506711537;  // std dev = 22.028, 2,112.000 (wgt'ed) examples reached here.  /* #neg=1,356 #pos=756 */
%   | | | else return 0.12700313342434197;  // std dev = 5.047, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2882256564378875;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18271349709018006;  // std dev = 4.077, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.104303507736028;  // std dev = 2.355, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.1104956250984675;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008697614948320534;  // std dev = 5.105, 229.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=30 */
%   | | | else return 0.012525239887432222;  // std dev = 4.095, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6121305106353622;  // std dev = 0.286, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4418050627901823;  // std dev = 1.180, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.08633769801845723;  // std dev = 22.530, 2,213.000 (wgt'ed) examples reached here.  /* #neg=1,424 #pos=789 */
%   | | | else return 0.13842946420694574;  // std dev = 4.168, 72.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=42 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.25536041773134194;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.007898326403502015;  // std dev = 2.051, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0014052278108261627;  // std dev = 5.246, 228.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=33 */
%   | | | else return -0.0041259233497329155;  // std dev = 3.934, 123.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07124703376550671;  // std dev = 22.024, 2,108.000 (wgt'ed) examples reached here.  /* #neg=1,349 #pos=759 */
%   | | | else return 0.05394997579540854;  // std dev = 4.998, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0955998295629695;  // std dev = 3.022, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.12233209820356425;  // std dev = 2.877, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0870203392648868;  // std dev = 2.355, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.10006362498263915;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00799631721770953;  // std dev = 5.108, 229.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=30 */
%   | | | else return 0.010670133561958806;  // std dev = 4.082, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05486509790924515;  // std dev = 22.012, 2,112.000 (wgt'ed) examples reached here.  /* #neg=1,356 #pos=756 */
%   | | | else return 0.07212341742504934;  // std dev = 5.050, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.1366142252185001;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07698288258728057;  // std dev = 4.077, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.22031793568032465;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.007256029331460124;  // std dev = 2.048, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.012546762890256299;  // std dev = 2.263, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return -0.0026151986922820494;  // std dev = 6.148, 317.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.44264329151674636;  // std dev = 0.293, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.31550286593395527;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.042475918064174174;  // std dev = 22.529, 2,213.000 (wgt'ed) examples reached here.  /* #neg=1,424 #pos=789 */
%   | | | else return 0.05756002954117556;  // std dev = 4.168, 72.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=42 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -2.1614577395404606E-4;  // std dev = 5.220, 231.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=33 */
%   | | | else return 0.0531764046457313;  // std dev = 2.024, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.20786085191019796;  // std dev = 0.196, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.008851252355039784;  // std dev = 4.070, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035146103976690136;  // std dev = 22.013, 2,108.000 (wgt'ed) examples reached here.  /* #neg=1,349 #pos=759 */
%   | | | else return 0.01898094680164006;  // std dev = 5.000, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08177686549027345;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.04339304313719174;  // std dev = 4.077, 68.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=39 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07995629349293625;  // std dev = 2.322, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.08961948478648217;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00759674919663326;  // std dev = 5.108, 229.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=30 */
%   | | | else return 0.007729438022778356;  // std dev = 4.070, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.067', 'seconds']
Refined model CLL: -0.61725


******************************************
Best model found
******************************************
Results 

CLL : -0.822195 

AUC ROC : 0.503156 

AUC PR : 0.604963 

Precision : 0.761905 

Recall : 0.041505 

F1 : 0.078721 

Total Learning Time : 319.832 

Total Inference Time : 7.791130781173706 

Total revision time: 330.6711871604919
Best scored revision CLL: -0.61725


Results 

CLL : -0.822195 

AUC ROC : 0.503156 

AUC PR : 0.604963 

Precision : 0.761905 

Recall : 0.041505 

F1 : 0.078721 

Total Learning Time : 352.34313821601864 

Total Inference Time : 7.791130781173706 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.585
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '650', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 560.533
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2159211188628804;  // std dev = 27.022, 3,178.000 (wgt'ed) examples reached here.  /* #neg=2,041 #pos=1,137 */
%   | | | else return 0.24148226843284695;  // std dev = 6.523, 180.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.41134042446121527;  // std dev = 4.820, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.08629550934493224;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0133213488926158;  // std dev = 2.757, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return -0.006479885861186141;  // std dev = 7.322, 458.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=62 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18755359533043384;  // std dev = 27.022, 3,178.000 (wgt'ed) examples reached here.  /* #neg=2,041 #pos=1,137 */
%   | | | else return 0.20947388754425633;  // std dev = 6.523, 180.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5170719622367218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.3535696551594693;  // std dev = 4.820, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.012324485872813417;  // std dev = 5.816, 259.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=40 */
%   | | | else return -0.0060876186895933515;  // std dev = 3.562, 107.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0023902631660165444;  // std dev = 4.898, 196.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=28 */
%   | | | else return -0.1400146101731987;  // std dev = 0.013, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1594041086483692;  // std dev = 27.022, 3,178.000 (wgt'ed) examples reached here.  /* #neg=2,041 #pos=1,137 */
%   | | | else return 0.1773065977688827;  // std dev = 6.523, 180.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=69 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2608271006340503;  // std dev = 3.468, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return 0.33741116943107546;  // std dev = 3.559, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return -0.1414077204014939;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.031291938572514784;  // std dev = 2.863, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0014847207792069638;  // std dev = 6.460, 340.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=49 */
%   | | | else return -0.0017689020257589138;  // std dev = 4.541, 171.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13283469975646767;  // std dev = 27.022, 3,178.000 (wgt'ed) examples reached here.  /* #neg=2,041 #pos=1,137 */
%   | | | else return 0.1467922209221364;  // std dev = 6.523, 180.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=69 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20664565299264323;  // std dev = 3.466, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return 0.2666848885546457;  // std dev = 3.559, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.01019049430107112;  // std dev = 5.815, 259.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=40 */
%   | | | else return -0.005654170100263378;  // std dev = 3.563, 107.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002304610888023839;  // std dev = 4.896, 196.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=28 */
%   | | | else return -0.12481081172298704;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10883458423530841;  // std dev = 27.022, 3,178.000 (wgt'ed) examples reached here.  /* #neg=2,041 #pos=1,137 */
%   | | | else return 0.11926804390723945;  // std dev = 6.523, 180.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2888998863696433;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.17432901901729303;  // std dev = 4.807, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1223182670775682;  // std dev = 2.812, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.07321184122354735;  // std dev = 0.969, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00942920247237994;  // std dev = 6.241, 338.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=45 */
%   | | | else return 0.0038443137895156037;  // std dev = 4.703, 178.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=26 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08793561116355811;  // std dev = 27.022, 3,178.000 (wgt'ed) examples reached here.  /* #neg=2,041 #pos=1,137 */
%   | | | else return 0.09544805883634176;  // std dev = 6.523, 180.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.216881045578187;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13257520360827604;  // std dev = 4.807, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01443756903804531;  // std dev = 5.841, 261.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=41 */
%   | | | else return -0.015306825491576382;  // std dev = 3.720, 123.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 3.6908514724120513E-4;  // std dev = 4.720, 178.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=26 */
%   | | | else return -0.1109171983322622;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07026383223130662;  // std dev = 27.022, 3,178.000 (wgt'ed) examples reached here.  /* #neg=2,041 #pos=1,137 */
%   | | | else return 0.07549161750557706;  // std dev = 6.523, 180.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=69 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08090906610649735;  // std dev = 3.482, 49.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | | else return 0.1272580730559483;  // std dev = 3.532, 53.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=31 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10408975342631886;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.06531489197941868;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.008773571343408894;  // std dev = 6.240, 338.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=45 */
%   | | | else return 0.003873879541847304;  // std dev = 4.701, 178.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=26 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5969727542003204;  // std dev = 0.247, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2977943721401965;  // std dev = 1.562, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.05475967199780062;  // std dev = 27.730, 3,346.000 (wgt'ed) examples reached here.  /* #neg=2,148 #pos=1,198 */
%   | | | else return 0.07295755541983348;  // std dev = 4.944, 100.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=56 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.012373874942831426;  // std dev = 5.825, 261.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=41 */
%   | | | else return -0.01298409084722807;  // std dev = 3.720, 123.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=16 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -8.03793851384894E-4;  // std dev = 4.725, 178.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=26 */
%   | | | else return -0.09981137326285444;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04420355627030798;  // std dev = 27.033, 3,179.000 (wgt'ed) examples reached here.  /* #neg=2,039 #pos=1,140 */
%   | | | else return 0.038791960896633365;  // std dev = 6.439, 179.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=66 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03479078628167452;  // std dev = 3.448, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | | else return 0.08184573781314618;  // std dev = 3.549, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.04685981496905537;  // std dev = 2.523, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return -0.0433543334707278;  // std dev = 1.334, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03722640209789774;  // std dev = 2.898, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.006060491329715902;  // std dev = 7.312, 458.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=62 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.2700103623482422;  // std dev = 1.620, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.014776527916339863;  // std dev = 4.682, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.0369974374458259;  // std dev = 4.181, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.03611824041219792;  // std dev = 27.450, 3,263.000 (wgt'ed) examples reached here.  /* #neg=2,069 #pos=1,194 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.08173140914019147;  // std dev = 2.806, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return -0.06259089105029655;  // std dev = 0.968, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.008154159650138913;  // std dev = 6.238, 338.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=45 */
%   | | | else return 0.005106496515612458;  // std dev = 4.699, 178.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.989', 'seconds']
Refined model CLL: -0.619354


******************************************
Best model found
******************************************
Results 

CLL : -0.823798 

AUC ROC : 0.499094 

AUC PR : 0.60572 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 560.533 

Total Inference Time : 12.13045859336853 

Total revision time: 576.4005734615326
Best scored revision CLL: -0.619354


Results 

CLL : -0.823798 

AUC ROC : 0.499094 

AUC PR : 0.60572 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 598.0725245170594 

Total Inference Time : 12.13045859336853 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.595
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163805;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.167072478461252;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605857775;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068037033;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896662518;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941059;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0649407701873567;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051980656929923374;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041338228340973275;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03270881899081024;  // std dev = 34.586, 5,378.000 (wgt'ed) examples reached here.  /* #neg=3,582 #pos=1,796 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '625', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [34.586, 3, 1]}]
{'': [nan, 0.22242844109177812]}
{'': [nan, 0.22242844109180263]}
{'': [nan, 0.22242844109185933]}
{'': [nan, 0.22242844109186527]}
{'': [nan, 0.2224284410919059]}
{'': [nan, 0.22242844109176968]}
{'': [nan, 0.2224284410918415]}
{'': [nan, 0.22242844109180301]}
{'': [nan, 0.22242844109184076]}
{'': [nan, 0.22242844109182291]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 639.323
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21284377078025835;  // std dev = 31.226, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,511 */
%   | | | else return 0.22105216090596227;  // std dev = 7.572, 248.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3812258581764342;  // std dev = 4.027, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | | else return 0.4919517520009212;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1718744252955908;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06941654073331519;  // std dev = 3.440, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -0.0014111325823828382;  // std dev = 8.447, 591.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=83 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1849104638708048;  // std dev = 31.226, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,511 */
%   | | | else return 0.19195868052428378;  // std dev = 7.572, 248.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32822309166271657;  // std dev = 4.027, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | | else return 0.4209891907731656;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1272895382414977;  // std dev = 3.283, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.0647368194635642;  // std dev = 1.353, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.08634464639866185;  // std dev = 3.462, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return -0.0012394431436563607;  // std dev = 8.447, 591.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=83 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15723485145379676;  // std dev = 31.226, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,511 */
%   | | | else return 0.16301437022710044;  // std dev = 7.572, 248.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4884348284520845;  // std dev = 1.209, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.2971262698354563;  // std dev = 5.579, 128.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=73 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11028507857336498;  // std dev = 3.282, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.056593688189586315;  // std dev = 1.353, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07464583501078104;  // std dev = 3.461, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return -0.0010887859405421991;  // std dev = 8.447, 591.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=83 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13112986749387;  // std dev = 31.226, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,511 */
%   | | | else return 0.13566550762447016;  // std dev = 7.572, 248.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20678934828781395;  // std dev = 4.015, 66.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=36 */
%   | | | else return 0.27774281714470017;  // std dev = 4.055, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1274184568000055;  // std dev = 3.302, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.06210189574697201;  // std dev = 1.347, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04194165810998814;  // std dev = 3.411, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -9.565518797868567E-4;  // std dev = 8.447, 591.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=83 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10754678591418641;  // std dev = 31.226, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,511 */
%   | | | else return 0.11096644026941203;  // std dev = 7.572, 248.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32862908974896526;  // std dev = 1.210, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.17823086723802983;  // std dev = 5.568, 128.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=73 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08797622869233687;  // std dev = 3.273, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.008961750983999824;  // std dev = 7.467, 428.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=67 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -8.363983139204692E-4;  // std dev = 5.405, 238.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=34 */
%   | | | else return -0.14215120529842293;  // std dev = 0.009, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08698514329384462;  // std dev = 31.214, 4,256.000 (wgt'ed) examples reached here.  /* #neg=2,746 #pos=1,510 */
%   | | | else return 0.08964434143453101;  // std dev = 7.620, 252.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=91 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10704410296933715;  // std dev = 4.009, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | | else return 0.17352371780250347;  // std dev = 4.041, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10562420093260659;  // std dev = 3.294, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.0544268839073732;  // std dev = 1.346, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0078294504501376;  // std dev = 7.082, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.018554693163323043;  // std dev = 5.715, 241.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=39 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0695881472529794;  // std dev = 31.214, 4,256.000 (wgt'ed) examples reached here.  /* #neg=2,746 #pos=1,510 */
%   | | | else return 0.07155740553309799;  // std dev = 7.620, 252.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=91 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07830918556896765;  // std dev = 3.998, 66.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=36 */
%   | | | else return 0.13341752966730536;  // std dev = 4.050, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0876934365790325;  // std dev = 3.293, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.047635234255125114;  // std dev = 1.346, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006847811503562159;  // std dev = 7.082, 421.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=59 */
%   | | | else return 0.016264444086400563;  // std dev = 5.715, 241.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=39 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05519221286643644;  // std dev = 31.226, 4,260.000 (wgt'ed) examples reached here.  /* #neg=2,749 #pos=1,511 */
%   | | | else return 0.05664486499804084;  // std dev = 7.571, 248.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05437576482515834;  // std dev = 4.005, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | | else return 0.10379665318412387;  // std dev = 4.039, 71.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.019343696869381796;  // std dev = 6.883, 335.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=59 */
%   | | | else return -0.006208166078577828;  // std dev = 4.338, 147.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -3.6034728950965167E-4;  // std dev = 5.412, 238.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=34 */
%   | | | else return -0.12738358103546213;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6888114884874484;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37741977676921196;  // std dev = 1.669, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.04213806943347205;  // std dev = 32.045, 4,492.000 (wgt'ed) examples reached here.  /* #neg=2,903 #pos=1,589 */
%   | | | else return 0.055750277705687204;  // std dev = 5.676, 134.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=77 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.17050863784248654;  // std dev = 1.593, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.012877386905320882;  // std dev = 3.168, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.02849073258906715;  // std dev = 3.405, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | | else return -0.0025697113761588347;  // std dev = 8.437, 591.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=83 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.33085599518039743;  // std dev = 1.710, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.04927212165864114;  // std dev = 4.686, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.00274077216865944;  // std dev = 4.982, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | | else return 0.03631108801918635;  // std dev = 31.802, 4,400.000 (wgt'ed) examples reached here.  /* #neg=2,803 #pos=1,597 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.2121738826890362;  // std dev = 1.537, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0041604070544734055;  // std dev = 3.155, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.008589900923124498;  // std dev = 7.031, 410.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=59 */
%   | | | else return 0.015125402208963298;  // std dev = 5.774, 247.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.126', 'seconds']
Refined model CLL: -0.620938


******************************************
Best model found
******************************************
Results 

CLL : -0.826555 

AUC ROC : 0.499337 

AUC PR : 0.60578 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 639.323 

Total Inference Time : 14.643688678741455 

Total revision time: 658.9370300941467
Best scored revision CLL: -0.620938


Results 

CLL : -0.826555 

AUC ROC : 0.499337 

AUC PR : 0.60578 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 680.6089811496735 

Total Inference Time : 14.643688678741455 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.787
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '616', 'milliseconds']
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 963.364
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4966079504133488;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.1844917368278288;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5861333969918011;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3632705571468057;  // std dev = 6.203, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12730486140002475;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0701388309589216;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248209;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020235307543291863;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15756323075362919;  // std dev = 34.987, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1598848973470587;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2566020382312614;  // std dev = 4.462, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.35738676387641316;  // std dev = 4.468, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10452395462165892;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0673615539274821;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05579913829327811;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001776418755589026;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13138997379624753;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1331738938347609;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19096925128064182;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29270920720177146;  // std dev = 4.457, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10393830642907598;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06910422568159186;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04067464433855807;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001559778566966838;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077442782514447;  // std dev = 34.986, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10907656421744938;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.146798871427215;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22502644346895295;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08905771796327665;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06083694649398234;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 1.8994456386694632E-4;  // std dev = 7.968, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005960312537135907;  // std dev = 6.123, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08713876258206055;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08815651517694852;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3037027786786837;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13138282842120874;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.015238438627630059;  // std dev = 7.442, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.007652710898240225;  // std dev = 4.642, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007597709655668125;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1387160188067071;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06970303718844909;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0704094191893033;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06510218343139547;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1459150767238844;  // std dev = 4.445, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08418947074645892;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06614056319201365;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03151933226108239;  // std dev = 3.622, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002477772662354822;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05527387592568612;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05579681097652045;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04896860654114288;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1096030810012209;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07113450409183057;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05836243962028927;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0023959198035982967;  // std dev = 7.959, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0062160030867034685;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04354282733843463;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04388753780302344;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.21838391363134976;  // std dev = 1.225, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05023266554089295;  // std dev = 6.139, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19434818419547326;  // std dev = 1.578, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.007897675728913624;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02206602191384362;  // std dev = 3.618, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0022821053514470334;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03412639026533587;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03435919484990857;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17287175743409228;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.03742001429803744;  // std dev = 6.139, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0650484548476371;  // std dev = 3.486, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06462186812032537;  // std dev = 1.338, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01874898759659895;  // std dev = 3.617, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0020030317931046845;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.038', 'seconds']
Refined model CLL: -0.62159


******************************************
Best model found
******************************************
Results 

CLL : -0.826081 

AUC ROC : 0.506545 

AUC PR : 0.609531 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 963.364 

Total Inference Time : 20.840749979019165 

Total revision time: 990.3329303035737
Best scored revision CLL: -0.62159


Results 

CLL : -0.826081 

AUC ROC : 0.506545 

AUC PR : 0.609531 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 1012.0048813591004 

Total Inference Time : 20.840749979019165 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.227
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596405;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27921401177724103;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367794283;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010631647;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1497754140444919;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831224039;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518661248;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586989551;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05193197003124965;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873119126;  // std dev = 16.139, 1,047.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=487 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '726', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.139, 560, 487]}]
{'': [nan, 0.24878467518510514]}
{'': [nan, 0.24878467518510536]}
{'': [nan, 0.24878467518511443]}
{'': [nan, 0.2487846751851211]}
{'': [nan, 0.24878467518511438]}
{'': [nan, 0.24878467518511518]}
{'': [nan, 0.24878467518511105]}
{'': [nan, 0.24878467518511574]}
{'': [nan, 0.24878467518512098]}
{'': [nan, 0.24878467518511735]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 167.085
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.339630416580989;  // std dev = 0.500, 918.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=442 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.3126943896449669;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.12130682983635446;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.038402789038418816;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.2930706765796701;  // std dev = 0.500, 918.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=442 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5463443246618189;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.39279418357704865;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.27021896952830937;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.1058893024861437;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.03379202556530222;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24340450827145707;  // std dev = 0.500, 909.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=437 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3182119890195414;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.3866567954453146;  // std dev = 2.198, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.11899933086837987;  // std dev = 3.500, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.31001198445673406;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.029839692535106464;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19658302608165304;  // std dev = 0.500, 909.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=437 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.25593112313383304;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.2978261422339384;  // std dev = 2.196, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.10000336479486474;  // std dev = 3.499, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.2508627126224551;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.030367215223720066;  // std dev = 1.642, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return -0.11102368017607912;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1549630695216725;  // std dev = 0.500, 909.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=437 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.19964445903914838;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.22484617136785415;  // std dev = 2.195, 24.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.15675606340989373;  // std dev = 2.840, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.05790827327131498;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.09607534181555023;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.022738560395629024;  // std dev = 1.639, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12005293184983898;  // std dev = 0.500, 909.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=437 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.15500152931955433;  // std dev = 1.930, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.17770122507819422;  // std dev = 1.820, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.12318803253102541;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.048300847925448157;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0880503231984544;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.020252615375691556;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09193291500486306;  // std dev = 0.500, 909.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=437 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11750970139806205;  // std dev = 1.931, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.13361349468609282;  // std dev = 1.820, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0908256822291694;  // std dev = 3.373, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return -0.0025684796994143518;  // std dev = 1.996, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08123261591529578;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.01807397841388622;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.06998989568902972;  // std dev = 0.500, 918.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=442 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14647870614245598;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.03251754329832186;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.057789836669428114;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2024725717539979;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.06736171532318144;  // std dev = 3.820, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return -0.01892680383347757;  // std dev = 1.638, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3476503575024066;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.11494347884074746;  // std dev = 1.548, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.052402300073398154;  // std dev = 14.896, 889.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=427 */
%   | | | else return 0.056584190000048835;  // std dev = 2.622, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(B, K) )
%   | | | then return -0.24127952593785507;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -2.2128058556886154E-4;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.053311831885385644;  // std dev = 3.819, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return -0.017053142753146407;  // std dev = 1.638, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.0398258539415506;  // std dev = 0.499, 918.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=442 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09958215178048573;  // std dev = 1.534, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.010792865971707566;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.060448763559176284;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.15657479363382298;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0419525548764654;  // std dev = 3.818, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return -0.015388314385013452;  // std dev = 1.638, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.382', 'seconds']
Refined model CLL: -0.6726


******************************************
Best model found
******************************************
Results 

CLL : -0.602939 

AUC ROC : 0.558259 

AUC PR : 0.243845 

Precision : 0.5 

Recall : 0.030981 

F1 : 0.058347 

Total Learning Time : 167.085 

Total Inference Time : 1.785954475402832 

Total revision time: 171.0288245315552
Best scored revision CLL: -0.6726


Results 

CLL : -0.602939 

AUC ROC : 0.558259 

AUC PR : 0.243845 

Precision : 0.5 

Recall : 0.030981 

F1 : 0.058347 

Total Learning Time : 192.70077558708192 

Total Inference Time : 1.785954475402832 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.587
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32328742602596383;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772451;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2332179836779009;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632782;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404451192;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1165816083122538;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518662431;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0684163558699015;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031260016;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887310913;  // std dev = 22.824, 2,094.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=974 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '760', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [22.824, 1, 974]}]
{'': [nan, 0.2487846751851394]}
{'': [nan, 0.24878467518512962]}
{'': [nan, 0.24878467518510808]}
{'': [nan, 0.2487846751850965]}
{'': [nan, 0.24878467518513034]}
{'': [nan, 0.24878467518510314]}
{'': [nan, 0.24878467518510444]}
{'': [nan, 0.2487846751851241]}
{'': [nan, 0.2487846751851109]}
{'': [nan, 0.24878467518511074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 235.089
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3390776249834211;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4652917922423695;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.5760976530482294;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2554092090721138;  // std dev = 4.181, 73.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=29 */
%   | | | else return 0.07436515131572859;  // std dev = 3.541, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07353355048412775;  // std dev = 3.314, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2926023989876385;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3987612182903489;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.49069827875371413;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.10849170887624242;  // std dev = 4.965, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.3479406242212752;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.05944319435278811;  // std dev = 3.322, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | | else return -0.13824237818681168;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.24376989914237274;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.32542309878784204;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.3934567070581779;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09647997861128121;  // std dev = 4.891, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | | else return 0.33726160968540975;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.15468874286934345;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.07061970105274613;  // std dev = 3.494, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1968969972657001;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2552400960771566;  // std dev = 2.856, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.316094725996784;  // std dev = 2.529, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.07725622614025683;  // std dev = 4.916, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.2741015161693882;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03852171480319033;  // std dev = 3.321, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | | else return -0.11962117293160948;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15521873580628145;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.19322756495102342;  // std dev = 2.854, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.2394965007343554;  // std dev = 2.530, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.06583451697518829;  // std dev = 4.853, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | | else return 0.26469225730685964;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14148331645902273;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.04996037531327337;  // std dev = 3.491, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12025338720571677;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.13326710051888283;  // std dev = 2.566, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.18056495827643515;  // std dev = 2.819, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05153392023365617;  // std dev = 4.877, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.2052140930137212;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.023261346033656233;  // std dev = 3.321, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | | else return -0.1052068045498534;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09208634050895999;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.10459056131699386;  // std dev = 2.846, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return 0.14130093122120416;  // std dev = 2.535, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04238483194676254;  // std dev = 4.827, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | | else return 0.19878575333000825;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.18323502919710186;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.030133835617809;  // std dev = 3.487, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06999202763933193;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06905091771641951;  // std dev = 2.560, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.10763176129764258;  // std dev = 2.821, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.033051897628270654;  // std dev = 4.847, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.14923355423661305;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.13418869364900762;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.01986825783214241;  // std dev = 3.306, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0529499379836052;  // std dev = 0.500, 1,809.000 (wgt'ed) examples reached here.  /* #neg=939 #pos=870 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05196192987279602;  // std dev = 2.560, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.08238656331531632;  // std dev = 2.821, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.16891919629848207;  // std dev = 1.990, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.022766136713469734;  // std dev = 4.826, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12879936227324645;  // std dev = 0.109, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.026390646882477137;  // std dev = 3.480, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5590118458869051;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35884937894743496;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.1337260086881318;  // std dev = 3.196, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.04254188454300548;  // std dev = 21.253, 1,817.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=890 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.020403546149092067;  // std dev = 4.825, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.10815441851113251;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006989625345063014;  // std dev = 3.318, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | | else return -0.09323471925913906;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.347', 'seconds']
Refined model CLL: -0.67519


******************************************
Best model found
******************************************
Results 

CLL : -0.603903 

AUC ROC : 0.560266 

AUC PR : 0.250571 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 235.089 

Total Inference Time : 2.06300687789917 

Total revision time: 239.7872539768219
Best scored revision CLL: -0.67519


Results 

CLL : -0.603903 

AUC ROC : 0.560266 

AUC PR : 0.250571 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 261.4592050323486 

Total Inference Time : 2.06300687789917 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.071
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259638;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772464;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789942;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18911652010632302;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404453304;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831227334;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0896652651866097;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586986483;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0519319700312643;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03928602887313864;  // std dev = 27.954, 3,141.000 (wgt'ed) examples reached here.  /* #neg=1,680 #pos=1,461 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '782', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [27.954, 1, 1]}]
{'': [nan, 0.24878467518507735]}
{'': [nan, 0.24878467518512515]}
{'': [nan, 0.24878467518511022]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.2487846751851418]}
{'': [nan, 0.24878467518509173]}
{'': [nan, 0.2487846751851028]}
{'': [nan, 0.24878467518509825]}
{'': [nan, 0.24878467518508598]}
{'': [nan, 0.2487846751851092]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 374.276
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3393189533810429;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4543027812533574;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.5836391311779426;  // std dev = 3.187, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.12442112444862437;  // std dev = 5.746, 169.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | | | else return 0.42957750652808374;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.06648226843284555;  // std dev = 3.979, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29280683527257667;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3895791319644489;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.4969126920309802;  // std dev = 3.187, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.22756803791249866;  // std dev = 4.632, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | else return 0.05443942557100567;  // std dev = 4.068, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.05819515716833956;  // std dev = 3.979, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2439305727973398;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5473675055731433;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.346128229061822;  // std dev = 4.668, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09076163883405462;  // std dev = 5.725, 169.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | | | else return 0.3296319063564222;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.033354468433387394;  // std dev = 4.011, 108.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
%   | | | else return -0.13047615931822223;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19701498561346875;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23955865823323402;  // std dev = 3.526, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.31678356574141164;  // std dev = 3.183, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16725900488572898;  // std dev = 4.601, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | else return 0.03418279788946016;  // std dev = 4.068, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.11290846280796787;  // std dev = 0.025, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.04657445143403368;  // std dev = 3.977, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15530094337290754;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3624790173507184;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.20113387070793842;  // std dev = 4.656, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1368116223085541;  // std dev = 4.598, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | else return 0.029127502150229082;  // std dev = 4.068, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10208767432413501;  // std dev = 0.023, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.04015982651400491;  // std dev = 3.977, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12030869402154648;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.12968550944693902;  // std dev = 3.517, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.18767702905022565;  // std dev = 3.181, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.049381363204112357;  // std dev = 5.698, 169.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | | | else return 0.19603621558496748;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0931052365795486;  // std dev = 0.021, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.03446712248688319;  // std dev = 3.977, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0921228141888455;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.21501251567183113;  // std dev = 1.163, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.11118266705836947;  // std dev = 4.594, 95.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=62 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.09183376164856509;  // std dev = 4.583, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | else return 0.017096633222280142;  // std dev = 4.068, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.08553807686386086;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.029460957892846126;  // std dev = 3.977, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07001586143731667;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.06675636103970996;  // std dev = 3.515, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.11389172009906887;  // std dev = 3.178, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03173721207161388;  // std dev = 5.691, 169.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | | | else return 0.1265244236376167;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0790817405015128;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.025093132712387615;  // std dev = 3.977, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05296547302201013;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05021568401169917;  // std dev = 3.516, 52.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=31 */
%   | | | else return 0.08722869576685152;  // std dev = 3.178, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.010461755945823107;  // std dev = 5.488, 175.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=44 */
%   | | | else return 0.2068691002851928;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14363323985206677;  // std dev = 0.181, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.014493237758630454;  // std dev = 4.053, 97.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.03995067123070431;  // std dev = 0.500, 2,735.000 (wgt'ed) examples reached here.  /* #neg=1,419 #pos=1,316 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.17532849206702164;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.044854018604157844;  // std dev = 4.647, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.00865994051002238;  // std dev = 5.487, 175.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=44 */
%   | | | else return 0.1622544697017325;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007956031062048733;  // std dev = 4.063, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */
%   | | | else return -0.10026714185938979;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.482', 'seconds']
Refined model CLL: -0.676163


******************************************
Best model found
******************************************
Results 

CLL : -0.603705 

AUC ROC : 0.557675 

AUC PR : 0.243648 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 374.276 

Total Inference Time : 2.7801308631896973 

Total revision time: 380.24496137809757
Best scored revision CLL: -0.676163


Results 

CLL : -0.603705 

AUC ROC : 0.557675 

AUC PR : 0.243648 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 401.9169124336243 

Total Inference Time : 2.7801308631896973 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.717
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3232874260259637;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2792140117772471;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23321798367789864;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1891165201062773;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14977541404450143;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11658160831225657;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08966526518663144;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06841635586993254;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051931970031253154;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039286028873137764;  // std dev = 32.279, 4,188.000 (wgt'ed) examples reached here.  /* #neg=2,240 #pos=1,948 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '774', 'milliseconds']
Parameter learned model CLL:-0.692495 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [32.279, 2, 1]}]
{'': [nan, 0.24878467518506545]}
{'': [nan, 0.24878467518506572]}
{'': [nan, 0.24878467518517203]}
{'': [nan, 0.2487846751851158]}
{'': [nan, 0.2487846751851248]}
{'': [nan, 0.24878467518513142]}
{'': [nan, 0.24878467518512773]}
{'': [nan, 0.24878467518510894]}
{'': [nan, 0.24878467518508499]}
{'': [nan, 0.24878467518510922]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 493.998
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.342730432896864;  // std dev = 0.500, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.482148935099512;  // std dev = 5.416, 125.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=78 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.2581489350995124;  // std dev = 5.138, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   | | | else return 0.052954129904706285;  // std dev = 4.915, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.05020191523196187;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29569620471970837;  // std dev = 0.500, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.36930152586260195;  // std dev = 3.957, 65.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=38 */
%   | | | else return 0.47868200627185997;  // std dev = 3.803, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.09292711043743222;  // std dev = 6.615, 235.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
%   | | | else return 0.34193524613365045;  // std dev = 2.686, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.043980312879126515;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7616184854290375;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6136938919271374;  // std dev = 0.917, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.24462484077576724;  // std dev = 30.062, 3,619.000 (wgt'ed) examples reached here.  /* #neg=1,871 #pos=1,748 */
%   | | | else return 0.3381073302538188;  // std dev = 5.483, 130.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=82 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.19931420099706568;  // std dev = 5.111, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   | | | else return 0.038346022970673396;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0340154207877675;  // std dev = 4.916, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19864492147036053;  // std dev = 0.499, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.22615287896555375;  // std dev = 3.947, 65.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=38 */
%   | | | else return 0.31008852441751517;  // std dev = 3.793, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.16550909412792614;  // std dev = 5.108, 110.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=44 */
%   | | | else return 0.033291428617170514;  // std dev = 4.841, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.10848667287114469;  // std dev = 0.972, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.042474055541283334;  // std dev = 4.790, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15643782734969597;  // std dev = 0.499, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3705752377797284;  // std dev = 0.906, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19392833442806676;  // std dev = 5.389, 125.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=78 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05506990649933517;  // std dev = 6.542, 234.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=60 */
%   | | | else return 0.2320644802198236;  // std dev = 2.581, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0947697458758516;  // std dev = 0.972, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.036596909934821883;  // std dev = 4.789, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.12107667867789672;  // std dev = 0.499, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1161756276518145;  // std dev = 3.907, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | | else return 0.19139112389654786;  // std dev = 3.812, 67.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0432682601231013;  // std dev = 6.527, 235.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
%   | | | else return 0.20633342384034206;  // std dev = 2.674, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02095558624402201;  // std dev = 4.842, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return -0.0998358075239398;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09263328146794325;  // std dev = 0.499, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.24588719361942574;  // std dev = 1.181, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.10522303957505952;  // std dev = 5.323, 123.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=77 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03677120690965733;  // std dev = 6.511, 234.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=60 */
%   | | | else return 0.17730357408180117;  // std dev = 2.578, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08707104098647578;  // std dev = 0.972, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.025365173208522183;  // std dev = 4.789, 141.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=29 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4578905263079084;  // std dev = 2.58e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.06960522372505495;  // std dev = 30.082, 3,625.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,753 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.051569915063862944;  // std dev = 3.917, 65.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=38 */
%   | | | else return 0.12149525602041147;  // std dev = 3.787, 68.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02870941357827017;  // std dev = 6.502, 235.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
%   | | | else return 0.15218681334489312;  // std dev = 2.672, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01245384414853905;  // std dev = 4.843, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return -0.09042654850076637;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05319486643029005;  // std dev = 0.499, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03391081772076169;  // std dev = 3.885, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | | else return 0.09776188320678937;  // std dev = 3.816, 67.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.023680937249243243;  // std dev = 6.493, 234.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=60 */
%   | | | else return 0.13223839449613634;  // std dev = 2.577, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009485861495094847;  // std dev = 4.897, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | | else return -0.08327742596853918;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040107602873162625;  // std dev = 0.499, 3,632.000 (wgt'ed) examples reached here.  /* #neg=1,872 #pos=1,760 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1606716516961563;  // std dev = 1.176, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04116289967855412;  // std dev = 5.312, 123.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=77 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.018326235579791555;  // std dev = 6.489, 235.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
%   | | | else return 0.1107214691246853;  // std dev = 2.670, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006934718955696511;  // std dev = 4.844, 151.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=29 */
%   | | | else return -0.07715093160858147;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.383', 'seconds']
Refined model CLL: -0.674876


******************************************
Best model found
******************************************
Results 

CLL : -0.605148 

AUC ROC : 0.558631 

AUC PR : 0.247981 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 493.998 

Total Inference Time : 3.902618885040283 

Total revision time: 501.75170907020566
Best scored revision CLL: -0.674876


Results 

CLL : -0.605148 

AUC ROC : 0.558631 

AUC PR : 0.247981 

Precision : 0.47619 

Recall : 0.034423 

F1 : 0.064205 

Total Learning Time : 523.4236601257323 

Total Inference Time : 3.902618885040283 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.337
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '747', 'milliseconds']
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 693.372
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.51313373820162;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3361153135855328;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23048590135751676;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31038115199810856;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1660528669145617;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24530976698422133;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559862;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12388121425857113;  // std dev = 4.644, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.18561353655659285;  // std dev = 4.302, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04103392149496016;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22840304079157903;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27419009645803766;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10415092222468046;  // std dev = 2.894, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09192763723756966;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10744509183965502;  // std dev = 6.203, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.034213083150765294;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797175400585821;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07476430958110529;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01959338027920788;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07042430845189142;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05720220389066853;  // std dev = 4.647, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12106585129071634;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026635846322478018;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721595576907224;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07879931073189124;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.015336472820549753;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053228606321358174;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2544012909009454;  // std dev = 1.217, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05569756002786691;  // std dev = 6.190, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13648617685336792;  // std dev = 2.867, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.0212434732977702;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009717250862569485;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07844736592727922;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04012096504271626;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.16842873846493828;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04367089254881272;  // std dev = 6.193, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017114043994308825;  // std dev = 7.485, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12756056152895756;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005939051232580518;  // std dev = 5.417, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07296120384772108;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.500', 'seconds']
Refined model CLL: -0.673387


******************************************
Best model found
******************************************
Results 

CLL : -0.604043 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 693.372 

Total Inference Time : 4.3040547370910645 

Total revision time: 702.2956079330444
Best scored revision CLL: -0.673387


Results 

CLL : -0.604043 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 723.9675589885711 

Total Inference Time : 4.3040547370910645 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.28
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22310070358825343;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19371670286691692;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16445342085625497;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13679159859433734;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11181224458391494;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0900962464035993;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07178001628032009;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566880340934818;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04447051370051754;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034709720925694784;  // std dev = 16.980, 1,244.000 (wgt'ed) examples reached here.  /* #neg=790 #pos=454 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '737', 'milliseconds']
Parameter learned model CLL:-0.657822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [16.98, 790, 454]}]
{'': [nan, 0.23176197516566824]}
{'': [nan, 0.23176197516569022]}
{'': [nan, 0.23176197516570032]}
{'': [nan, 0.23176197516569122]}
{'': [nan, 0.23176197516567246]}
{'': [nan, 0.23176197516567798]}
{'': [nan, 0.2317619751656789]}
{'': [nan, 0.2317619751656866]}
{'': [nan, 0.23176197516567715]}
{'': [nan, 0.23176197516568584]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 253.997
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.26085445018795705;  // std dev = 15.204, 961.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=387 */
%   | | | else return 0.15951879811321046;  // std dev = 3.920, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.41370449065506787;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.015556342506919785;  // std dev = 3.785, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.07935106490048774;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2243931105554923;  // std dev = 15.106, 950.000 (wgt'ed) examples reached here.  /* #neg=569 #pos=381 */
%   | | | else return 0.14295790504668798;  // std dev = 3.910, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3275444097822903;  // std dev = 2.171, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.47211912291582614;  // std dev = 2.134, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04513358966187189;  // std dev = 3.713, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return -0.02889721809756947;  // std dev = 1.859, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05092203251355425;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.06996342934731044;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.19059354584615967;  // std dev = 15.198, 961.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=387 */
%   | | | else return 0.11708545253780904;  // std dev = 3.930, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.2980073620322347;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.47554151264371386;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.009534443245313981;  // std dev = 3.778, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return 0.11273373262600957;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.0443462976046685;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.062128124850494355;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1558119649290297;  // std dev = 15.106, 950.000 (wgt'ed) examples reached here.  /* #neg=569 #pos=381 */
%   | | | else return 0.10420654876587557;  // std dev = 3.911, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.39893941914426917;  // std dev = 0.811, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.24520292580554884;  // std dev = 2.893, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.038477672158021586;  // std dev = 3.712, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return -0.03337458143049994;  // std dev = 1.845, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.038428662236904595;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.055506745586807675;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.12680603407094454;  // std dev = 15.194, 961.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=387 */
%   | | | else return 0.08069701852572263;  // std dev = 3.936, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.17759032129496802;  // std dev = 2.111, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.29046886204545586;  // std dev = 1.264, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.004847583366187812;  // std dev = 3.772, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return 0.10211205283009313;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.03315494592188567;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.04985091329116257;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09984227847434506;  // std dev = 15.106, 950.000 (wgt'ed) examples reached here.  /* #neg=569 #pos=381 */
%   | | | else return 0.07270582519914269;  // std dev = 3.912, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10987966162145449;  // std dev = 2.161, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.1986629533969628;  // std dev = 2.057, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03285707019338357;  // std dev = 3.712, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return -0.0359859469131143;  // std dev = 1.831, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.02028067063855358;  // std dev = 2.099, 50.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return -0.1074746147796223;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.07910969830932262;  // std dev = 15.191, 961.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=387 */
%   | | | else return 0.05243636707008055;  // std dev = 3.944, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.20491595425752593;  // std dev = 0.785, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11749283769015591;  // std dev = 2.332, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1457308850898735;  // std dev = 1.848, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.13437690279599768;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return -0.004272293550383033;  // std dev = 3.656, 104.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=16 */
%   | | | else return -0.019253768850373644;  // std dev = 2.100, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.06156634773757882;  // std dev = 15.191, 961.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=387 */
%   | | | else return 0.04252692926274872;  // std dev = 3.944, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0764813125684976;  // std dev = 2.113, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.1412984198009046;  // std dev = 1.259, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return -1.0423971790833443E-4;  // std dev = 3.748, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return 0.09343126735241286;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return -0.016103046900105507;  // std dev = 2.099, 50.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return -0.09734964678714278;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04760274266692687;  // std dev = 15.191, 961.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=387 */
%   | | | else return 0.03430426201559;  // std dev = 3.945, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.057400575961199546;  // std dev = 2.113, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.11126579892067881;  // std dev = 1.260, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.027120820267793593;  // std dev = 3.694, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return -0.03806248126637441;  // std dev = 1.821, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.036256829713975855;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.0374822915875215;  // std dev = 1.674, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03663295309813896;  // std dev = 15.191, 961.000 (wgt'ed) examples reached here.  /* #neg=574 #pos=387 */
%   | | | else return 0.02755187581434441;  // std dev = 3.945, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11586930055555236;  // std dev = 0.781, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04886714153101407;  // std dev = 2.332, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.12545479841703025;  // std dev = 1.838, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.11823636591242519;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return -0.02446729957839386;  // std dev = 1.307, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.0073565111914230905;  // std dev = 4.001, 141.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.206', 'seconds']
Refined model CLL: -0.629019


******************************************
Best model found
******************************************
Results 

CLL : -0.676049 

AUC ROC : 0.536761 

AUC PR : 0.448071 

Precision : 0.62069 

Recall : 0.024096 

F1 : 0.046392 

Total Learning Time : 253.997 

Total Inference Time : 7.262874126434326 

Total revision time: 263.5037663478851
Best scored revision CLL: -0.629019


Results 

CLL : -0.676049 

AUC ROC : 0.536761 

AUC PR : 0.448071 

Precision : 0.62069 

Recall : 0.024096 

F1 : 0.046392 

Total Learning Time : 285.17571740341185 

Total Inference Time : 7.262874126434326 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.749
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22295407772706852;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19359088420911644;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16435046395016392;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13671107534388727;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1117518060968773;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09005252490020808;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07174943888005592;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0566673450939062;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445700899322611;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03470128739943426;  // std dev = 24.016, 2,489.000 (wgt'ed) examples reached here.  /* #neg=1,581 #pos=908 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '712', 'milliseconds']
Parameter learned model CLL:-0.65774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.016, 1, 908]}]
{'': [nan, 0.23172235054007082]}
{'': [nan, 0.23172235054006834]}
{'': [nan, 0.23172235054003723]}
{'': [nan, 0.23172235054003404]}
{'': [nan, 0.2317223505400602]}
{'': [nan, 0.23172235054003787]}
{'': [nan, 0.23172235054004323]}
{'': [nan, 0.23172235054004597]}
{'': [nan, 0.2317223505400605]}
{'': [nan, 0.2317223505400476]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 350.824
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.25091379298064426;  // std dev = 21.483, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=760 */
%   | | | else return 0.224346118198105;  // std dev = 5.741, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.41814893509951234;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.5338246107751872;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0695775065280825;  // std dev = 5.402, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.030739953789376603;  // std dev = 2.309, 54.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.0640732871227099;  // std dev = 2.541, 90.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21754657043414571;  // std dev = 21.483, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=760 */
%   | | | else return 0.1947853038103996;  // std dev = 5.741, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.33200741369575215;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.4572687197746847;  // std dev = 3.041, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.024511595257504352;  // std dev = 5.368, 202.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=35 */
%   | | | else return 0.15722886026790536;  // std dev = 2.365, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.07342510733062137;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.0564512054550235;  // std dev = 2.541, 90.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18386005257238439;  // std dev = 21.483, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=760 */
%   | | | else return 0.16532764455298077;  // std dev = 5.741, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2779564697675521;  // std dev = 2.481, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.3802220271360409;  // std dev = 2.829, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05752725074532473;  // std dev = 5.396, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.037789969417406824;  // std dev = 2.287, 54.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06369751056535053;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.050025312222705856;  // std dev = 2.541, 90.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.14974050743172146;  // std dev = 21.448, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,179 #pos=755 */
%   | | | else return 0.16612818903513057;  // std dev = 5.869, 143.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18993843488710022;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.29998510402013484;  // std dev = 3.021, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015493132496138191;  // std dev = 5.357, 202.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=35 */
%   | | | else return 0.14129344228568647;  // std dev = 2.357, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.05485824366527356;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.04455206685504152;  // std dev = 2.541, 90.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12334442969638183;  // std dev = 21.483, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=760 */
%   | | | else return 0.10780873075282223;  // std dev = 5.736, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15025977448085162;  // std dev = 2.480, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.23596388821633318;  // std dev = 2.809, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.04755403166141423;  // std dev = 5.391, 175.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=37 */
%   | | | else return -0.04295167257449951;  // std dev = 2.265, 54.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.00491677823745838;  // std dev = 3.444, 109.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=14 */
%   | | | else return -0.13293578645633466;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0964618633542345;  // std dev = 21.445, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,179 #pos=755 */
%   | | | else return 0.11275182390434041;  // std dev = 5.875, 143.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.08939820901531124;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.1813466186121932;  // std dev = 3.007, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008490813556856101;  // std dev = 5.348, 202.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=35 */
%   | | | else return 0.12689533031306863;  // std dev = 2.347, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.049403334694435745;  // std dev = 2.323, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.03807905232583428;  // std dev = 2.538, 90.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=7 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07788118585544242;  // std dev = 21.485, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=760 */
%   | | | else return 0.06438910756068306;  // std dev = 5.729, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07023759139484607;  // std dev = 2.480, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.1435788635854166;  // std dev = 2.796, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.021253272155912578;  // std dev = 4.307, 177.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=22 */
%   | | | else return 0.08158441501334411;  // std dev = 2.271, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.04115798520634858;  // std dev = 4.695, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
%   | | | else return -0.11748377365046159;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05909573204106386;  // std dev = 21.444, 1,934.000 (wgt'ed) examples reached here.  /* #neg=1,179 #pos=755 */
%   | | | else return 0.07435034061196072;  // std dev = 5.880, 143.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=57 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.033171303350082705;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.11097927125463454;  // std dev = 2.998, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.01865335943708667;  // std dev = 4.307, 177.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=22 */
%   | | | else return 0.07035039960546403;  // std dev = 2.269, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.035245666552002786;  // std dev = 4.695, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
%   | | | else return -0.10592340362238069;  // std dev = 0.091, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04753146839702165;  // std dev = 21.486, 1,935.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=760 */
%   | | | else return 0.03539184015557422;  // std dev = 5.723, 142.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=52 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.026620796597815265;  // std dev = 2.481, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.0908399288638105;  // std dev = 2.788, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13114485039623108;  // std dev = 2.468, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.15574746226145278;  // std dev = 0.146, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.006198013249612128;  // std dev = 4.804, 199.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=28 */
%   | | | else return 0.009039848122002533;  // std dev = 4.013, 108.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=20 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.25958093330692644;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return -0.13914900227476185;  // std dev = 2.432, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.036742894569109535;  // std dev = 21.934, 2,020.000 (wgt'ed) examples reached here.  /* #neg=1,229 #pos=791 */
%   | | | else return 0.042144529814968364;  // std dev = 3.569, 55.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.11207274694315063;  // std dev = 2.464, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.13656420756511722;  // std dev = 0.130, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.003996623875362864;  // std dev = 5.291, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
%   | | | else return -0.009153951632928457;  // std dev = 3.345, 112.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.828', 'seconds']
Refined model CLL: -0.634352


******************************************
Best model found
******************************************
Results 

CLL : -0.676221 

AUC ROC : 0.539085 

AUC PR : 0.451777 

Precision : 0.607843 

Recall : 0.041499 

F1 : 0.077694 

Total Learning Time : 350.824 

Total Inference Time : 9.83040452003479 

Total revision time: 363.46860365676883
Best scored revision CLL: -0.634352


Results 

CLL : -0.676221 

AUC ROC : 0.539085 

AUC PR : 0.451777 

Precision : 0.607843 

Recall : 0.041499 

F1 : 0.077694 

Total Learning Time : 385.14055471229557 

Total Inference Time : 9.83040452003479 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.446
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22290522861852166;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935489666746288;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431616185198325;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13668424598506992;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11173166728692627;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003795516014804;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173924833548889;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056660449377665276;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04445250734284579;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469847582903894;  // std dev = 29.414, 3,734.000 (wgt'ed) examples reached here.  /* #neg=2,372 #pos=1,362 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '648', 'milliseconds']
Parameter learned model CLL:-0.657713 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.414, 2, 1]}]
{'': [nan, 0.2317091398572705]}
{'': [nan, 0.23170913985728747]}
{'': [nan, 0.23170913985727165]}
{'': [nan, 0.2317091398572562]}
{'': [nan, 0.23170913985732428]}
{'': [nan, 0.23170913985731664]}
{'': [nan, 0.2317091398573063]}
{'': [nan, 0.23170913985728261]}
{'': [nan, 0.23170913985729077]}
{'': [nan, 0.23170913985728017]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 495.828
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2489771349626147;  // std dev = 26.376, 2,922.000 (wgt'ed) examples reached here.  /* #neg=1,780 #pos=1,142 */
%   | | | else return 0.2126943896449675;  // std dev = 7.095, 220.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3875606998053947;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.5640312880406877;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.033776175242881255;  // std dev = 6.356, 279.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=49 */
%   | | | else return 0.017912248708979235;  // std dev = 4.763, 169.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21588961609291724;  // std dev = 26.376, 2,922.000 (wgt'ed) examples reached here.  /* #neg=1,780 #pos=1,142 */
%   | | | else return 0.18478213810899544;  // std dev = 7.095, 220.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.33356216495217195;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.4807438837557435;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.029614678116124643;  // std dev = 6.356, 279.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=49 */
%   | | | else return 0.015717783112980794;  // std dev = 4.763, 169.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18251666657498716;  // std dev = 26.376, 2,922.000 (wgt'ed) examples reached here.  /* #neg=1,780 #pos=1,142 */
%   | | | else return 0.1571294747049832;  // std dev = 7.095, 220.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=78 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25577814063901183;  // std dev = 2.710, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.3890244613866512;  // std dev = 3.408, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.0983529971467659;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.02588309187137041;  // std dev = 6.356, 279.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=49 */
%   | | | else return 0.013768973685566316;  // std dev = 4.763, 169.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15081672168673765;  // std dev = 26.376, 2,922.000 (wgt'ed) examples reached here.  /* #neg=1,780 #pos=1,142 */
%   | | | else return 0.13104697638301407;  // std dev = 7.095, 220.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19875293155976054;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.31262892089665223;  // std dev = 3.223, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10182088982892733;  // std dev = 2.585, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.08846762979653927;  // std dev = 0.972, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.02876064119810613;  // std dev = 6.912, 320.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=59 */
%   | | | else return -0.007140634669528842;  // std dev = 4.033, 135.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=19 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12224050538045364;  // std dev = 26.376, 2,922.000 (wgt'ed) examples reached here.  /* #neg=1,780 #pos=1,142 */
%   | | | else return 0.10748409657149978;  // std dev = 7.095, 220.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=78 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.12718738094002904;  // std dev = 2.711, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.24446737387458106;  // std dev = 3.372, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08005475642321319;  // std dev = 2.949, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.10383845108393082;  // std dev = 0.010, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.029367511267269705;  // std dev = 2.698, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.014246310261073213;  // std dev = 7.463, 399.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=67 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09566879356042413;  // std dev = 26.371, 2,931.000 (wgt'ed) examples reached here.  /* #neg=1,793 #pos=1,138 */
%   | | | else return 0.11275699679400711;  // std dev = 7.109, 211.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=82 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09787025561421736;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.19015672868536174;  // std dev = 3.197, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.007469340432252277;  // std dev = 5.753, 264.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=39 */
%   | | | else return 0.11760908882322203;  // std dev = 3.068, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03419807950900857;  // std dev = 5.329, 182.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=36 */
%   | | | else return -0.14616161323627094;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07548353171431132;  // std dev = 26.371, 2,931.000 (wgt'ed) examples reached here.  /* #neg=1,793 #pos=1,138 */
%   | | | else return 0.08969058758394671;  // std dev = 7.111, 211.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=82 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05156160055931523;  // std dev = 2.712, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.15019070295905848;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.006493686245650554;  // std dev = 5.753, 264.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=39 */
%   | | | else return 0.10124659621962512;  // std dev = 3.068, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.029486952337094405;  // std dev = 5.328, 182.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=36 */
%   | | | else return -0.1289533698012999;  // std dev = 0.098, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06071541402498034;  // std dev = 26.378, 2,922.000 (wgt'ed) examples reached here.  /* #neg=1,780 #pos=1,142 */
%   | | | else return 0.04778863402582156;  // std dev = 7.084, 220.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=78 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03922207361490906;  // std dev = 2.911, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.11912473122697624;  // std dev = 3.180, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08504756748181548;  // std dev = 2.586, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return -0.07647802196817571;  // std dev = 0.972, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0015180747474295253;  // std dev = 5.921, 267.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=42 */
%   | | | else return 0.02192586176256554;  // std dev = 5.332, 188.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045565112713520664;  // std dev = 26.369, 2,931.000 (wgt'ed) examples reached here.  /* #neg=1,793 #pos=1,138 */
%   | | | else return 0.059184306538331094;  // std dev = 7.116, 211.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=82 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012095619520147682;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return 0.09577866983813191;  // std dev = 3.343, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.05838713725500671;  // std dev = 2.934, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.09788954798440731;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.006394046185925331;  // std dev = 6.331, 279.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=49 */
%   | | | else return 0.010958543864514123;  // std dev = 4.735, 169.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.18272803169163965;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return -0.13548509214451027;  // std dev = 3.206, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.037058528656869635;  // std dev = 4.485, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | | | else return 0.03790389215156757;  // std dev = 26.857, 3,038.000 (wgt'ed) examples reached here.  /* #neg=1,836 #pos=1,202 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.02754307054508945;  // std dev = 6.238, 244.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=50 */
%   | | | else return -0.058303208455647945;  // std dev = 2.859, 84.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=9 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02268783122721217;  // std dev = 4.849, 165.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=29 */
%   | | | else return -0.11648968533449268;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.449', 'seconds']
Refined model CLL: -0.638138


******************************************
Best model found
******************************************
Results 

CLL : -0.676128 

AUC ROC : 0.536516 

AUC PR : 0.450545 

Precision : 0.607843 

Recall : 0.041499 

F1 : 0.077694 

Total Learning Time : 495.828 

Total Inference Time : 14.098828554153442 

Total revision time: 513.5485974063873
Best scored revision CLL: -0.638138


Results 

CLL : -0.676128 

AUC ROC : 0.536516 

AUC PR : 0.450545 

Precision : 0.607843 

Recall : 0.041499 

F1 : 0.077694 

Total Learning Time : 535.2205484619141 

Total Inference Time : 14.098828554153442 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.283
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22288080896976223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19352801203339084;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16429901396434862;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13667083350293244;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11172159926002838;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09003067105758178;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07173415342355056;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665700163515703;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044450256502345735;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469706996971223;  // std dev = 33.965, 4,979.000 (wgt'ed) examples reached here.  /* #neg=3,163 #pos=1,816 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '655', 'milliseconds']
Parameter learned model CLL:-0.657699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [33.965, 3, 1]}]
{'': [nan, 0.23170253405329194]}
{'': [nan, 0.23170253405332714]}
{'': [nan, 0.2317025340534363]}
{'': [nan, 0.23170253405337715]}
{'': [nan, 0.23170253405341443]}
{'': [nan, 0.23170253405337066]}
{'': [nan, 0.23170253405334632]}
{'': [nan, 0.23170253405338556]}
{'': [nan, 0.23170253405336227]}
{'': [nan, 0.23170253405333532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 497.614
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.247051899376173;  // std dev = 30.627, 3,947.000 (wgt'ed) examples reached here.  /* #neg=2,412 #pos=1,535 */
%   | | | else return 0.21451257146314592;  // std dev = 7.942, 275.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=98 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3966104735610501;  // std dev = 3.113, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.5438632208137985;  // std dev = 3.884, 70.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.17814893509951235;  // std dev = 3.298, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.0418510649004878;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.04276431971489699;  // std dev = 3.128, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.0218916251579917;  // std dev = 8.381, 513.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=84 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2142420856514405;  // std dev = 30.627, 3,947.000 (wgt'ed) examples reached here.  /* #neg=2,412 #pos=1,535 */
%   | | | else return 0.18634390470591933;  // std dev = 7.942, 275.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=98 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3417126366143216;  // std dev = 3.176, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.4673696176456386;  // std dev = 3.829, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.1349213423442142;  // std dev = 3.045, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.10443310052585753;  // std dev = 0.979, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.08556885159568378;  // std dev = 3.462, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.019205821388585054;  // std dev = 8.381, 513.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=84 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18118002981357512;  // std dev = 30.627, 3,947.000 (wgt'ed) examples reached here.  /* #neg=2,412 #pos=1,535 */
%   | | | else return 0.15841157991305724;  // std dev = 7.942, 275.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=98 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2592914967832814;  // std dev = 3.112, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.38720239218864444;  // std dev = 3.856, 70.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007708687876204232;  // std dev = 6.669, 338.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=53 */
%   | | | else return 0.09059729912223755;  // std dev = 3.383, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.04778916383371445;  // std dev = 6.035, 230.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=46 */
%   | | | else return -0.1483411202093202;  // std dev = 0.047, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1497858471226102;  // std dev = 30.627, 3,947.000 (wgt'ed) examples reached here.  /* #neg=2,412 #pos=1,535 */
%   | | | else return 0.13205503036795324;  // std dev = 7.942, 275.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=98 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19582510261977343;  // std dev = 3.175, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.30844678791990904;  // std dev = 3.789, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13814941769484462;  // std dev = 3.287, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.049605999095016604;  // std dev = 1.337, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.02895656463451621;  // std dev = 3.099, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.01320614888959896;  // std dev = 8.371, 513.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=84 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.732577657789306;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2200307605867858;  // std dev = 2.001, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0.12158940462293218;  // std dev = 0.487, 4,309.000 (wgt'ed) examples reached here.  /* #neg=2,622 #pos=1,687 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.27964114201975226;  // std dev = 1.465, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04015982711965567;  // std dev = 3.218, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.009681588917919008;  // std dev = 7.015, 360.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=59 */
%   | | | else return 0.01858737416507104;  // std dev = 5.520, 218.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=37 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09678431991041953;  // std dev = 30.614, 3,947.000 (wgt'ed) examples reached here.  /* #neg=2,412 #pos=1,535 */
%   | | | else return 0.08487590351328203;  // std dev = 7.942, 275.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=98 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10385278343893571;  // std dev = 3.118, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.20753057176669934;  // std dev = 3.824, 70.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=48 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.10757693391621494;  // std dev = 3.273, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.05842172909954615;  // std dev = 1.303, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.022789163836306303;  // std dev = 3.098, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.00989725383690585;  // std dev = 8.371, 513.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=84 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07637863791070558;  // std dev = 30.614, 3,947.000 (wgt'ed) examples reached here.  /* #neg=2,412 #pos=1,535 */
%   | | | else return 0.06776741246030485;  // std dev = 7.942, 275.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=98 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06887450497024425;  // std dev = 3.181, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.16381753273806687;  // std dev = 3.761, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.08904111065305051;  // std dev = 3.271, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.0508073723325768;  // std dev = 1.305, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.012399521672939921;  // std dev = 7.390, 391.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=66 */
%   | | | else return 0.004519879085192535;  // std dev = 5.007, 187.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=30 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5254777953939391;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10833416121941457;  // std dev = 2.001, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else return 0.059548906406315556;  // std dev = 0.486, 4,309.000 (wgt'ed) examples reached here.  /* #neg=2,622 #pos=1,687 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.23540935798599602;  // std dev = 1.442, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.01042505560802027;  // std dev = 3.181, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.01810988737686825;  // std dev = 3.097, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.007334995044496113;  // std dev = 8.371, 513.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=84 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.19560308786576905;  // std dev = 3.638, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return -0.12869221924731927;  // std dev = 3.808, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | else return 0.04852910195781345;  // std dev = 0.487, 4,185.000 (wgt'ed) examples reached here.  /* #neg=2,538 #pos=1,647 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09695676394492435;  // std dev = 3.000, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.10496506301827335;  // std dev = 0.982, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0032603270866658277;  // std dev = 6.839, 344.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=56 */
%   | | | else return 0.014433904338755951;  // std dev = 5.895, 235.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.15025471106970115;  // std dev = 3.638, 57.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
%   | | | else return -0.09971153573338434;  // std dev = 3.810, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | else return 0.037531778479728724;  // std dev = 0.487, 4,185.000 (wgt'ed) examples reached here.  /* #neg=2,538 #pos=1,647 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06528088119194565;  // std dev = 3.248, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.058246487540533354;  // std dev = 1.274, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008196303264898694;  // std dev = 7.382, 391.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=66 */
%   | | | else return 0.0012011411796545252;  // std dev = 5.003, 187.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.186', 'seconds']
Refined model CLL: -0.638787


******************************************
Best model found
******************************************
Results 

CLL : -0.676244 

AUC ROC : 0.539008 

AUC PR : 0.453622 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 497.614 

Total Inference Time : 13.000133514404297 

Total revision time: 515.0934890956878
Best scored revision CLL: -0.638787


Results 

CLL : -0.676244 

AUC ROC : 0.539008 

AUC PR : 0.453622 

Precision : 0.615385 

Recall : 0.042838 

F1 : 0.0801 

Total Learning Time : 536.7654401512145 

Total Inference Time : 13.000133514404297 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.194
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '677', 'milliseconds']
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 787.75
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.22656998773109246;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.25180160610285823;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2182509802301351;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1280024676900924;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697812;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05627664105721549;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01906104896176749;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18442914443327696;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10831975056255073;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06965937941835045;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.05205731135676555;  // std dev = 3.648, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.016681613798281134;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.35424867172570224;  // std dev = 4.328, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.03969862150148823;  // std dev = 4.536, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.1514342159219306;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09278781245127815;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.061427542569500934;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04511447356512827;  // std dev = 3.648, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.014572796422996907;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12328309086097683;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09845632876928452;  // std dev = 3.489, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0806403177511359;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.007782488903257169;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026547535126569235;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09829787525595299;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08374989848805624;  // std dev = 3.488, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07053654164033116;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.006773921221358658;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02302571116567457;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07744642414819297;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20275194859739454;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.006663456174632533;  // std dev = 3.397, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.005062793914836097;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020803993665915364;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06047534360570435;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06710304246878801;  // std dev = 3.478, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06518301862216319;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0040211223305967264;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018664414826338106;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04691286993409885;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.06604916617522734;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07009225104830026;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0028144803196543168;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016169202455576504;  // std dev = 6.410, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030868838685299337;  // std dev = 34.246, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04592647620525246;  // std dev = 8.387, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11316725009892553;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036431198046671665;  // std dev = 8.111, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.06508485132231025;  // std dev = 7.104, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10466710456100961;  // std dev = 1.683, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.45996613440594153;  // std dev = 2.571, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.16515119202299172;  // std dev = 0.147, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.238', 'seconds']
Refined model CLL: -0.640525


******************************************
Best model found
******************************************
Results 

CLL : -0.678238 

AUC ROC : 0.543589 

AUC PR : 0.457653 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 787.75 

Total Inference Time : 6.0585033893585205 

Total revision time: 799.32894515419
Best scored revision CLL: -0.640525


Results 

CLL : -0.678238 

AUC ROC : 0.543589 

AUC PR : 0.457653 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 821.0008962097168 

Total Inference Time : 6.0585033893585205 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.356
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2110480045340099;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745138789;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024853598;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434523995;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1067920859380279;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08644572667744532;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525708239;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997688345;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0433213916254008;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860843544;  // std dev = 17.861, 1,397.000 (wgt'ed) examples reached here.  /* #neg=904 #pos=493 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '626', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.861, 904, 493]}]
{'': [nan, 0.22836131622675024]}
{'': [nan, 0.2283613162267866]}
{'': [nan, 0.2283613162267795]}
{'': [nan, 0.2283613162267801]}
{'': [nan, 0.22836131622676836]}
{'': [nan, 0.22836131622678002]}
{'': [nan, 0.22836131622676853]}
{'': [nan, 0.22836131622675862]}
{'': [nan, 0.22836131622676364]}
{'': [nan, 0.2283613162267645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 208.232
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21727936988211616;  // std dev = 16.269, 1,150.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=413 */
%   | | | else return 0.3496743588283247;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.5504566274072047;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.04333412028469756;  // std dev = 3.496, 81.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=15 */
%   | | | else return -0.00392003041772905;  // std dev = 2.626, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18871991530168464;  // std dev = 16.269, 1,150.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=413 */
%   | | | else return 0.30157396914689066;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3340749886159474;  // std dev = 2.216, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.47257417409757735;  // std dev = 2.315, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.06248516208670645;  // std dev = 2.809, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.008319517872286979;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return -0.005511332927896416;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1603606012565516;  // std dev = 16.269, 1,150.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=413 */
%   | | | else return 0.2508082546151588;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2531376167249859;  // std dev = 2.169, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.39411768515062306;  // std dev = 2.337, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.05452932621767089;  // std dev = 2.809, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.007278163912935402;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return -0.004844735544154418;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13358547896948636;  // std dev = 16.269, 1,150.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=413 */
%   | | | else return 0.20205211471792747;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19459770056237824;  // std dev = 2.206, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.3145261832259301;  // std dev = 2.292, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.04729945305570355;  // std dev = 2.809, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.006372169877914672;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return -0.0042609409811009;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10940077711433258;  // std dev = 16.269, 1,150.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=413 */
%   | | | else return 0.15880161616230196;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.13500027480986437;  // std dev = 2.162, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.24624455494202754;  // std dev = 2.321, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.04080793895048931;  // std dev = 2.809, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.005582786496971575;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return -0.003749174991188796;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08834748687905868;  // std dev = 16.269, 1,150.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=413 */
%   | | | else return 0.12266056904372812;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09562708063803013;  // std dev = 2.199, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.19396098322017427;  // std dev = 2.278, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.010604943888525283;  // std dev = 3.214, 86.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
%   | | | else return 0.12692180181471208;  // std dev = 2.044, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return -0.008522926187237115;  // std dev = 0.342, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07055366658171948;  // std dev = 16.269, 1,150.000 (wgt'ed) examples reached here.  /* #neg=737 #pos=413 */
%   | | | else return 0.09367484484354491;  // std dev = 3.840, 59.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=29 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06101607775085114;  // std dev = 2.157, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.15124079684036895;  // std dev = 2.312, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.14186296908912266;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.018933621668090685;  // std dev = 3.825, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return -0.0074776179741237;  // std dev = 2.079, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05768531889622161;  // std dev = 16.311, 1,153.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=419 */
%   | | | else return 0.0341788510465813;  // std dev = 3.654, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04005336227039998;  // std dev = 2.196, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.12167883260602981;  // std dev = 2.271, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.02680896597700048;  // std dev = 2.791, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.002935511826474888;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return -0.0042657759952592755;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045322704914847745;  // std dev = 16.311, 1,153.000 (wgt'ed) examples reached here.  /* #neg=734 #pos=419 */
%   | | | else return 0.026233468785499973;  // std dev = 3.654, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.020956490524251133;  // std dev = 2.155, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.09671055131529128;  // std dev = 2.306, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.022799168611462473;  // std dev = 2.790, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.0025786054951834284;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else return -0.0037534947204548685;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.23008529642386608;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.007288440949871295;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03400698961971566;  // std dev = 16.493, 1,178.000 (wgt'ed) examples reached here.  /* #neg=748 #pos=430 */
%   | | | else return 0.049353314476743765;  // std dev = 3.163, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.12960010604274858;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.013606690039954947;  // std dev = 3.822, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return -0.0058884546408083955;  // std dev = 2.079, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.718', 'seconds']
Refined model CLL: -0.632827


******************************************
Best model found
******************************************
Results 

CLL : -0.763574 

AUC ROC : 0.618371 

AUC PR : 0.609154 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 208.232 

Total Inference Time : 6.45432448387146 

Total revision time: 217.02381438064575
Best scored revision CLL: -0.632827


Results 

CLL : -0.763574 

AUC ROC : 0.618371 

AUC PR : 0.609154 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 238.69576543617248 

Total Inference Time : 6.45432448387146 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.988
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.21104800453400974;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1833676745139224;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15596761024852762;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13013257434525868;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10679208593802718;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0864457266774532;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06921219525707765;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054939695997684605;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043321391625400094;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.033986357860827696;  // std dev = 25.259, 2,794.000 (wgt'ed) examples reached here.  /* #neg=1,808 #pos=986 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '612', 'milliseconds']
Parameter learned model CLL:-0.650806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.259, 1, 986]}]
{'': [nan, 0.2283613162267899]}
{'': [nan, 0.22836131622677064]}
{'': [nan, 0.22836131622674355]}
{'': [nan, 0.2283613162267735]}
{'': [nan, 0.2283613162268002]}
{'': [nan, 0.22836131622673567]}
{'': [nan, 0.2283613162267272]}
{'': [nan, 0.22836131622675157]}
{'': [nan, 0.2283613162267612]}
{'': [nan, 0.22836131622678885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 415.543
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22440767635824851;  // std dev = 23.045, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=838 */
%   | | | else return 0.24214893509951302;  // std dev = 5.438, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.42064893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.5692600462106224;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.044355831651235814;  // std dev = 4.687, 145.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | | | else return 0.003310225422092987;  // std dev = 2.774, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007085105312278315;  // std dev = 3.452, 94.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1948381186976477;  // std dev = 23.045, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=838 */
%   | | | else return 0.21004477849764105;  // std dev = 5.438, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3607708049193143;  // std dev = 3.037, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.5046858526116322;  // std dev = 2.790, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06361830035039427;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03284235363049387;  // std dev = 5.360, 196.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=35 */
%   | | | else return 0.0036573340843689094;  // std dev = 3.456, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1666529825166123;  // std dev = 23.130, 2,301.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=846 */
%   | | | else return 0.15286892426018683;  // std dev = 5.066, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.27908317436481433;  // std dev = 2.800, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.40284573285817754;  // std dev = 3.017, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.07562363090669473;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.031867329916536145;  // std dev = 5.350, 193.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=35 */
%   | | | else return 0.001784764871674271;  // std dev = 3.459, 97.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1373259944949675;  // std dev = 23.045, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=838 */
%   | | | else return 0.1505568388016879;  // std dev = 5.439, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21328684752230243;  // std dev = 3.029, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.3311515669649679;  // std dev = 2.763, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005169114359545489;  // std dev = 4.514, 160.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=24 */
%   | | | else return 0.11755778748262127;  // std dev = 2.557, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0023511792845695412;  // std dev = 3.782, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return -0.12604289985075148;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11334173953706464;  // std dev = 23.130, 2,301.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=846 */
%   | | | else return 0.10005595157214209;  // std dev = 5.063, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15180272030406583;  // std dev = 2.795, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.2467423379844142;  // std dev = 2.994, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06001963400102137;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02649000463863434;  // std dev = 5.115, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
%   | | | else return -0.0010609642600364795;  // std dev = 3.787, 111.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09016384346982828;  // std dev = 23.044, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=838 */
%   | | | else return 0.10160070741855552;  // std dev = 5.440, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10937881620935225;  // std dev = 3.026, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.20152012801156888;  // std dev = 2.747, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.001991558953144386;  // std dev = 4.512, 160.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=24 */
%   | | | else return 0.09772374354351776;  // std dev = 2.557, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0021820744194031728;  // std dev = 3.782, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return -0.11269408948558789;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07280756124287936;  // std dev = 23.130, 2,301.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=846 */
%   | | | else return 0.06056722484866785;  // std dev = 5.060, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07332172500246026;  // std dev = 2.793, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.14901265593461763;  // std dev = 2.983, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.053040297164751976;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020217389330373575;  // std dev = 5.109, 181.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=32 */
%   | | | else return -9.097608072486092E-4;  // std dev = 3.786, 111.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05648157768247407;  // std dev = 23.043, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=838 */
%   | | | else return 0.06646117742869516;  // std dev = 5.442, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05127568326407094;  // std dev = 3.026, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.12565557088077592;  // std dev = 2.740, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04691327300210474;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01710787963217195;  // std dev = 5.339, 196.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=35 */
%   | | | else return -0.002784281609919493;  // std dev = 3.453, 96.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04518142435575659;  // std dev = 23.131, 2,301.000 (wgt'ed) examples reached here.  /* #neg=1,455 #pos=846 */
%   | | | else return 0.034193687874717764;  // std dev = 5.058, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0309722689312448;  // std dev = 2.793, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.09384891481268763;  // std dev = 2.976, 45.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=32 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -3.661003682424814E-4;  // std dev = 4.510, 160.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=24 */
%   | | | else return 0.07736346367767946;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -2.4333829550639491E-4;  // std dev = 3.782, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return -0.10156996510971268;  // std dev = 3.23e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03437839921489178;  // std dev = 23.043, 2,288.000 (wgt'ed) examples reached here.  /* #neg=1,450 #pos=838 */
%   | | | else return 0.043187265037778796;  // std dev = 5.444, 125.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=48 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.020645533884165325;  // std dev = 3.026, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | else return 0.0822984401014403;  // std dev = 2.735, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -3.193625465641767E-4;  // std dev = 4.510, 160.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=24 */
%   | | | else return 0.06491528148552525;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -2.1102762182317468E-4;  // std dev = 3.782, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   | | | else return -0.09266920106184158;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.546', 'seconds']
Refined model CLL: -0.63442


******************************************
Best model found
******************************************
Results 

CLL : -0.751418 

AUC ROC : 0.622135 

AUC PR : 0.617665 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 415.543 

Total Inference Time : 11.926135540008545 

Total revision time: 430.60140333747864
Best scored revision CLL: -0.63442


Results 

CLL : -0.751418 

AUC ROC : 0.622135 

AUC PR : 0.617665 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 452.2733543930054 

Total Inference Time : 11.926135540008545 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.61
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111181695378568;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18342796072260126;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15601714364795385;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1301715749733889;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1068216185258343;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646731457172353;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922746923991262;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05495016195144506;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043328319211591686;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399075467171441;  // std dev = 30.945, 4,193.000 (wgt'ed) examples reached here.  /* #neg=2,713 #pos=1,480 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '564', 'milliseconds']
Parameter learned model CLL:-0.650849 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [30.945, 2, 1]}]
{'': [nan, 0.2283819539783052]}
{'': [nan, 0.22838195397832353]}
{'': [nan, 0.2283819539783733]}
{'': [nan, 0.2283819539783335]}
{'': [nan, 0.22838195397839148]}
{'': [nan, 0.22838195397834002]}
{'': [nan, 0.22838195397839037]}
{'': [nan, 0.2283819539783819]}
{'': [nan, 0.22838195397837874]}
{'': [nan, 0.22838195397837371]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 577.689
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2280277579500554;  // std dev = 28.422, 3,466.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,282 */
%   | | | else return 0.20317817486559547;  // std dev = 6.216, 171.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3966104735610497;  // std dev = 3.595, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | | else return 0.5302800826404962;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.018322095272671573;  // std dev = 5.574, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
%   | | | else return 0.084564029439135;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0063671939327458885;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19794340807985836;  // std dev = 28.422, 3,466.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,282 */
%   | | | else return 0.17660296229011496;  // std dev = 6.216, 171.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.33576086859349635;  // std dev = 3.616, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.45947598843406967;  // std dev = 3.634, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01607708969200281;  // std dev = 5.574, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
%   | | | else return 0.07395512035596542;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0055938856834118695;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16790911535033892;  // std dev = 28.422, 3,466.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,282 */
%   | | | else return 0.15040196467080888;  // std dev = 6.216, 171.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.26721387454500056;  // std dev = 3.588, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | | else return 0.3786263147794591;  // std dev = 3.648, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.04383269550176315;  // std dev = 4.740, 143.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=28 */
%   | | | else return 0.0027312012043196844;  // std dev = 4.228, 141.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004917407551061632;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13804908468438104;  // std dev = 28.356, 3,457.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,273 */
%   | | | else return 0.15411094758503255;  // std dev = 6.510, 180.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=68 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20214805138550346;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.30413454413967117;  // std dev = 3.611, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011688542990449222;  // std dev = 5.573, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
%   | | | else return 0.05821160115620939;  // std dev = 3.046, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004324980512370178;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11404577815003249;  // std dev = 28.422, 3,466.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,282 */
%   | | | else return 0.09929875096008069;  // std dev = 6.213, 171.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=59 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14997171578388496;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | | else return 0.23492778763580516;  // std dev = 3.629, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03411850896677451;  // std dev = 4.738, 143.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=28 */
%   | | | else return 8.760267354583607E-4;  // std dev = 4.228, 141.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.003805658070757908;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09043970113292302;  // std dev = 28.355, 3,457.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,273 */
%   | | | else return 0.10590286461392648;  // std dev = 6.512, 180.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=68 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10563123917260657;  // std dev = 3.604, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.1850715929464305;  // std dev = 3.597, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.029444923095595123;  // std dev = 4.738, 143.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=28 */
%   | | | else return 7.654953234738533E-4;  // std dev = 4.228, 141.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0033500315099270653;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07193626008875832;  // std dev = 28.355, 3,457.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,273 */
%   | | | else return 0.08444656079489887;  // std dev = 6.513, 180.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=68 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07541211535414995;  // std dev = 3.579, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | | else return 0.1417506745863671;  // std dev = 3.619, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.04314064840313546;  // std dev = 1.327, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.016663689996309666;  // std dev = 6.209, 267.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=47 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0029499893174301964;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.5063670887012369;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return -0.03152131141122306;  // std dev = 3.176, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05568497294743415;  // std dev = 28.779, 3,565.000 (wgt'ed) examples reached here.  /* #neg=2,256 #pos=1,309 */
%   | | | else return 0.08378104543659516;  // std dev = 5.097, 113.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=69 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005172006604426619;  // std dev = 5.571, 231.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=37 */
%   | | | else return 0.03811478220381116;  // std dev = 3.046, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.002598519446397811;  // std dev = 4.261, 155.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=21 */
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.31913247365229436;  // std dev = 2.256, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.024430814874272365;  // std dev = 3.634, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04332519505184704;  // std dev = 28.712, 3,556.000 (wgt'ed) examples reached here.  /* #neg=2,250 #pos=1,306 */
%   | | | else return 0.06321183719193291;  // std dev = 5.097, 113.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=69 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05292990263267324;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.012771920114946916;  // std dev = 6.208, 268.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=47 */
%   | | | else return -0.002248666662812574;  // std dev = 4.259, 157.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=21 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03546086679084561;  // std dev = 28.375, 3,466.000 (wgt'ed) examples reached here.  /* #neg=2,184 #pos=1,282 */
%   | | | else return 0.022933696249980724;  // std dev = 6.208, 171.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=59 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013930910987051492;  // std dev = 3.602, 53.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=29 */
%   | | | else return 0.07770663160710818;  // std dev = 3.591, 60.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=40 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.001964340624799136;  // std dev = 5.580, 244.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=37 */
%   | | | else return 0.05305369109243735;  // std dev = 3.059, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0024710380573692435;  // std dev = 4.225, 140.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=21 */
%   | | | else return -0.06828377623501475;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.617', 'seconds']
Refined model CLL: -0.634211


******************************************
Best model found
******************************************
Results 

CLL : -0.748774 

AUC ROC : 0.626911 

AUC PR : 0.616602 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 577.689 

Total Inference Time : 14.681460618972778 

Total revision time: 596.128594373703
Best scored revision CLL: -0.634211


Results 

CLL : -0.748774 

AUC ROC : 0.626911 

AUC PR : 0.616602 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 617.8005454292297 

Total Inference Time : 14.681460618972778 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.795
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111006345628345;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834128946056675;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15600476487473677;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13016182856356107;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10681423836079237;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08646191990349521;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06922365247524699;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05494754672477578;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043326588206268814;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03398965607657504;  // std dev = 35.730, 5,590.000 (wgt'ed) examples reached here.  /* #neg=3,617 #pos=1,973 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '704', 'milliseconds']
Parameter learned model CLL:-0.650838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [35.73, 3, 1]}]
{'': [nan, 0.22837679730921764]}
{'': [nan, 0.22837679730929097]}
{'': [nan, 0.22837679730929253]}
{'': [nan, 0.22837679730924612]}
{'': [nan, 0.2283767973092494]}
{'': [nan, 0.22837679730927715]}
{'': [nan, 0.22837679730928756]}
{'': [nan, 0.2283767973093241]}
{'': [nan, 0.22837679730925428]}
{'': [nan, 0.2283767973092519]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 914.146
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22709357177770786;  // std dev = 32.811, 4,624.000 (wgt'ed) examples reached here.  /* #neg=2,918 #pos=1,706 */
%   | | | else return 0.2081489350995118;  // std dev = 7.389, 240.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=84 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4010060779566542;  // std dev = 4.168, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.5430804419488279;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.019541340162803338;  // std dev = 6.540, 316.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=51 */
%   | | | else return 0.07554023944733847;  // std dev = 3.426, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.009981395832496014;  // std dev = 4.960, 191.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=29 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19714218462284458;  // std dev = 32.811, 4,624.000 (wgt'ed) examples reached here.  /* #neg=2,918 #pos=1,706 */
%   | | | else return 0.1808763755669735;  // std dev = 7.389, 240.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=84 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3448813335003234;  // std dev = 4.168, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.4634268779409805;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017145896930856195;  // std dev = 6.540, 316.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=51 */
%   | | | else return 0.06609369457227733;  // std dev = 3.426, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.008762018163004526;  // std dev = 4.960, 191.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=29 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.16727848105524296;  // std dev = 32.851, 4,636.000 (wgt'ed) examples reached here.  /* #neg=2,926 #pos=1,710 */
%   | | | else return 0.15273006612570864;  // std dev = 7.212, 228.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=80 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2790047785030803;  // std dev = 3.960, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.37231481951720463;  // std dev = 4.173, 78.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.042927649072616106;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.027953340286500292;  // std dev = 7.196, 356.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=63 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007684420213459259;  // std dev = 4.960, 191.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=29 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13901125747135706;  // std dev = 32.850, 4,636.000 (wgt'ed) examples reached here.  /* #neg=2,926 #pos=1,710 */
%   | | | else return 0.12734376401599365;  // std dev = 7.213, 228.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=80 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21460566336906284;  // std dev = 4.158, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.3004996224307853;  // std dev = 3.961, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012297603493552595;  // std dev = 6.538, 316.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=51 */
%   | | | else return 0.05361747456222192;  // std dev = 3.426, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006733803234036584;  // std dev = 4.960, 191.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=29 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.11353161403467033;  // std dev = 32.810, 4,624.000 (wgt'ed) examples reached here.  /* #neg=2,918 #pos=1,706 */
%   | | | else return 0.1040578245543423;  // std dev = 7.394, 240.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=84 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15583457296269496;  // std dev = 3.947, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.23169430494024199;  // std dev = 4.162, 78.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.03914172774260661;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.021656754421134416;  // std dev = 7.195, 356.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=63 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005896510533885644;  // std dev = 4.960, 191.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=29 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09134496807244699;  // std dev = 32.850, 4,636.000 (wgt'ed) examples reached here.  /* #neg=2,926 #pos=1,710 */
%   | | | else return 0.08395062722232327;  // std dev = 7.216, 228.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=80 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11676560966511647;  // std dev = 4.150, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.17978315474224688;  // std dev = 3.955, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.03841824759684609;  // std dev = 0.300, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.044836350527815524;  // std dev = 1.636, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.016055930859213103;  // std dev = 8.582, 526.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=89 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07269148244733345;  // std dev = 32.809, 4,624.000 (wgt'ed) examples reached here.  /* #neg=2,918 #pos=1,706 */
%   | | | else return 0.06695142294687176;  // std dev = 7.396, 240.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=84 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07960177926536029;  // std dev = 3.941, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.1391025803992108;  // std dev = 4.158, 78.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=51 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0076865856605605794;  // std dev = 6.534, 316.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=51 */
%   | | | else return 0.04110016779858246;  // std dev = 3.425, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.003218063611808594;  // std dev = 4.959, 191.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=29 */
%   | | | else return -0.08644432494747255;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05731488055887132;  // std dev = 32.849, 4,636.000 (wgt'ed) examples reached here.  /* #neg=2,926 #pos=1,710 */
%   | | | else return 0.05296179929729866;  // std dev = 7.218, 228.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=80 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05892871813349367;  // std dev = 4.145, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.10884496101477213;  // std dev = 3.952, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.040497369045190496;  // std dev = 0.315, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.034794049760194276;  // std dev = 1.644, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.012634849607781084;  // std dev = 8.580, 526.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=89 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04490676043624099;  // std dev = 32.809, 4,624.000 (wgt'ed) examples reached here.  /* #neg=2,918 #pos=1,706 */
%   | | | else return 0.04162507826502339;  // std dev = 7.398, 240.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=84 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03799789008448508;  // std dev = 3.937, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.085339208399788;  // std dev = 4.156, 78.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=51 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.035364183014690825;  // std dev = 0.315, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.014629221170973929;  // std dev = 7.089, 355.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=61 */
%   | | | else return -0.001747589490455126;  // std dev = 5.106, 201.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03499444261621294;  // std dev = 32.849, 4,636.000 (wgt'ed) examples reached here.  /* #neg=2,926 #pos=1,710 */
%   | | | else return 0.032544839878770736;  // std dev = 7.219, 228.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=80 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0273748442682753;  // std dev = 4.142, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | | else return 0.06850855560623628;  // std dev = 3.951, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.02822685359276623;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.01362169140926548;  // std dev = 7.189, 356.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=63 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -5.512694080250971E-4;  // std dev = 4.958, 191.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=29 */
%   | | | else return -0.08066092029810566;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.697', 'seconds']
Refined model CLL: -0.636569


******************************************
Best model found
******************************************
Results 

CLL : -0.749034 

AUC ROC : 0.639602 

AUC PR : 0.639818 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 914.146 

Total Inference Time : 24.761680603027344 

Total revision time: 943.9847252521514
Best scored revision CLL: -0.636569


Results 

CLL : -0.749034 

AUC ROC : 0.639602 

AUC PR : 0.639818 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 965.6566763076781 

Total Inference Time : 24.761680603027344 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.839
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '602', 'milliseconds']
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true


Refining candidate
***************************
Model training time 1072.46
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533297;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.18214435728312056;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06261940488996087;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02592113819145843;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651225;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496443;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.055084618573868996;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029557525117860584;  // std dev = 8.052, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00111691294008325;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406547;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603244;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.048734191123617925;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.026633381016594466;  // std dev = 8.057, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.0030685982652600874;  // std dev = 5.538, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029183;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1052503820870875;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844127;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06186401486722166;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02642716193419616;  // std dev = 8.043, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005112425600966176;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611807;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431222;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997691;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766637;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00862338958089506;  // std dev = 7.214, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06337788558845464;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.003281603940164235;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12727972493829878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816681;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090487;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158732;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04672521993847279;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.021204965397934074;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006409122988239453;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567375;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.053331529490101684;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946212;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.057942433872985234;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020893289522720182;  // std dev = 8.033, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007629594351928916;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40448748754744557;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.035674551789807496;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.044006202294618116;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.06105541787281208;  // std dev = 6.486, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.031696325147364285;  // std dev = 6.054, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.004248474177274048;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.004549893940310017;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11239111590400021;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03501760914359451;  // std dev = 36.674, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03287794756966591;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.017123296753632722;  // std dev = 4.636, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07315010605777514;  // std dev = 4.566, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.02737038489610806;  // std dev = 6.053, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.00370241309682065;  // std dev = 5.536, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003960305928819791;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10165792529928529;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.617', 'seconds']
Refined model CLL: -0.636086


******************************************
Best model found
******************************************
Results 

CLL : -0.751292 

AUC ROC : 0.635451 

AUC PR : 0.628605 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1072.46 

Total Inference Time : 25.31722116470337 

Total revision time: 1103.9334258785248
Best scored revision CLL: -0.636086


Results 

CLL : -0.751292 

AUC ROC : 0.635451 

AUC PR : 0.628605 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1125.6053769340515 

Total Inference Time : 25.31722116470337 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.32
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23736040463355756;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20594326104159263;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1744337103621823;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1445658551977207;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11761682117801057;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0942698648268788;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07467973521892925;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058636415880168824;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.045732953977190155;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035491655179504804;  // std dev = 18.122, 1,395.000 (wgt'ed) examples reached here.  /* #neg=866 #pos=529 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '572', 'milliseconds']
Parameter learned model CLL:-0.66531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [18.122, 866, 529]}]
{'': [nan, 0.2354101309078633]}
{'': [nan, 0.23541013090789079]}
{'': [nan, 0.23541013090786894]}
{'': [nan, 0.23541013090788496]}
{'': [nan, 0.23541013090789034]}
{'': [nan, 0.23541013090789156]}
{'': [nan, 0.23541013090786214]}
{'': [nan, 0.2354101309078888]}
{'': [nan, 0.23541013090788515]}
{'': [nan, 0.2354101309078814]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 179.05599999999998
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2618428664979244;  // std dev = 16.544, 1,137.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=459 */
%   | | | else return 0.1438632208137981;  // std dev = 3.586, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.09499104036267027;  // std dev = 3.706, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return -0.01685106490048774;  // std dev = 1.871, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else return 0.00100607795665518;  // std dev = 0.350, 49.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=7 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22689059834895178;  // std dev = 16.544, 1,137.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=459 */
%   | | | else return 0.12543301544918353;  // std dev = 3.586, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2734366587491455;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.6045267906174346;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.08302990742025622;  // std dev = 3.706, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return -0.014812149378556579;  // std dev = 1.871, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.141973578240806;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.020817119433612686;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19141894726064215;  // std dev = 16.544, 1,137.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=459 */
%   | | | else return 0.1078235456277749;  // std dev = 3.586, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.22864662696661894;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.4749335700127619;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03020301275893966;  // std dev = 3.801, 95.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | | | else return 0.1675834469127728;  // std dev = 1.653, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.12554160496791236;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.0182622896159152;  // std dev = 2.421, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15765437587201034;  // std dev = 16.544, 1,137.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=459 */
%   | | | else return 0.0915038324011372;  // std dev = 3.586, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.18572608234333768;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.3584548159137825;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06744225592624044;  // std dev = 3.702, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return -0.02325154153024306;  // std dev = 1.857, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.14680104676831027;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.020790518772455982;  // std dev = 2.408, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12725463915395246;  // std dev = 16.544, 1,137.000 (wgt'ed) examples reached here.  /* #neg=678 #pos=459 */
%   | | | else return 0.07678249969777719;  // std dev = 3.586, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.36994302213672736;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1715892457837471;  // std dev = 2.645, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.020294406499162653;  // std dev = 3.605, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return 0.19474936071033788;  // std dev = 1.571, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return 0.054986132333732826;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.017700854143561515;  // std dev = 2.421, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09657153677764607;  // std dev = 16.508, 1,142.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=454 */
%   | | | else return 0.14960223435085973;  // std dev = 3.739, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10370153303725867;  // std dev = 2.430, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.2256577116130136;  // std dev = 1.305, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017669837509379067;  // std dev = 3.604, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return 0.16569125642106183;  // std dev = 1.568, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.10351193883902658;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.013373455549241778;  // std dev = 2.581, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07588533586529309;  // std dev = 16.507, 1,142.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=454 */
%   | | | else return 0.12097387830881005;  // std dev = 3.741, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.25465151811975495;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09828072771838359;  // std dev = 2.633, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3482960345940218;  // std dev = 0.933, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.005476378660801765;  // std dev = 1.787, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02157542601295521;  // std dev = 3.553, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.014252738825667011;  // std dev = 2.417, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.382039869669229;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.033075857463145744;  // std dev = 1.982, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.10842206795407487;  // std dev = 3.137, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | | else return 0.05682273914110692;  // std dev = 16.574, 1,160.000 (wgt'ed) examples reached here.  /* #neg=698 #pos=462 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.010739585193475393;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | | | else return 0.14006270730470646;  // std dev = 1.646, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(B, N), haswordauthor(P, N) )
%   | | | then return -0.1364415254556483;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.007952613084295311;  // std dev = 2.416, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6474888789327833;  // std dev = 0.175, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.3139186814910698;  // std dev = 0.250, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04972808748937595;  // std dev = 2.892, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.11745399094926014;  // std dev = 0.975, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.044312008262761875;  // std dev = 16.565, 1,156.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=456 */
%   | | | else return 0.059018179449003644;  // std dev = 2.717, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.015371512018303462;  // std dev = 3.540, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.013370806060614148;  // std dev = 2.416, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.49187212652554607;  // std dev = 0.202, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.25247666109400924;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0400095798966843;  // std dev = 2.892, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.09736718534286914;  // std dev = 0.977, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.034182151225103125;  // std dev = 16.565, 1,156.000 (wgt'ed) examples reached here.  /* #neg=700 #pos=456 */
%   | | | else return 0.045506529095171354;  // std dev = 2.717, 36.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01319909223860073;  // std dev = 3.539, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.011471940557253197;  // std dev = 2.416, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.494', 'seconds']
Refined model CLL: -0.638152


******************************************
Best model found
******************************************
Results 

CLL : -0.626325 

AUC ROC : 0.580455 

AUC PR : 0.40755 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 179.05599999999998 

Total Inference Time : 4.986356019973755 

Total revision time: 186.3506513366699
Best scored revision CLL: -0.638152


Results 

CLL : -0.626325 

AUC ROC : 0.580455 

AUC PR : 0.40755 

Precision : 0.575758 

Recall : 0.05163 

F1 : 0.094763 

Total Learning Time : 186.36906893348691 

Total Inference Time : 4.986356019973755 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.943
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2374469293688482;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20601739107518724;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17449407221898441;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14461268588138948;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11765160444966598;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09429472460272313;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07469689562541931;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05864786873235424;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0457403226568777;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035496184448565865;  // std dev = 25.638, 2,792.000 (wgt'ed) examples reached here.  /* #neg=1,733 #pos=1,059 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '590', 'milliseconds']
Parameter learned model CLL:-0.665352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [25.638, 1, 1]}]
{'': [nan, 0.23543102581262115]}
{'': [nan, 0.23543102581258157]}
{'': [nan, 0.23543102581259678]}
{'': [nan, 0.23543102581259862]}
{'': [nan, 0.23543102581256606]}
{'': [nan, 0.23543102581257858]}
{'': [nan, 0.23543102581259182]}
{'': [nan, 0.23543102581261038]}
{'': [nan, 0.23543102581258551]}
{'': [nan, 0.23543102581259126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 334.672
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.25850012034972675;  // std dev = 23.385, 2,278.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=912 */
%   | | | else return 0.18601778755852783;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.35814893509951146;  // std dev = 3.317, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.6081489350995116;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.07243464938522666;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.03628658692137414;  // std dev = 6.013, 247.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=44 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22403384306043067;  // std dev = 23.385, 2,278.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=912 */
%   | | | else return 0.161832382885102;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3087411357856347;  // std dev = 3.317, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.5170719622367212;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3927941835770488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06338645120431304;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.04457253864325038;  // std dev = 5.468, 193.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=37 */
%   | | | else return 0.01984363086563701;  // std dev = 3.535, 90.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18911099736626058;  // std dev = 23.385, 2,278.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=912 */
%   | | | else return 0.13819792681918514;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.256412368758587;  // std dev = 3.317, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.4125724528826602;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15914741868392465;  // std dev = 2.265, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.07472909416712512;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03889098308690239;  // std dev = 5.468, 193.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=37 */
%   | | | else return 0.01734048827457499;  // std dev = 3.534, 90.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15588638491876283;  // std dev = 23.385, 2,278.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=912 */
%   | | | else return 0.11604255327808183;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19491463309462062;  // std dev = 3.065, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.3189789431449297;  // std dev = 2.745, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.038406107283093995;  // std dev = 5.542, 195.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=39 */
%   | | | else return 0.09191203830130505;  // std dev = 2.124, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.019461690288012926;  // std dev = 3.615, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.15172532499139532;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12596246465380917;  // std dev = 23.385, 2,278.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=912 */
%   | | | else return 0.09602151207783699;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14874814630376243;  // std dev = 3.301, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.25615837341617864;  // std dev = 2.441, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.3006180938903005;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03603711070764526;  // std dev = 2.147, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05651286610661783;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.01845153205926089;  // std dev = 6.007, 247.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.3749637127414142;  // std dev = 1.126, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6073556678880475;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09788739033427653;  // std dev = 23.903, 2,392.000 (wgt'ed) examples reached here.  /* #neg=1,446 #pos=946 */
%   | | | else return 0.14345841202377288;  // std dev = 4.110, 75.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10116551232075852;  // std dev = 2.330, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.013006425098646053;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02605265505841557;  // std dev = 5.430, 189.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=37 */
%   | | | else return -0.0020282963392800305;  // std dev = 3.401, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07898548574187271;  // std dev = 23.375, 2,278.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=912 */
%   | | | else return 0.05924017000081513;  // std dev = 5.189, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06572660848015317;  // std dev = 3.045, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.1642030399261079;  // std dev = 2.731, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.47972539674171105;  // std dev = 1.163, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.010848076691591003;  // std dev = 2.129, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02235950206971712;  // std dev = 5.429, 189.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=37 */
%   | | | else return -0.001756825366102756;  // std dev = 3.401, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.25137526065475485;  // std dev = 2.763, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.05165150267166332;  // std dev = 2.682, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.060347927327221114;  // std dev = 23.615, 2,334.000 (wgt'ed) examples reached here.  /* #neg=1,410 #pos=924 */
%   | | | else return 0.07507850738698699;  // std dev = 4.008, 72.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=43 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3959555565249824;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.009183993880828035;  // std dev = 2.129, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019139559967626656;  // std dev = 5.429, 189.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=37 */
%   | | | else return -0.001521986387681758;  // std dev = 3.401, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04587900738809792;  // std dev = 23.373, 2,290.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=910 */
%   | | | else return 0.07015569941428311;  // std dev = 5.122, 110.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=42 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03380899013100185;  // std dev = 3.294, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0.11411413247189438;  // std dev = 2.432, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1004409834634979;  // std dev = 2.187, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return -0.09400309028494085;  // std dev = 0.808, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.016593855283780462;  // std dev = 2.391, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.009808753426895191;  // std dev = 6.006, 247.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035357073068867366;  // std dev = 23.373, 2,290.000 (wgt'ed) examples reached here.  /* #neg=1,380 #pos=910 */
%   | | | else return 0.054966769965774875;  // std dev = 5.123, 110.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=42 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016256316176885534;  // std dev = 3.045, 41.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=23 */
%   | | | else return 0.09356969259405175;  // std dev = 2.731, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01262798015493551;  // std dev = 5.489, 195.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=39 */
%   | | | else return 0.06452711726841132;  // std dev = 2.127, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.007128290823943261;  // std dev = 3.544, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.13515246077454826;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.474', 'seconds']
Refined model CLL: -0.6484


******************************************
Best model found
******************************************
Results 

CLL : -0.624656 

AUC ROC : 0.579916 

AUC PR : 0.412326 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 334.672 

Total Inference Time : 9.472750902175903 

Total revision time: 347.1663756275177
Best scored revision CLL: -0.6484


Results 

CLL : -0.624656 

AUC ROC : 0.579916 

AUC PR : 0.412326 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 347.1847932243347 

Total Inference Time : 9.472750902175903 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.695
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23747574340697913;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060420773356914;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17451417309960812;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446282802923826;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766318664329868;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430300206129795;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0747026091695517;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865168175533535;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574277579999354;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549769222793024;  // std dev = 31.405, 4,189.000 (wgt'ed) examples reached here.  /* #neg=2,600 #pos=1,589 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '632', 'milliseconds']
Parameter learned model CLL:-0.665367 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [31.405, 2, 1]}]
{'': [nan, 0.2354379808066886]}
{'': [nan, 0.23543798080674572]}
{'': [nan, 0.23543798080673023]}
{'': [nan, 0.23543798080671222]}
{'': [nan, 0.2354379808067418]}
{'': [nan, 0.23543798080676429]}
{'': [nan, 0.235437980806761]}
{'': [nan, 0.2354379808067672]}
{'': [nan, 0.23543798080677353]}
{'': [nan, 0.2354379808067625]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 625.2139999999999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2560546942618109;  // std dev = 28.700, 3,438.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,368 */
%   | | | else return 0.2181489350995136;  // std dev = 6.350, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3991325416568882;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.5928428126505317;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.15814893509951236;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.053184396092420164;  // std dev = 6.654, 282.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=55 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026087866397222;  // std dev = 4.278, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.40918052128543064;  // std dev = 1.704, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.21974103974587106;  // std dev = 29.340, 3,601.000 (wgt'ed) examples reached here.  /* #neg=2,177 #pos=1,424 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3433051115719201;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.5044894371835092;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04532094802944242;  // std dev = 6.643, 281.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=55 */
%   | | | else return 0.14423363307388978;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02288244003060465;  // std dev = 4.278, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18770892701146058;  // std dev = 28.696, 3,438.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,368 */
%   | | | else return 0.1553601317218869;  // std dev = 6.352, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.26046680652015036;  // std dev = 3.755, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return 0.42506507422795736;  // std dev = 3.202, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13153286224347643;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.03882421703751476;  // std dev = 6.646, 282.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=55 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020021560657081564;  // std dev = 4.278, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15485639411421395;  // std dev = 28.696, 3,438.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,368 */
%   | | | else return 0.12891708915729855;  // std dev = 6.353, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20361058372454252;  // std dev = 3.750, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return 0.3325544427562077;  // std dev = 3.195, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.032297169888659084;  // std dev = 6.635, 281.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=55 */
%   | | | else return 0.11957483192317073;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01748025738288686;  // std dev = 4.278, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1252480042219653;  // std dev = 28.696, 3,438.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,368 */
%   | | | else return 0.10522592506666543;  // std dev = 6.353, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14513560988407423;  // std dev = 3.846, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.270190490432974;  // std dev = 3.046, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.027836553680234306;  // std dev = 6.635, 281.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=55 */
%   | | | else return 0.10178449206123386;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.015232237505022363;  // std dev = 4.278, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
%   | | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09971622237561349;  // std dev = 28.696, 3,438.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,368 */
%   | | | else return 0.08474105185656;  // std dev = 6.353, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10348703284719343;  // std dev = 3.729, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return 0.2071104568720438;  // std dev = 3.178, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10295452337990452;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.021666846622628563;  // std dev = 6.634, 282.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=55 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013250935629867587;  // std dev = 4.278, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
%   | | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07843819379968289;  // std dev = 28.696, 3,438.000 (wgt'ed) examples reached here.  /* #neg=2,070 #pos=1,368 */
%   | | | else return 0.06752131164489007;  // std dev = 6.353, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06987050683195892;  // std dev = 3.833, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.16953242261534351;  // std dev = 3.036, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.3821912137265659;  // std dev = 1.324, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.004483823700550847;  // std dev = 2.773, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00811588981720106;  // std dev = 6.253, 269.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=48 */
%   | | | else return 0.02911929850940691;  // std dev = 4.637, 140.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=27 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06021167625681927;  // std dev = 28.697, 3,446.000 (wgt'ed) examples reached here.  /* #neg=2,080 #pos=1,366 */
%   | | | else return 0.07233638110445846;  // std dev = 6.344, 167.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=65 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.047159497603366296;  // std dev = 3.718, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return 0.13205828281747845;  // std dev = 3.170, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015448786063419862;  // std dev = 6.618, 281.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=55 */
%   | | | else return 0.08054734229950974;  // std dev = 2.914, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.009182804285911665;  // std dev = 4.260, 131.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=22 */
%   | | | else return -0.08063709130660171;  // std dev = 0.002, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2731325697774555;  // std dev = 3.246, 46.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   | | | else return -0.04022848558891625;  // std dev = 3.551, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0459437771357612;  // std dev = 28.960, 3,511.000 (wgt'ed) examples reached here.  /* #neg=2,125 #pos=1,386 */
%   | | | else return 0.05707108554205536;  // std dev = 4.816, 105.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=65 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07569001317874076;  // std dev = 2.882, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return -0.04336746333889181;  // std dev = 1.254, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0034767464445668844;  // std dev = 6.247, 269.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=48 */
%   | | | else return 0.023419819038455254;  // std dev = 4.636, 140.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=27 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035726586651328024;  // std dev = 28.677, 3,446.000 (wgt'ed) examples reached here.  /* #neg=2,080 #pos=1,366 */
%   | | | else return 0.046703903715247075;  // std dev = 6.344, 167.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=65 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.015626275939616466;  // std dev = 3.825, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.09839663914650766;  // std dev = 3.031, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.30860355136016143;  // std dev = 1.336, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.006181162314478875;  // std dev = 2.758, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002976059575267523;  // std dev = 6.247, 269.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=48 */
%   | | | else return 0.020117110807010494;  // std dev = 4.635, 140.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.524', 'seconds']
Refined model CLL: -0.649168


******************************************
Best model found
******************************************
Results 

CLL : -0.624714 

AUC ROC : 0.57808 

AUC PR : 0.406545 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 625.2139999999999 

Total Inference Time : 15.936757326126099 

Total revision time: 645.0193241443634
Best scored revision CLL: -0.649168


Results 

CLL : -0.624714 

AUC ROC : 0.57808 

AUC PR : 0.406545 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 645.0377417411804 

Total Inference Time : 15.936757326126099 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.757
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.237490145267785;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.20605441601752764;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17452421984318073;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14463607453548954;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11766897544966791;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430713908018841;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07470546470734984;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.058653587406591115;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574400179426935;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.035498445747469826;  // std dev = 36.265, 5,586.000 (wgt'ed) examples reached here.  /* #neg=3,467 #pos=2,119 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '607', 'milliseconds']
Parameter learned model CLL:-0.665374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.265, 3, 2]}]
{'': [nan, 0.23544145643628558]}
{'': [nan, 0.2354414564363145]}
{'': [nan, 0.23544145643626607]}
{'': [nan, 0.23544145643633832]}
{'': [nan, 0.2354414564364054]}
{'': [nan, 0.23544145643635184]}
{'': [nan, 0.23544145643628756]}
{'': [nan, 0.23544145643634976]}
{'': [nan, 0.23544145643636327]}
{'': [nan, 0.23544145643629774]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 788.248
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2550988261670453;  // std dev = 33.148, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,822 */
%   | | | else return 0.23314893509951054;  // std dev = 7.500, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.38378996074053784;  // std dev = 4.410, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return 0.5702701472207248;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.17064893509951237;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.04661296966239256;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03946761641819406;  // std dev = 7.351, 364.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=66 */
%   | | | else return 0.05926625353526538;  // std dev = 5.363, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22112597355060357;  // std dev = 33.148, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,822 */
%   | | | else return 0.20233423921810806;  // std dev = 7.500, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.33038460813097653;  // std dev = 4.410, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return 0.48589250081124213;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1485807217799291;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.041032968606155205;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.034595006262716374;  // std dev = 7.351, 364.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=66 */
%   | | | else return 0.05189755936083058;  // std dev = 5.363, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18675900683768012;  // std dev = 33.148, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,822 */
%   | | | else return 0.17149281961528978;  // std dev = 7.500, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2694365354475722;  // std dev = 4.455, 82.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=46 */
%   | | | else return 0.40251080847101706;  // std dev = 3.605, 62.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12718890828850224;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.03627501588595316;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.030210709606594884;  // std dev = 7.351, 364.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=66 */
%   | | | else return 0.0451883642727626;  // std dev = 5.363, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15408127847091171;  // std dev = 33.148, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,822 */
%   | | | else return 0.1422814689918398;  // std dev = 7.500, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.519898958305189;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.24291589401144303;  // std dev = 5.641, 137.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10721453219719908;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.028825441436493616;  // std dev = 7.539, 375.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=70 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.040509815216107074;  // std dev = 5.234, 176.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=34 */
%   | | | else return -0.1566547987424323;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12464007036980769;  // std dev = 33.148, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,822 */
%   | | | else return 0.1159174611873076;  // std dev = 7.500, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14414960146844905;  // std dev = 4.379, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return 0.2576335561354776;  // std dev = 3.637, 66.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.22246968154855012;  // std dev = 1.556, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.02255692731808131;  // std dev = 3.094, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.021787662797920306;  // std dev = 7.350, 364.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=66 */
%   | | | else return 0.0366785233111849;  // std dev = 5.353, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09925416651495865;  // std dev = 33.148, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,822 */
%   | | | else return 0.09305316265470497;  // std dev = 7.500, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.09957890288601667;  // std dev = 4.423, 82.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=46 */
%   | | | else return 0.2122142781367785;  // std dev = 3.555, 62.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=42 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18820381438104622;  // std dev = 1.558, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.01899425179516364;  // std dev = 3.093, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.018844652456972727;  // std dev = 7.350, 364.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=66 */
%   | | | else return 0.03157799849838167;  // std dev = 5.353, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07809530946067016;  // std dev = 33.148, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,768 #pos=1,822 */
%   | | | else return 0.07383827012230876;  // std dev = 7.500, 240.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=90 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3212383031056879;  // std dev = 0.887, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.10086327635570613;  // std dev = 5.599, 137.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=82 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04524085293105722;  // std dev = 6.852, 280.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=61 */
%   | | | else return -0.01582759734938916;  // std dev = 4.206, 139.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.1463482621656611;  // std dev = 0.908, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.02708659216048359;  // std dev = 5.353, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.27001026727628735;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=40 */
%   | | | else return -0.042551315779259025;  // std dev = 4.354, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06020100497099052;  // std dev = 33.428, 4,675.000 (wgt'ed) examples reached here.  /* #neg=2,827 #pos=1,848 */
%   | | | else return 0.07598307400175408;  // std dev = 5.599, 137.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=82 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07404021906350827;  // std dev = 3.183, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.01527223656944438;  // std dev = 7.533, 375.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=70 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022600854512595643;  // std dev = 5.221, 176.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=34 */
%   | | | else return -0.14570372519017005;  // std dev = 0.069, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04674698958800785;  // std dev = 33.105, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,771 #pos=1,819 */
%   | | | else return 0.05120983615907605;  // std dev = 7.574, 240.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=93 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024736307990450623;  // std dev = 4.365, 78.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=41 */
%   | | | else return 0.11667016921230937;  // std dev = 3.613, 66.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09789407290344096;  // std dev = 2.778, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.1261099061975234;  // std dev = 0.981, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009468957213047292;  // std dev = 7.533, 377.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=71 */
%   | | | else return 0.02405670047166972;  // std dev = 5.330, 176.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036047493965407226;  // std dev = 33.105, 4,590.000 (wgt'ed) examples reached here.  /* #neg=2,771 #pos=1,819 */
%   | | | else return 0.039691304153556047;  // std dev = 7.575, 240.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=93 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.011419139872071053;  // std dev = 4.413, 82.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=46 */
%   | | | else return 0.10303649090971512;  // std dev = 3.539, 62.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=42 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08368819772798822;  // std dev = 2.775, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.10822603372436004;  // std dev = 0.980, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008079907769925272;  // std dev = 7.533, 377.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=71 */
%   | | | else return 0.02048226669215801;  // std dev = 5.330, 176.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.465', 'seconds']
Refined model CLL: -0.650765


******************************************
Best model found
******************************************
Results 

CLL : -0.624182 

AUC ROC : 0.578796 

AUC PR : 0.408374 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 788.248 

Total Inference Time : 19.18212127685547 

Total revision time: 812.4201792526245
Best scored revision CLL: -0.650765


Results 

CLL : -0.624182 

AUC ROC : 0.578796 

AUC PR : 0.408374 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 812.4385968494415 

Total Inference Time : 19.18212127685547 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.036
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '573', 'milliseconds']
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 1017.117
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4723963623785732;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.22007296189803774;  // std dev = 37.927, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04368829719016248;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690136;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18763296829746773;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16417717100423798;  // std dev = 8.354, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12384505424974901;  // std dev = 3.369, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03337896243016381;  // std dev = 8.506, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.031124381371230057;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15479770693358327;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1358145297086939;  // std dev = 8.355, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903783;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189736;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13269453761182265;  // std dev = 3.357, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08202341810862211;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.028631254480464906;  // std dev = 8.432, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.026939434776364544;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12526420536301144;  // std dev = 37.053, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.10927243447800576;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.458764766850876;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1912697601898219;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11421480974920772;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07169804484579133;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03588209596073679;  // std dev = 3.515, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.02289319534769385;  // std dev = 9.640, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.30028899054732044;  // std dev = 1.953, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.09856537680250335;  // std dev = 37.925, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11011378719134586;  // std dev = 4.742, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2065682212062339;  // std dev = 3.887, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03847373085275545;  // std dev = 7.639, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.007184241786843676;  // std dev = 5.008, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09990639529971626;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.02017639747729062;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0786204096715285;  // std dev = 37.047, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0660977488634241;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07108354374935079;  // std dev = 4.741, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16970151290637162;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09537327888450157;  // std dev = 3.341, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0644899255872017;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017934337773018744;  // std dev = 8.482, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.016478481517233357;  // std dev = 5.774, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.061344862283249084;  // std dev = 37.046, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05103221552630524;  // std dev = 8.371, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05107827731886966;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1312251464080176;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014896743760715543;  // std dev = 8.370, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.06019493233738699;  // std dev = 3.625, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.014593715348917811;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10280822512016055;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04751652031245119;  // std dev = 37.046, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03981324751777916;  // std dev = 8.372, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3102323210097182;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05416321661878829;  // std dev = 6.026, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07704805317032956;  // std dev = 3.342, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05793393345795703;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0236195573918023;  // std dev = 3.516, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.011051305000930932;  // std dev = 9.634, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03665497261645212;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.030411930780816714;  // std dev = 8.375, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012430778312188744;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09665560224706948;  // std dev = 3.851, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0855916603085031;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.007583301076941841;  // std dev = 8.469, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08604768521812779;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014264779736492676;  // std dev = 5.765, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.489', 'seconds']
Refined model CLL: -0.650204


******************************************
Best model found
******************************************
Results 

CLL : -0.624457 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1017.117 

Total Inference Time : 26.758350610733032 

Total revision time: 1050.2296785144804
Best scored revision CLL: -0.650204


Results 

CLL : -0.624457 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1050.2480961112974 

Total Inference Time : 26.758350610733032 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.299
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19222631605188836;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16717944319784508;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14262403710806432;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11957055439572169;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09873731539381818;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08050745878806886;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06496976549161278;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052000962544843085;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04135200642763857;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032717826433868315;  // std dev = 17.292, 1,344.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=449 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '602', 'milliseconds']
Parameter learned model CLL:-0.638565 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [17.292, 895, 449]}]
{'': [nan, 0.22246968448836296]}
{'': [nan, 0.22246968448838153]}
{'': [nan, 0.22246968448839494]}
{'': [nan, 0.22246968448835705]}
{'': [nan, 0.22246968448836105]}
{'': [nan, 0.22246968448839693]}
{'': [nan, 0.22246968448837798]}
{'': [nan, 0.2224696844883839]}
{'': [nan, 0.22246968448837184]}
{'': [nan, 0.2224696844883817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 164.40699999999998
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21109011157009575;  // std dev = 15.515, 1,054.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=372 */
%   | | | else return 0.30457750652808263;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.5399671169176942;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013321348892615825;  // std dev = 3.900, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01756922495458482;  // std dev = 3.041, 69.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.18340385319678557;  // std dev = 15.515, 1,054.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=372 */
%   | | | else return 0.2633193360470768;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2105717177991725;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.46084995018555497;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011692000309283457;  // std dev = 3.900, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return 0.202334239218108;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.015417047794114722;  // std dev = 3.041, 69.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15599733614673403;  // std dev = 15.515, 1,054.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=372 */
%   | | | else return 0.2206150354395646;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.17819907632636584;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.371617857245754;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010249128072987378;  // std dev = 3.900, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return 0.17149281961528945;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.13247500788004812;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.013148632299128016;  // std dev = 3.039, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13015597951886412;  // std dev = 15.515, 1,054.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=372 */
%   | | | else return 0.17973984753031955;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14748280921895676;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2871102631561468;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008974422938541554;  // std dev = 3.900, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return 0.14228146899184052;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.012616191651248975;  // std dev = 3.038, 69.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.10901303576169273;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10680980930786702;  // std dev = 15.515, 1,054.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=372 */
%   | | | else return 0.14315303774320226;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4018305186669579;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1600897664167238;  // std dev = 2.665, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007850637662743638;  // std dev = 3.900, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return 0.11591746118730598;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.011029089288136474;  // std dev = 3.038, 69.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return -0.09887126675693096;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1085175058945204;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.10858775726337433;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09104258777912207;  // std dev = 15.793, 1,083.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=391 */
%   | | | else return 0.1391588113996595;  // std dev = 2.802, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.026410608323986656;  // std dev = 3.563, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return -0.04632319727353405;  // std dev = 1.896, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.025602352415158656;  // std dev = 3.148, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return -0.09040807683654041;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06896211923044006;  // std dev = 15.506, 1,054.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=372 */
%   | | | else return 0.09152476291357017;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.28441282871436596;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08932347435275399;  // std dev = 2.659, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.008299753344408066;  // std dev = 3.742, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
%   | | | else return 0.10744579604245841;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.11378396117258996;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.02108540897528144;  // std dev = 3.146, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return -0.009356714877594879;  // std dev = 2.078, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.28069221414067125;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05814034249243157;  // std dev = 15.793, 1,083.000 (wgt'ed) examples reached here.  /* #neg=692 #pos=391 */
%   | | | else return 0.08053970391941218;  // std dev = 2.791, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02396682587726953;  // std dev = 3.563, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return -0.04404280871788731;  // std dev = 1.883, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.020094373369599027;  // std dev = 3.147, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return -0.08183282092314954;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.042967617788641825;  // std dev = 15.500, 1,054.000 (wgt'ed) examples reached here.  /* #neg=682 #pos=372 */
%   | | | else return 0.056565432695818416;  // std dev = 3.720, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.005240058475299172;  // std dev = 1.710, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.10038562712722184;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.008410074483412347;  // std dev = 3.736, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
%   | | | else return 0.09951889715365203;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.017460850927858085;  // std dev = 3.147, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return -0.07589753715402171;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.0789954885545095;  // std dev = 1.341, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.1022097593326207;  // std dev = 1.581, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05984271106003025;  // std dev = 2.774, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.03584800890404237;  // std dev = 15.794, 1,085.000 (wgt'ed) examples reached here.  /* #neg=687 #pos=398 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordtitle(L, J) )
%   | | | then return 0.042981116926001865;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.00782141035877526;  // std dev = 0.905, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.005365688252886387;  // std dev = 3.919, 111.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=19 */
%   | | | else return -0.004048998816383952;  // std dev = 2.905, 70.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.914', 'seconds']
Refined model CLL: -0.618236


******************************************
Best model found
******************************************
Results 

CLL : -0.819957 

AUC ROC : 0.506755 

AUC PR : 0.608808 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 164.40699999999998 

Total Inference Time : 4.4490416049957275 

Total revision time: 171.11089649772643
Best scored revision CLL: -0.618236


Results 

CLL : -0.819957 

AUC ROC : 0.506755 

AUC PR : 0.608808 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 171.12931409454345 

Total Inference Time : 4.4490416049957275 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 1.973
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19210207753163813;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16707247846130968;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14253558605863387;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11950017068039011;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09868325896658238;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08046726580941639;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06494077018737761;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198065692988763;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04133822834098982;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.032708818990807145;  // std dev = 24.456, 2,689.000 (wgt'ed) examples reached here.  /* #neg=1,791 #pos=898 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '632', 'milliseconds']
Parameter learned model CLL:-0.638479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [24.456, 1, 898]}]
{'': [nan, 0.22242844109186088]}
{'': [nan, 0.22242844109185722]}
{'': [nan, 0.222428441091834]}
{'': [nan, 0.222428441091844]}
{'': [nan, 0.2224284410918142]}
{'': [nan, 0.22242844109183219]}
{'': [nan, 0.22242844109182477]}
{'': [nan, 0.22242844109184426]}
{'': [nan, 0.22242844109184756]}
{'': [nan, 0.22242844109182403]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
Model training time 356.012
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.21289621899180772;  // std dev = 22.013, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.2646530001401638;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.324815601766179;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.5724346493852258;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.036309854639741394;  // std dev = 5.047, 174.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=31 */
%   | | | else return -0.021851064900487684;  // std dev = 2.814, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0010060779566552196;  // std dev = 3.928, 126.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1849555189782658;  // std dev = 22.013, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.22929136261024094;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.28051077705998734;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.4876778839172633;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.15908590381960364;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.14128090972450688;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009227898465984739;  // std dev = 4.928, 211.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=28 */
%   | | | else return 0.01986533520132643;  // std dev = 4.378, 140.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15727184790352755;  // std dev = 22.013, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.19335643779394268;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2342425620659102;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.3912569620992533;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1381997770764802;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.12500109233466877;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.008107831075524423;  // std dev = 4.928, 211.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=28 */
%   | | | else return 0.017393825425882987;  // std dev = 4.378, 140.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=23 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13115896787347797;  // std dev = 22.013, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.1591360481611451;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1898747687046811;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.30057115478848995;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11816134978833324;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.11196315238527085;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00712982365376672;  // std dev = 4.928, 211.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=28 */
%   | | | else return 0.01520115292976319;  // std dev = 4.378, 140.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=23 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.10756879245914806;  // std dev = 22.013, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.12833525669121174;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14594190623190723;  // std dev = 2.943, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.25495861112064777;  // std dev = 2.419, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.023206759751263954;  // std dev = 5.010, 174.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=31 */
%   | | | else return -0.01922331752439805;  // std dev = 2.796, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0024785730085255435;  // std dev = 3.936, 126.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.12201578877430211;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08701304238885388;  // std dev = 22.013, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.10184901381006387;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11141549495207652;  // std dev = 2.941, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.19408507787385362;  // std dev = 2.420, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.02015276882218417;  // std dev = 5.010, 174.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=31 */
%   | | | else return -0.016936658018063516;  // std dev = 2.796, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.002179558517565859;  // std dev = 3.936, 126.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.10956756720996429;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06961323172575973;  // std dev = 22.013, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.07985470029574787;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0738774441499884;  // std dev = 2.712, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | else return 0.14209860682463438;  // std dev = 2.671, 35.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.017461283790088773;  // std dev = 5.010, 174.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=31 */
%   | | | else return -0.014948250883384225;  // std dev = 2.797, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0019161775524439563;  // std dev = 3.936, 126.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.09935019621396453;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.20046694111485291;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.0648938582334823;  // std dev = 2.660, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056943408707900774;  // std dev = 22.397, 2,181.000 (wgt'ed) examples reached here.  /* #neg=1,398 #pos=783 */
%   | | | else return 0.070423477862229;  // std dev = 3.760, 63.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=37 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0918243250696658;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.10023588876475624;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.006357140803937217;  // std dev = 4.927, 211.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=28 */
%   | | | else return 0.009020244556005;  // std dev = 4.367, 140.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=23 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04330378971515609;  // std dev = 22.003, 2,117.000 (wgt'ed) examples reached here.  /* #neg=1,366 #pos=751 */
%   | | | else return 0.049084297013174724;  // std dev = 5.447, 123.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=50 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.172390533837617;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05942201891457206;  // std dev = 3.648, 60.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 6.729663339991054E-4;  // std dev = 5.434, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
%   | | | else return 0.05213715505850896;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.14673182826152226;  // std dev = 0.201, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.00490855965658591;  // std dev = 3.922, 127.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.033933625167245116;  // std dev = 22.050, 2,122.000 (wgt'ed) examples reached here.  /* #neg=1,367 #pos=755 */
%   | | | else return 0.03807067164230204;  // std dev = 5.255, 118.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=46 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.026381596223717805;  // std dev = 2.938, 38.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   | | | else return 0.08756170661668658;  // std dev = 2.423, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08010970591157122;  // std dev = 2.195, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.0877176038537723;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.02241846929947034;  // std dev = 1.876, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.0015100390986615285;  // std dev = 6.310, 316.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.296', 'seconds']
Refined model CLL: -0.6187


******************************************
Best model found
******************************************
Results 

CLL : -0.823214 

AUC ROC : 0.518094 

AUC PR : 0.620495 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 356.012 

Total Inference Time : 9.114293575286865 

Total revision time: 368.21918307304384
Best scored revision CLL: -0.6187


Results 

CLL : -0.823214 

AUC ROC : 0.518094 

AUC PR : 0.620495 

Precision : 0.772727 

Recall : 0.022049 

F1 : 0.042875 

Total Learning Time : 368.23760066986085 

Total Inference Time : 9.114293575286865 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 2.635
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1921434801032265;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16710812469153827;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14256506297383695;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11952362707548012;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09870127461632848;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08048066162629862;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495043438141532;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05198742516845224;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041342821095499485;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0327118217166793;  // std dev = 29.952, 4,033.000 (wgt'ed) examples reached here.  /* #neg=2,686 #pos=1,347 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '601', 'milliseconds']
Parameter learned model CLL:-0.638507 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [29.952, 2, 1]}]
{'': [nan, 0.22244218891147313]}
{'': [nan, 0.2224421889114492]}
{'': [nan, 0.22244218891146453]}
{'': [nan, 0.22244218891151174]}
{'': [nan, 0.2224421889115087]}
{'': [nan, 0.22244218891149997]}
{'': [nan, 0.22244218891149897]}
{'': [nan, 0.22244218891145015]}
{'': [nan, 0.22244218891149165]}
{'': [nan, 0.22244218891144812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
2;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
3;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
4;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
5;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
6;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
7;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
8;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
9;;samevenue(A, B) :- author(C, A), author(C, B).;true;true


Refining candidate
***************************
